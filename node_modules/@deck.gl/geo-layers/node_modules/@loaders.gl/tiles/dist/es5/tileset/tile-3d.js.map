{"version":3,"file":"tile-3d.js","names":["scratchVector","Vector3","defined","x","undefined","Tile3D","tileset","header","parentHeader","extendedId","id","url","parent","refine","_getRefine","type","contentUrl","lodMetricType","lodMetricValue","boundingVolume","content","contentState","TILE_CONTENT_STATE","UNLOADED","gpuMemoryUsageInBytes","children","hasEmptyContent","hasTilesetContent","depth","viewportIds","userData","extensions","_priority","_touchedFrame","_visitedFrame","_selectedFrame","_requestedFrame","_screenSpaceError","_cacheNode","_frameNumber","traverser","TilesetTraverser","_shouldRefine","_distanceToCamera","_centerZDepth","_visible","_inRequestVolume","_stackLength","_selectionDepth","_initialTransform","Matrix4","transform","_initializeLodMetric","_initializeTransforms","_initializeBoundingVolumes","_initializeContent","_initializeRenderingState","_lodJudge","_expireDate","_expiredContent","implicitTiling","Object","seal","length","READY","Boolean","contentReady","hasRenderContent","contentFailed","contentUnloaded","EXPIRED","FAILED","frameState","useParentLodMetric","TILESET_TYPE","I3S","getProjectedRadius","TILES3D","getTiles3DScreenSpaceError","Error","_traverser","skipLevelOfDetail","options","maySkipTile","TILE_REFINEMENT","ADD","isVisible","useParentScreenSpaceError","screenSpaceError","rootScreenSpaceError","root","Math","max","expired","contentExpired","LOADING","_requestScheduler","scheduleRequest","_getPriority","bind","requestToken","getTileUrl","loader","loadOptions","isTileset","_getLoaderSpecificOptions","load","contentLoader","_isTileset","_initializeTileHeaders","_onContentLoaded","done","destroy","frameNumber","parentVisibilityPlaneMask","_visibilityPlaneMask","CullingVolume","MASK_INDETERMINATE","updateTransforms","parentTransform","computedTransform","modelMatrix","_updateTransform","distanceToTile","getScreenSpaceError","visibility","MASK_OUTSIDE","insideViewerRequestVolume","cullingVolume","computeVisibilityWithPlaneMask","sqrt","distanceSquaredTo","camera","position","subVectors","center","direction","dot","viewerRequestVolume","_viewerRequestVolume","now","Date","lessThan","extras","console","warn","tileHeader","clone","multiplyRight","parentInitialTransform","_contentBoundingVolume","_updateBoundingVolume","_tileset","_tile","level","REPLACE","indexOf","disableSkipLevelOfDetail","createBoundingVolume","didTransformChange","equals","loaderId","i3s","_tileOptions","attributeUrls","textureUrl","textureFormat","textureLoaderOptions","materialDefinition","isDracoGeometry","mbs","_tilesetOptions","store","attributeStorageInfo","fields","isTileHeader","get3dTilesOptions"],"sources":["../../../src/tileset/tile-3d.ts"],"sourcesContent":["// loaders.gl, MIT license\n\n// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {Vector3, Matrix4} from '@math.gl/core';\nimport {CullingVolume} from '@math.gl/culling';\n\nimport {load} from '@loaders.gl/core';\n\n// Note: circular dependency\nimport type {Tileset3D} from './tileset-3d';\nimport {TILE_REFINEMENT, TILE_CONTENT_STATE, TILESET_TYPE} from '../constants';\n\nimport {FrameState} from './helpers/frame-state';\nimport {createBoundingVolume} from './helpers/bounding-volume';\nimport {getTiles3DScreenSpaceError} from './helpers/tiles-3d-lod';\nimport {getProjectedRadius} from './helpers/i3s-lod';\nimport {get3dTilesOptions} from './helpers/3d-tiles-options';\nimport {TilesetTraverser} from './tileset-traverser';\n\nconst scratchVector = new Vector3();\n\nfunction defined(x) {\n  return x !== undefined && x !== null;\n}\n\n/**\n * @param tileset - Tileset3D instance\n * @param header - tile header - JSON loaded from a dataset\n * @param parentHeader - parent Tile3D instance\n * @param extendedId - optional ID to separate copies of a tile for different viewports.\n *                              const extendedId = `${tile.id}-${frameState.viewport.id}`;\n */\nexport type Tile3DProps = {\n  tileset: Tileset3D;\n  header: Object;\n  parentHeader: Tile3D;\n  extendedId: string;\n};\n\n/**\n * A Tile3DHeader represents a tile as Tileset3D. When a tile is first created, its content is not loaded;\n * the content is loaded on-demand when needed based on the view.\n * Do not construct this directly, instead access tiles through {@link Tileset3D#tileVisible}.\n */\nexport class Tile3D {\n  tileset: Tileset3D;\n  header: any;\n  id: string;\n  url: string;\n  parent: Tile3D;\n  refine: number;\n  type: string;\n  contentUrl: string;\n  lodMetricType: string;\n  lodMetricValue: number;\n  boundingVolume: any;\n  content: any;\n  contentState: any;\n  gpuMemoryUsageInBytes: number;\n  children: Tile3D[];\n  depth: number;\n  viewportIds: any[];\n  transform: Matrix4;\n  extensions: any;\n  implicitTiling?: any;\n\n  // Container to store application specific data\n  userData: {[key: string]: any};\n  computedTransform: any;\n  hasEmptyContent: boolean;\n  hasTilesetContent: boolean;\n\n  traverser: object;\n\n  // @ts-ignore\n  private _cacheNode: any;\n  private _frameNumber: any;\n  // TODO i3s specific, needs to remove\n  // @ts-ignore\n  private _lodJudge: any;\n  // TODO Cesium 3d tiles specific\n  private _expireDate: any;\n  private _expiredContent: any;\n  // @ts-ignore\n  private _shouldRefine: boolean;\n\n  // Members this are updated every frame for tree traversal and rendering optimizations:\n  public _distanceToCamera: number;\n  // @ts-ignore\n  private _centerZDepth: number;\n  private _screenSpaceError: number;\n  private _visibilityPlaneMask: any;\n  private _visible?: boolean;\n  private _inRequestVolume: boolean;\n\n  // @ts-ignore\n  private _stackLength: number;\n  // @ts-ignore\n  private _selectionDepth: number;\n\n  // @ts-ignore\n  private _touchedFrame: number;\n  // @ts-ignore\n  private _visitedFrame: number;\n  private _selectedFrame: number;\n  // @ts-ignore\n  private _requestedFrame: number;\n\n  // @ts-ignore\n  private _priority: number;\n\n  private _contentBoundingVolume: any;\n  private _viewerRequestVolume: any;\n\n  _initialTransform: Matrix4;\n\n  /**\n   * @constructs\n   * Create a Tile3D instance\n   * @param tileset - Tileset3D instance\n   * @param header - tile header - JSON loaded from a dataset\n   * @param parentHeader - parent Tile3D instance\n   * @param extendedId - optional ID to separate copies of a tile for different viewports.\n   *    const extendedId = `${tile.id}-${frameState.viewport.id}`;\n   */\n  // eslint-disable-next-line max-statements\n  constructor(\n    tileset: Tileset3D,\n    header: {[key: string]: any},\n    parentHeader?: Tile3D,\n    extendedId = ''\n  ) {\n    // PUBLIC MEMBERS\n    // original tile data\n    this.header = header;\n\n    // The tileset containing this tile.\n    this.tileset = tileset;\n    this.id = extendedId || header.id;\n    this.url = header.url;\n\n    // This tile's parent or `undefined` if this tile is the root.\n    // @ts-ignore\n    this.parent = parentHeader;\n    this.refine = this._getRefine(header.refine);\n    this.type = header.type;\n    this.contentUrl = header.contentUrl;\n\n    // The error, in meters, introduced if this tile is rendered and its children are not.\n    this.lodMetricType = 'geometricError';\n    this.lodMetricValue = 0;\n\n    // Specifies the type of refine that is used when traversing this tile for rendering.\n    this.boundingVolume = null;\n\n    // The tile's content.  This represents the actual tile's payload,\n    // not the content's metadata in the tileset JSON file.\n    this.content = null;\n    this.contentState = TILE_CONTENT_STATE.UNLOADED;\n    this.gpuMemoryUsageInBytes = 0;\n\n    // The tile's children - an array of Tile3D objects.\n    this.children = [];\n\n    this.hasEmptyContent = false;\n    this.hasTilesetContent = false;\n\n    this.depth = 0;\n    this.viewportIds = [];\n\n    // Container to store application specific data\n    this.userData = {};\n    this.extensions = null;\n\n    // PRIVATE MEMBERS\n    this._priority = 0;\n    this._touchedFrame = 0;\n    this._visitedFrame = 0;\n    this._selectedFrame = 0;\n    this._requestedFrame = 0;\n    this._screenSpaceError = 0;\n\n    this._cacheNode = null;\n    this._frameNumber = null;\n    this._cacheNode = null;\n\n    this.traverser = new TilesetTraverser({});\n    this._shouldRefine = false;\n    this._distanceToCamera = 0;\n    this._centerZDepth = 0;\n    this._visible = undefined;\n    this._inRequestVolume = false;\n    this._stackLength = 0;\n    this._selectionDepth = 0;\n    this._initialTransform = new Matrix4();\n    this.transform = new Matrix4();\n\n    this._initializeLodMetric(header);\n    this._initializeTransforms(header);\n    this._initializeBoundingVolumes(header);\n    this._initializeContent(header);\n    this._initializeRenderingState(header);\n\n    // TODO i3s specific, needs to remove\n    this._lodJudge = null;\n\n    // TODO Cesium 3d tiles specific\n    this._expireDate = null;\n    this._expiredContent = null;\n    this.implicitTiling = null;\n\n    Object.seal(this);\n  }\n\n  destroy() {\n    this.header = null;\n  }\n\n  isDestroyed() {\n    return this.header === null;\n  }\n\n  get selected() {\n    return this._selectedFrame === this.tileset._frameNumber;\n  }\n\n  get isVisible() {\n    return this._visible;\n  }\n\n  get isVisibleAndInRequestVolume() {\n    return this._visible && this._inRequestVolume;\n  }\n\n  /** Returns true if tile is not an empty tile and not an external tileset */\n  get hasRenderContent() {\n    return !this.hasEmptyContent && !this.hasTilesetContent;\n  }\n\n  /** Returns true if tile has children */\n  get hasChildren() {\n    return this.children.length > 0 || (this.header.children && this.header.children.length > 0);\n  }\n\n  /**\n   * Determines if the tile's content is ready. This is automatically `true` for\n   * tiles with empty content.\n   */\n  get contentReady() {\n    return this.contentState === TILE_CONTENT_STATE.READY || this.hasEmptyContent;\n  }\n\n  /**\n   * Determines if the tile has available content to render.  `true` if the tile's\n   * content is ready or if it has expired content this renders while new content loads; otherwise,\n   */\n  get contentAvailable() {\n    return Boolean(\n      (this.contentReady && this.hasRenderContent) || (this._expiredContent && !this.contentFailed)\n    );\n  }\n\n  /** Returns true if tile has renderable content but it's unloaded */\n  get hasUnloadedContent() {\n    return this.hasRenderContent && this.contentUnloaded;\n  }\n\n  /**\n   * Determines if the tile's content has not be requested. `true` if tile's\n   * content has not be requested; otherwise, `false`.\n   */\n  get contentUnloaded() {\n    return this.contentState === TILE_CONTENT_STATE.UNLOADED;\n  }\n\n  /**\n   * Determines if the tile's content is expired. `true` if tile's\n   * content is expired; otherwise, `false`.\n   */\n  get contentExpired() {\n    return this.contentState === TILE_CONTENT_STATE.EXPIRED;\n  }\n\n  // Determines if the tile's content failed to load.  `true` if the tile's\n  // content failed to load; otherwise, `false`.\n  get contentFailed() {\n    return this.contentState === TILE_CONTENT_STATE.FAILED;\n  }\n\n  /**\n   * Distance from the tile's bounding volume center to the camera\n   */\n  get distanceToCamera(): number {\n    return this._distanceToCamera;\n  }\n\n  /**\n   * Screen space error for LOD selection\n   */\n  get screenSpaceError(): number {\n    return this._screenSpaceError;\n  }\n\n  /** Get the tile's screen space error. */\n  getScreenSpaceError(frameState, useParentLodMetric) {\n    switch (this.tileset.type) {\n      case TILESET_TYPE.I3S:\n        return getProjectedRadius(this, frameState);\n      case TILESET_TYPE.TILES3D:\n        return getTiles3DScreenSpaceError(this, frameState, useParentLodMetric);\n      default:\n        // eslint-disable-next-line\n        throw new Error('Unsupported tileset type');\n    }\n  }\n\n  /**\n   * Make tile unselected than means it won't be shown\n   * but it can be still loaded in memory\n   */\n  unselect(): void {\n    this._selectedFrame = 0;\n  }\n\n  /*\n   * If skipLevelOfDetail is off try to load child tiles as soon as possible so that their parent can refine sooner.\n   * Tiles are prioritized by screen space error.\n   */\n  // eslint-disable-next-line complexity\n  _getPriority() {\n    const traverser = this.tileset._traverser;\n    const {skipLevelOfDetail} = traverser.options;\n\n    /*\n     * Tiles that are outside of the camera's frustum could be skipped if we are in 'ADD' mode\n     * or if we are using 'Skip Traversal' in 'REPLACE' mode.\n     * Otherewise, all 'touched' child tiles have to be loaded and displayed,\n     * this may include tiles that are outide of the camera frustum (so that we can hide the parent tile).\n     */\n    const maySkipTile = this.refine === TILE_REFINEMENT.ADD || skipLevelOfDetail;\n\n    // Check if any reason to abort\n    if (maySkipTile && !this.isVisible && this._visible !== undefined) {\n      return -1;\n    }\n    // Condition used in `cancelOutOfViewRequests` function in CesiumJS/Cesium3DTileset.js\n    if (this.tileset._frameNumber - this._touchedFrame >= 1) {\n      return -1;\n    }\n    if (this.contentState === TILE_CONTENT_STATE.UNLOADED) {\n      return -1;\n    }\n\n    // Based on the priority function `getPriorityReverseScreenSpaceError` in CesiumJS. Scheduling priority is based on the parent's screen space error when possible.\n    const parent = this.parent;\n    const useParentScreenSpaceError =\n      parent && (!maySkipTile || this._screenSpaceError === 0.0 || parent.hasTilesetContent);\n    const screenSpaceError = useParentScreenSpaceError\n      ? parent._screenSpaceError\n      : this._screenSpaceError;\n\n    const rootScreenSpaceError = traverser.root ? traverser.root._screenSpaceError : 0.0;\n\n    // Map higher SSE to lower values (e.g. root tile is highest priority)\n    return Math.max(rootScreenSpaceError - screenSpaceError, 0);\n  }\n\n  /**\n   *  Requests the tile's content.\n   * The request may not be made if the Request Scheduler can't prioritize it.\n   */\n  // eslint-disable-next-line max-statements, complexity\n  async loadContent(): Promise<boolean> {\n    if (this.hasEmptyContent) {\n      return false;\n    }\n\n    if (this.content) {\n      return true;\n    }\n\n    const expired = this.contentExpired;\n\n    if (expired) {\n      this._expireDate = null;\n    }\n\n    this.contentState = TILE_CONTENT_STATE.LOADING;\n\n    const requestToken = await this.tileset._requestScheduler.scheduleRequest(\n      this.id,\n      this._getPriority.bind(this)\n    );\n\n    if (!requestToken) {\n      // cancelled\n      this.contentState = TILE_CONTENT_STATE.UNLOADED;\n      return false;\n    }\n\n    try {\n      const contentUrl = this.tileset.getTileUrl(this.contentUrl);\n      // The content can be a binary tile ot a JSON tileset\n      const loader = this.tileset.loader;\n      const options = {\n        ...this.tileset.loadOptions,\n        [loader.id]: {\n          ...this.tileset.loadOptions[loader.id],\n          isTileset: this.type === 'json',\n          ...this._getLoaderSpecificOptions(loader.id)\n        }\n      };\n\n      this.content = await load(contentUrl, loader, options);\n\n      if (this.tileset.options.contentLoader) {\n        await this.tileset.options.contentLoader(this);\n      }\n\n      if (this._isTileset()) {\n        // Add tile headers for the nested tilset's subtree\n        // Async update of the tree should be fine since there would never be edits to the same node\n        // TODO - we need to capture the child tileset's URL\n        this.tileset._initializeTileHeaders(this.content, this);\n      }\n\n      this.contentState = TILE_CONTENT_STATE.READY;\n      this._onContentLoaded();\n      return true;\n    } catch (error) {\n      // Tile is unloaded before the content finishes loading\n      this.contentState = TILE_CONTENT_STATE.FAILED;\n      throw error;\n    } finally {\n      requestToken.done();\n    }\n  }\n\n  // Unloads the tile's content.\n  unloadContent() {\n    if (this.content && this.content.destroy) {\n      this.content.destroy();\n    }\n    this.content = null;\n    if (this.header.content && this.header.content.destroy) {\n      this.header.content.destroy();\n    }\n    this.header.content = null;\n    this.contentState = TILE_CONTENT_STATE.UNLOADED;\n    return true;\n  }\n\n  /**\n   * Update the tile's visibility\n   * @param {Object} frameState - frame state for tile culling\n   * @param {string[]} viewportIds - a list of viewport ids that show this tile\n   * @return {void}\n   */\n  updateVisibility(frameState, viewportIds) {\n    if (this._frameNumber === frameState.frameNumber) {\n      // Return early if visibility has already been checked during the traversal.\n      // The visibility may have already been checked if the cullWithChildrenBounds optimization is used.\n      return;\n    }\n\n    const parent = this.parent;\n    const parentVisibilityPlaneMask = parent\n      ? parent._visibilityPlaneMask\n      : CullingVolume.MASK_INDETERMINATE;\n\n    if (this.tileset._traverser.options.updateTransforms) {\n      const parentTransform = parent ? parent.computedTransform : this.tileset.modelMatrix;\n      this._updateTransform(parentTransform);\n    }\n\n    this._distanceToCamera = this.distanceToTile(frameState);\n    this._screenSpaceError = this.getScreenSpaceError(frameState, false);\n    this._visibilityPlaneMask = this.visibility(frameState, parentVisibilityPlaneMask); // Use parent's plane mask to speed up visibility test\n    this._visible = this._visibilityPlaneMask !== CullingVolume.MASK_OUTSIDE;\n    this._inRequestVolume = this.insideViewerRequestVolume(frameState);\n\n    this._frameNumber = frameState.frameNumber;\n    this.viewportIds = viewportIds;\n  }\n\n  // Determines whether the tile's bounding volume intersects the culling volume.\n  // @param {FrameState} frameState The frame state.\n  // @param {Number} parentVisibilityPlaneMask The parent's plane mask to speed up the visibility check.\n  // @returns {Number} A plane mask as described above in {@link CullingVolume#computeVisibilityWithPlaneMask}.\n  visibility(frameState, parentVisibilityPlaneMask) {\n    const {cullingVolume} = frameState;\n    const {boundingVolume} = this;\n\n    // TODO Cesium specific - restore clippingPlanes\n    // const {clippingPlanes, clippingPlanesOriginMatrix} = tileset;\n    // if (clippingPlanes && clippingPlanes.enabled) {\n    //   const intersection = clippingPlanes.computeIntersectionWithBoundingVolume(\n    //     boundingVolume,\n    //     clippingPlanesOriginMatrix\n    //   );\n    //   this._isClipped = intersection !== Intersect.INSIDE;\n    //   if (intersection === Intersect.OUTSIDE) {\n    //     return CullingVolume.MASK_OUTSIDE;\n    //   }\n    // }\n\n    // return cullingVolume.computeVisibilityWithPlaneMask(boundingVolume, parentVisibilityPlaneMask);\n    return cullingVolume.computeVisibilityWithPlaneMask(boundingVolume, parentVisibilityPlaneMask);\n  }\n\n  // Assuming the tile's bounding volume intersects the culling volume, determines\n  // whether the tile's content's bounding volume intersects the culling volume.\n  // @param {FrameState} frameState The frame state.\n  // @returns {Intersect} The result of the intersection: the tile's content is completely outside, completely inside, or intersecting the culling volume.\n  contentVisibility() {\n    return true;\n\n    // TODO restore\n    /*\n    // Assumes the tile's bounding volume intersects the culling volume already, so\n    // just return Intersect.INSIDE if there is no content bounding volume.\n    if (!defined(this.contentBoundingVolume)) {\n      return Intersect.INSIDE;\n    }\n\n    if (this._visibilityPlaneMask === CullingVolume.MASK_INSIDE) {\n      // The tile's bounding volume is completely inside the culling volume so\n      // the content bounding volume must also be inside.\n      return Intersect.INSIDE;\n    }\n\n    // PERFORMANCE_IDEA: is it possible to burn less CPU on this test since we know the\n    // tile's (not the content's) bounding volume intersects the culling volume?\n    const cullingVolume = frameState.cullingVolume;\n    const boundingVolume = tile.contentBoundingVolume;\n\n    const tileset = this.tileset;\n    const clippingPlanes = tileset.clippingPlanes;\n    if (defined(clippingPlanes) && clippingPlanes.enabled) {\n      const intersection = clippingPlanes.computeIntersectionWithBoundingVolume(\n        boundingVolume,\n        tileset.clippingPlanesOriginMatrix\n      );\n      this._isClipped = intersection !== Intersect.INSIDE;\n      if (intersection === Intersect.OUTSIDE) {\n        return Intersect.OUTSIDE;\n      }\n    }\n\n    return cullingVolume.computeVisibility(boundingVolume);\n    */\n  }\n\n  /**\n   * Computes the (potentially approximate) distance from the closest point of the tile's bounding volume to the camera.\n   * @param frameState The frame state.\n   * @returns {Number} The distance, in meters, or zero if the camera is inside the bounding volume.\n   */\n  distanceToTile(frameState: FrameState): number {\n    const boundingVolume = this.boundingVolume;\n    return Math.sqrt(Math.max(boundingVolume.distanceSquaredTo(frameState.camera.position), 0));\n  }\n\n  /**\n   * Computes the tile's camera-space z-depth.\n   * @param frameState The frame state.\n   * @returns The distance, in meters.\n   */\n  cameraSpaceZDepth({camera}): number {\n    const boundingVolume = this.boundingVolume; // Gets the underlying OrientedBoundingBox or BoundingSphere\n    scratchVector.subVectors(boundingVolume.center, camera.position);\n    return camera.direction.dot(scratchVector);\n  }\n\n  /**\n   * Checks if the camera is inside the viewer request volume.\n   * @param {FrameState} frameState The frame state.\n   * @returns {Boolean} Whether the camera is inside the volume.\n   */\n  insideViewerRequestVolume(frameState: FrameState) {\n    const viewerRequestVolume = this._viewerRequestVolume;\n    return (\n      !viewerRequestVolume || viewerRequestVolume.distanceSquaredTo(frameState.camera.position) <= 0\n    );\n  }\n\n  // TODO Cesium specific\n\n  // Update whether the tile has expired.\n  updateExpiration() {\n    if (defined(this._expireDate) && this.contentReady && !this.hasEmptyContent) {\n      const now = Date.now();\n      // @ts-ignore Date.lessThan - replace with ms compare?\n      if (Date.lessThan(this._expireDate, now)) {\n        this.contentState = TILE_CONTENT_STATE.EXPIRED;\n        this._expiredContent = this.content;\n      }\n    }\n  }\n\n  get extras() {\n    return this.header.extras;\n  }\n\n  // INTERNAL METHODS\n\n  _initializeLodMetric(header) {\n    if ('lodMetricType' in header) {\n      this.lodMetricType = header.lodMetricType;\n    } else {\n      this.lodMetricType = (this.parent && this.parent.lodMetricType) || this.tileset.lodMetricType;\n      // eslint-disable-next-line\n      console.warn(`3D Tile: Required prop lodMetricType is undefined. Using parent lodMetricType`);\n    }\n\n    // This is used to compute screen space error, i.e., the error measured in pixels.\n    if ('lodMetricValue' in header) {\n      this.lodMetricValue = header.lodMetricValue;\n    } else {\n      this.lodMetricValue =\n        (this.parent && this.parent.lodMetricValue) || this.tileset.lodMetricValue;\n      // eslint-disable-next-line\n      console.warn(\n        '3D Tile: Required prop lodMetricValue is undefined. Using parent lodMetricValue'\n      );\n    }\n  }\n\n  _initializeTransforms(tileHeader) {\n    // The local transform of this tile.\n    this.transform = tileHeader.transform ? new Matrix4(tileHeader.transform) : new Matrix4();\n\n    const parent = this.parent;\n    const tileset = this.tileset;\n\n    const parentTransform =\n      parent && parent.computedTransform\n        ? parent.computedTransform.clone()\n        : tileset.modelMatrix.clone();\n    this.computedTransform = new Matrix4(parentTransform).multiplyRight(this.transform);\n\n    const parentInitialTransform =\n      parent && parent._initialTransform ? parent._initialTransform.clone() : new Matrix4();\n    this._initialTransform = new Matrix4(parentInitialTransform).multiplyRight(this.transform);\n  }\n\n  _initializeBoundingVolumes(tileHeader) {\n    this._contentBoundingVolume = null;\n    this._viewerRequestVolume = null;\n\n    this._updateBoundingVolume(tileHeader);\n  }\n\n  _initializeContent(tileHeader) {\n    // Empty tile by default\n    this.content = {_tileset: this.tileset, _tile: this};\n    this.hasEmptyContent = true;\n    this.contentState = TILE_CONTENT_STATE.UNLOADED;\n\n    // When `true`, the tile's content points to an external tileset.\n    // This is `false` until the tile's content is loaded.\n    this.hasTilesetContent = false;\n\n    if (tileHeader.contentUrl) {\n      this.content = null;\n      this.hasEmptyContent = false;\n    }\n  }\n\n  // TODO - remove anything not related to basic visibility detection\n  _initializeRenderingState(header) {\n    this.depth = header.level || (this.parent ? this.parent.depth + 1 : 0);\n    this._shouldRefine = false;\n\n    // Members this are updated every frame for tree traversal and rendering optimizations:\n    this._distanceToCamera = 0;\n    this._centerZDepth = 0;\n    this._screenSpaceError = 0;\n    this._visibilityPlaneMask = CullingVolume.MASK_INDETERMINATE;\n    this._visible = undefined;\n    this._inRequestVolume = false;\n\n    this._stackLength = 0;\n    this._selectionDepth = 0;\n\n    this._frameNumber = 0;\n    this._touchedFrame = 0;\n    this._visitedFrame = 0;\n    this._selectedFrame = 0;\n    this._requestedFrame = 0;\n\n    this._priority = 0.0;\n  }\n\n  _getRefine(refine) {\n    // Inherit from parent tile if omitted.\n    return refine || (this.parent && this.parent.refine) || TILE_REFINEMENT.REPLACE;\n  }\n\n  _isTileset() {\n    return this.contentUrl.indexOf('.json') !== -1;\n  }\n\n  _onContentLoaded() {\n    // Vector and Geometry tile rendering do not support the skip LOD optimization.\n    switch (this.content && this.content.type) {\n      case 'vctr':\n      case 'geom':\n        // @ts-ignore\n        this.tileset._traverser.disableSkipLevelOfDetail = true;\n        break;\n      default:\n    }\n\n    // The content may be tileset json\n    if (this._isTileset()) {\n      this.hasTilesetContent = true;\n    }\n  }\n\n  _updateBoundingVolume(header) {\n    // Update the bounding volumes\n    this.boundingVolume = createBoundingVolume(\n      header.boundingVolume,\n      this.computedTransform,\n      this.boundingVolume\n    );\n\n    const content = header.content;\n    if (!content) {\n      return;\n    }\n\n    // TODO Cesium specific\n    // Non-leaf tiles may have a content bounding-volume, which is a tight-fit bounding volume\n    // around only the features in the tile. This box is useful for culling for rendering,\n    // but not for culling for traversing the tree since it does not guarantee spatial coherence, i.e.,\n    // since it only bounds features in the tile, not the entire tile, children may be\n    // outside of this box.\n    if (content.boundingVolume) {\n      this._contentBoundingVolume = createBoundingVolume(\n        content.boundingVolume,\n        this.computedTransform,\n        this._contentBoundingVolume\n      );\n    }\n    if (header.viewerRequestVolume) {\n      this._viewerRequestVolume = createBoundingVolume(\n        header.viewerRequestVolume,\n        this.computedTransform,\n        this._viewerRequestVolume\n      );\n    }\n  }\n\n  // Update the tile's transform. The transform is applied to the tile's bounding volumes.\n  _updateTransform(parentTransform = new Matrix4()) {\n    const computedTransform = parentTransform.clone().multiplyRight(this.transform);\n    const didTransformChange = !computedTransform.equals(this.computedTransform);\n\n    if (!didTransformChange) {\n      return;\n    }\n\n    this.computedTransform = computedTransform;\n\n    this._updateBoundingVolume(this.header);\n  }\n\n  // Get options which are applicable only for the particular loader\n  _getLoaderSpecificOptions(loaderId) {\n    switch (loaderId) {\n      case 'i3s':\n        return {\n          ...this.tileset.options.i3s,\n          _tileOptions: {\n            attributeUrls: this.header.attributeUrls,\n            textureUrl: this.header.textureUrl,\n            textureFormat: this.header.textureFormat,\n            textureLoaderOptions: this.header.textureLoaderOptions,\n            materialDefinition: this.header.materialDefinition,\n            isDracoGeometry: this.header.isDracoGeometry,\n            mbs: this.header.mbs\n          },\n          _tilesetOptions: {\n            store: this.tileset.tileset.store,\n            attributeStorageInfo: this.tileset.tileset.attributeStorageInfo,\n            fields: this.tileset.tileset.fields\n          },\n          isTileHeader: false\n        };\n      case '3d-tiles':\n      case 'cesium-ion':\n      default:\n        return get3dTilesOptions(this.tileset.tileset);\n    }\n  }\n}\n"],"mappings":"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"}