{"ast":null,"code":"import _defineProperty from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Texture2D, TextureCube } from '@luma.gl/webgl';\nimport { loadImage } from '@loaders.gl/images';\nvar GLTFEnvironment = /*#__PURE__*/function () {\n  function GLTFEnvironment(gl, _ref) {\n    _classCallCheck(this, GLTFEnvironment);\n    var brdfLutUrl = _ref.brdfLutUrl,\n      getTexUrl = _ref.getTexUrl,\n      _ref$specularMipLevel = _ref.specularMipLevels,\n      specularMipLevels = _ref$specularMipLevel === void 0 ? 10 : _ref$specularMipLevel;\n    this.gl = gl;\n    this.brdfLutUrl = brdfLutUrl;\n    this.getTexUrl = getTexUrl;\n    this.specularMipLevels = specularMipLevels;\n  }\n  _createClass(GLTFEnvironment, [{\n    key: \"makeCube\",\n    value: function makeCube(_ref2) {\n      var id = _ref2.id,\n        getTextureForFace = _ref2.getTextureForFace,\n        parameters = _ref2.parameters;\n      var pixels = {};\n      TextureCube.FACES.forEach(function (face) {\n        pixels[face] = getTextureForFace(face);\n      });\n      return new TextureCube(this.gl, {\n        id: id,\n        mipmaps: false,\n        parameters: parameters,\n        pixels: pixels\n      });\n    }\n  }, {\n    key: \"getDiffuseEnvSampler\",\n    value: function getDiffuseEnvSampler() {\n      var _this = this;\n      if (!this._DiffuseEnvSampler) {\n        var _parameters;\n        this._DiffuseEnvSampler = this.makeCube({\n          id: 'DiffuseEnvSampler',\n          getTextureForFace: function getTextureForFace(dir) {\n            return loadImage(_this.getTexUrl('diffuse', dir, 0));\n          },\n          parameters: (_parameters = {}, _defineProperty(_parameters, 10242, 33071), _defineProperty(_parameters, 10243, 33071), _defineProperty(_parameters, 10241, 9729), _defineProperty(_parameters, 10240, 9729), _parameters)\n        });\n      }\n      return this._DiffuseEnvSampler;\n    }\n  }, {\n    key: \"getSpecularEnvSampler\",\n    value: function getSpecularEnvSampler() {\n      var _this2 = this;\n      if (!this._SpecularEnvSampler) {\n        var _parameters2;\n        this._SpecularEnvSampler = this.makeCube({\n          id: 'SpecularEnvSampler',\n          getTextureForFace: function getTextureForFace(dir) {\n            var imageArray = [];\n            for (var lod = 0; lod <= _this2.specularMipLevels - 1; lod++) {\n              imageArray.push(loadImage(_this2.getTexUrl('specular', dir, lod)));\n            }\n            return imageArray;\n          },\n          parameters: (_parameters2 = {}, _defineProperty(_parameters2, 10242, 33071), _defineProperty(_parameters2, 10243, 33071), _defineProperty(_parameters2, 10241, 9987), _defineProperty(_parameters2, 10240, 9729), _parameters2)\n        });\n      }\n      return this._SpecularEnvSampler;\n    }\n  }, {\n    key: \"getBrdfTexture\",\n    value: function getBrdfTexture() {\n      if (!this._BrdfTexture) {\n        var _parameters3;\n        this._BrdfTexture = new Texture2D(this.gl, {\n          id: 'brdfLUT',\n          parameters: (_parameters3 = {}, _defineProperty(_parameters3, 10242, 33071), _defineProperty(_parameters3, 10243, 33071), _defineProperty(_parameters3, 10241, 9729), _defineProperty(_parameters3, 10240, 9729), _parameters3),\n          data: loadImage(this.brdfLutUrl)\n        });\n      }\n      return this._BrdfTexture;\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      if (this._DiffuseEnvSampler) {\n        this._DiffuseEnvSampler.delete();\n        this._DiffuseEnvSampler = null;\n      }\n      if (this._SpecularEnvSampler) {\n        this._SpecularEnvSampler.delete();\n        this._SpecularEnvSampler = null;\n      }\n      if (this._BrdfTexture) {\n        this._BrdfTexture.delete();\n        this._BrdfTexture = null;\n      }\n    }\n  }]);\n  return GLTFEnvironment;\n}();\nexport { GLTFEnvironment as default };","map":{"version":3,"names":["Texture2D","TextureCube","loadImage","GLTFEnvironment","gl","_ref","_classCallCheck","brdfLutUrl","getTexUrl","_ref$specularMipLevel","specularMipLevels","_createClass","key","value","makeCube","_ref2","id","getTextureForFace","parameters","pixels","FACES","forEach","face","mipmaps","getDiffuseEnvSampler","_this","_DiffuseEnvSampler","_parameters","dir","_defineProperty","getSpecularEnvSampler","_this2","_SpecularEnvSampler","_parameters2","imageArray","lod","push","getBrdfTexture","_BrdfTexture","_parameters3","data","_delete","delete","default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@luma.gl/experimental/src/gltf/gltf-environment.js"],"sourcesContent":["import GL from '@luma.gl/constants';\nimport {Texture2D, TextureCube} from '@luma.gl/webgl';\nimport {loadImage} from '@loaders.gl/images';\n\nexport default class GLTFEnvironment {\n  constructor(gl, {brdfLutUrl, getTexUrl, specularMipLevels = 10}) {\n    this.gl = gl;\n    this.brdfLutUrl = brdfLutUrl;\n    this.getTexUrl = getTexUrl;\n    this.specularMipLevels = specularMipLevels;\n  }\n\n  makeCube({id, getTextureForFace, parameters}) {\n    const pixels = {};\n    TextureCube.FACES.forEach(face => {\n      pixels[face] = getTextureForFace(face);\n    });\n    return new TextureCube(this.gl, {\n      id,\n      mipmaps: false,\n      parameters,\n      pixels\n    });\n  }\n\n  getDiffuseEnvSampler() {\n    if (!this._DiffuseEnvSampler) {\n      this._DiffuseEnvSampler = this.makeCube({\n        id: 'DiffuseEnvSampler',\n        getTextureForFace: dir => loadImage(this.getTexUrl('diffuse', dir, 0)),\n        parameters: {\n          [GL.TEXTURE_WRAP_S]: GL.CLAMP_TO_EDGE,\n          [GL.TEXTURE_WRAP_T]: GL.CLAMP_TO_EDGE,\n          [GL.TEXTURE_MIN_FILTER]: GL.LINEAR,\n          [GL.TEXTURE_MAG_FILTER]: GL.LINEAR\n        }\n      });\n    }\n\n    return this._DiffuseEnvSampler;\n  }\n\n  getSpecularEnvSampler() {\n    if (!this._SpecularEnvSampler) {\n      this._SpecularEnvSampler = this.makeCube({\n        id: 'SpecularEnvSampler',\n        getTextureForFace: dir => {\n          const imageArray = [];\n          for (let lod = 0; lod <= this.specularMipLevels - 1; lod++) {\n            imageArray.push(loadImage(this.getTexUrl('specular', dir, lod)));\n          }\n          return imageArray;\n        },\n        parameters: {\n          [GL.TEXTURE_WRAP_S]: GL.CLAMP_TO_EDGE,\n          [GL.TEXTURE_WRAP_T]: GL.CLAMP_TO_EDGE,\n          [GL.TEXTURE_MIN_FILTER]: GL.LINEAR_MIPMAP_LINEAR,\n          [GL.TEXTURE_MAG_FILTER]: GL.LINEAR\n        }\n      });\n    }\n\n    return this._SpecularEnvSampler;\n  }\n\n  getBrdfTexture() {\n    if (!this._BrdfTexture) {\n      this._BrdfTexture = new Texture2D(this.gl, {\n        id: 'brdfLUT',\n        parameters: {\n          [GL.TEXTURE_WRAP_S]: GL.CLAMP_TO_EDGE,\n          [GL.TEXTURE_WRAP_T]: GL.CLAMP_TO_EDGE,\n          [GL.TEXTURE_MIN_FILTER]: GL.LINEAR,\n          [GL.TEXTURE_MAG_FILTER]: GL.LINEAR\n        },\n        // Texture2D accepts a promise that returns an image as data (Async Textures)\n        data: loadImage(this.brdfLutUrl)\n      });\n    }\n\n    return this._BrdfTexture;\n  }\n\n  delete() {\n    if (this._DiffuseEnvSampler) {\n      this._DiffuseEnvSampler.delete();\n      this._DiffuseEnvSampler = null;\n    }\n\n    if (this._SpecularEnvSampler) {\n      this._SpecularEnvSampler.delete();\n      this._SpecularEnvSampler = null;\n    }\n\n    if (this._BrdfTexture) {\n      this._BrdfTexture.delete();\n      this._BrdfTexture = null;\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}