{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nvar GEOM_TYPES = ['points', 'lines', 'polygons'];\nexport default function findIndexBinary(data, uniqueIdProperty, featureId, layerName) {\n  var _iterator = _createForOfIteratorHelper(GEOM_TYPES),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var gt = _step.value;\n      var index = data[gt] && findIndexByType(data[gt], uniqueIdProperty, featureId, layerName);\n      if (index >= 0) {\n        return index;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return -1;\n}\nfunction findIndexByType(geomData, uniqueIdProperty, featureId, layerName) {\n  var featureIds = geomData.featureIds.value;\n  if (!featureIds.length) {\n    return -1;\n  }\n  var startFeatureIndex = 0;\n  var endFeatureIndex = featureIds[featureIds.length - 1] + 1;\n  if (layerName) {\n    var layerRange = getLayerRange(geomData, layerName);\n    if (layerRange) {\n      startFeatureIndex = layerRange[0];\n      endFeatureIndex = layerRange[1] + 1;\n    } else {\n      return -1;\n    }\n  }\n  var featureIndex = -1;\n  if (uniqueIdProperty in geomData.numericProps) {\n    var vertexIndex = geomData.numericProps[uniqueIdProperty].value.findIndex(function (x, i) {\n      return x === featureId && featureIds[i] >= startFeatureIndex && featureIds[i] < endFeatureIndex;\n    });\n    return vertexIndex >= 0 ? geomData.globalFeatureIds.value[vertexIndex] : -1;\n  } else if (uniqueIdProperty) {\n    featureIndex = findIndex(geomData.properties, function (elem) {\n      return elem[uniqueIdProperty] === featureId;\n    }, startFeatureIndex, endFeatureIndex);\n  } else if (geomData.fields) {\n    featureIndex = findIndex(geomData.fields, function (elem) {\n      return elem.id === featureId;\n    }, startFeatureIndex, endFeatureIndex);\n  }\n  return featureIndex >= 0 ? getGlobalFeatureId(geomData, featureIndex) : -1;\n}\nfunction getLayerRange(geomData, layerName) {\n  if (!geomData.__layers) {\n    var layerNames = {};\n    var properties = geomData.properties;\n    for (var i = 0; i < properties.length; i++) {\n      var key = properties[i].layerName;\n      if (!key) {} else if (layerNames[key]) {\n        layerNames[key][1] = i;\n      } else {\n        layerNames[key] = [i, i];\n      }\n    }\n    geomData.__layers = layerNames;\n  }\n  return geomData.__layers[layerName];\n}\nfunction getGlobalFeatureId(geomData, featureIndex) {\n  if (!geomData.__ids) {\n    var result = [];\n    var featureIds = geomData.featureIds.value;\n    var globalFeatureIds = geomData.globalFeatureIds.value;\n    for (var i = 0; i < featureIds.length; i++) {\n      result[featureIds[i]] = globalFeatureIds[i];\n    }\n    geomData.__ids = result;\n  }\n  return geomData.__ids[featureIndex];\n}\nfunction findIndex(array, predicate, startIndex, endIndex) {\n  for (var i = startIndex; i < endIndex; i++) {\n    if (predicate(array[i], i)) {\n      return i;\n    }\n  }\n  return -1;\n}","map":{"version":3,"names":["GEOM_TYPES","findIndexBinary","data","uniqueIdProperty","featureId","layerName","_iterator","_createForOfIteratorHelper","_step","s","n","done","gt","value","index","findIndexByType","err","e","f","geomData","featureIds","length","startFeatureIndex","endFeatureIndex","layerRange","getLayerRange","featureIndex","numericProps","vertexIndex","findIndex","x","i","globalFeatureIds","properties","elem","fields","id","getGlobalFeatureId","__layers","layerNames","key","__ids","result","array","predicate","startIndex","endIndex"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/geo-layers/src/mvt-layer/find-index-binary.ts"],"sourcesContent":["import type {\n  BinaryFeatures,\n  BinaryLineFeatures,\n  BinaryPointFeatures,\n  BinaryPolygonFeatures\n} from '@loaders.gl/schema';\n\ntype FeatureTypes = BinaryPointFeatures | BinaryLineFeatures | BinaryPolygonFeatures;\n\nconst GEOM_TYPES = ['points', 'lines', 'polygons'];\n/**\n * Return the index of feature (numericProps or featureIds) for given feature id\n * Example: findIndexBinary(data, 'id', 33) will return the index in the array of numericProps\n * of the feature 33.\n * @param {Object} data - The data in binary format\n * @param {String} uniqueIdProperty - Name of the unique id property\n * @param {Number|String} featureId - feature id to find\n * @param {String} layerName - the layer to search in\n */\nexport default function findIndexBinary(\n  data: BinaryFeatures,\n  uniqueIdProperty: string,\n  featureId: string | number,\n  layerName: string\n): number {\n  for (const gt of GEOM_TYPES) {\n    const index = data[gt] && findIndexByType(data[gt], uniqueIdProperty, featureId, layerName);\n    if (index >= 0) {\n      return index;\n    }\n  }\n\n  return -1;\n}\n\nfunction findIndexByType(\n  geomData: FeatureTypes,\n  uniqueIdProperty: string,\n  featureId: string | number,\n  layerName: string\n): number {\n  const featureIds = geomData.featureIds.value;\n\n  if (!featureIds.length) {\n    return -1;\n  }\n\n  let startFeatureIndex = 0;\n  let endFeatureIndex = featureIds[featureIds.length - 1] + 1;\n  if (layerName) {\n    const layerRange = getLayerRange(geomData, layerName);\n    if (layerRange) {\n      startFeatureIndex = layerRange[0];\n      endFeatureIndex = layerRange[1] + 1;\n    } else {\n      return -1;\n    }\n  }\n\n  // Look for the uniqueIdProperty\n  let featureIndex = -1;\n  if (uniqueIdProperty in geomData.numericProps) {\n    const vertexIndex = geomData.numericProps[uniqueIdProperty].value.findIndex(\n      (x, i) =>\n        x === featureId && featureIds[i] >= startFeatureIndex && featureIds[i] < endFeatureIndex\n    );\n    return vertexIndex >= 0 ? geomData.globalFeatureIds.value[vertexIndex] : -1;\n  } else if (uniqueIdProperty) {\n    featureIndex = findIndex(\n      geomData.properties,\n      elem => elem[uniqueIdProperty] === featureId,\n      startFeatureIndex,\n      endFeatureIndex\n    );\n  } else if (geomData.fields) {\n    featureIndex = findIndex(\n      geomData.fields,\n      (elem: any) => elem.id === featureId,\n      startFeatureIndex,\n      endFeatureIndex\n    );\n  }\n  return featureIndex >= 0 ? getGlobalFeatureId(geomData, featureIndex) : -1;\n}\n\ntype LayerRange = [firstFeatureIndex: number, lastFeatureIndex: number];\n\n// Returns [firstFeatureIndex, lastFeatureIndex]\n// MVTLoader parses tiles layer-by-layer, so each layer is a continuous range\nfunction getLayerRange(\n  geomData: FeatureTypes & {\n    __layers?: Record<string, LayerRange>;\n  },\n  layerName: string\n): LayerRange | undefined {\n  if (!geomData.__layers) {\n    // Cache a map from properties.layerName to index ranges\n    const layerNames: Record<string, LayerRange> = {};\n    const {properties} = geomData;\n    for (let i = 0; i < properties.length; i++) {\n      const {layerName: key} = properties[i] as Record<string, any>;\n      if (!key) {\n        // ignore\n      } else if (layerNames[key]) {\n        layerNames[key][1] = i;\n      } else {\n        layerNames[key] = [i, i];\n      }\n    }\n    geomData.__layers = layerNames;\n  }\n  return geomData.__layers[layerName];\n}\n\n// Returns global feature id\nfunction getGlobalFeatureId(geomData, featureIndex: number) {\n  if (!geomData.__ids) {\n    // Cache a map from featureId to globalFeatureId\n    const result: string[] = [];\n    const featureIds = geomData.featureIds.value;\n    const globalFeatureIds = geomData.globalFeatureIds.value;\n    for (let i = 0; i < featureIds.length; i++) {\n      result[featureIds[i]] = globalFeatureIds[i];\n    }\n    geomData.__ids = result;\n  }\n  return geomData.__ids[featureIndex];\n}\n\n// Like array.findIndex, but only search within a range\nfunction findIndex<T>(\n  array: T[],\n  predicate: (v: T, index: number) => boolean,\n  startIndex: number,\n  endIndex: number\n): number {\n  for (let i = startIndex; i < endIndex; i++) {\n    if (predicate(array[i], i)) {\n      return i;\n    }\n  }\n  return -1;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}