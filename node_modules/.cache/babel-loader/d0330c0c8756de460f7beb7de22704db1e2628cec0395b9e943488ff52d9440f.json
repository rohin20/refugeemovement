{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"hexToRgb\", {\n  enumerable: true,\n  get: function get() {\n    return _colorUtils.hexToRgb;\n  }\n});\nObject.defineProperty(exports, \"isHexColor\", {\n  enumerable: true,\n  get: function get() {\n    return _colorUtils.isHexColor;\n  }\n});\nObject.defineProperty(exports, \"rgbToHex\", {\n  enumerable: true,\n  get: function get() {\n    return _colorUtils.rgbToHex;\n  }\n});\nObject.defineProperty(exports, \"getColorGroupByName\", {\n  enumerable: true,\n  get: function get() {\n    return _colorUtils.getColorGroupByName;\n  }\n});\nObject.defineProperty(exports, \"reverseColorRange\", {\n  enumerable: true,\n  get: function get() {\n    return _colorUtils.reverseColorRange;\n  }\n});\nObject.defineProperty(exports, \"createLinearGradient\", {\n  enumerable: true,\n  get: function get() {\n    return _colorUtils.createLinearGradient;\n  }\n});\nObject.defineProperty(exports, \"isRgbColor\", {\n  enumerable: true,\n  get: function get() {\n    return _colorUtils.isRgbColor;\n  }\n});\nObject.defineProperty(exports, \"errorNotification\", {\n  enumerable: true,\n  get: function get() {\n    return _notificationsUtils.errorNotification;\n  }\n});\nObject.defineProperty(exports, \"createNotification\", {\n  enumerable: true,\n  get: function get() {\n    return _notificationsUtils.createNotification;\n  }\n});\nObject.defineProperty(exports, \"exportImageError\", {\n  enumerable: true,\n  get: function get() {\n    return _notificationsUtils.exportImageError;\n  }\n});\nObject.defineProperty(exports, \"successNotification\", {\n  enumerable: true,\n  get: function get() {\n    return _notificationsUtils.successNotification;\n  }\n});\nObject.defineProperty(exports, \"domtoimage\", {\n  enumerable: true,\n  get: function get() {\n    return _domToImage[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"getFrequency\", {\n  enumerable: true,\n  get: function get() {\n    return _aggregateUtils.getFrequency;\n  }\n});\nObject.defineProperty(exports, \"getMode\", {\n  enumerable: true,\n  get: function get() {\n    return _aggregateUtils.getMode;\n  }\n});\nObject.defineProperty(exports, \"aggregate\", {\n  enumerable: true,\n  get: function get() {\n    return _aggregateUtils.aggregate;\n  }\n});\nObject.defineProperty(exports, \"unique\", {\n  enumerable: true,\n  get: function get() {\n    return _dataUtils.unique;\n  }\n});\nObject.defineProperty(exports, \"getLatLngBounds\", {\n  enumerable: true,\n  get: function get() {\n    return _dataUtils.getLatLngBounds;\n  }\n});\nObject.defineProperty(exports, \"clamp\", {\n  enumerable: true,\n  get: function get() {\n    return _dataUtils.clamp;\n  }\n});\nObject.defineProperty(exports, \"getSampleData\", {\n  enumerable: true,\n  get: function get() {\n    return _dataUtils.getSampleData;\n  }\n});\nObject.defineProperty(exports, \"timeToUnixMilli\", {\n  enumerable: true,\n  get: function get() {\n    return _dataUtils.timeToUnixMilli;\n  }\n});\nObject.defineProperty(exports, \"notNullorUndefined\", {\n  enumerable: true,\n  get: function get() {\n    return _dataUtils.notNullorUndefined;\n  }\n});\nObject.defineProperty(exports, \"isNumber\", {\n  enumerable: true,\n  get: function get() {\n    return _dataUtils.isNumber;\n  }\n});\nObject.defineProperty(exports, \"isPlainObject\", {\n  enumerable: true,\n  get: function get() {\n    return _dataUtils.isPlainObject;\n  }\n});\nObject.defineProperty(exports, \"hasOwnProperty\", {\n  enumerable: true,\n  get: function get() {\n    return _dataUtils.hasOwnProperty;\n  }\n});\nObject.defineProperty(exports, \"numberSort\", {\n  enumerable: true,\n  get: function get() {\n    return _dataUtils.numberSort;\n  }\n});\nObject.defineProperty(exports, \"getSortingFunction\", {\n  enumerable: true,\n  get: function get() {\n    return _dataUtils.getSortingFunction;\n  }\n});\nObject.defineProperty(exports, \"preciseRound\", {\n  enumerable: true,\n  get: function get() {\n    return _dataUtils.preciseRound;\n  }\n});\nObject.defineProperty(exports, \"getRoundingDecimalFromStep\", {\n  enumerable: true,\n  get: function get() {\n    return _dataUtils.getRoundingDecimalFromStep;\n  }\n});\nObject.defineProperty(exports, \"snapToMarks\", {\n  enumerable: true,\n  get: function get() {\n    return _dataUtils.snapToMarks;\n  }\n});\nObject.defineProperty(exports, \"normalizeSliderValue\", {\n  enumerable: true,\n  get: function get() {\n    return _dataUtils.normalizeSliderValue;\n  }\n});\nObject.defineProperty(exports, \"roundValToStep\", {\n  enumerable: true,\n  get: function get() {\n    return _dataUtils.roundValToStep;\n  }\n});\nObject.defineProperty(exports, \"defaultFormatter\", {\n  enumerable: true,\n  get: function get() {\n    return _dataUtils.defaultFormatter;\n  }\n});\nObject.defineProperty(exports, \"FIELD_DISPLAY_FORMAT\", {\n  enumerable: true,\n  get: function get() {\n    return _dataUtils.FIELD_DISPLAY_FORMAT;\n  }\n});\nObject.defineProperty(exports, \"parseFieldValue\", {\n  enumerable: true,\n  get: function get() {\n    return _dataUtils.parseFieldValue;\n  }\n});\nObject.defineProperty(exports, \"arrayMove\", {\n  enumerable: true,\n  get: function get() {\n    return _dataUtils.arrayMove;\n  }\n});\nObject.defineProperty(exports, \"getFormatter\", {\n  enumerable: true,\n  get: function get() {\n    return _dataUtils.getFormatter;\n  }\n});\nObject.defineProperty(exports, \"applyDefaultFormat\", {\n  enumerable: true,\n  get: function get() {\n    return _dataUtils.applyDefaultFormat;\n  }\n});\nObject.defineProperty(exports, \"getBooleanFormatter\", {\n  enumerable: true,\n  get: function get() {\n    return _dataUtils.getBooleanFormatter;\n  }\n});\nObject.defineProperty(exports, \"applyCustomFormat\", {\n  enumerable: true,\n  get: function get() {\n    return _dataUtils.applyCustomFormat;\n  }\n});\nObject.defineProperty(exports, \"datetimeFormatter\", {\n  enumerable: true,\n  get: function get() {\n    return _dataUtils.datetimeFormatter;\n  }\n});\nObject.defineProperty(exports, \"datasetColorMaker\", {\n  enumerable: true,\n  get: function get() {\n    return _datasetUtils.datasetColorMaker;\n  }\n});\nObject.defineProperty(exports, \"findDefaultColorField\", {\n  enumerable: true,\n  get: function get() {\n    return _datasetUtils.findDefaultColorField;\n  }\n});\nObject.defineProperty(exports, \"ACCEPTED_ANALYZER_TYPES\", {\n  enumerable: true,\n  get: function get() {\n    return _datasetUtils.ACCEPTED_ANALYZER_TYPES;\n  }\n});\nObject.defineProperty(exports, \"validateInputData\", {\n  enumerable: true,\n  get: function get() {\n    return _datasetUtils.validateInputData;\n  }\n});\nObject.defineProperty(exports, \"getSampleForTypeAnalyze\", {\n  enumerable: true,\n  get: function get() {\n    return _datasetUtils.getSampleForTypeAnalyze;\n  }\n});\nObject.defineProperty(exports, \"getFieldsFromData\", {\n  enumerable: true,\n  get: function get() {\n    return _datasetUtils.getFieldsFromData;\n  }\n});\nObject.defineProperty(exports, \"renameDuplicateFields\", {\n  enumerable: true,\n  get: function get() {\n    return _datasetUtils.renameDuplicateFields;\n  }\n});\nObject.defineProperty(exports, \"analyzerTypeToFieldType\", {\n  enumerable: true,\n  get: function get() {\n    return _datasetUtils.analyzerTypeToFieldType;\n  }\n});\nObject.defineProperty(exports, \"exportMapToHTML\", {\n  enumerable: true,\n  get: function get() {\n    return _exportMapHtml.exportMapToHTML;\n  }\n});\nObject.defineProperty(exports, \"DEFAULT_IMAGE_NAME\", {\n  enumerable: true,\n  get: function get() {\n    return _exportUtils.DEFAULT_IMAGE_NAME;\n  }\n});\nObject.defineProperty(exports, \"DEFAULT_HTML_NAME\", {\n  enumerable: true,\n  get: function get() {\n    return _exportUtils.DEFAULT_HTML_NAME;\n  }\n});\nObject.defineProperty(exports, \"DEFAULT_JSON_NAME\", {\n  enumerable: true,\n  get: function get() {\n    return _exportUtils.DEFAULT_JSON_NAME;\n  }\n});\nObject.defineProperty(exports, \"DEFAULT_DATA_NAME\", {\n  enumerable: true,\n  get: function get() {\n    return _exportUtils.DEFAULT_DATA_NAME;\n  }\n});\nObject.defineProperty(exports, \"DEFAULT_EXPORT_JSON_SETTINGS\", {\n  enumerable: true,\n  get: function get() {\n    return _exportUtils.DEFAULT_EXPORT_JSON_SETTINGS;\n  }\n});\nObject.defineProperty(exports, \"isMSEdge\", {\n  enumerable: true,\n  get: function get() {\n    return _exportUtils.isMSEdge;\n  }\n});\nObject.defineProperty(exports, \"getScaleFromImageSize\", {\n  enumerable: true,\n  get: function get() {\n    return _exportUtils.getScaleFromImageSize;\n  }\n});\nObject.defineProperty(exports, \"calculateExportImageSize\", {\n  enumerable: true,\n  get: function get() {\n    return _exportUtils.calculateExportImageSize;\n  }\n});\nObject.defineProperty(exports, \"convertToPng\", {\n  enumerable: true,\n  get: function get() {\n    return _exportUtils.convertToPng;\n  }\n});\nObject.defineProperty(exports, \"dataURItoBlob\", {\n  enumerable: true,\n  get: function get() {\n    return _exportUtils.dataURItoBlob;\n  }\n});\nObject.defineProperty(exports, \"downloadFile\", {\n  enumerable: true,\n  get: function get() {\n    return _exportUtils.downloadFile;\n  }\n});\nObject.defineProperty(exports, \"exportImage\", {\n  enumerable: true,\n  get: function get() {\n    return _exportUtils.exportImage;\n  }\n});\nObject.defineProperty(exports, \"exportToJsonString\", {\n  enumerable: true,\n  get: function get() {\n    return _exportUtils.exportToJsonString;\n  }\n});\nObject.defineProperty(exports, \"getMapJSON\", {\n  enumerable: true,\n  get: function get() {\n    return _exportUtils.getMapJSON;\n  }\n});\nObject.defineProperty(exports, \"exportJson\", {\n  enumerable: true,\n  get: function get() {\n    return _exportUtils.exportJson;\n  }\n});\nObject.defineProperty(exports, \"exportHtml\", {\n  enumerable: true,\n  get: function get() {\n    return _exportUtils.exportHtml;\n  }\n});\nObject.defineProperty(exports, \"exportMap\", {\n  enumerable: true,\n  get: function get() {\n    return _exportUtils.exportMap;\n  }\n});\nObject.defineProperty(exports, \"exporters\", {\n  enumerable: true,\n  get: function get() {\n    return _exportUtils[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"setLayerBlending\", {\n  enumerable: true,\n  get: function get() {\n    return _glUtils.setLayerBlending;\n  }\n});\nObject.defineProperty(exports, \"flattenMessages\", {\n  enumerable: true,\n  get: function get() {\n    return _localeUtils.flattenMessages;\n  }\n});\nObject.defineProperty(exports, \"mergeMessages\", {\n  enumerable: true,\n  get: function get() {\n    return _localeUtils.mergeMessages;\n  }\n});\nObject.defineProperty(exports, \"observeDimensions\", {\n  enumerable: true,\n  get: function get() {\n    return _observeDimensions.observeDimensions;\n  }\n});\nObject.defineProperty(exports, \"unobserveDimensions\", {\n  enumerable: true,\n  get: function get() {\n    return _observeDimensions.unobserveDimensions;\n  }\n});\nObject.defineProperty(exports, \"useDimensions\", {\n  enumerable: true,\n  get: function get() {\n    return _observeDimensions[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"validateBounds\", {\n  enumerable: true,\n  get: function get() {\n    return _projectionUtils.validateBounds;\n  }\n});\nObject.defineProperty(exports, \"getCenterAndZoomFromBounds\", {\n  enumerable: true,\n  get: function get() {\n    return _projectionUtils.getCenterAndZoomFromBounds;\n  }\n});\nObject.defineProperty(exports, \"validateToken\", {\n  enumerable: true,\n  get: function get() {\n    return _mapboxUtils.validateToken;\n  }\n});\nObject.defineProperty(exports, \"getDefaultLayerGroupVisibility\", {\n  enumerable: true,\n  get: function get() {\n    return _mapboxGlStyleEditor.getDefaultLayerGroupVisibility;\n  }\n});\nObject.defineProperty(exports, \"editTopMapStyle\", {\n  enumerable: true,\n  get: function get() {\n    return _mapboxGlStyleEditor.editTopMapStyle;\n  }\n});\nObject.defineProperty(exports, \"editBottomMapStyle\", {\n  enumerable: true,\n  get: function get() {\n    return _mapboxGlStyleEditor.editBottomMapStyle;\n  }\n});\nObject.defineProperty(exports, \"isValidStyleUrl\", {\n  enumerable: true,\n  get: function get() {\n    return _mapboxGlStyleEditor.isValidStyleUrl;\n  }\n});\nObject.defineProperty(exports, \"getStyleDownloadUrl\", {\n  enumerable: true,\n  get: function get() {\n    return _mapboxGlStyleEditor.getStyleDownloadUrl;\n  }\n});\nObject.defineProperty(exports, \"getStyleImageIcon\", {\n  enumerable: true,\n  get: function get() {\n    return _mapboxGlStyleEditor.getStyleImageIcon;\n  }\n});\nObject.defineProperty(exports, \"scaleMapStyleByResolution\", {\n  enumerable: true,\n  get: function get() {\n    return _mapboxGlStyleEditor.scaleMapStyleByResolution;\n  }\n});\nObject.defineProperty(exports, \"mergeLayerGroupVisibility\", {\n  enumerable: true,\n  get: function get() {\n    return _mapboxGlStyleEditor.mergeLayerGroupVisibility;\n  }\n});\nObject.defineProperty(exports, \"isValidMapInfo\", {\n  enumerable: true,\n  get: function get() {\n    return _mapInfoUtils.isValidMapInfo;\n  }\n});\nObject.defineProperty(exports, \"generateHashId\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.generateHashId;\n  }\n});\nObject.defineProperty(exports, \"isChrome\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.isChrome;\n  }\n});\nObject.defineProperty(exports, \"capitalizeFirstLetter\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.capitalizeFirstLetter;\n  }\n});\nObject.defineProperty(exports, \"camelToTitle\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.camelToTitle;\n  }\n});\nObject.defineProperty(exports, \"camelize\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.camelize;\n  }\n});\nObject.defineProperty(exports, \"toArray\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.toArray;\n  }\n});\nObject.defineProperty(exports, \"insertValue\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.insertValue;\n  }\n});\nObject.defineProperty(exports, \"isObject\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.isObject;\n  }\n});\nObject.defineProperty(exports, \"set\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.set;\n  }\n});\nObject.defineProperty(exports, \"getError\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.getError;\n  }\n});\nObject.defineProperty(exports, \"arrayInsert\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.arrayInsert;\n  }\n});\nObject.defineProperty(exports, \"isTest\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.isTest;\n  }\n});\nObject.defineProperty(exports, \"filterObjectByPredicate\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.filterObjectByPredicate;\n  }\n});\nObject.defineProperty(exports, \"isFunction\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.isFunction;\n  }\n});\nObject.defineProperty(exports, \"hasMobileWidth\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.hasMobileWidth;\n  }\n});\nObject.defineProperty(exports, \"hasPortableWidth\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.hasPortableWidth;\n  }\n});\nObject.defineProperty(exports, \"addNewLayersToSplitMap\", {\n  enumerable: true,\n  get: function get() {\n    return _splitMapUtils.addNewLayersToSplitMap;\n  }\n});\nObject.defineProperty(exports, \"removeLayerFromSplitMaps\", {\n  enumerable: true,\n  get: function get() {\n    return _splitMapUtils.removeLayerFromSplitMaps;\n  }\n});\nObject.defineProperty(exports, \"getInitialMapLayersForSplitMap\", {\n  enumerable: true,\n  get: function get() {\n    return _splitMapUtils.getInitialMapLayersForSplitMap;\n  }\n});\nObject.defineProperty(exports, \"computeSplitMapLayers\", {\n  enumerable: true,\n  get: function get() {\n    return _splitMapUtils.computeSplitMapLayers;\n  }\n});\nObject.defineProperty(exports, \"transformRequest\", {\n  enumerable: true,\n  get: function get() {\n    return _mapboxUtils2.transformRequest;\n  }\n});\nObject.defineProperty(exports, \"isStyleUsingMapboxTiles\", {\n  enumerable: true,\n  get: function get() {\n    return _mapboxUtils2.isStyleUsingMapboxTiles;\n  }\n});\nObject.defineProperty(exports, \"onViewPortChange\", {\n  enumerable: true,\n  get: function get() {\n    return _mapUtils.onViewPortChange;\n  }\n});\nObject.defineProperty(exports, \"getMapLayersFromSplitMaps\", {\n  enumerable: true,\n  get: function get() {\n    return _mapUtils.getMapLayersFromSplitMaps;\n  }\n});\nObject.defineProperty(exports, \"createDataContainer\", {\n  enumerable: true,\n  get: function get() {\n    return _dataContainerUtils.createDataContainer;\n  }\n});\nObject.defineProperty(exports, \"createIndexedDataContainer\", {\n  enumerable: true,\n  get: function get() {\n    return _dataContainerUtils.createIndexedDataContainer;\n  }\n});\nObject.defineProperty(exports, \"getSampleContainerData\", {\n  enumerable: true,\n  get: function get() {\n    return _dataContainerUtils.getSampleData;\n  }\n});\nObject.defineProperty(exports, \"TimestampStepMap\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.TimestampStepMap;\n  }\n});\nObject.defineProperty(exports, \"histogramBins\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.histogramBins;\n  }\n});\nObject.defineProperty(exports, \"enlargedHistogramBins\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.enlargedHistogramBins;\n  }\n});\nObject.defineProperty(exports, \"FILTER_UPDATER_PROPS\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.FILTER_UPDATER_PROPS;\n  }\n});\nObject.defineProperty(exports, \"LIMITED_FILTER_EFFECT_PROPS\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.LIMITED_FILTER_EFFECT_PROPS;\n  }\n});\nObject.defineProperty(exports, \"FILTER_COMPONENTS\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.FILTER_COMPONENTS;\n  }\n});\nObject.defineProperty(exports, \"DEFAULT_FILTER_STRUCTURE\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.DEFAULT_FILTER_STRUCTURE;\n  }\n});\nObject.defineProperty(exports, \"FILTER_ID_LENGTH\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.FILTER_ID_LENGTH;\n  }\n});\nObject.defineProperty(exports, \"LAYER_FILTERS\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.LAYER_FILTERS;\n  }\n});\nObject.defineProperty(exports, \"getDefaultFilter\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.getDefaultFilter;\n  }\n});\nObject.defineProperty(exports, \"shouldApplyFilter\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.shouldApplyFilter;\n  }\n});\nObject.defineProperty(exports, \"validatePolygonFilter\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.validatePolygonFilter;\n  }\n});\nObject.defineProperty(exports, \"validateFilter\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.validateFilter;\n  }\n});\nObject.defineProperty(exports, \"validateFilterWithData\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.validateFilterWithData;\n  }\n});\nObject.defineProperty(exports, \"getFilterProps\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.getFilterProps;\n  }\n});\nObject.defineProperty(exports, \"getPolygonFilterFunctor\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.getPolygonFilterFunctor;\n  }\n});\nObject.defineProperty(exports, \"getFilterFunction\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.getFilterFunction;\n  }\n});\nObject.defineProperty(exports, \"updateFilterDataId\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.updateFilterDataId;\n  }\n});\nObject.defineProperty(exports, \"filterDataByFilterTypes\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.filterDataByFilterTypes;\n  }\n});\nObject.defineProperty(exports, \"getFilterRecord\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.getFilterRecord;\n  }\n});\nObject.defineProperty(exports, \"diffFilters\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.diffFilters;\n  }\n});\nObject.defineProperty(exports, \"adjustValueToFilterDomain\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.adjustValueToFilterDomain;\n  }\n});\nObject.defineProperty(exports, \"getNumericFieldDomain\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.getNumericFieldDomain;\n  }\n});\nObject.defineProperty(exports, \"getNumericStepSize\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.getNumericStepSize;\n  }\n});\nObject.defineProperty(exports, \"getTimestampFieldDomain\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.getTimestampFieldDomain;\n  }\n});\nObject.defineProperty(exports, \"histogramConstruct\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.histogramConstruct;\n  }\n});\nObject.defineProperty(exports, \"getHistogram\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.getHistogram;\n  }\n});\nObject.defineProperty(exports, \"formatNumberByStep\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.formatNumberByStep;\n  }\n});\nObject.defineProperty(exports, \"isInRange\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.isInRange;\n  }\n});\nObject.defineProperty(exports, \"isInPolygon\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.isInPolygon;\n  }\n});\nObject.defineProperty(exports, \"isValidTimeDomain\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.isValidTimeDomain;\n  }\n});\nObject.defineProperty(exports, \"getTimeWidgetTitleFormatter\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.getTimeWidgetTitleFormatter;\n  }\n});\nObject.defineProperty(exports, \"getTimeWidgetHintFormatter\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.getTimeWidgetHintFormatter;\n  }\n});\nObject.defineProperty(exports, \"isFilterValidToSave\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.isFilterValidToSave;\n  }\n});\nObject.defineProperty(exports, \"isValidFilterValue\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.isValidFilterValue;\n  }\n});\nObject.defineProperty(exports, \"getFilterPlot\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.getFilterPlot;\n  }\n});\nObject.defineProperty(exports, \"getDefaultFilterPlotType\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.getDefaultFilterPlotType;\n  }\n});\nObject.defineProperty(exports, \"applyFiltersToDatasets\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.applyFiltersToDatasets;\n  }\n});\nObject.defineProperty(exports, \"applyFilterFieldName\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.applyFilterFieldName;\n  }\n});\nObject.defineProperty(exports, \"mergeFilterDomainStep\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.mergeFilterDomainStep;\n  }\n});\nObject.defineProperty(exports, \"featureToFilterValue\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.featureToFilterValue;\n  }\n});\nObject.defineProperty(exports, \"getFilterIdInFeature\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.getFilterIdInFeature;\n  }\n});\nObject.defineProperty(exports, \"generatePolygonFilter\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.generatePolygonFilter;\n  }\n});\nObject.defineProperty(exports, \"filterDatasetCPU\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.filterDatasetCPU;\n  }\n});\nObject.defineProperty(exports, \"validateFiltersUpdateDatasets\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.validateFiltersUpdateDatasets;\n  }\n});\nObject.defineProperty(exports, \"getIntervalBins\", {\n  enumerable: true,\n  get: function get() {\n    return _filterUtils.getIntervalBins;\n  }\n});\nObject.defineProperty(exports, \"getQuantileDomain\", {\n  enumerable: true,\n  get: function get() {\n    return _dataScaleUtils.getQuantileDomain;\n  }\n});\nObject.defineProperty(exports, \"getOrdinalDomain\", {\n  enumerable: true,\n  get: function get() {\n    return _dataScaleUtils.getOrdinalDomain;\n  }\n});\nObject.defineProperty(exports, \"getLinearDomain\", {\n  enumerable: true,\n  get: function get() {\n    return _dataScaleUtils.getLinearDomain;\n  }\n});\nObject.defineProperty(exports, \"getLogDomain\", {\n  enumerable: true,\n  get: function get() {\n    return _dataScaleUtils.getLogDomain;\n  }\n});\nObject.defineProperty(exports, \"DataRow\", {\n  enumerable: true,\n  get: function get() {\n    return _dataRow.DataRow;\n  }\n});\nObject.defineProperty(exports, \"getCentroid\", {\n  enumerable: true,\n  get: function get() {\n    return _h3Utils.getCentroid;\n  }\n});\nObject.defineProperty(exports, \"idToPolygonGeo\", {\n  enumerable: true,\n  get: function get() {\n    return _h3Utils.idToPolygonGeo;\n  }\n});\nObject.defineProperty(exports, \"h3IsValid\", {\n  enumerable: true,\n  get: function get() {\n    return _h3Utils.h3IsValid;\n  }\n});\nObject.defineProperty(exports, \"getHexFields\", {\n  enumerable: true,\n  get: function get() {\n    return _h3Utils.getHexFields;\n  }\n});\nvar _colorUtils = require(\"./color-utils\");\nvar _notificationsUtils = require(\"./notifications-utils\");\nvar _domToImage = _interopRequireDefault(require(\"./dom-to-image\"));\nvar _aggregateUtils = require(\"./aggregate-utils\");\nvar _dataUtils = require(\"./data-utils\");\nvar _datasetUtils = require(\"./dataset-utils\");\nvar _exportMapHtml = require(\"./export-map-html\");\nvar _exportUtils = _interopRequireWildcard(require(\"./export-utils\"));\nvar _glUtils = require(\"./gl-utils\");\nvar _localeUtils = require(\"./locale-utils\");\nvar _observeDimensions = _interopRequireWildcard(require(\"./observe-dimensions\"));\nvar _projectionUtils = require(\"./projection-utils\");\nvar _mapboxUtils = require(\"./mapbox-utils\");\nvar _mapboxGlStyleEditor = require(\"./map-style-utils/mapbox-gl-style-editor\");\nvar _mapInfoUtils = require(\"./map-info-utils\");\nvar _utils = require(\"./utils\");\nvar _splitMapUtils = require(\"./split-map-utils\");\nvar _mapboxUtils2 = require(\"./map-style-utils/mapbox-utils\");\nvar _mapUtils = require(\"./map-utils\");\nvar _dataContainerUtils = require(\"./data-container-utils\");\nvar _filterUtils = require(\"./filter-utils\");\nvar _dataScaleUtils = require(\"./data-scale-utils\");\nvar _dataRow = require(\"./data-row\");\nvar _h3Utils = require(\"./h3-utils\");","map":{"version":3,"names":["enumerable","_h3Utils","idToPolygonGeo","h3IsValid","getHexFields","_colorUtils","require","_notificationsUtils","_domToImage","_interopRequireDefault","_aggregateUtils","_dataUtils","_datasetUtils","_exportMapHtml","_exportUtils","_interopRequireWildcard","_glUtils","_localeUtils","_observeDimensions","_projectionUtils","_mapboxUtils","_mapboxGlStyleEditor"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/utils/src/index.ts"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// UTILS\n\nexport {\n  hexToRgb,\n  isHexColor,\n  rgbToHex,\n  getColorGroupByName,\n  reverseColorRange,\n  createLinearGradient,\n  isRgbColor\n} from './color-utils';\nexport {errorNotification} from './notifications-utils';\n\nexport {createNotification, exportImageError, successNotification} from './notifications-utils';\n\nexport {default as domtoimage} from './dom-to-image';\nexport {getFrequency, getMode, aggregate} from './aggregate-utils';\n// eslint-disable-next-line prettier/prettier\nexport type {FieldFormatter} from './data-utils';\nexport {\n  unique,\n  getLatLngBounds,\n  clamp,\n  getSampleData,\n  timeToUnixMilli,\n  notNullorUndefined,\n  isNumber,\n  isPlainObject,\n  hasOwnProperty,\n  numberSort,\n  getSortingFunction,\n  preciseRound,\n  getRoundingDecimalFromStep,\n  snapToMarks,\n  normalizeSliderValue,\n  roundValToStep,\n  defaultFormatter,\n  FIELD_DISPLAY_FORMAT,\n  parseFieldValue,\n  arrayMove,\n  getFormatter,\n  applyDefaultFormat,\n  getBooleanFormatter,\n  applyCustomFormat,\n  datetimeFormatter\n} from './data-utils';\nexport {\n  datasetColorMaker,\n  findDefaultColorField,\n  ACCEPTED_ANALYZER_TYPES,\n  validateInputData,\n  getSampleForTypeAnalyze,\n  getFieldsFromData,\n  renameDuplicateFields,\n  analyzerTypeToFieldType\n} from './dataset-utils';\nexport {exportMapToHTML} from './export-map-html';\nexport {\n  DEFAULT_IMAGE_NAME,\n  DEFAULT_HTML_NAME,\n  DEFAULT_JSON_NAME,\n  DEFAULT_DATA_NAME,\n  DEFAULT_EXPORT_JSON_SETTINGS,\n  isMSEdge,\n  getScaleFromImageSize,\n  calculateExportImageSize,\n  convertToPng,\n  dataURItoBlob,\n  downloadFile,\n  exportImage,\n  exportToJsonString,\n  getMapJSON,\n  exportJson,\n  exportHtml,\n  exportMap,\n  default as exporters\n} from './export-utils';\nexport {setLayerBlending} from './gl-utils';\nexport {flattenMessages, mergeMessages} from './locale-utils';\nexport type {Dimensions} from './observe-dimensions';\nexport {\n  observeDimensions,\n  unobserveDimensions,\n  default as useDimensions\n} from './observe-dimensions';\nexport {validateBounds, getCenterAndZoomFromBounds} from './projection-utils';\nexport {validateToken} from './mapbox-utils';\nexport {\n  getDefaultLayerGroupVisibility,\n  editTopMapStyle,\n  editBottomMapStyle,\n  isValidStyleUrl,\n  getStyleDownloadUrl,\n  getStyleImageIcon,\n  scaleMapStyleByResolution,\n  mergeLayerGroupVisibility\n} from './map-style-utils/mapbox-gl-style-editor';\nexport {isValidMapInfo} from './map-info-utils';\nexport {\n  generateHashId,\n  isChrome,\n  capitalizeFirstLetter,\n  camelToTitle,\n  camelize,\n  toArray,\n  insertValue,\n  isObject,\n  set,\n  getError,\n  arrayInsert,\n  isTest,\n  filterObjectByPredicate,\n  isFunction,\n  hasMobileWidth,\n  hasPortableWidth\n} from './utils';\nexport {\n  addNewLayersToSplitMap,\n  removeLayerFromSplitMaps,\n  getInitialMapLayersForSplitMap,\n  computeSplitMapLayers\n} from './split-map-utils';\n\n// Mapbox\nexport {transformRequest, isStyleUsingMapboxTiles} from './map-style-utils/mapbox-utils';\n\n// Map\nexport {onViewPortChange, getMapLayersFromSplitMaps} from './map-utils';\n\nexport {createDataContainer, createIndexedDataContainer, getSampleData as getSampleContainerData} from './data-container-utils';\nexport type {DataContainerInterface} from './data-container-interface';\nexport type {FilterResult, FilterChanged, dataValueAccessor} from './filter-utils'\nexport {\n  TimestampStepMap,\n  histogramBins,\n  enlargedHistogramBins,\n  FILTER_UPDATER_PROPS,\n  LIMITED_FILTER_EFFECT_PROPS,\n  FILTER_COMPONENTS,\n  DEFAULT_FILTER_STRUCTURE,\n  FILTER_ID_LENGTH,\n  LAYER_FILTERS,\n  getDefaultFilter,\n  shouldApplyFilter,\n  validatePolygonFilter,\n  validateFilter,\n  validateFilterWithData,\n  getFilterProps,\n  getPolygonFilterFunctor,\n  getFilterFunction,\n  updateFilterDataId,\n  filterDataByFilterTypes,\n  getFilterRecord,\n  diffFilters,\n  adjustValueToFilterDomain,\n  getNumericFieldDomain,\n  getNumericStepSize,\n  getTimestampFieldDomain,\n  histogramConstruct,\n  getHistogram,\n  formatNumberByStep,\n  isInRange,\n  isInPolygon,\n  isValidTimeDomain,\n  getTimeWidgetTitleFormatter,\n  getTimeWidgetHintFormatter,\n  isFilterValidToSave,\n  isValidFilterValue,\n  getFilterPlot,\n  getDefaultFilterPlotType,\n  applyFiltersToDatasets,\n  applyFilterFieldName,\n  mergeFilterDomainStep,\n  featureToFilterValue,\n  getFilterIdInFeature,\n  generatePolygonFilter,\n  filterDatasetCPU,\n  validateFiltersUpdateDatasets,\n  getIntervalBins\n} from \"./filter-utils\";\n\nexport {\n  getQuantileDomain,\n  getOrdinalDomain,\n  getLinearDomain,\n  getLogDomain\n} from \"./data-scale-utils\";\n\nexport {DataRow} from './data-row';\n\nexport type {Centroid} from './h3-utils';\nexport {getCentroid, idToPolygonGeo, h3IsValid, getHexFields} from './h3-utils';"],"mappingssBA;;EASAA,UAAA;;IAIA,OAAAC,QAAA,CAAAC,cAAA;;AACA;;EAGAF,UAAA;;IA2BA,OAAAC,QAAA,CAAAE,SAAA;;AAUA;;EACAH,UAAA;;IAoBA,OAAAC,QAAA,CAAAG,YAAA;;AACA;AAEA,IAAAC,WAAA,GAAAC,OAAA;AAKA,IAAAC,mBAAA,GAAAD,OAAA;AACA,IAAAE,WAAA,GAAAC,sBAAA,CAAAH,OAAA;AACA,IAAAI,eAAA,GAAAJ,OAAA;AAUA,IAAAK,UAAA,GAAAL,OAAA;AACA,IAAAM,aAAA,GAAAN,OAAA;AAkBA,IAAAO,cAAA,GAAAP,OAAA;AAQA,IAAAQ,YAAA,GAAAC,uBAAA,CAAAT,OAAA;AAGA,IAAAU,QAAA,GAAAV,OAAA;AAEA,IAAAW,YAAA,GAAAX,OAAA;AAGA,IAAAY,kBAAA,GAAAH,uBAAA,CAAAT,OAAA;AAiDA,IAAAa,gBAAA,GAAAb,OAAA;AAOA,IAAAc,YAAA,GAAAd,OAAA;AAGA,IAAAe,oBAAA,GAAAf,OAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}