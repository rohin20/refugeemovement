{"ast":null,"code":"import _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _Symbol$asyncIterator;\n_Symbol$asyncIterator = Symbol.asyncIterator;\nvar AsyncQueue = /*#__PURE__*/function (_Symbol$asyncIterator2) {\n  function AsyncQueue() {\n    _classCallCheck(this, AsyncQueue);\n    _defineProperty(this, \"_values\", void 0);\n    _defineProperty(this, \"_settlers\", void 0);\n    _defineProperty(this, \"_closed\", void 0);\n    this._values = [];\n    this._settlers = [];\n    this._closed = false;\n  }\n  _createClass(AsyncQueue, [{\n    key: _Symbol$asyncIterator2,\n    value: function value() {\n      return this;\n    }\n  }, {\n    key: \"push\",\n    value: function push(value) {\n      return this.enqueue(value);\n    }\n  }, {\n    key: \"enqueue\",\n    value: function enqueue(value) {\n      if (this._closed) {\n        throw new Error('Closed');\n      }\n      if (this._settlers.length > 0) {\n        if (this._values.length > 0) {\n          throw new Error('Illegal internal state');\n        }\n        var settler = this._settlers.shift();\n        if (value instanceof Error) {\n          settler.reject(value);\n        } else {\n          settler.resolve({\n            value: value\n          });\n        }\n      } else {\n        this._values.push(value);\n      }\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      while (this._settlers.length > 0) {\n        var settler = this._settlers.shift();\n        settler.resolve({\n          done: true\n        });\n      }\n      this._closed = true;\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      var _this = this;\n      if (this._values.length > 0) {\n        var value = this._values.shift();\n        if (value instanceof Error) {\n          return Promise.reject(value);\n        }\n        return Promise.resolve({\n          done: false,\n          value: value\n        });\n      }\n      if (this._closed) {\n        if (this._settlers.length > 0) {\n          throw new Error('Illegal internal state');\n        }\n        return Promise.resolve({\n          done: true,\n          value: undefined\n        });\n      }\n      return new Promise(function (resolve, reject) {\n        _this._settlers.push({\n          resolve: resolve,\n          reject: reject\n        });\n      });\n    }\n  }]);\n  return AsyncQueue;\n}(_Symbol$asyncIterator);\nexport { AsyncQueue as default };","map":{"version":3,"names":["Symbol","asyncIterator","AsyncQueue","_Symbol$asyncIterator2","_classCallCheck","_defineProperty","_values","_settlers","_closed","_createClass","key","value","push","enqueue","Error","length","settler","shift","reject","resolve","close","done","next","_this","Promise","undefined","_Symbol$asyncIterator","default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@loaders.gl/worker-utils/src/lib/async-queue/async-queue.ts"],"sourcesContent":["// From https://github.com/rauschma/async-iter-demo/tree/master/src under MIT license\n// http://2ality.com/2016/10/asynchronous-iteration.html\n\n/**\n * Async Queue\n * - AsyncIterable: An async iterator can be\n * - Values can be pushed onto the queue\n * @example\n *   const asyncQueue = new AsyncQueue();\n *   setTimeout(() => asyncQueue.enqueue('tick'), 1000);\n *   setTimeout(() => asyncQueue.enqueue(new Error('done')), 10000);\n *   for await (const value of asyncQueue) {\n *     console.log(value); // tick\n *   }\n */\nexport default class AsyncQueue<T> {\n  private _values: any[];\n  private _settlers: any[];\n  private _closed: boolean;\n\n  constructor() {\n    this._values = []; // enqueues > dequeues\n    this._settlers = []; // dequeues > enqueues\n    this._closed = false;\n  }\n\n  /** Return an async iterator for this queue */\n  [Symbol.asyncIterator](): AsyncIterator<T> {\n    return this;\n  }\n\n  /** Push a new value - the async iterator will yield a promise resolved to this value */\n  push(value: T): void {\n    return this.enqueue(value);\n  }\n\n  /**\n   * Push a new value - the async iterator will yield a promise resolved to this value\n   * Add an error - the async iterator will yield a promise rejected with this value\n   */\n  enqueue(value: T | Error): void {\n    if (this._closed) {\n      throw new Error('Closed');\n    }\n\n    if (this._settlers.length > 0) {\n      if (this._values.length > 0) {\n        throw new Error('Illegal internal state');\n      }\n      const settler = this._settlers.shift();\n      if (value instanceof Error) {\n        settler.reject(value);\n      } else {\n        settler.resolve({value});\n      }\n    } else {\n      this._values.push(value);\n    }\n  }\n\n  /** Indicate that we not waiting for more values - The async iterator will be done */\n  close(): void {\n    while (this._settlers.length > 0) {\n      const settler = this._settlers.shift();\n      settler.resolve({done: true});\n    }\n    this._closed = true;\n  }\n\n  // ITERATOR IMPLEMENTATION\n\n  /** @returns a Promise for an IteratorResult */\n  next(): Promise<IteratorResult<T, any>> {\n    // If values in queue, yield the first value\n    if (this._values.length > 0) {\n      const value = this._values.shift();\n      if (value instanceof Error) {\n        return Promise.reject(value);\n      }\n      return Promise.resolve({done: false, value});\n    }\n\n    // If queue is closed, the iterator is done\n    if (this._closed) {\n      if (this._settlers.length > 0) {\n        throw new Error('Illegal internal state');\n      }\n      return Promise.resolve({done: true, value: undefined});\n    }\n\n    // Yield a promise that waits for new values to be enqueued\n    return new Promise((resolve, reject) => {\n      this._settlers.push({resolve, reject});\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}