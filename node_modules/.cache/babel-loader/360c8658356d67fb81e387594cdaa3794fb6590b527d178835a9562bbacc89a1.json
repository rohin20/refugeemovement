{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { path } from '@loaders.gl/loader-utils';\nimport { TILESET_TYPE, LOD_METRIC_TYPE } from '@loaders.gl/tiles';\nimport { VERSION } from './lib/utils/version';\nimport { parse3DTile } from './lib/parsers/parse-3d-tile';\nimport { normalizeTileHeaders } from './lib/parsers/parse-3d-tile-header';\nexport var Tiles3DLoader = {\n  id: '3d-tiles',\n  name: '3D Tiles',\n  module: '3d-tiles',\n  version: VERSION,\n  extensions: ['cmpt', 'pnts', 'b3dm', 'i3dm'],\n  mimeTypes: ['application/octet-stream'],\n  tests: ['cmpt', 'pnts', 'b3dm', 'i3dm'],\n  parse: parse,\n  options: {\n    '3d-tiles': {\n      loadGLTF: true,\n      decodeQuantizedPositions: false,\n      isTileset: 'auto',\n      assetGltfUpAxis: null\n    }\n  }\n};\nfunction getBaseUri(tileset) {\n  return path.dirname(tileset.url);\n}\nfunction parseTile(_x, _x2, _x3) {\n  return _parseTile.apply(this, arguments);\n}\nfunction _parseTile() {\n  _parseTile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(arrayBuffer, options, context) {\n    var tile, byteOffset;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          tile = {\n            content: {\n              featureIds: null\n            }\n          };\n          byteOffset = 0;\n          _context.next = 4;\n          return parse3DTile(arrayBuffer, byteOffset, options, context, tile.content);\n        case 4:\n          return _context.abrupt(\"return\", tile.content);\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _parseTile.apply(this, arguments);\n}\nfunction parseTileset(_x4, _x5, _x6) {\n  return _parseTileset.apply(this, arguments);\n}\nfunction _parseTileset() {\n  _parseTileset = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(data, options, context) {\n    var _tilesetJson$root, tilesetJson;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          tilesetJson = JSON.parse(new TextDecoder().decode(data));\n          tilesetJson.loader = options.loader || Tiles3DLoader;\n          tilesetJson.url = context.url;\n          tilesetJson.basePath = getBaseUri(tilesetJson);\n          _context2.next = 6;\n          return normalizeTileHeaders(tilesetJson, options);\n        case 6:\n          tilesetJson.root = _context2.sent;\n          tilesetJson.type = TILESET_TYPE.TILES3D;\n          tilesetJson.lodMetricType = LOD_METRIC_TYPE.GEOMETRIC_ERROR;\n          tilesetJson.lodMetricValue = ((_tilesetJson$root = tilesetJson.root) === null || _tilesetJson$root === void 0 ? void 0 : _tilesetJson$root.lodMetricValue) || 0;\n          return _context2.abrupt(\"return\", tilesetJson);\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _parseTileset.apply(this, arguments);\n}\nfunction parse(_x7, _x8, _x9) {\n  return _parse.apply(this, arguments);\n}\nfunction _parse() {\n  _parse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(data, options, context) {\n    var loaderOptions, isTileset;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          loaderOptions = options['3d-tiles'] || {};\n          if (loaderOptions.isTileset === 'auto') {\n            isTileset = context.url && context.url.indexOf('.json') !== -1;\n          } else {\n            isTileset = loaderOptions.isTileset;\n          }\n          if (!isTileset) {\n            _context3.next = 8;\n            break;\n          }\n          _context3.next = 5;\n          return parseTileset(data, options, context);\n        case 5:\n          data = _context3.sent;\n          _context3.next = 11;\n          break;\n        case 8:\n          _context3.next = 10;\n          return parseTile(data, options, context);\n        case 10:\n          data = _context3.sent;\n        case 11:\n          return _context3.abrupt(\"return\", data);\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return _parse.apply(this, arguments);\n}","map":{"version":3,"names":["path","TILESET_TYPE","LOD_METRIC_TYPE","VERSION","parse3DTile","normalizeTileHeaders","Tiles3DLoader","id","name","module","version","extensions","mimeTypes","tests","parse","options","loadGLTF","decodeQuantizedPositions","isTileset","assetGltfUpAxis","getBaseUri","tileset","dirname","url","parseTile","_x","_x2","_x3","_parseTile","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","arrayBuffer","context","tile","byteOffset","wrap","_callee$","_context","prev","next","content","featureIds","abrupt","stop","parseTileset","_x4","_x5","_x6","_parseTileset","_callee2","data","_tilesetJson$root","tilesetJson","_callee2$","_context2","JSON","TextDecoder","decode","loader","basePath","root","sent","type","TILES3D","lodMetricType","GEOMETRIC_ERROR","lodMetricValue","_x7","_x8","_x9","_parse","_callee3","loaderOptions","_callee3$","_context3","indexOf"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/geo-layers/node_modules/@loaders.gl/3d-tiles/src/tiles-3d-loader.ts"],"sourcesContent":["import type {LoaderWithParser} from '@loaders.gl/loader-utils';\nimport {path} from '@loaders.gl/loader-utils';\nimport {TILESET_TYPE, LOD_METRIC_TYPE} from '@loaders.gl/tiles';\nimport {VERSION} from './lib/utils/version';\nimport {parse3DTile} from './lib/parsers/parse-3d-tile';\nimport {normalizeTileHeaders} from './lib/parsers/parse-3d-tile-header';\n\n/**\n * Loader for 3D Tiles\n */\nexport const Tiles3DLoader: LoaderWithParser = {\n  id: '3d-tiles',\n  name: '3D Tiles',\n  module: '3d-tiles',\n  version: VERSION,\n  extensions: ['cmpt', 'pnts', 'b3dm', 'i3dm'],\n  mimeTypes: ['application/octet-stream'],\n  tests: ['cmpt', 'pnts', 'b3dm', 'i3dm'],\n  parse,\n  options: {\n    '3d-tiles': {\n      loadGLTF: true,\n      decodeQuantizedPositions: false,\n      isTileset: 'auto',\n      assetGltfUpAxis: null\n    }\n  }\n};\n\nfunction getBaseUri(tileset) {\n  return path.dirname(tileset.url);\n}\n\nasync function parseTile(arrayBuffer, options, context) {\n  const tile = {\n    content: {\n      featureIds: null\n    }\n  };\n  const byteOffset = 0;\n  await parse3DTile(arrayBuffer, byteOffset, options, context, tile.content);\n  return tile.content;\n}\n\nasync function parseTileset(data, options, context) {\n  const tilesetJson = JSON.parse(new TextDecoder().decode(data));\n  // eslint-disable-next-line no-use-before-define\n  tilesetJson.loader = options.loader || Tiles3DLoader;\n  tilesetJson.url = context.url;\n  // base path that non-absolute paths in tileset are relative to.\n  tilesetJson.basePath = getBaseUri(tilesetJson);\n  tilesetJson.root = await normalizeTileHeaders(tilesetJson, options);\n\n  tilesetJson.type = TILESET_TYPE.TILES3D;\n\n  tilesetJson.lodMetricType = LOD_METRIC_TYPE.GEOMETRIC_ERROR;\n  tilesetJson.lodMetricValue = tilesetJson.root?.lodMetricValue || 0;\n\n  return tilesetJson;\n}\n\nasync function parse(data, options, context) {\n  // auto detect file type\n  const loaderOptions = options['3d-tiles'] || {};\n  let isTileset;\n  if (loaderOptions.isTileset === 'auto') {\n    isTileset = context.url && context.url.indexOf('.json') !== -1;\n  } else {\n    isTileset = loaderOptions.isTileset;\n  }\n\n  if (isTileset) {\n    data = await parseTileset(data, options, context);\n  } else {\n    data = await parseTile(data, options, context);\n  }\n\n  return data;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}