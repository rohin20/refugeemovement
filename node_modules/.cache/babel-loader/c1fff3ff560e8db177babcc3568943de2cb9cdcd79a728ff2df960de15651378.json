{"ast":null,"code":"import _objectSpread from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Model, Geometry } from '@luma.gl/core';\nimport { Layer, project32 } from '@deck.gl/core';\nimport vs from './triangle-layer-vertex.glsl';\nimport fs from './triangle-layer-fragment.glsl';\nvar TriangleLayer = /*#__PURE__*/function (_Layer) {\n  _inherits(TriangleLayer, _Layer);\n  var _super = _createSuper(TriangleLayer);\n  function TriangleLayer() {\n    _classCallCheck(this, TriangleLayer);\n    return _super.apply(this, arguments);\n  }\n  _createClass(TriangleLayer, [{\n    key: \"getShaders\",\n    value: function getShaders() {\n      return {\n        vs: vs,\n        fs: fs,\n        modules: [project32]\n      };\n    }\n  }, {\n    key: \"initializeState\",\n    value: function initializeState() {\n      var gl = this.context.gl;\n      var attributeManager = this.getAttributeManager();\n      attributeManager.add({\n        positions: {\n          size: 3,\n          noAlloc: true\n        },\n        texCoords: {\n          size: 2,\n          noAlloc: true\n        }\n      });\n      this.setState({\n        model: this._getModel(gl)\n      });\n    }\n  }, {\n    key: \"_getModel\",\n    value: function _getModel(gl) {\n      var vertexCount = this.props.vertexCount;\n      return new Model(gl, _objectSpread(_objectSpread({}, this.getShaders()), {}, {\n        id: this.props.id,\n        geometry: new Geometry({\n          drawMode: 6,\n          vertexCount: vertexCount\n        })\n      }));\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(_ref) {\n      var uniforms = _ref.uniforms;\n      var model = this.state.model;\n      var _this$props = this.props,\n        texture = _this$props.texture,\n        maxTexture = _this$props.maxTexture,\n        colorTexture = _this$props.colorTexture,\n        intensity = _this$props.intensity,\n        threshold = _this$props.threshold,\n        aggregationMode = _this$props.aggregationMode,\n        colorDomain = _this$props.colorDomain;\n      model.setUniforms(_objectSpread(_objectSpread({}, uniforms), {}, {\n        texture: texture,\n        maxTexture: maxTexture,\n        colorTexture: colorTexture,\n        intensity: intensity,\n        threshold: threshold,\n        aggregationMode: aggregationMode,\n        colorDomain: colorDomain\n      })).draw();\n    }\n  }]);\n  return TriangleLayer;\n}(Layer);\nexport { TriangleLayer as default };\nTriangleLayer.layerName = 'TriangleLayer';","map":{"version":3,"names":["Model","Geometry","Layer","project32","vs","fs","TriangleLayer","_Layer","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","getShaders","modules","initializeState","gl","context","attributeManager","getAttributeManager","add","positions","size","noAlloc","texCoords","setState","model","_getModel","vertexCount","props","_objectSpread","id","geometry","drawMode","draw","_ref","uniforms","state","_this$props","texture","maxTexture","colorTexture","intensity","threshold","aggregationMode","colorDomain","setUniforms","default","layerName"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/aggregation-layers/src/heatmap-layer/triangle-layer.js"],"sourcesContent":["// Copyright (c) 2015 - 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport GL from '@luma.gl/constants';\nimport {Model, Geometry} from '@luma.gl/core';\nimport {Layer, project32} from '@deck.gl/core';\nimport vs from './triangle-layer-vertex.glsl';\nimport fs from './triangle-layer-fragment.glsl';\n\nexport default class TriangleLayer extends Layer {\n  getShaders() {\n    return {vs, fs, modules: [project32]};\n  }\n\n  initializeState() {\n    const {gl} = this.context;\n    const attributeManager = this.getAttributeManager();\n    attributeManager.add({\n      positions: {size: 3, noAlloc: true},\n      texCoords: {size: 2, noAlloc: true}\n    });\n    this.setState({\n      model: this._getModel(gl)\n    });\n  }\n\n  _getModel(gl) {\n    const {vertexCount} = this.props;\n\n    return new Model(gl, {\n      ...this.getShaders(),\n      id: this.props.id,\n      geometry: new Geometry({\n        drawMode: GL.TRIANGLE_FAN,\n        vertexCount\n      })\n    });\n  }\n\n  draw({uniforms}) {\n    const {model} = this.state;\n\n    const {\n      texture,\n      maxTexture,\n      colorTexture,\n      intensity,\n      threshold,\n      aggregationMode,\n      colorDomain\n    } = this.props;\n\n    model\n      .setUniforms({\n        ...uniforms,\n        texture,\n        maxTexture,\n        colorTexture,\n        intensity,\n        threshold,\n        aggregationMode,\n        colorDomain\n      })\n      .draw();\n  }\n}\n\nTriangleLayer.layerName = 'TriangleLayer';\n"],"mappings":";;;;;AAqBA,SAAQA,KAAR,EAAeC,QAAf,QAA8B,eAA9B;AACA,SAAQC,KAAR,EAAeC,SAAf,QAA+B,eAA/B;AACA,OAAOC,EAAP,MAAe,8BAAf;AACA,OAAOC,EAAP,MAAe,gCAAf;AAAA,IAEqBC,aAAN,0BAAAC,MAAA;EAAAC,SAAA,CAAAF,aAAA,EAAAC,MAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,aAAA;EAAA,SAAAA,cAAA;IAAAK,eAAA,OAAAL,aAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,aAAA;IAAAS,GAAA;IAAAC,KAAA,EACb,SAAAC,WAAA,EAAa;MACX,OAAO;QAACb,EAAD,EAACA,EAAD;QAAKC,EAAL,EAAKA,EAAL;QAASa,OAAO,EAAE,CAACf,SAAD;MAAlB,CAAP;IACD;EAAA;IAAAY,GAAA;IAAAC,KAAA,EAED,SAAAG,gBAAA,EAAkB;MAChB,IAAOC,EAAA,GAAM,KAAKC,OAAlB,CAAOD,EAAA;MACP,IAAME,gBAAgB,GAAG,KAAKC,mBAAL,EAAzB;MACAD,gBAAgB,CAACE,GAAjB,CAAqB;QACnBC,SAAS,EAAE;UAACC,IAAI,EAAE,CAAP;UAAUC,OAAO,EAAE;QAAnB,CADQ;QAEnBC,SAAS,EAAE;UAACF,IAAI,EAAE,CAAP;UAAUC,OAAO,EAAE;QAAnB;MAFQ,CAArB;MAIA,KAAKE,QAAL,CAAc;QACZC,KAAK,EAAE,KAAKC,SAAL,CAAeX,EAAf;MADK,CAAd;IAGD;EAAA;IAAAL,GAAA;IAAAC,KAAA,EAED,SAAAe,UAAUX,EAAD,EAAK;MACZ,IAAOY,WAAA,GAAe,KAAKC,KAA3B,CAAOD,WAAA;MAEP,OAAO,IAAIhC,KAAJ,CAAUoB,EAAV,EAAAc,aAAA,CAAAA,aAAA,KACF,KAAKjB,UAAL,EADgB;QAEnBkB,EAAE,EAAE,KAAKF,KAAL,CAAWE,EAFI;QAGnBC,QAAQ,EAAE,IAAInC,QAAJ,CAAa;UACrBoC,QAAQ,GADa;UAErBL,WAAA,EAAAA;QAFqB,CAAb;MAAA,GAHZ;IAQD;EAAA;IAAAjB,GAAA;IAAAC,KAAA,EAED,SAAAsB,KAAAC,IAAA,EAAiB;MAAA,IAAXC,QAAA,GAAAD,IAAA,CAAAC,QAAA;MACJ,IAAOV,KAAA,GAAS,KAAKW,KAArB,CAAOX,KAAA;MAEP,IAAAY,WAAA,GAQI,KAAKT,KART;QACEU,OADI,GAAAD,WAAA,CACJC,OADI;QAEJC,UAFI,GAAAF,WAAA,CAEJE,UAFI;QAGJC,YAHI,GAAAH,WAAA,CAGJG,YAHI;QAIJC,SAJI,GAAAJ,WAAA,CAIJI,SAJI;QAKJC,SALI,GAAAL,WAAA,CAKJK,SALI;QAMJC,eANI,GAAAN,WAAA,CAMJM,eANI;QAOJC,WAAA,GAAAP,WAAA,CAAAO,WAAA;MAGFnB,KAAK,CACFoB,WADH,CAAAhB,aAAA,CAAAA,aAAA,KAEOM,QADQ;QAEXG,OAFW,EAEXA,OAFW;QAGXC,UAHW,EAGXA,UAHW;QAIXC,YAJW,EAIXA,YAJW;QAKXC,SALW,EAKXA,SALW;QAMXC,SANW,EAMXA,SANW;QAOXC,eAPW,EAOXA,eAPW;QAQXC,WAAA,EAAAA;MAAA,GATJ,CAWGX,IAXH;IAYD;EAAA;EAAA,OAAAhC,aAAA;AAAA,EAvDwCJ,KAA5B;AAAA,SAAMI,aAAN,IAAA6C,OAAA;AA0Df7C,aAAa,CAAC8C,SAAd,GAA0B,eAA1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}