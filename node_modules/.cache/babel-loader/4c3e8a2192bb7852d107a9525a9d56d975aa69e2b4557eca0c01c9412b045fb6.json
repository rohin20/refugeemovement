{"ast":null,"code":"import _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { DoublyLinkedList } from '../utils/doubly-linked-list';\nfunction defined(x) {\n  return x !== undefined && x !== null;\n}\nexport var TilesetCache = /*#__PURE__*/function () {\n  function TilesetCache() {\n    _classCallCheck(this, TilesetCache);\n    _defineProperty(this, \"_list\", void 0);\n    _defineProperty(this, \"_sentinel\", void 0);\n    _defineProperty(this, \"_trimTiles\", void 0);\n    this._list = new DoublyLinkedList();\n    this._sentinel = this._list.add('sentinel');\n    this._trimTiles = false;\n  }\n  _createClass(TilesetCache, [{\n    key: \"reset\",\n    value: function reset() {\n      this._list.splice(this._list.tail, this._sentinel);\n    }\n  }, {\n    key: \"touch\",\n    value: function touch(tile) {\n      var node = tile._cacheNode;\n      if (defined(node)) {\n        this._list.splice(this._sentinel, node);\n      }\n    }\n  }, {\n    key: \"add\",\n    value: function add(tileset, tile, addCallback) {\n      if (!defined(tile._cacheNode)) {\n        tile._cacheNode = this._list.add(tile);\n        if (addCallback) {\n          addCallback(tileset, tile);\n        }\n      }\n    }\n  }, {\n    key: \"unloadTile\",\n    value: function unloadTile(tileset, tile, unloadCallback) {\n      var node = tile._cacheNode;\n      if (!defined(node)) {\n        return;\n      }\n      this._list.remove(node);\n      tile._cacheNode = undefined;\n      if (unloadCallback) {\n        unloadCallback(tileset, tile);\n      }\n    }\n  }, {\n    key: \"unloadTiles\",\n    value: function unloadTiles(tileset, unloadCallback) {\n      var trimTiles = this._trimTiles;\n      this._trimTiles = false;\n      var list = this._list;\n      var maximumMemoryUsageInBytes = tileset.maximumMemoryUsage * 1024 * 1024;\n      var sentinel = this._sentinel;\n      var node = list.head;\n      while (node !== sentinel && (tileset.gpuMemoryUsageInBytes > maximumMemoryUsageInBytes || trimTiles)) {\n        var tile = node.item;\n        node = node.next;\n        this.unloadTile(tileset, tile, unloadCallback);\n      }\n    }\n  }, {\n    key: \"trim\",\n    value: function trim() {\n      this._trimTiles = true;\n    }\n  }]);\n  return TilesetCache;\n}();","map":{"version":3,"names":["DoublyLinkedList","defined","x","undefined","TilesetCache","_classCallCheck","_defineProperty","_list","_sentinel","add","_trimTiles","_createClass","key","value","reset","splice","tail","touch","tile","node","_cacheNode","tileset","addCallback","unloadTile","unloadCallback","remove","unloadTiles","trimTiles","list","maximumMemoryUsageInBytes","maximumMemoryUsage","sentinel","head","gpuMemoryUsageInBytes","item","next","trim"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/geo-layers/node_modules/@loaders.gl/tiles/src/tileset/tileset-cache.ts"],"sourcesContent":["// loaders.gl, MIT license\n\n// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {DoublyLinkedList} from '../utils/doubly-linked-list';\n\nfunction defined(x) {\n  return x !== undefined && x !== null;\n}\n\n/**\n * Stores tiles with content loaded.\n *\n * @private\n */\nexport class TilesetCache {\n  private _list: DoublyLinkedList;\n  private _sentinel: any;\n  private _trimTiles: boolean;\n\n  constructor() {\n    // [head, sentinel) -> tiles that weren't selected this frame and may be removed from the cache\n    // (sentinel, tail] -> tiles that were selected this frame\n    this._list = new DoublyLinkedList();\n    this._sentinel = this._list.add('sentinel');\n    this._trimTiles = false;\n  }\n\n  reset() {\n    // Move sentinel node to the tail so, at the start of the frame, all tiles\n    // may be potentially replaced.  Tiles are moved to the right of the sentinel\n    // when they are selected so they will not be replaced.\n    this._list.splice(this._list.tail, this._sentinel);\n  }\n\n  touch(tile) {\n    const node = tile._cacheNode;\n    if (defined(node)) {\n      this._list.splice(this._sentinel, node);\n    }\n  }\n\n  add(tileset, tile, addCallback) {\n    if (!defined(tile._cacheNode)) {\n      tile._cacheNode = this._list.add(tile);\n\n      if (addCallback) {\n        addCallback(tileset, tile);\n      }\n    }\n  }\n\n  unloadTile(tileset, tile, unloadCallback?) {\n    const node = tile._cacheNode;\n    if (!defined(node)) {\n      return;\n    }\n\n    this._list.remove(node);\n    tile._cacheNode = undefined;\n    if (unloadCallback) {\n      unloadCallback(tileset, tile);\n    }\n  }\n\n  unloadTiles(tileset, unloadCallback) {\n    const trimTiles = this._trimTiles;\n    this._trimTiles = false;\n\n    const list = this._list;\n\n    const maximumMemoryUsageInBytes = tileset.maximumMemoryUsage * 1024 * 1024;\n\n    // Traverse the list only to the sentinel since tiles/nodes to the\n    // right of the sentinel were used this frame.\n    // The sub-list to the left of the sentinel is ordered from LRU to MRU.\n    const sentinel = this._sentinel;\n    let node = list.head;\n\n    while (\n      node !== sentinel &&\n      (tileset.gpuMemoryUsageInBytes > maximumMemoryUsageInBytes || trimTiles)\n    ) {\n      // @ts-expect-error\n      const tile = node.item;\n      // @ts-expect-error\n      node = node.next;\n      this.unloadTile(tileset, tile, unloadCallback);\n    }\n  }\n\n  trim() {\n    this._trimTiles = true;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}