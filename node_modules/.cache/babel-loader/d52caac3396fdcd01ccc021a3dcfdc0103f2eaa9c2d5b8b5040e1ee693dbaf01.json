{"ast":null,"code":"// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n'use strict';\n\nvar CONSTANT = {\n  DATA_TYPES: {\n    // date time formats\n    DATE: 'DATE',\n    TIME: 'TIME',\n    DATETIME: 'DATETIME',\n    // number formats\n    NUMBER: 'NUMBER',\n    INT: 'INT',\n    FLOAT: 'FLOAT',\n    CURRENCY: 'CURRENCY',\n    PERCENT: 'PERCENT',\n    // string types:\n    STRING: 'STRING',\n    ZIPCODE: 'ZIPCODE',\n    // boolean type\n    BOOLEAN: 'BOOLEAN',\n    // geometry\n    GEOMETRY: 'GEOMETRY',\n    GEOMETRY_FROM_STRING: 'GEOMETRY_FROM_STRING',\n    PAIR_GEOMETRY_FROM_STRING: 'PAIR_GEOMETRY_FROM_STRING',\n    // object format\n    NONE: 'NONE',\n    ARRAY: 'ARRAY',\n    DATE_OBJECT: 'DATE_OBJECT',\n    OBJECT: 'OBJECT'\n  },\n  CATEGORIES: {\n    GEOMETRY: 'GEOMETRY',\n    TIME: 'TIME',\n    DIMENSION: 'DIMENSION',\n    MEASURE: 'MEASURE'\n  },\n  BOOLEAN_TRUE_VALUES: ['true', 'yes'],\n  BOOLEAN_FALSE_VALUES: ['false', 'no'],\n  // Common in databases like MySQL: https://dev.mysql.com/doc/refman/8.0/en/null-values.html\n  DB_NULL: '\\\\N',\n  NULL: 'NULL'\n};\nCONSTANT.POSSIBLE_TYPES = {};\nCONSTANT.POSSIBLE_TYPES[CONSTANT.CATEGORIES.GEOMETRY] = [CONSTANT.DATA_TYPES.GEOMETRY_FROM_STRING, CONSTANT.DATA_TYPES.PAIR_GEOMETRY_FROM_STRING, CONSTANT.DATA_TYPES.GEOMETRY];\nCONSTANT.POSSIBLE_TYPES[CONSTANT.CATEGORIES.TIME] = [CONSTANT.DATA_TYPES.DATETIME, CONSTANT.DATA_TYPES.DATE, CONSTANT.DATA_TYPES.TIME];\nCONSTANT.POSSIBLE_TYPES[CONSTANT.CATEGORIES.DIMENSION] = [CONSTANT.DATA_TYPES.STRING, CONSTANT.DATA_TYPES.BOOLEAN, CONSTANT.DATA_TYPES.ZIPCODE];\nCONSTANT.POSSIBLE_TYPES[CONSTANT.CATEGORIES.MEASURE] = [CONSTANT.DATA_TYPES.NUMBER, CONSTANT.DATA_TYPES.INT, CONSTANT.DATA_TYPES.FLOAT, CONSTANT.DATA_TYPES.CURRENCY, CONSTANT.DATA_TYPES.PERCENT];\nCONSTANT.TYPES_TO_CATEGORIES = Object.keys(CONSTANT.POSSIBLE_TYPES).reduce(function generateTypeToCategoryMap(res, category) {\n  CONSTANT.POSSIBLE_TYPES[category].forEach(function loopAcrossTypes(type) {\n    res[type] = category;\n  });\n  return res;\n}, {});\n\n// NOTE: the order of validator is important.\n// the ancestor validator used to be the subset of next validator\n// here's trying to determine a more accuraet data type of the column.\n// later on, users still can override the data type.\n// this will affect how we trasnform(aggregation), formating the data.\nCONSTANT.VALIDATORS = [\n// geometry\nCONSTANT.DATA_TYPES.GEOMETRY, CONSTANT.DATA_TYPES.GEOMETRY_FROM_STRING, CONSTANT.DATA_TYPES.PAIR_GEOMETRY_FROM_STRING,\n// true/false, 0/1\nCONSTANT.DATA_TYPES.BOOLEAN, CONSTANT.DATA_TYPES.ARRAY, CONSTANT.DATA_TYPES.DATE_OBJECT, CONSTANT.DATA_TYPES.OBJECT,\n// prefix/postfix rules\nCONSTANT.DATA_TYPES.CURRENCY, CONSTANT.DATA_TYPES.PERCENT,\n// times\nCONSTANT.DATA_TYPES.DATETIME, CONSTANT.DATA_TYPES.DATE, CONSTANT.DATA_TYPES.TIME,\n// numbers\nCONSTANT.DATA_TYPES.INT, CONSTANT.DATA_TYPES.FLOAT, CONSTANT.DATA_TYPES.NUMBER,\n// strings\nCONSTANT.DATA_TYPES.ZIPCODE, CONSTANT.DATA_TYPES.STRING];\nCONSTANT.TIME_VALIDATORS = [CONSTANT.DATA_TYPES.DATETIME, CONSTANT.DATA_TYPES.DATE, CONSTANT.DATA_TYPES.TIME];\nmodule.exports = CONSTANT;","map":{"version":3,"names":["CONSTANT","DATA_TYPES","DATE","TIME","DATETIME","NUMBER","INT","FLOAT","CURRENCY","PERCENT","STRING","ZIPCODE","BOOLEAN","GEOMETRY","GEOMETRY_FROM_STRING","PAIR_GEOMETRY_FROM_STRING","NONE","ARRAY","DATE_OBJECT","OBJECT","CATEGORIES","DIMENSION","MEASURE","BOOLEAN_TRUE_VALUES","BOOLEAN_FALSE_VALUES","DB_NULL","NULL","POSSIBLE_TYPES","TYPES_TO_CATEGORIES","Object","keys","reduce","generateTypeToCategoryMap","res","category","forEach","loopAcrossTypes","type","VALIDATORS","TIME_VALIDATORS","module","exports"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/type-analyzer/src/constant.js"],"sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n'use strict';\n\nvar CONSTANT = {\n  DATA_TYPES: {\n    // date time formats\n    DATE: 'DATE',\n    TIME: 'TIME',\n    DATETIME: 'DATETIME',\n\n    // number formats\n    NUMBER: 'NUMBER',\n    INT: 'INT',\n    FLOAT: 'FLOAT',\n    CURRENCY: 'CURRENCY',\n    PERCENT: 'PERCENT',\n\n    // string types:\n    STRING: 'STRING',\n    ZIPCODE: 'ZIPCODE',\n\n    // boolean type\n    BOOLEAN: 'BOOLEAN',\n\n    // geometry\n    GEOMETRY: 'GEOMETRY',\n    GEOMETRY_FROM_STRING: 'GEOMETRY_FROM_STRING',\n    PAIR_GEOMETRY_FROM_STRING: 'PAIR_GEOMETRY_FROM_STRING',\n\n    // object format\n    NONE: 'NONE',\n    ARRAY: 'ARRAY',\n    DATE_OBJECT: 'DATE_OBJECT',\n    OBJECT: 'OBJECT'\n  },\n\n  CATEGORIES: {\n    GEOMETRY: 'GEOMETRY',\n    TIME: 'TIME',\n    DIMENSION: 'DIMENSION',\n    MEASURE: 'MEASURE'\n  },\n\n  BOOLEAN_TRUE_VALUES: ['true', 'yes'],\n  BOOLEAN_FALSE_VALUES: ['false', 'no'],\n\n  // Common in databases like MySQL: https://dev.mysql.com/doc/refman/8.0/en/null-values.html\n  DB_NULL: '\\\\N',\n  NULL: 'NULL'\n};\n\nCONSTANT.POSSIBLE_TYPES = {};\n\nCONSTANT.POSSIBLE_TYPES[CONSTANT.CATEGORIES.GEOMETRY] = [\n  CONSTANT.DATA_TYPES.GEOMETRY_FROM_STRING,\n  CONSTANT.DATA_TYPES.PAIR_GEOMETRY_FROM_STRING,\n  CONSTANT.DATA_TYPES.GEOMETRY\n];\n\nCONSTANT.POSSIBLE_TYPES[CONSTANT.CATEGORIES.TIME] = [\n  CONSTANT.DATA_TYPES.DATETIME,\n  CONSTANT.DATA_TYPES.DATE,\n  CONSTANT.DATA_TYPES.TIME\n];\n\nCONSTANT.POSSIBLE_TYPES[CONSTANT.CATEGORIES.DIMENSION] = [\n  CONSTANT.DATA_TYPES.STRING,\n  CONSTANT.DATA_TYPES.BOOLEAN,\n  CONSTANT.DATA_TYPES.ZIPCODE\n];\n\nCONSTANT.POSSIBLE_TYPES[CONSTANT.CATEGORIES.MEASURE] = [\n  CONSTANT.DATA_TYPES.NUMBER,\n  CONSTANT.DATA_TYPES.INT,\n  CONSTANT.DATA_TYPES.FLOAT,\n  CONSTANT.DATA_TYPES.CURRENCY,\n  CONSTANT.DATA_TYPES.PERCENT\n];\n\nCONSTANT.TYPES_TO_CATEGORIES = Object.keys(CONSTANT.POSSIBLE_TYPES).reduce(\n  function generateTypeToCategoryMap(res, category) {\n    CONSTANT.POSSIBLE_TYPES[category].forEach(function loopAcrossTypes(type) {\n      res[type] = category;\n    });\n    return res;\n  },\n  {}\n);\n\n// NOTE: the order of validator is important.\n// the ancestor validator used to be the subset of next validator\n// here's trying to determine a more accuraet data type of the column.\n// later on, users still can override the data type.\n// this will affect how we trasnform(aggregation), formating the data.\nCONSTANT.VALIDATORS = [\n  // geometry\n  CONSTANT.DATA_TYPES.GEOMETRY,\n  CONSTANT.DATA_TYPES.GEOMETRY_FROM_STRING,\n  CONSTANT.DATA_TYPES.PAIR_GEOMETRY_FROM_STRING,\n\n  // true/false, 0/1\n  CONSTANT.DATA_TYPES.BOOLEAN,\n  CONSTANT.DATA_TYPES.ARRAY,\n  CONSTANT.DATA_TYPES.DATE_OBJECT,\n  CONSTANT.DATA_TYPES.OBJECT,\n\n  // prefix/postfix rules\n  CONSTANT.DATA_TYPES.CURRENCY,\n  CONSTANT.DATA_TYPES.PERCENT,\n\n  // times\n  CONSTANT.DATA_TYPES.DATETIME,\n  CONSTANT.DATA_TYPES.DATE,\n  CONSTANT.DATA_TYPES.TIME,\n\n  // numbers\n  CONSTANT.DATA_TYPES.INT,\n  CONSTANT.DATA_TYPES.FLOAT,\n  CONSTANT.DATA_TYPES.NUMBER,\n\n  // strings\n  CONSTANT.DATA_TYPES.ZIPCODE,\n  CONSTANT.DATA_TYPES.STRING\n];\n\nCONSTANT.TIME_VALIDATORS = [\n  CONSTANT.DATA_TYPES.DATETIME,\n  CONSTANT.DATA_TYPES.DATE,\n  CONSTANT.DATA_TYPES.TIME\n];\n\nmodule.exports = CONSTANT;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}