{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.scenegraphVisConfigs = exports.scenegraphPosAccessor = exports.scenegraphOptionalColumns = exports.scenegraphRequiredColumns = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _meshLayers = require(\"@deck.gl/mesh-layers\");\nvar _core = require(\"@loaders.gl/core\");\nvar _gltf = require(\"@loaders.gl/gltf\");\nvar _baseLayer = _interopRequireDefault(require(\"../base-layer\"));\nvar _scenegraphLayerIcon = _interopRequireDefault(require(\"./scenegraph-layer-icon\"));\nvar _scenegraphInfoModal = _interopRequireDefault(require(\"./scenegraph-info-modal\"));\nvar _constants = require(\"@kepler.gl/constants\");\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nvar scenegraphRequiredColumns = ['lat', 'lng'];\nexports.scenegraphRequiredColumns = scenegraphRequiredColumns;\nvar scenegraphOptionalColumns = ['altitude'];\nexports.scenegraphOptionalColumns = scenegraphOptionalColumns;\nfunction fetch(url) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    propName = _ref.propName,\n    layer = _ref.layer;\n  if (propName === 'scenegraph') {\n    return (0, _core.load)(url, _gltf.GLTFLoader, layer.getLoadOptions());\n  }\n  return fetch(url).then(function (response) {\n    return response.json();\n  });\n}\nvar scenegraphPosAccessor = function scenegraphPosAccessor(_ref2) {\n  var lat = _ref2.lat,\n    lng = _ref2.lng,\n    altitude = _ref2.altitude;\n  return function (dc) {\n    return function (d) {\n      return [dc.valueAt(d.index, lng.fieldIdx), dc.valueAt(d.index, lat.fieldIdx), altitude && altitude.fieldIdx > -1 ? dc.valueAt(d.index, altitude.fieldIdx) : 0];\n    };\n  };\n};\nexports.scenegraphPosAccessor = scenegraphPosAccessor;\nvar scenegraphVisConfigs = {\n  opacity: 'opacity',\n  colorRange: 'colorRange',\n  //\n  sizeScale: 'sizeScale',\n  angleX: _objectSpread(_objectSpread({}, _constants.LAYER_VIS_CONFIGS.angle), {}, {\n    property: 'angleX',\n    label: 'angle X'\n  }),\n  angleY: _objectSpread(_objectSpread({}, _constants.LAYER_VIS_CONFIGS.angle), {}, {\n    property: 'angleY',\n    label: 'angle Y'\n  }),\n  angleZ: _objectSpread(_objectSpread({}, _constants.LAYER_VIS_CONFIGS.angle), {}, {\n    property: 'angleZ',\n    defaultValue: 90,\n    label: 'angle Z'\n  })\n};\nexports.scenegraphVisConfigs = scenegraphVisConfigs;\nvar DEFAULT_MODEL = 'https://raw.githubusercontent.com/KhronosGroup/glTF-Sample-Models/master/2.0/Duck/glTF-Binary/Duck.glb';\nvar DEFAULT_TRANSITION = [0, 0, 0];\nvar DEFAULT_SCALE = [1, 1, 1];\nvar DEFAULT_COLOR = [255, 255, 255, 255];\nvar ScenegraphLayer = /*#__PURE__*/function (_Layer) {\n  (0, _inherits2[\"default\"])(ScenegraphLayer, _Layer);\n  var _super = _createSuper(ScenegraphLayer);\n  function ScenegraphLayer(props) {\n    var _this;\n    (0, _classCallCheck2[\"default\"])(this, ScenegraphLayer);\n    _this = _super.call(this, props);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_layerInfoModal\", void 0);\n    _this.registerVisConfig(scenegraphVisConfigs);\n    _this.getPositionAccessor = function (dataContainer) {\n      return scenegraphPosAccessor(_this.config.columns)(dataContainer);\n    }; // prepare layer info modal\n\n    _this._layerInfoModal = (0, _scenegraphInfoModal[\"default\"])();\n    return _this;\n  }\n  (0, _createClass2[\"default\"])(ScenegraphLayer, [{\n    key: \"type\",\n    get: function get() {\n      return '3D';\n    }\n  }, {\n    key: \"requiredLayerColumns\",\n    get: function get() {\n      return scenegraphRequiredColumns;\n    }\n  }, {\n    key: \"optionalColumns\",\n    get: function get() {\n      return scenegraphOptionalColumns;\n    }\n  }, {\n    key: \"columnPairs\",\n    get: function get() {\n      return this.defaultPointColumnPairs;\n    }\n  }, {\n    key: \"layerIcon\",\n    get: function get() {\n      return _scenegraphLayerIcon[\"default\"];\n    }\n  }, {\n    key: \"layerInfoModal\",\n    get: function get() {\n      return {\n        id: 'scenegraphInfo',\n        template: this._layerInfoModal,\n        modalProps: {\n          title: 'How to use Scenegraph'\n        }\n      };\n    }\n  }, {\n    key: \"calculateDataAttribute\",\n    value: function calculateDataAttribute(_ref3, getPosition) {\n      var dataContainer = _ref3.dataContainer,\n        filteredIndex = _ref3.filteredIndex;\n      var data = [];\n      for (var i = 0; i < filteredIndex.length; i++) {\n        var index = filteredIndex[i];\n        var pos = getPosition({\n          index: index\n        }); // if doesn't have point lat or lng, do not add the point\n        // deck.gl can't handle position = null\n\n        if (pos.every(Number.isFinite)) {\n          data.push({\n            position: pos,\n            index: index\n          });\n        }\n      }\n      return data;\n    }\n  }, {\n    key: \"formatLayerData\",\n    value: function formatLayerData(datasets, oldLayerData) {\n      if (this.config.dataId === null) {\n        return {};\n      }\n      var _datasets$this$config = datasets[this.config.dataId],\n        gpuFilter = _datasets$this$config.gpuFilter,\n        dataContainer = _datasets$this$config.dataContainer;\n      var _this$updateData = this.updateData(datasets, oldLayerData),\n        data = _this$updateData.data;\n      var getPosition = this.getPositionAccessor(dataContainer);\n      return {\n        data: data,\n        getPosition: getPosition,\n        getFilterValue: gpuFilter.filterValueAccessor(dataContainer)()\n      };\n    }\n  }, {\n    key: \"updateLayerMeta\",\n    value: function updateLayerMeta(dataContainer, getPosition) {\n      var bounds = this.getPointsBounds(dataContainer, getPosition);\n      this.updateMeta({\n        bounds: bounds\n      });\n    }\n  }, {\n    key: \"renderLayer\",\n    value: function renderLayer(opts) {\n      var data = opts.data,\n        gpuFilter = opts.gpuFilter;\n      var _this$config$visConfi = this.config.visConfig,\n        _this$config$visConfi2 = _this$config$visConfi.sizeScale,\n        sizeScale = _this$config$visConfi2 === void 0 ? 1 : _this$config$visConfi2,\n        _this$config$visConfi3 = _this$config$visConfi.angleX,\n        angleX = _this$config$visConfi3 === void 0 ? 0 : _this$config$visConfi3,\n        _this$config$visConfi4 = _this$config$visConfi.angleY,\n        angleY = _this$config$visConfi4 === void 0 ? 0 : _this$config$visConfi4,\n        _this$config$visConfi5 = _this$config$visConfi.angleZ,\n        angleZ = _this$config$visConfi5 === void 0 ? 90 : _this$config$visConfi5;\n      return [new _meshLayers.ScenegraphLayer(_objectSpread(_objectSpread(_objectSpread({}, this.getDefaultDeckLayerProps(opts)), data), {}, {\n        fetch: fetch,\n        scenegraph: this.config.visConfig.scenegraph || DEFAULT_MODEL,\n        sizeScale: sizeScale,\n        getTranslation: DEFAULT_TRANSITION,\n        getScale: DEFAULT_SCALE,\n        getOrientation: [angleX, angleY, angleZ],\n        getColor: DEFAULT_COLOR,\n        // parameters\n        parameters: {\n          depthTest: true,\n          blend: false\n        },\n        // update triggers\n        updateTriggers: {\n          getOrientation: {\n            angleX: angleX,\n            angleY: angleY,\n            angleZ: angleZ\n          },\n          getPosition: this.config.columns,\n          getFilterValue: gpuFilter.filterValueUpdateTriggers\n        }\n      }))];\n    }\n  }]);\n  return ScenegraphLayer;\n}(_baseLayer[\"default\"]);\nexports[\"default\"] = ScenegraphLayer;","map":{"version":3,"names":["value","exports","scenegraphVisConfigs","scenegraphPosAccessor","scenegraphOptionalColumns","scenegraphRequiredColumns","_classCallCheck2","_interopRequireDefault","require","_createClass2","_assertThisInitialized2","_inherits2","_core","_gltf","_scenegraphLayerIcon","_scenegraphInfoModal","_constants","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","fetch","sham","Proxy","Boolean","prototype","valueOf","call","e","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","url","_ref","length","undefined","propName","layer","load","GLTFLoader","getLoadOptions","then","response","json","_ref2","lat","lng","altitude","dc","d","valueAt","index","fieldIdx","opacity","colorRange","_objectSpread","property","label","angleZ","LAYER_VIS_CONFIGS","angle","defaultValue","DEFAULT_MODEL","DEFAULT_TRANSITION","ScenegraphLayer","_Layer","props","_this","registerVisConfig","config","columns","dataContainer","get","key","defaultPointColumnPairs","template","_layerInfoModal","modalProps","title","calculateDataAttribute","_ref3","getPosition","i","filteredIndex","pos","data","position","dataId","_datasets$this$config","datasets","gpuFilter","updateData","oldLayerData","_this$updateData","getPositionAccessor","getFilterValue","filterValueAccessor","updateLayerMeta","bounds","getPointsBounds","updateMeta","renderLayer","opts","_this$config$visConfi","visConfig","_this$config$visConfi2","sizeScale","_this$config$visConfi3","angleX","_this$config$visConfi4","angleY","_this$config$visConfi5","_meshLayers","getDefaultDeckLayerProps","scenegraph","getTranslation","getColor","DEFAULT_COLOR"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/layers/src/scenegraph-layer/scenegraph-layer.ts"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {ScenegraphLayer as DeckScenegraphLayer} from '@deck.gl/mesh-layers';\nimport {load} from '@loaders.gl/core';\nimport {GLTFLoader} from '@loaders.gl/gltf';\n\nimport Layer, {LayerBaseConfig, LayerColumn} from '../base-layer';\nimport ScenegraphLayerIcon from './scenegraph-layer-icon';\nimport ScenegraphInfoModalFactory from './scenegraph-info-modal';\nimport {LAYER_VIS_CONFIGS, ColorRange} from '@kepler.gl/constants';\nimport {Merge, VisConfigColorRange, VisConfigNumber} from '@kepler.gl/types';\nimport {default as KeplerTable} from '@kepler.gl/table';\nimport {DataContainerInterface} from '@kepler.gl/utils';\n\nexport type ScenegraphLayerVisConfigSettings = {\n  opacity: VisConfigNumber;\n  colorRange: VisConfigColorRange;\n  sizeScale: VisConfigNumber;\n  angleX: VisConfigNumber;\n  angleY: VisConfigNumber;\n  angleZ: VisConfigNumber;\n};\n\nexport type ScenegraphLayerColumnsConfig = {\n  lat: LayerColumn;\n  lng: LayerColumn;\n  altitude?: LayerColumn;\n};\n\nexport type ScenegraphLayerVisConfig = {\n  opacity: number;\n  colorRange: ColorRange;\n  sizeScale: number;\n  angleX: number;\n  angleY: number;\n  angleZ: number;\n  scenegraph: string;\n};\n\nexport type ScenegraphLayerConfig = Merge<\n  LayerBaseConfig,\n  {columns: ScenegraphLayerColumnsConfig; visConfig: ScenegraphLayerVisConfig}\n>;\n\nexport type ScenegraphLayerData = {position: number[]; index: number};\n\nexport const scenegraphRequiredColumns: ['lat', 'lng'] = ['lat', 'lng'];\nexport const scenegraphOptionalColumns: ['altitude'] = ['altitude'];\n\nfunction fetch(url, {propName, layer}: {propName?: string; layer?: any} = {}) {\n  if (propName === 'scenegraph') {\n    return load(url, GLTFLoader, layer.getLoadOptions());\n  }\n\n  return fetch(url).then(response => response.json());\n}\n\nexport const scenegraphPosAccessor = ({lat, lng, altitude}: ScenegraphLayerColumnsConfig) => (\n  dc: DataContainerInterface\n) => d => [\n  dc.valueAt(d.index, lng.fieldIdx),\n  dc.valueAt(d.index, lat.fieldIdx),\n  altitude && altitude.fieldIdx > -1 ? dc.valueAt(d.index, altitude.fieldIdx) : 0\n];\n\nexport const scenegraphVisConfigs: {\n  opacity: 'opacity';\n  colorRange: 'colorRange';\n  //\n  sizeScale: 'sizeScale';\n  angleX: VisConfigNumber;\n  angleY: VisConfigNumber;\n  angleZ: VisConfigNumber;\n} = {\n  opacity: 'opacity',\n  colorRange: 'colorRange',\n  //\n  sizeScale: 'sizeScale',\n  angleX: {\n    ...LAYER_VIS_CONFIGS.angle,\n    property: 'angleX',\n    label: 'angle X'\n  },\n  angleY: {\n    ...LAYER_VIS_CONFIGS.angle,\n    property: 'angleY',\n    label: 'angle Y'\n  },\n  angleZ: {\n    ...LAYER_VIS_CONFIGS.angle,\n    property: 'angleZ',\n    defaultValue: 90,\n    label: 'angle Z'\n  }\n};\n\nconst DEFAULT_MODEL =\n  'https://raw.githubusercontent.com/KhronosGroup/glTF-Sample-Models/master/2.0/Duck/glTF-Binary/Duck.glb';\nconst DEFAULT_TRANSITION: [0, 0, 0] = [0, 0, 0];\nconst DEFAULT_SCALE: [1, 1, 1] = [1, 1, 1];\nconst DEFAULT_COLOR: [255, 255, 255, 255] = [255, 255, 255, 255];\n\nexport default class ScenegraphLayer extends Layer {\n  declare visConfigSettings: ScenegraphLayerVisConfigSettings;\n  declare config: ScenegraphLayerConfig;\n\n  _layerInfoModal: () => JSX.Element;\n\n  constructor(props) {\n    super(props);\n\n    this.registerVisConfig(scenegraphVisConfigs);\n    this.getPositionAccessor = (dataContainer: DataContainerInterface) =>\n      scenegraphPosAccessor(this.config.columns)(dataContainer);\n\n    // prepare layer info modal\n    this._layerInfoModal = ScenegraphInfoModalFactory();\n  }\n\n  get type(): '3D' {\n    return '3D';\n  }\n\n  get requiredLayerColumns() {\n    return scenegraphRequiredColumns;\n  }\n\n  get optionalColumns() {\n    return scenegraphOptionalColumns;\n  }\n\n  get columnPairs() {\n    return this.defaultPointColumnPairs;\n  }\n\n  get layerIcon() {\n    return ScenegraphLayerIcon;\n  }\n\n  get layerInfoModal() {\n    return {\n      id: 'scenegraphInfo',\n      template: this._layerInfoModal,\n      modalProps: {\n        title: 'How to use Scenegraph'\n      }\n    };\n  }\n\n  calculateDataAttribute({dataContainer, filteredIndex}: KeplerTable, getPosition) {\n    const data: ScenegraphLayerData[] = [];\n\n    for (let i = 0; i < filteredIndex.length; i++) {\n      const index = filteredIndex[i];\n      const pos: number[] = getPosition({index});\n\n      // if doesn't have point lat or lng, do not add the point\n      // deck.gl can't handle position = null\n      if (pos.every(Number.isFinite)) {\n        data.push({\n          position: pos,\n          index\n        });\n      }\n    }\n    return data;\n  }\n\n  formatLayerData(datasets, oldLayerData) {\n    if (this.config.dataId === null) {\n      return {};\n    }\n    const {gpuFilter, dataContainer} = datasets[this.config.dataId];\n    const {data} = this.updateData(datasets, oldLayerData);\n    const getPosition = this.getPositionAccessor(dataContainer);\n    return {\n      data,\n      getPosition,\n      getFilterValue: gpuFilter.filterValueAccessor(dataContainer)()\n    };\n  }\n\n  updateLayerMeta(dataContainer, getPosition) {\n    const bounds = this.getPointsBounds(dataContainer, getPosition);\n    this.updateMeta({bounds});\n  }\n\n  renderLayer(opts) {\n    const {data, gpuFilter} = opts;\n\n    const {\n      visConfig: {sizeScale = 1, angleX = 0, angleY = 0, angleZ = 90}\n    } = this.config;\n\n    return [\n      new DeckScenegraphLayer({\n        ...this.getDefaultDeckLayerProps(opts),\n        ...data,\n        fetch,\n        scenegraph: this.config.visConfig.scenegraph || DEFAULT_MODEL,\n        sizeScale,\n        getTranslation: DEFAULT_TRANSITION,\n        getScale: DEFAULT_SCALE,\n        getOrientation: [angleX, angleY, angleZ],\n        getColor: DEFAULT_COLOR,\n        // parameters\n        parameters: {depthTest: true, blend: false},\n        // update triggers\n        updateTriggers: {\n          getOrientation: {angleX, angleY, angleZ},\n          getPosition: this.config.columns,\n          getFilterValue: gpuFilter.filterValueUpdateTriggers\n        }\n      })\n    ];\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}