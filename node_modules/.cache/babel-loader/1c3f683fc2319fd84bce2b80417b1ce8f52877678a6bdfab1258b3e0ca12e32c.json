{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nimport assert from '../env-utils/assert';\nimport * as node from '../node/buffer-utils.node';\nexport function toArrayBuffer(data) {\n  if (node.toArrayBuffer) {\n    data = node.toArrayBuffer(data);\n  }\n  if (data instanceof ArrayBuffer) {\n    return data;\n  }\n  if (ArrayBuffer.isView(data)) {\n    return data.buffer;\n  }\n  if (typeof data === 'string') {\n    var text = data;\n    var uint8Array = new TextEncoder().encode(text);\n    return uint8Array.buffer;\n  }\n  if (data && _typeof(data) === 'object' && data._toArrayBuffer) {\n    return data._toArrayBuffer();\n  }\n  return assert(false);\n}\nexport function compareArrayBuffers(arrayBuffer1, arrayBuffer2, byteLength) {\n  byteLength = byteLength || arrayBuffer1.byteLength;\n  if (arrayBuffer1.byteLength < byteLength || arrayBuffer2.byteLength < byteLength) {\n    return false;\n  }\n  var array1 = new Uint8Array(arrayBuffer1);\n  var array2 = new Uint8Array(arrayBuffer2);\n  for (var i = 0; i < array1.length; ++i) {\n    if (array1[i] !== array2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\nexport function concatenateArrayBuffers() {\n  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n  var sourceArrays = sources.map(function (source2) {\n    return source2 instanceof ArrayBuffer ? new Uint8Array(source2) : source2;\n  });\n  var byteLength = sourceArrays.reduce(function (length, typedArray) {\n    return length + typedArray.byteLength;\n  }, 0);\n  var result = new Uint8Array(byteLength);\n  var offset = 0;\n  var _iterator = _createForOfIteratorHelper(sourceArrays),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var sourceArray = _step.value;\n      result.set(sourceArray, offset);\n      offset += sourceArray.byteLength;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return result.buffer;\n}\nexport function sliceArrayBuffer(arrayBuffer, byteOffset, byteLength) {\n  var subArray = byteLength !== undefined ? new Uint8Array(arrayBuffer).subarray(byteOffset, byteOffset + byteLength) : new Uint8Array(arrayBuffer).subarray(byteOffset);\n  var arrayCopy = new Uint8Array(subArray);\n  return arrayCopy.buffer;\n}","map":{"version":3,"names":["assert","node","toArrayBuffer","data","ArrayBuffer","isView","buffer","text","uint8Array","TextEncoder","encode","_typeof","_toArrayBuffer","compareArrayBuffers","arrayBuffer1","arrayBuffer2","byteLength","array1","Uint8Array","array2","i","length","concatenateArrayBuffers","_len","arguments","sources","Array","_key","sourceArrays","map","source2","reduce","typedArray","result","offset","_iterator","_createForOfIteratorHelper","_step","s","n","done","sourceArray","value","set","err","e","f","sliceArrayBuffer","arrayBuffer","byteOffset","subArray","undefined","subarray","arrayCopy"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/kepler.gl/node_modules/@loaders.gl/loader-utils/src/lib/binary-utils/array-buffer-utils.js"],"sourcesContent":["/** @typedef {import('./array-buffer-utils')} types */\n/* global TextEncoder */\nimport assert from '../env-utils/assert';\nimport * as node from '../node/buffer-utils.node';\n\n/** @type {types['toArrayBuffer']} */\nexport function toArrayBuffer(data) {\n  // Note: Should be called first, Buffers can trigger other detections below\n  if (node.toArrayBuffer) {\n    // TODO - per docs we should just be able to call buffer.buffer, but there are issues\n    data = node.toArrayBuffer(data);\n  }\n\n  if (data instanceof ArrayBuffer) {\n    return data;\n  }\n\n  // Careful - Node Buffers will look like ArrayBuffers (keep after isBuffer)\n  if (ArrayBuffer.isView(data)) {\n    return data.buffer;\n  }\n\n  if (typeof data === 'string') {\n    const text = data;\n    const uint8Array = new TextEncoder().encode(text);\n    return uint8Array.buffer;\n  }\n\n  // HACK to support Blob polyfill\n  if (data && typeof data === 'object' && data._toArrayBuffer) {\n    return data._toArrayBuffer();\n  }\n\n  return assert(false);\n}\n\n/** @type {types['compareArrayBuffers']} */\nexport function compareArrayBuffers(arrayBuffer1, arrayBuffer2, byteLength) {\n  byteLength = byteLength || arrayBuffer1.byteLength;\n  if (arrayBuffer1.byteLength < byteLength || arrayBuffer2.byteLength < byteLength) {\n    return false;\n  }\n  const array1 = new Uint8Array(arrayBuffer1);\n  const array2 = new Uint8Array(arrayBuffer2);\n  for (let i = 0; i < array1.length; ++i) {\n    if (array1[i] !== array2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Concatenate ArrayBuffers\n/** @type {types['concatenateArrayBuffers']} */\nexport function concatenateArrayBuffers(...sources) {\n  // Make sure all inputs are wrapped in typed arrays\n  const sourceArrays = sources.map(\n    source2 => (source2 instanceof ArrayBuffer ? new Uint8Array(source2) : source2)\n  );\n\n  // Get length of all inputs\n  const byteLength = sourceArrays.reduce((length, typedArray) => length + typedArray.byteLength, 0);\n\n  // Allocate array with space for all inputs\n  const result = new Uint8Array(byteLength);\n\n  // Copy the subarrays\n  let offset = 0;\n  for (const sourceArray of sourceArrays) {\n    result.set(sourceArray, offset);\n    offset += sourceArray.byteLength;\n  }\n\n  // We work with ArrayBuffers, discard the typed array wrapper\n  return result.buffer;\n}\n\n// Copy a view of an ArrayBuffer into new ArrayBuffer with byteOffset = 0\nexport function sliceArrayBuffer(arrayBuffer, byteOffset, byteLength) {\n  const subArray =\n    byteLength !== undefined\n      ? new Uint8Array(arrayBuffer).subarray(byteOffset, byteOffset + byteLength)\n      : new Uint8Array(arrayBuffer).subarray(byteOffset);\n  const arrayCopy = new Uint8Array(subArray);\n  return arrayCopy.buffer;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}