{"ast":null,"code":"/*\n * Copyright 2013-2016 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n\n'use strict';\n\nvar pathPrefix, template, find, lazyPromise, responsePromise;\npathPrefix = require('../../../interceptor/pathPrefix');\ntemplate = require('../../../interceptor/template');\nfind = require('../../../util/find');\nlazyPromise = require('../../../util/lazyPromise');\nresponsePromise = require('../../../util/responsePromise');\nfunction defineProperty(obj, name, value) {\n  Object.defineProperty(obj, name, {\n    value: value,\n    configurable: true,\n    enumerable: false,\n    writeable: true\n  });\n}\n\n/**\n * Hypertext Application Language serializer\n *\n * Implemented to https://tools.ietf.org/html/draft-kelly-json-hal-06\n *\n * As the spec is still a draft, this implementation will be updated as the\n * spec evolves\n *\n * Objects are read as HAL indexing links and embedded objects on to the\n * resource. Objects are written as plain JSON.\n *\n * Embedded relationships are indexed onto the resource by the relationship\n * as a promise for the related resource.\n *\n * Links are indexed onto the resource as a lazy promise that will GET the\n * resource when a handler is first registered on the promise.\n *\n * A `requestFor` method is added to the entity to make a request for the\n * relationship.\n *\n * A `clientFor` method is added to the entity to get a full Client for a\n * relationship.\n *\n * The `_links` and `_embedded` properties on the resource are made\n * non-enumerable.\n */\nmodule.exports = {\n  read: function read(str, opts) {\n    var client, console;\n    opts = opts || {};\n    client = opts.client;\n    console = opts.console || console;\n    function deprecationWarning(relationship, deprecation) {\n      if (deprecation && console && console.warn || console.log) {\n        (console.warn || console.log).call(console, 'Relationship \\'' + relationship + '\\' is deprecated, see ' + deprecation);\n      }\n    }\n    return opts.registry.lookup(opts.mime.suffix).then(function (converter) {\n      return converter.read(str, opts);\n    }).then(function (root) {\n      find.findProperties(root, '_embedded', function (embedded, resource, name) {\n        Object.keys(embedded).forEach(function (relationship) {\n          if (relationship in resource) {\n            return;\n          }\n          var related = responsePromise({\n            entity: embedded[relationship]\n          });\n          defineProperty(resource, relationship, related);\n        });\n        defineProperty(resource, name, embedded);\n      });\n      find.findProperties(root, '_links', function (links, resource, name) {\n        Object.keys(links).forEach(function (relationship) {\n          var link = links[relationship];\n          if (relationship in resource) {\n            return;\n          }\n          defineProperty(resource, relationship, responsePromise.make(lazyPromise(function () {\n            if (link.deprecation) {\n              deprecationWarning(relationship, link.deprecation);\n            }\n            if (link.templated === true) {\n              return template(client)({\n                path: link.href\n              });\n            }\n            return client({\n              path: link.href\n            });\n          })));\n        });\n        defineProperty(resource, name, links);\n        defineProperty(resource, 'clientFor', function (relationship, clientOverride) {\n          var link = links[relationship];\n          if (!link) {\n            throw new Error('Unknown relationship: ' + relationship);\n          }\n          if (link.deprecation) {\n            deprecationWarning(relationship, link.deprecation);\n          }\n          if (link.templated === true) {\n            return template(clientOverride || client, {\n              template: link.href\n            });\n          }\n          return pathPrefix(clientOverride || client, {\n            prefix: link.href\n          });\n        });\n        defineProperty(resource, 'requestFor', function (relationship, request, clientOverride) {\n          var client = this.clientFor(relationship, clientOverride);\n          return client(request);\n        });\n      });\n      return root;\n    });\n  },\n  write: function write(obj, opts) {\n    return opts.registry.lookup(opts.mime.suffix).then(function (converter) {\n      return converter.write(obj, opts);\n    });\n  }\n};","map":{"version":3,"names":["pathPrefix","template","find","lazyPromise","responsePromise","require","defineProperty","obj","name","value","Object","configurable","enumerable","writeable","module","exports","read","str","opts","client","console","deprecationWarning","relationship","deprecation","warn","log","call","registry","lookup","mime","suffix","then","converter","root","findProperties","embedded","resource","keys","forEach","related","entity","links","link","make","templated","path","href","clientOverride","Error","prefix","request","clientFor","write"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/rest/mime/type/application/hal.js"],"sourcesContent":["/*\n * Copyright 2013-2016 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n\n'use strict';\n\nvar pathPrefix, template, find, lazyPromise, responsePromise;\n\npathPrefix = require('../../../interceptor/pathPrefix');\ntemplate = require('../../../interceptor/template');\nfind = require('../../../util/find');\nlazyPromise = require('../../../util/lazyPromise');\nresponsePromise = require('../../../util/responsePromise');\n\nfunction defineProperty(obj, name, value) {\n\tObject.defineProperty(obj, name, {\n\t\tvalue: value,\n\t\tconfigurable: true,\n\t\tenumerable: false,\n\t\twriteable: true\n\t});\n}\n\n/**\n * Hypertext Application Language serializer\n *\n * Implemented to https://tools.ietf.org/html/draft-kelly-json-hal-06\n *\n * As the spec is still a draft, this implementation will be updated as the\n * spec evolves\n *\n * Objects are read as HAL indexing links and embedded objects on to the\n * resource. Objects are written as plain JSON.\n *\n * Embedded relationships are indexed onto the resource by the relationship\n * as a promise for the related resource.\n *\n * Links are indexed onto the resource as a lazy promise that will GET the\n * resource when a handler is first registered on the promise.\n *\n * A `requestFor` method is added to the entity to make a request for the\n * relationship.\n *\n * A `clientFor` method is added to the entity to get a full Client for a\n * relationship.\n *\n * The `_links` and `_embedded` properties on the resource are made\n * non-enumerable.\n */\nmodule.exports = {\n\n\tread: function (str, opts) {\n\t\tvar client, console;\n\n\t\topts = opts || {};\n\t\tclient = opts.client;\n\t\tconsole = opts.console || console;\n\n\t\tfunction deprecationWarning(relationship, deprecation) {\n\t\t\tif (deprecation && console && console.warn || console.log) {\n\t\t\t\t(console.warn || console.log).call(console, 'Relationship \\'' + relationship + '\\' is deprecated, see ' + deprecation);\n\t\t\t}\n\t\t}\n\n\t\treturn opts.registry.lookup(opts.mime.suffix).then(function (converter) {\n\t\t\treturn converter.read(str, opts);\n\t\t}).then(function (root) {\n\t\t\tfind.findProperties(root, '_embedded', function (embedded, resource, name) {\n\t\t\t\tObject.keys(embedded).forEach(function (relationship) {\n\t\t\t\t\tif (relationship in resource) { return; }\n\t\t\t\t\tvar related = responsePromise({\n\t\t\t\t\t\tentity: embedded[relationship]\n\t\t\t\t\t});\n\t\t\t\t\tdefineProperty(resource, relationship, related);\n\t\t\t\t});\n\t\t\t\tdefineProperty(resource, name, embedded);\n\t\t\t});\n\t\t\tfind.findProperties(root, '_links', function (links, resource, name) {\n\t\t\t\tObject.keys(links).forEach(function (relationship) {\n\t\t\t\t\tvar link = links[relationship];\n\t\t\t\t\tif (relationship in resource) { return; }\n\t\t\t\t\tdefineProperty(resource, relationship, responsePromise.make(lazyPromise(function () {\n\t\t\t\t\t\tif (link.deprecation) { deprecationWarning(relationship, link.deprecation); }\n\t\t\t\t\t\tif (link.templated === true) {\n\t\t\t\t\t\t\treturn template(client)({ path: link.href });\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn client({ path: link.href });\n\t\t\t\t\t})));\n\t\t\t\t});\n\t\t\t\tdefineProperty(resource, name, links);\n\t\t\t\tdefineProperty(resource, 'clientFor', function (relationship, clientOverride) {\n\t\t\t\t\tvar link = links[relationship];\n\t\t\t\t\tif (!link) {\n\t\t\t\t\t\tthrow new Error('Unknown relationship: ' + relationship);\n\t\t\t\t\t}\n\t\t\t\t\tif (link.deprecation) { deprecationWarning(relationship, link.deprecation); }\n\t\t\t\t\tif (link.templated === true) {\n\t\t\t\t\t\treturn template(\n\t\t\t\t\t\t\tclientOverride || client,\n\t\t\t\t\t\t\t{ template: link.href }\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn pathPrefix(\n\t\t\t\t\t\tclientOverride || client,\n\t\t\t\t\t\t{ prefix: link.href }\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t\tdefineProperty(resource, 'requestFor', function (relationship, request, clientOverride) {\n\t\t\t\t\tvar client = this.clientFor(relationship, clientOverride);\n\t\t\t\t\treturn client(request);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\treturn root;\n\t\t});\n\n\t},\n\n\twrite: function (obj, opts) {\n\t\treturn opts.registry.lookup(opts.mime.suffix).then(function (converter) {\n\t\t\treturn converter.write(obj, opts);\n\t\t});\n\t}\n\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}