{"ast":null,"code":"import _objectSpread from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createForOfIteratorHelper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { fetchFile } from '@loaders.gl/core';\nimport { assert } from '@loaders.gl/loader-utils';\nvar CESIUM_ION_URL = 'https://api.cesium.com/v1/assets';\nexport function getIonTilesetMetadata(_x, _x2) {\n  return _getIonTilesetMetadata.apply(this, arguments);\n}\nfunction _getIonTilesetMetadata() {\n  _getIonTilesetMetadata = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(accessToken, assetId) {\n    var assets, _iterator, _step, item, ionAssetMetadata, type, url;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (assetId) {\n            _context.next = 6;\n            break;\n          }\n          _context.next = 3;\n          return getIonAssets(accessToken);\n        case 3:\n          assets = _context.sent;\n          _iterator = _createForOfIteratorHelper(assets.items);\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              item = _step.value;\n              if (item.type === '3DTILES') {\n                assetId = item.id;\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        case 6:\n          _context.next = 8;\n          return getIonAssetMetadata(accessToken, assetId);\n        case 8:\n          ionAssetMetadata = _context.sent;\n          type = ionAssetMetadata.type, url = ionAssetMetadata.url;\n          assert(type === '3DTILES' && url);\n          ionAssetMetadata.headers = {\n            Authorization: \"Bearer \".concat(ionAssetMetadata.accessToken)\n          };\n          return _context.abrupt(\"return\", ionAssetMetadata);\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _getIonTilesetMetadata.apply(this, arguments);\n}\nexport function getIonAssets(_x3) {\n  return _getIonAssets.apply(this, arguments);\n}\nfunction _getIonAssets() {\n  _getIonAssets = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(accessToken) {\n    var url, headers, response;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          assert(accessToken);\n          url = CESIUM_ION_URL;\n          headers = {\n            Authorization: \"Bearer \".concat(accessToken)\n          };\n          _context2.next = 5;\n          return fetchFile(url, {\n            fetch: {\n              headers: headers\n            }\n          });\n        case 5:\n          response = _context2.sent;\n          if (response.ok) {\n            _context2.next = 8;\n            break;\n          }\n          throw new Error(response.statusText);\n        case 8:\n          _context2.next = 10;\n          return response.json();\n        case 10:\n          return _context2.abrupt(\"return\", _context2.sent);\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _getIonAssets.apply(this, arguments);\n}\nexport function getIonAssetMetadata(_x4, _x5) {\n  return _getIonAssetMetadata.apply(this, arguments);\n}\nfunction _getIonAssetMetadata() {\n  _getIonAssetMetadata = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(accessToken, assetId) {\n    var headers, url, response, metadata, tilesetInfo;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          assert(accessToken, assetId);\n          headers = {\n            Authorization: \"Bearer \".concat(accessToken)\n          };\n          url = \"\".concat(CESIUM_ION_URL, \"/\").concat(assetId);\n          _context3.next = 5;\n          return fetchFile(\"\".concat(url), {\n            fetch: {\n              headers: headers\n            }\n          });\n        case 5:\n          response = _context3.sent;\n          if (response.ok) {\n            _context3.next = 8;\n            break;\n          }\n          throw new Error(response.statusText);\n        case 8:\n          _context3.next = 10;\n          return response.json();\n        case 10:\n          metadata = _context3.sent;\n          _context3.next = 13;\n          return fetchFile(\"\".concat(url, \"/endpoint\"), {\n            fetch: {\n              headers: headers\n            }\n          });\n        case 13:\n          response = _context3.sent;\n          if (response.ok) {\n            _context3.next = 16;\n            break;\n          }\n          throw new Error(response.statusText);\n        case 16:\n          _context3.next = 18;\n          return response.json();\n        case 18:\n          tilesetInfo = _context3.sent;\n          metadata = _objectSpread(_objectSpread({}, metadata), tilesetInfo);\n          return _context3.abrupt(\"return\", metadata);\n        case 21:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return _getIonAssetMetadata.apply(this, arguments);\n}","map":{"version":3,"names":["fetchFile","assert","CESIUM_ION_URL","getIonTilesetMetadata","_x","_x2","_getIonTilesetMetadata","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","accessToken","assetId","assets","_iterator","_step","item","ionAssetMetadata","type","url","wrap","_callee$","_context","prev","next","getIonAssets","sent","_createForOfIteratorHelper","items","s","n","done","value","id","err","e","f","getIonAssetMetadata","headers","Authorization","concat","abrupt","stop","_x3","_getIonAssets","_callee2","response","_callee2$","_context2","fetch","ok","Error","statusText","json","_x4","_x5","_getIonAssetMetadata","_callee3","metadata","tilesetInfo","_callee3$","_context3","_objectSpread"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/geo-layers/node_modules/@loaders.gl/3d-tiles/src/lib/ion/ion.ts"],"sourcesContent":["// Minimal support to load tilsets from the Cesium ION services\n\nimport {fetchFile} from '@loaders.gl/core';\nimport {assert} from '@loaders.gl/loader-utils';\n\nconst CESIUM_ION_URL = 'https://api.cesium.com/v1/assets';\n\n// Returns `{url, headers, type, attributions}` for an ion tileset\nexport async function getIonTilesetMetadata(accessToken, assetId) {\n  // Step 1, if no asset id, look for first 3DTILES asset associated with this token.\n  if (!assetId) {\n    const assets = await getIonAssets(accessToken);\n    for (const item of assets.items) {\n      if (item.type === '3DTILES') {\n        assetId = item.id;\n      }\n    }\n  }\n\n  // Step 2: Query metdatadata for this asset.\n  const ionAssetMetadata = await getIonAssetMetadata(accessToken, assetId);\n  const {type, url} = ionAssetMetadata;\n  assert(type === '3DTILES' && url);\n\n  // Prepare a headers object for fetch\n  ionAssetMetadata.headers = {\n    Authorization: `Bearer ${ionAssetMetadata.accessToken}`\n  };\n  return ionAssetMetadata;\n}\n\n// Return a list of all assets associated with accessToken\nexport async function getIonAssets(accessToken) {\n  assert(accessToken);\n  const url = CESIUM_ION_URL;\n  const headers = {Authorization: `Bearer ${accessToken}`};\n  const response = await fetchFile(url, {fetch: {headers}});\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  }\n  return await response.json();\n}\n\n// Return metadata for a specific asset associated with token\nexport async function getIonAssetMetadata(accessToken, assetId) {\n  assert(accessToken, assetId);\n  const headers = {Authorization: `Bearer ${accessToken}`};\n\n  const url = `${CESIUM_ION_URL}/${assetId}`;\n  // https://cesium.com/docs/rest-api/#operation/getAsset\n  // Retrieves metadata information about a specific asset.\n  let response = await fetchFile(`${url}`, {fetch: {headers}});\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  }\n  let metadata = await response.json();\n\n  // https://cesium.com/docs/rest-api/#operation/getAssetEndpoint\n  // Retrieves information and credentials that allow you to access the tiled asset data for visualization and analysis.\n  response = await fetchFile(`${url}/endpoint`, {fetch: {headers}});\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  }\n  const tilesetInfo = await response.json();\n\n  // extract dataset description\n  metadata = {\n    ...metadata,\n    ...tilesetInfo\n  };\n\n  return metadata;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}