{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _objectSpread from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { isPureObject, isObject } from '../../javascript-utils/is-type';\nimport { fetchFile } from '../fetch/fetch-file';\nimport { probeLog, NullLog } from './loggers';\nimport { DEFAULT_LOADER_OPTIONS, REMOVED_LOADER_OPTIONS } from './option-defaults';\nexport function getGlobalLoaderState() {\n  globalThis.loaders = globalThis.loaders || {};\n  var loaders = globalThis.loaders;\n  loaders._state = loaders._state || {};\n  return loaders._state;\n}\nexport var getGlobalLoaderOptions = function getGlobalLoaderOptions() {\n  var state = getGlobalLoaderState();\n  state.globalOptions = state.globalOptions || _objectSpread({}, DEFAULT_LOADER_OPTIONS);\n  return state.globalOptions;\n};\nexport function setGlobalOptions(options) {\n  var state = getGlobalLoaderState();\n  var globalOptions = getGlobalLoaderOptions();\n  state.globalOptions = normalizeOptionsInternal(globalOptions, options);\n}\nexport function normalizeOptions(options, loader, loaders, url) {\n  loaders = loaders || [];\n  loaders = Array.isArray(loaders) ? loaders : [loaders];\n  validateOptions(options, loaders);\n  return normalizeOptionsInternal(loader, options, url);\n}\nexport function getFetchFunction(options, context) {\n  var globalOptions = getGlobalLoaderOptions();\n  var fetchOptions = options || globalOptions;\n  if (typeof fetchOptions.fetch === 'function') {\n    return fetchOptions.fetch;\n  }\n  if (isObject(fetchOptions.fetch)) {\n    return function (url) {\n      return fetchFile(url, fetchOptions);\n    };\n  }\n  if (context !== null && context !== void 0 && context.fetch) {\n    return context === null || context === void 0 ? void 0 : context.fetch;\n  }\n  return fetchFile;\n}\nfunction validateOptions(options, loaders) {\n  validateOptionsObject(options, null, DEFAULT_LOADER_OPTIONS, REMOVED_LOADER_OPTIONS, loaders);\n  var _iterator = _createForOfIteratorHelper(loaders),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var loader = _step.value;\n      var idOptions = options && options[loader.id] || {};\n      var loaderOptions = loader.options && loader.options[loader.id] || {};\n      var deprecatedOptions = loader.deprecatedOptions && loader.deprecatedOptions[loader.id] || {};\n      validateOptionsObject(idOptions, loader.id, loaderOptions, deprecatedOptions, loaders);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\nfunction validateOptionsObject(options, id, defaultOptions, deprecatedOptions, loaders) {\n  var loaderName = id || 'Top level';\n  var prefix = id ? \"\".concat(id, \".\") : '';\n  for (var key in options) {\n    var isSubOptions = !id && isObject(options[key]);\n    var isBaseUriOption = key === 'baseUri' && !id;\n    var isWorkerUrlOption = key === 'workerUrl' && id;\n    if (!(key in defaultOptions) && !isBaseUriOption && !isWorkerUrlOption) {\n      if (key in deprecatedOptions) {\n        probeLog.warn(\"\".concat(loaderName, \" loader option '\").concat(prefix).concat(key, \"' no longer supported, use '\").concat(deprecatedOptions[key], \"'\"))();\n      } else if (!isSubOptions) {\n        var suggestion = findSimilarOption(key, loaders);\n        probeLog.warn(\"\".concat(loaderName, \" loader option '\").concat(prefix).concat(key, \"' not recognized. \").concat(suggestion))();\n      }\n    }\n  }\n}\nfunction findSimilarOption(optionKey, loaders) {\n  var lowerCaseOptionKey = optionKey.toLowerCase();\n  var bestSuggestion = '';\n  var _iterator2 = _createForOfIteratorHelper(loaders),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var loader = _step2.value;\n      for (var key in loader.options) {\n        if (optionKey === key) {\n          return \"Did you mean '\".concat(loader.id, \".\").concat(key, \"'?\");\n        }\n        var lowerCaseKey = key.toLowerCase();\n        var isPartialMatch = lowerCaseOptionKey.startsWith(lowerCaseKey) || lowerCaseKey.startsWith(lowerCaseOptionKey);\n        if (isPartialMatch) {\n          bestSuggestion = bestSuggestion || \"Did you mean '\".concat(loader.id, \".\").concat(key, \"'?\");\n        }\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return bestSuggestion;\n}\nfunction normalizeOptionsInternal(loader, options, url) {\n  var loaderDefaultOptions = loader.options || {};\n  var mergedOptions = _objectSpread({}, loaderDefaultOptions);\n  addUrlOptions(mergedOptions, url);\n  if (mergedOptions.log === null) {\n    mergedOptions.log = new NullLog();\n  }\n  mergeNestedFields(mergedOptions, getGlobalLoaderOptions());\n  mergeNestedFields(mergedOptions, options);\n  return mergedOptions;\n}\nfunction mergeNestedFields(mergedOptions, options) {\n  for (var key in options) {\n    if (key in options) {\n      var value = options[key];\n      if (isPureObject(value) && isPureObject(mergedOptions[key])) {\n        mergedOptions[key] = _objectSpread(_objectSpread({}, mergedOptions[key]), options[key]);\n      } else {\n        mergedOptions[key] = options[key];\n      }\n    }\n  }\n}\nfunction addUrlOptions(options, url) {\n  if (url && !('baseUri' in options)) {\n    options.baseUri = url;\n  }\n}","map":{"version":3,"names":["isPureObject","isObject","fetchFile","probeLog","NullLog","DEFAULT_LOADER_OPTIONS","REMOVED_LOADER_OPTIONS","getGlobalLoaderState","globalThis","loaders","_state","getGlobalLoaderOptions","state","globalOptions","_objectSpread","setGlobalOptions","options","normalizeOptionsInternal","normalizeOptions","loader","url","Array","isArray","validateOptions","getFetchFunction","context","fetchOptions","fetch","validateOptionsObject","_iterator","_createForOfIteratorHelper","_step","s","n","done","value","idOptions","id","loaderOptions","deprecatedOptions","err","e","f","defaultOptions","loaderName","prefix","concat","key","isSubOptions","isBaseUriOption","isWorkerUrlOption","warn","suggestion","findSimilarOption","optionKey","lowerCaseOptionKey","toLowerCase","bestSuggestion","_iterator2","_step2","lowerCaseKey","isPartialMatch","startsWith","loaderDefaultOptions","mergedOptions","addUrlOptions","log","mergeNestedFields","baseUri"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/core/node_modules/@loaders.gl/core/src/lib/loader-utils/option-utils.ts"],"sourcesContent":["import type {Loader, LoaderContext, LoaderOptions} from '@loaders.gl/loader-utils';\nimport {isPureObject, isObject} from '../../javascript-utils/is-type';\nimport {fetchFile} from '../fetch/fetch-file';\nimport {probeLog, NullLog} from './loggers';\nimport {DEFAULT_LOADER_OPTIONS, REMOVED_LOADER_OPTIONS} from './option-defaults';\n/**\n * Global state for loaders.gl. Stored on `global.loaders._state`\n */\ntype GlobalLoaderState = {\n  loaderRegistry: Loader[];\n  globalOptions: {[key: string]: any};\n};\n\n/**\n * Helper for safely accessing global loaders.gl variables\n * Wraps initialization of global variable in function to defeat overly aggressive tree-shakers\n */\nexport function getGlobalLoaderState(): GlobalLoaderState {\n  // @ts-ignore\n  globalThis.loaders = globalThis.loaders || {};\n  // @ts-ignore\n  const {loaders} = globalThis;\n\n  // Add _state object to keep separate from modules added to globalThis.loaders\n  loaders._state = loaders._state || {};\n  return loaders._state;\n}\n\n/**\n * Store global loader options on the global object to increase chances of cross loaders-version interoperability\n * NOTE: This use case is not reliable but can help when testing new versions of loaders.gl with existing frameworks\n * @returns global loader options merged with default loader options\n */\nexport const getGlobalLoaderOptions = () => {\n  const state = getGlobalLoaderState();\n  // Ensure all default loader options from this library are mentioned\n  state.globalOptions = state.globalOptions || {...DEFAULT_LOADER_OPTIONS};\n  return state.globalOptions;\n};\n\n/**\n * Set global loader options\n * @param options\n */\nexport function setGlobalOptions(options: object): void {\n  const state = getGlobalLoaderState();\n  const globalOptions = getGlobalLoaderOptions();\n  state.globalOptions = normalizeOptionsInternal(globalOptions, options);\n}\n\n/**\n * Merges options with global opts and loader defaults, also injects baseUri\n * @param options\n * @param loader\n * @param loaders\n * @param url\n */\nexport function normalizeOptions(\n  options: object,\n  loader: Loader,\n  loaders?: Loader[],\n  url?: string\n): object {\n  loaders = loaders || [];\n  loaders = Array.isArray(loaders) ? loaders : [loaders];\n\n  validateOptions(options, loaders);\n  return normalizeOptionsInternal(loader, options, url);\n}\n\n/**\n * Gets the current fetch function from options and context\n * @param options\n * @param context\n */\nexport function getFetchFunction(\n  options?: LoaderOptions,\n  context?: Omit<LoaderContext, 'fetch'> & Partial<Pick<LoaderContext, 'fetch'>>\n) {\n  const globalOptions = getGlobalLoaderOptions();\n\n  const fetchOptions = options || globalOptions;\n\n  // options.fetch can be a function\n  if (typeof fetchOptions.fetch === 'function') {\n    return fetchOptions.fetch;\n  }\n\n  // options.fetch can be an options object\n  if (isObject(fetchOptions.fetch)) {\n    return (url) => fetchFile(url, fetchOptions);\n  }\n\n  // else refer to context (from parent loader) if available\n  if (context?.fetch) {\n    return context?.fetch;\n  }\n\n  // else return the default fetch function\n  return fetchFile;\n}\n\n// VALIDATE OPTIONS\n\n/**\n * Warn for unsupported options\n * @param options\n * @param loaders\n */\nfunction validateOptions(options: LoaderOptions, loaders: Loader[]) {\n  // Check top level options\n  validateOptionsObject(options, null, DEFAULT_LOADER_OPTIONS, REMOVED_LOADER_OPTIONS, loaders);\n  for (const loader of loaders) {\n    // Get the scoped, loader specific options from the user supplied options\n    const idOptions = (options && options[loader.id]) || {};\n\n    // Get scoped, loader specific default and deprecated options from the selected loader\n    const loaderOptions = (loader.options && loader.options[loader.id]) || {};\n    const deprecatedOptions =\n      (loader.deprecatedOptions && loader.deprecatedOptions[loader.id]) || {};\n\n    // Validate loader specific options\n    validateOptionsObject(idOptions, loader.id, loaderOptions, deprecatedOptions, loaders);\n  }\n}\n\n// eslint-disable-next-line max-params, complexity\nfunction validateOptionsObject(\n  options,\n  id: string | null,\n  defaultOptions,\n  deprecatedOptions,\n  loaders: Loader[]\n) {\n  const loaderName = id || 'Top level';\n  const prefix = id ? `${id}.` : '';\n\n  for (const key in options) {\n    // If top level option value is an object it could options for a loader, so ignore\n    const isSubOptions = !id && isObject(options[key]);\n    const isBaseUriOption = key === 'baseUri' && !id;\n    const isWorkerUrlOption = key === 'workerUrl' && id;\n    // <loader>.workerUrl requires special handling as it is now auto-generated and no longer specified as a default option.\n    if (!(key in defaultOptions) && !isBaseUriOption && !isWorkerUrlOption) {\n      // Issue deprecation warnings\n      if (key in deprecatedOptions) {\n        probeLog.warn(\n          `${loaderName} loader option \\'${prefix}${key}\\' no longer supported, use \\'${deprecatedOptions[key]}\\'`\n        )();\n      } else if (!isSubOptions) {\n        const suggestion = findSimilarOption(key, loaders);\n        probeLog.warn(\n          `${loaderName} loader option \\'${prefix}${key}\\' not recognized. ${suggestion}`\n        )();\n      }\n    }\n  }\n}\n\nfunction findSimilarOption(optionKey, loaders) {\n  const lowerCaseOptionKey = optionKey.toLowerCase();\n  let bestSuggestion = '';\n  for (const loader of loaders) {\n    for (const key in loader.options) {\n      if (optionKey === key) {\n        return `Did you mean \\'${loader.id}.${key}\\'?`;\n      }\n      const lowerCaseKey = key.toLowerCase();\n      const isPartialMatch =\n        lowerCaseOptionKey.startsWith(lowerCaseKey) || lowerCaseKey.startsWith(lowerCaseOptionKey);\n      if (isPartialMatch) {\n        bestSuggestion = bestSuggestion || `Did you mean \\'${loader.id}.${key}\\'?`;\n      }\n    }\n  }\n  return bestSuggestion;\n}\n\nfunction normalizeOptionsInternal(loader, options, url?: string) {\n  const loaderDefaultOptions = loader.options || {};\n\n  const mergedOptions = {...loaderDefaultOptions};\n\n  addUrlOptions(mergedOptions, url);\n\n  // LOGGING: options.log can be set to `null` to defeat logging\n  if (mergedOptions.log === null) {\n    mergedOptions.log = new NullLog();\n  }\n\n  mergeNestedFields(mergedOptions, getGlobalLoaderOptions());\n  mergeNestedFields(mergedOptions, options);\n\n  return mergedOptions;\n}\n\n// Merge nested options objects\nfunction mergeNestedFields(mergedOptions, options) {\n  for (const key in options) {\n    // Check for nested options\n    // object in options => either no key in defaultOptions or object in defaultOptions\n    if (key in options) {\n      const value = options[key];\n      if (isPureObject(value) && isPureObject(mergedOptions[key])) {\n        mergedOptions[key] = {\n          ...mergedOptions[key],\n          ...options[key]\n        };\n      } else {\n        mergedOptions[key] = options[key];\n      }\n    }\n    // else: No need to merge nested opts, and the initial merge already copied over the nested options\n  }\n}\n\n// Harvest information from the url\n// TODO - baseUri should be a directory, i.e. remove file component from baseUri\n// TODO - extract extension?\n// TODO - extract query parameters?\n// TODO - should these be injected on context instead of options?\nfunction addUrlOptions(options, url?: string) {\n  if (url && !('baseUri' in options)) {\n    options.baseUri = url;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}