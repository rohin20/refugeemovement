{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { assert, validateWorkerVersion } from '@loaders.gl/worker-utils';\nimport { parseWithWorker, canParseWithWorker } from '@loaders.gl/loader-utils';\nimport { isLoaderObject } from '../loader-utils/normalize-loader';\nimport { isResponse } from '../../javascript-utils/is-type';\nimport { normalizeOptions } from '../loader-utils/option-utils';\nimport { getArrayBufferOrStringFromData } from '../loader-utils/get-data';\nimport { getLoaderContext, getLoadersFromContext } from '../loader-utils/loader-context';\nimport { getResourceUrlAndType } from '../utils/resource-utils';\nimport { selectLoader } from './select-loader';\nexport function parse(_x, _x2, _x3, _x4) {\n  return _parse.apply(this, arguments);\n}\nfunction _parse() {\n  _parse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(data, loaders, options, context) {\n    var _getResourceUrlAndTyp, url, typedLoaders, candidateLoaders, loader;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          assert(!context || typeof context === 'object');\n          if (loaders && !Array.isArray(loaders) && !isLoaderObject(loaders)) {\n            context = undefined;\n            options = loaders;\n            loaders = undefined;\n          }\n          _context.next = 4;\n          return data;\n        case 4:\n          data = _context.sent;\n          options = options || {};\n          _getResourceUrlAndTyp = getResourceUrlAndType(data), url = _getResourceUrlAndTyp.url;\n          typedLoaders = loaders;\n          candidateLoaders = getLoadersFromContext(typedLoaders, context);\n          _context.next = 11;\n          return selectLoader(data, candidateLoaders, options);\n        case 11:\n          loader = _context.sent;\n          if (loader) {\n            _context.next = 14;\n            break;\n          }\n          return _context.abrupt(\"return\", null);\n        case 14:\n          options = normalizeOptions(options, loader, candidateLoaders, url);\n          context = getLoaderContext({\n            url: url,\n            parse: parse,\n            loaders: candidateLoaders\n          }, options, context);\n          _context.next = 18;\n          return parseWithLoader(loader, data, options, context);\n        case 18:\n          return _context.abrupt(\"return\", _context.sent);\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _parse.apply(this, arguments);\n}\nfunction parseWithLoader(_x5, _x6, _x7, _x8) {\n  return _parseWithLoader.apply(this, arguments);\n}\nfunction _parseWithLoader() {\n  _parseWithLoader = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(loader, data, options, context) {\n    var response, ok, redirected, status, statusText, type, url, headers;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          validateWorkerVersion(loader);\n          if (isResponse(data)) {\n            response = data;\n            ok = response.ok, redirected = response.redirected, status = response.status, statusText = response.statusText, type = response.type, url = response.url;\n            headers = Object.fromEntries(response.headers.entries());\n            context.response = {\n              headers: headers,\n              ok: ok,\n              redirected: redirected,\n              status: status,\n              statusText: statusText,\n              type: type,\n              url: url\n            };\n          }\n          _context2.next = 4;\n          return getArrayBufferOrStringFromData(data, loader, options);\n        case 4:\n          data = _context2.sent;\n          if (!(loader.parseTextSync && typeof data === 'string')) {\n            _context2.next = 8;\n            break;\n          }\n          options.dataType = 'text';\n          return _context2.abrupt(\"return\", loader.parseTextSync(data, options, context, loader));\n        case 8:\n          if (!canParseWithWorker(loader, options)) {\n            _context2.next = 12;\n            break;\n          }\n          _context2.next = 11;\n          return parseWithWorker(loader, data, options, context, parse);\n        case 11:\n          return _context2.abrupt(\"return\", _context2.sent);\n        case 12:\n          if (!(loader.parseText && typeof data === 'string')) {\n            _context2.next = 16;\n            break;\n          }\n          _context2.next = 15;\n          return loader.parseText(data, options, context, loader);\n        case 15:\n          return _context2.abrupt(\"return\", _context2.sent);\n        case 16:\n          if (!loader.parse) {\n            _context2.next = 20;\n            break;\n          }\n          _context2.next = 19;\n          return loader.parse(data, options, context, loader);\n        case 19:\n          return _context2.abrupt(\"return\", _context2.sent);\n        case 20:\n          assert(!loader.parseSync);\n          throw new Error(\"\".concat(loader.id, \" loader - no parser found and worker is disabled\"));\n        case 22:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _parseWithLoader.apply(this, arguments);\n}","map":{"version":3,"names":["assert","validateWorkerVersion","parseWithWorker","canParseWithWorker","isLoaderObject","isResponse","normalizeOptions","getArrayBufferOrStringFromData","getLoaderContext","getLoadersFromContext","getResourceUrlAndType","selectLoader","parse","_x","_x2","_x3","_x4","_parse","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","loaders","options","context","_getResourceUrlAndTyp","url","typedLoaders","candidateLoaders","loader","wrap","_callee$","_context","prev","next","Array","isArray","undefined","sent","abrupt","parseWithLoader","stop","_x5","_x6","_x7","_x8","_parseWithLoader","_callee2","response","ok","redirected","status","statusText","type","headers","_callee2$","_context2","Object","fromEntries","entries","parseTextSync","dataType","parseText","parseSync","Error","concat","id"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/geo-layers/node_modules/@loaders.gl/core/src/lib/api/parse.ts"],"sourcesContent":["import type {DataType, Loader, LoaderContext, LoaderOptions} from '@loaders.gl/loader-utils';\nimport {assert, validateWorkerVersion} from '@loaders.gl/worker-utils';\nimport {parseWithWorker, canParseWithWorker} from '@loaders.gl/loader-utils';\nimport {isLoaderObject} from '../loader-utils/normalize-loader';\nimport {isResponse} from '../../javascript-utils/is-type';\nimport {normalizeOptions} from '../loader-utils/option-utils';\nimport {getArrayBufferOrStringFromData} from '../loader-utils/get-data';\nimport {getLoaderContext, getLoadersFromContext} from '../loader-utils/loader-context';\nimport {getResourceUrlAndType} from '../utils/resource-utils';\nimport {selectLoader} from './select-loader';\n\n/**\n * Parses `data` using a specified loader\n * @param data\n * @param loaders\n * @param options\n * @param context\n */\nexport async function parse(\n  data: DataType | Promise<DataType>,\n  loaders?: Loader | Loader[] | LoaderOptions,\n  options?: LoaderOptions,\n  context?: LoaderContext\n): Promise<any> {\n  assert(!context || typeof context === 'object'); // parse no longer accepts final url\n\n  // Signature: parse(data, options, context | url)\n  // Uses registered loaders\n  if (loaders && !Array.isArray(loaders) && !isLoaderObject(loaders)) {\n    context = undefined; // context not supported in short signature\n    options = loaders as LoaderOptions;\n    loaders = undefined;\n  }\n\n  data = await data; // Resolve any promise\n  options = options || {};\n\n  // Extract a url for auto detection\n  const {url} = getResourceUrlAndType(data);\n\n  // Chooses a loader (and normalizes it)\n  // Also use any loaders in the context, new loaders take priority\n  const typedLoaders = loaders as Loader | Loader[] | undefined;\n  const candidateLoaders = getLoadersFromContext(typedLoaders, context);\n  // todo hacky type cast\n  const loader = await selectLoader(data as ArrayBuffer, candidateLoaders, options);\n  // Note: if no loader was found, if so just return null\n  if (!loader) {\n    return null;\n  }\n\n  // Normalize options\n  options = normalizeOptions(options, loader, candidateLoaders, url);\n\n  // Get a context (if already present, will be unchanged)\n  context = getLoaderContext({url, parse, loaders: candidateLoaders}, options, context);\n\n  return await parseWithLoader(loader, data, options, context);\n}\n\n// TODO: support progress and abort\n// TODO - should accept loader.parseAsyncIterator and concatenate.\nasync function parseWithLoader(loader, data, options, context) {\n  validateWorkerVersion(loader);\n\n  if (isResponse(data)) {\n    // Serialize to support passing the response to web worker\n    const response = data as Response;\n    const {ok, redirected, status, statusText, type, url} = response;\n    const headers = Object.fromEntries(response.headers.entries());\n    context.response = {headers, ok, redirected, status, statusText, type, url};\n  }\n\n  data = await getArrayBufferOrStringFromData(data, loader, options);\n\n  // First check for synchronous text parser, wrap results in promises\n  if (loader.parseTextSync && typeof data === 'string') {\n    options.dataType = 'text';\n    return loader.parseTextSync(data, options, context, loader);\n  }\n\n  // If we have a workerUrl and the loader can parse the given options efficiently in a worker\n  if (canParseWithWorker(loader, options)) {\n    return await parseWithWorker(loader, data, options, context, parse);\n  }\n\n  // Check for asynchronous parser\n  if (loader.parseText && typeof data === 'string') {\n    return await loader.parseText(data, options, context, loader);\n  }\n\n  if (loader.parse) {\n    return await loader.parse(data, options, context, loader);\n  }\n\n  // This should not happen, all sync loaders should also offer `parse` function\n  assert(!loader.parseSync);\n\n  // TBD - If asynchronous parser not available, return null\n  throw new Error(`${loader.id} loader - no parser found and worker is disabled`);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}