{"ast":null,"code":"import _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Resource from './resource';\nimport Buffer from './buffer';\nimport { isWebGL2 } from '@luma.gl/gltools';\nimport { getScratchArray, fillArray } from '../utils/array-utils-flat';\nimport { assert } from '../utils/assert';\nimport { getBrowser } from '@probe.gl/env';\nvar ERR_ELEMENTS = 'elements must be GL.ELEMENT_ARRAY_BUFFER';\nvar VertexArrayObject = /*#__PURE__*/function (_Resource, _Symbol$toStringTag) {\n  _inherits(VertexArrayObject, _Resource);\n  var _super = _createSuper(VertexArrayObject);\n  function VertexArrayObject(gl) {\n    var _this;\n    _classCallCheck(this, VertexArrayObject);\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var id = opts.id || opts.program && opts.program.id;\n    _this = _super.call(this, gl, Object.assign({}, opts, {\n      id: id\n    }));\n    _this.buffer = null;\n    _this.bufferValue = null;\n    _this.isDefaultArray = opts.isDefaultArray || false;\n    _this.gl2 = gl;\n    _this.initialize(opts);\n    Object.seal(_assertThisInitialized(_this));\n    return _this;\n  }\n  _createClass(VertexArrayObject, [{\n    key: _Symbol$toStringTag,\n    get: function get() {\n      return 'VertexArrayObject';\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      _get(_getPrototypeOf(VertexArrayObject.prototype), \"delete\", this).call(this);\n      if (this.buffer) {\n        this.buffer.delete();\n      }\n      return this;\n    }\n  }, {\n    key: \"MAX_ATTRIBUTES\",\n    get: function get() {\n      return VertexArrayObject.getMaxAttributes(this.gl);\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return this.setProps(props);\n    }\n  }, {\n    key: \"setProps\",\n    value: function setProps(props) {\n      return this;\n    }\n  }, {\n    key: \"setElementBuffer\",\n    value: function setElementBuffer() {\n      var _this2 = this;\n      var elementBuffer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      assert(!elementBuffer || elementBuffer.target === 34963, ERR_ELEMENTS);\n      this.bind(function () {\n        _this2.gl.bindBuffer(34963, elementBuffer ? elementBuffer.handle : null);\n      });\n      return this;\n    }\n  }, {\n    key: \"setBuffer\",\n    value: function setBuffer(location, buffer, accessor) {\n      if (buffer.target === 34963) {\n        return this.setElementBuffer(buffer, accessor);\n      }\n      var size = accessor.size,\n        type = accessor.type,\n        stride = accessor.stride,\n        offset = accessor.offset,\n        normalized = accessor.normalized,\n        integer = accessor.integer,\n        divisor = accessor.divisor;\n      var gl = this.gl,\n        gl2 = this.gl2;\n      location = Number(location);\n      this.bind(function () {\n        gl.bindBuffer(34962, buffer.handle);\n        if (integer) {\n          assert(isWebGL2(gl));\n          gl2.vertexAttribIPointer(location, size, type, stride, offset);\n        } else {\n          gl.vertexAttribPointer(location, size, type, normalized, stride, offset);\n        }\n        gl.enableVertexAttribArray(location);\n        gl2.vertexAttribDivisor(location, divisor || 0);\n      });\n      return this;\n    }\n  }, {\n    key: \"enable\",\n    value: function enable(location) {\n      var _this3 = this;\n      var enable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var disablingAttributeZero = !enable && location === 0 && !VertexArrayObject.isSupported(this.gl, {\n        constantAttributeZero: true\n      });\n      if (!disablingAttributeZero) {\n        location = Number(location);\n        this.bind(function () {\n          return enable ? _this3.gl.enableVertexAttribArray(location) : _this3.gl.disableVertexAttribArray(location);\n        });\n      }\n      return this;\n    }\n  }, {\n    key: \"getConstantBuffer\",\n    value: function getConstantBuffer(elementCount, value) {\n      var constantValue = this._normalizeConstantArrayValue(value);\n      var byteLength = constantValue.byteLength * elementCount;\n      var length = constantValue.length * elementCount;\n      var updateNeeded = !this.buffer;\n      this.buffer = this.buffer || new Buffer(this.gl, byteLength);\n      updateNeeded = updateNeeded || this.buffer.reallocate(byteLength);\n      updateNeeded = updateNeeded || !this._compareConstantArrayValues(constantValue, this.bufferValue);\n      if (updateNeeded) {\n        var typedArray = getScratchArray(value.constructor, length);\n        fillArray({\n          target: typedArray,\n          source: constantValue,\n          start: 0,\n          count: length\n        });\n        this.buffer.subData(typedArray);\n        this.bufferValue = value;\n      }\n      return this.buffer;\n    }\n  }, {\n    key: \"_normalizeConstantArrayValue\",\n    value: function _normalizeConstantArrayValue(arrayValue) {\n      if (Array.isArray(arrayValue)) {\n        return new Float32Array(arrayValue);\n      }\n      return arrayValue;\n    }\n  }, {\n    key: \"_compareConstantArrayValues\",\n    value: function _compareConstantArrayValues(v1, v2) {\n      if (!v1 || !v2 || v1.length !== v2.length || v1.constructor !== v2.constructor) {\n        return false;\n      }\n      for (var i = 0; i < v1.length; ++i) {\n        if (v1[i] !== v2[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }, {\n    key: \"_createHandle\",\n    value: function _createHandle() {\n      var gl2 = this.gl;\n      return gl2.createVertexArray();\n    }\n  }, {\n    key: \"_deleteHandle\",\n    value: function _deleteHandle(handle) {\n      this.gl2.deleteVertexArray(handle);\n      return [this.elements];\n    }\n  }, {\n    key: \"_bindHandle\",\n    value: function _bindHandle(handle) {\n      this.gl2.bindVertexArray(handle);\n    }\n  }, {\n    key: \"_getParameter\",\n    value: function _getParameter(pname, _ref) {\n      var _this4 = this;\n      var location = _ref.location;\n      assert(Number.isFinite(location));\n      return this.bind(function () {\n        switch (pname) {\n          case 34373:\n            return _this4.gl.getVertexAttribOffset(location, pname);\n          default:\n            return _this4.gl.getVertexAttrib(location, pname);\n        }\n      });\n    }\n  }], [{\n    key: \"isSupported\",\n    value: function isSupported(gl) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (options.constantAttributeZero) {\n        return isWebGL2(gl) || getBrowser() === 'Chrome';\n      }\n      return true;\n    }\n  }, {\n    key: \"getDefaultArray\",\n    value: function getDefaultArray(gl) {\n      gl.luma = gl.luma || {};\n      if (!gl.luma.defaultVertexArray) {\n        gl.luma.defaultVertexArray = new VertexArrayObject(gl, {\n          handle: null,\n          isDefaultArray: true\n        });\n      }\n      return gl.luma.defaultVertexArray;\n    }\n  }, {\n    key: \"getMaxAttributes\",\n    value: function getMaxAttributes(gl) {\n      VertexArrayObject.MAX_ATTRIBUTES = VertexArrayObject.MAX_ATTRIBUTES || gl.getParameter(34921);\n      return VertexArrayObject.MAX_ATTRIBUTES;\n    }\n  }, {\n    key: \"setConstant\",\n    value: function setConstant(gl, location, array) {\n      switch (array.constructor) {\n        case Float32Array:\n          VertexArrayObject._setConstantFloatArray(gl, location, array);\n          break;\n        case Int32Array:\n          VertexArrayObject._setConstantIntArray(gl, location, array);\n          break;\n        case Uint32Array:\n          VertexArrayObject._setConstantUintArray(gl, location, array);\n          break;\n        default:\n          assert(false);\n      }\n    }\n  }, {\n    key: \"_setConstantFloatArray\",\n    value: function _setConstantFloatArray(gl, location, array) {\n      switch (array.length) {\n        case 1:\n          gl.vertexAttrib1fv(location, array);\n          break;\n        case 2:\n          gl.vertexAttrib2fv(location, array);\n          break;\n        case 3:\n          gl.vertexAttrib3fv(location, array);\n          break;\n        case 4:\n          gl.vertexAttrib4fv(location, array);\n          break;\n        default:\n          assert(false);\n      }\n    }\n  }, {\n    key: \"_setConstantIntArray\",\n    value: function _setConstantIntArray(gl, location, array) {\n      assert(isWebGL2(gl));\n      switch (array.length) {\n        case 1:\n          gl.vertexAttribI1iv(location, array);\n          break;\n        case 2:\n          gl.vertexAttribI2iv(location, array);\n          break;\n        case 3:\n          gl.vertexAttribI3iv(location, array);\n          break;\n        case 4:\n          gl.vertexAttribI4iv(location, array);\n          break;\n        default:\n          assert(false);\n      }\n    }\n  }, {\n    key: \"_setConstantUintArray\",\n    value: function _setConstantUintArray(gl, location, array) {\n      assert(isWebGL2(gl));\n      switch (array.length) {\n        case 1:\n          gl.vertexAttribI1uiv(location, array);\n          break;\n        case 2:\n          gl.vertexAttribI2uiv(location, array);\n          break;\n        case 3:\n          gl.vertexAttribI3uiv(location, array);\n          break;\n        case 4:\n          gl.vertexAttribI4uiv(location, array);\n          break;\n        default:\n          assert(false);\n      }\n    }\n  }]);\n  return VertexArrayObject;\n}(Resource, Symbol.toStringTag);\nexport { VertexArrayObject as default };","map":{"version":3,"names":["Resource","Buffer","isWebGL2","getScratchArray","fillArray","assert","getBrowser","ERR_ELEMENTS","VertexArrayObject","_Resource","_Symbol$toStringTag","_inherits","_super","_createSuper","gl","_this","_classCallCheck","opts","arguments","length","undefined","id","program","call","Object","assign","buffer","bufferValue","isDefaultArray","gl2","initialize","seal","_assertThisInitialized","_createClass","key","get","value","_delete","_get","_getPrototypeOf","prototype","delete","getMaxAttributes","props","setProps","setElementBuffer","_this2","elementBuffer","target","bind","bindBuffer","handle","setBuffer","location","accessor","size","type","stride","offset","normalized","integer","divisor","Number","vertexAttribIPointer","vertexAttribPointer","enableVertexAttribArray","vertexAttribDivisor","enable","_this3","disablingAttributeZero","isSupported","constantAttributeZero","disableVertexAttribArray","getConstantBuffer","elementCount","constantValue","_normalizeConstantArrayValue","byteLength","updateNeeded","reallocate","_compareConstantArrayValues","typedArray","constructor","source","start","count","subData","arrayValue","Array","isArray","Float32Array","v1","v2","i","_createHandle","createVertexArray","_deleteHandle","deleteVertexArray","elements","_bindHandle","bindVertexArray","_getParameter","pname","_ref","_this4","isFinite","getVertexAttribOffset","getVertexAttrib","options","getDefaultArray","luma","defaultVertexArray","MAX_ATTRIBUTES","getParameter","setConstant","array","_setConstantFloatArray","Int32Array","_setConstantIntArray","Uint32Array","_setConstantUintArray","vertexAttrib1fv","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttribI1iv","vertexAttribI2iv","vertexAttribI3iv","vertexAttribI4iv","vertexAttribI1uiv","vertexAttribI2uiv","vertexAttribI3uiv","vertexAttribI4uiv","Symbol","toStringTag","default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@luma.gl/webgl/src/classes/vertex-array-object.js"],"sourcesContent":["import GL from '@luma.gl/constants';\nimport Resource from './resource';\nimport Buffer from './buffer';\nimport {isWebGL2} from '@luma.gl/gltools';\nimport {getScratchArray, fillArray} from '../utils/array-utils-flat';\nimport {assert} from '../utils/assert';\nimport {getBrowser} from '@probe.gl/env';\n\nconst ERR_ELEMENTS = 'elements must be GL.ELEMENT_ARRAY_BUFFER';\n\nexport default class VertexArrayObject extends Resource {\n  // eslint-disable-next-line accessor-pairs\n  get [Symbol.toStringTag]() {\n    return 'VertexArrayObject';\n  }\n  static isSupported(gl, options = {}) {\n    // Attribute 0 can not be disable on most desktop OpenGL based browsers\n    // and on iOS Safari browser.\n    if (options.constantAttributeZero) {\n      return isWebGL2(gl) || getBrowser() === 'Chrome';\n    }\n\n    // Whether additional objects can be created\n    return true;\n  }\n\n  // Returns the global (null) vertex array object. Exists even when no extension available\n  // TODO(Tarek): VAOs are now polyfilled. Deprecate this in 9.0\n  static getDefaultArray(gl) {\n    gl.luma = gl.luma || {};\n    if (!gl.luma.defaultVertexArray) {\n      gl.luma.defaultVertexArray = new VertexArrayObject(gl, {handle: null, isDefaultArray: true});\n    }\n    return gl.luma.defaultVertexArray;\n  }\n\n  static getMaxAttributes(gl) {\n    // TODO - should be cached per context\n    // @ts-ignore\n    VertexArrayObject.MAX_ATTRIBUTES =\n      // @ts-ignore\n      VertexArrayObject.MAX_ATTRIBUTES || gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n    // @ts-ignore\n    return VertexArrayObject.MAX_ATTRIBUTES;\n  }\n\n  // Note: Constants are stored globally on the WebGL context, not the VAO\n  // So they need to be updated before every render\n  // TODO - use known type (in configuration or passed in) to allow non-typed arrays?\n  // TODO - remember/cache values to avoid setting them unnecessarily?\n  static setConstant(gl, location, array) {\n    switch (array.constructor) {\n      case Float32Array:\n        VertexArrayObject._setConstantFloatArray(gl, location, array);\n        break;\n      case Int32Array:\n        VertexArrayObject._setConstantIntArray(gl, location, array);\n        break;\n      case Uint32Array:\n        VertexArrayObject._setConstantUintArray(gl, location, array);\n        break;\n      default:\n        assert(false);\n    }\n  }\n\n  // Create a VertexArray\n  constructor(gl, opts = {}) {\n    // Use program's id if program but no id is supplied\n    const id = opts.id || (opts.program && opts.program.id);\n    super(gl, Object.assign({}, opts, {id}));\n\n    this.buffer = null;\n    this.bufferValue = null;\n    this.isDefaultArray = opts.isDefaultArray || false;\n\n    /** @type {WebGL2RenderingContext} */\n    this.gl2 = gl;\n\n    this.initialize(opts);\n\n    Object.seal(this);\n  }\n\n  delete() {\n    super.delete();\n    if (this.buffer) {\n      this.buffer.delete();\n    }\n    return this;\n  }\n\n  get MAX_ATTRIBUTES() {\n    return VertexArrayObject.getMaxAttributes(this.gl);\n  }\n\n  initialize(props = {}) {\n    return this.setProps(props);\n  }\n\n  setProps(props) {\n    // TODO: decide which props should be supported\n    return this;\n  }\n\n  // Set (bind) an elements buffer, for indexed rendering.\n  // Must be a Buffer bound to GL.ELEMENT_ARRAY_BUFFER. Constants not supported\n  setElementBuffer(elementBuffer = null, opts = {}) {\n    assert(!elementBuffer || elementBuffer.target === GL.ELEMENT_ARRAY_BUFFER, ERR_ELEMENTS);\n\n    // The GL.ELEMENT_ARRAY_BUFFER_BINDING is stored on the VertexArrayObject...\n    this.bind(() => {\n      this.gl.bindBuffer(GL.ELEMENT_ARRAY_BUFFER, elementBuffer ? elementBuffer.handle : null);\n    });\n\n    return this;\n  }\n\n  // Set a location in vertex attributes array to a bufferk, enables the location, sets divisor\n  setBuffer(location, buffer, accessor) {\n    // Check target\n    if (buffer.target === GL.ELEMENT_ARRAY_BUFFER) {\n      return this.setElementBuffer(buffer, accessor);\n    }\n\n    const {size, type, stride, offset, normalized, integer, divisor} = accessor;\n\n    const {gl, gl2} = this;\n    location = Number(location);\n\n    this.bind(() => {\n      // A non-zero buffer object must be bound to the GL_ARRAY_BUFFER target\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer.handle);\n\n      // WebGL2 supports *integer* data formats, i.e. GPU will see integer values\n      if (integer) {\n        assert(isWebGL2(gl));\n        gl2.vertexAttribIPointer(location, size, type, stride, offset);\n      } else {\n        // Attaches ARRAY_BUFFER with specified buffer format to location\n        gl.vertexAttribPointer(location, size, type, normalized, stride, offset);\n      }\n      gl.enableVertexAttribArray(location);\n      gl2.vertexAttribDivisor(location, divisor || 0);\n\n      // NOTE We don't unbind buffer here, typically another buffer will be bound just after\n    });\n\n    return this;\n  }\n\n  // Enabling an attribute location makes it reference the currently bound buffer\n  // Disabling an attribute location makes it reference the global constant value\n  // TODO - handle single values for size 1 attributes?\n  // TODO - convert classic arrays based on known type?\n  enable(location, enable = true) {\n    // Attribute 0 cannot be disabled in most desktop OpenGL based browsers\n    const disablingAttributeZero =\n      !enable &&\n      location === 0 &&\n      !VertexArrayObject.isSupported(this.gl, {constantAttributeZero: true});\n\n    if (!disablingAttributeZero) {\n      location = Number(location);\n      this.bind(\n        () =>\n          enable\n            ? this.gl.enableVertexAttribArray(location)\n            : this.gl.disableVertexAttribArray(location)\n      );\n    }\n    return this;\n  }\n\n  // Provide a means to create a buffer that is equivalent to a constant.\n  // NOTE: Desktop OpenGL cannot disable attribute 0.\n  // https://stackoverflow.com/questions/20305231/webgl-warning-attribute-0-is-disabled-\n  // this-has-significant-performance-penalt\n  getConstantBuffer(elementCount, value) {\n    // Create buffer only when needed, and reuse it (avoids inflating buffer creation statistics)\n\n    const constantValue = this._normalizeConstantArrayValue(value);\n\n    const byteLength = constantValue.byteLength * elementCount;\n    const length = constantValue.length * elementCount;\n\n    let updateNeeded = !this.buffer;\n\n    this.buffer = this.buffer || new Buffer(this.gl, byteLength);\n    updateNeeded = updateNeeded || this.buffer.reallocate(byteLength);\n\n    // Reallocate and update contents if needed\n    updateNeeded =\n      updateNeeded || !this._compareConstantArrayValues(constantValue, this.bufferValue);\n\n    if (updateNeeded) {\n      // Create a typed array that is big enough, and fill it with the required data\n      const typedArray = getScratchArray(value.constructor, length);\n      fillArray({target: typedArray, source: constantValue, start: 0, count: length});\n      this.buffer.subData(typedArray);\n      this.bufferValue = value;\n    }\n\n    return this.buffer;\n  }\n\n  // PRIVATE\n\n  // TODO - convert Arrays based on known type? (read type from accessor, don't assume Float32Array)\n  // TODO - handle single values for size 1 attributes?\n  _normalizeConstantArrayValue(arrayValue) {\n    if (Array.isArray(arrayValue)) {\n      return new Float32Array(arrayValue);\n    }\n    return arrayValue;\n  }\n\n  _compareConstantArrayValues(v1, v2) {\n    if (!v1 || !v2 || v1.length !== v2.length || v1.constructor !== v2.constructor) {\n      return false;\n    }\n    for (let i = 0; i < v1.length; ++i) {\n      if (v1[i] !== v2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  static _setConstantFloatArray(gl, location, array) {\n    switch (array.length) {\n      case 1:\n        gl.vertexAttrib1fv(location, array);\n        break;\n      case 2:\n        gl.vertexAttrib2fv(location, array);\n        break;\n      case 3:\n        gl.vertexAttrib3fv(location, array);\n        break;\n      case 4:\n        gl.vertexAttrib4fv(location, array);\n        break;\n      default:\n        assert(false);\n    }\n  }\n\n  static _setConstantIntArray(gl, location, array) {\n    assert(isWebGL2(gl));\n    switch (array.length) {\n      case 1:\n        gl.vertexAttribI1iv(location, array);\n        break;\n      case 2:\n        gl.vertexAttribI2iv(location, array);\n        break;\n      case 3:\n        gl.vertexAttribI3iv(location, array);\n        break;\n      case 4:\n        gl.vertexAttribI4iv(location, array);\n        break;\n      default:\n        assert(false);\n    }\n  }\n\n  static _setConstantUintArray(gl, location, array) {\n    assert(isWebGL2(gl));\n    switch (array.length) {\n      case 1:\n        gl.vertexAttribI1uiv(location, array);\n        break;\n      case 2:\n        gl.vertexAttribI2uiv(location, array);\n        break;\n      case 3:\n        gl.vertexAttribI3uiv(location, array);\n        break;\n      case 4:\n        gl.vertexAttribI4uiv(location, array);\n        break;\n      default:\n        assert(false);\n    }\n  }\n\n  // RESOURCE IMPLEMENTATION\n\n  _createHandle() {\n    /** @type {WebGL2RenderingContext} */\n    // @ts-ignore\n    const gl2 = this.gl;\n    return gl2.createVertexArray();\n  }\n\n  _deleteHandle(handle) {\n    this.gl2.deleteVertexArray(handle);\n    // @ts-ignore\n    return [this.elements];\n    // return [this.elements, ...this.buffers];\n  }\n\n  _bindHandle(handle) {\n    this.gl2.bindVertexArray(handle);\n  }\n\n  // Generic getter for information about a vertex attribute at a given position\n  _getParameter(pname, {location}) {\n    assert(Number.isFinite(location));\n    return this.bind(() => {\n      switch (pname) {\n        case GL.VERTEX_ATTRIB_ARRAY_POINTER:\n          return this.gl.getVertexAttribOffset(location, pname);\n        default:\n          return this.gl.getVertexAttrib(location, pname);\n      }\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}