{"ast":null,"code":"'use strict';\n\nvar invariant = require('../vendor/invariant');\nvar constants = require('./constants');\nvar client = require('./client');\nvar getUser = require('./get_user');\n\n/**\n * Services all have the same constructor pattern: you initialize them\n * with an access token and options, and they validate those arguments\n * in a predictable way. This is a constructor-generator that makes\n * it possible to require each service's API individually.\n *\n * @private\n * @param {string} name the name of the Mapbox API this class will access:\n * this is set to the name of the function so it will show up in tracebacks\n * @returns {Function} constructor function\n */\nfunction makeService(name) {\n  function service(accessToken, options) {\n    this.name = name;\n    invariant(typeof accessToken === 'string', 'accessToken required to instantiate Mapbox client');\n    var endpoint = constants.DEFAULT_ENDPOINT;\n    if (options !== undefined) {\n      invariant(typeof options === 'object', 'options must be an object');\n      if (options.endpoint) {\n        invariant(typeof options.endpoint === 'string', 'endpoint must be a string');\n        endpoint = options.endpoint;\n      }\n      if (options.account) {\n        invariant(typeof options.account === 'string', 'account must be a string');\n        this.owner = options.account;\n      }\n    }\n    this.client = client({\n      endpoint: endpoint,\n      accessToken: accessToken\n    });\n    this.accessToken = accessToken;\n    this.endpoint = endpoint;\n    this.owner = this.owner || getUser(accessToken);\n    invariant(!!this.owner, 'could not determine account from provided accessToken');\n  }\n  return service;\n}\nmodule.exports = makeService;","map":{"version":3,"names":["invariant","require","constants","client","getUser","makeService","name","service","accessToken","options","endpoint","DEFAULT_ENDPOINT","undefined","account","owner","module","exports"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/mapbox/lib/make_service.js"],"sourcesContent":["'use strict';\n\nvar invariant = require('../vendor/invariant');\nvar constants = require('./constants');\nvar client = require('./client');\nvar getUser = require('./get_user');\n\n/**\n * Services all have the same constructor pattern: you initialize them\n * with an access token and options, and they validate those arguments\n * in a predictable way. This is a constructor-generator that makes\n * it possible to require each service's API individually.\n *\n * @private\n * @param {string} name the name of the Mapbox API this class will access:\n * this is set to the name of the function so it will show up in tracebacks\n * @returns {Function} constructor function\n */\nfunction makeService(name) {\n\n  function service(accessToken, options) {\n    this.name = name;\n\n    invariant(typeof accessToken === 'string',\n      'accessToken required to instantiate Mapbox client');\n\n    var endpoint = constants.DEFAULT_ENDPOINT;\n\n    if (options !== undefined) {\n      invariant(typeof options === 'object', 'options must be an object');\n      if (options.endpoint) {\n        invariant(typeof options.endpoint === 'string', 'endpoint must be a string');\n        endpoint = options.endpoint;\n      }\n      if (options.account) {\n        invariant(typeof options.account === 'string', 'account must be a string');\n        this.owner = options.account;\n      }\n    }\n\n    this.client = client({\n      endpoint: endpoint,\n      accessToken: accessToken\n    });\n\n    this.accessToken = accessToken;\n    this.endpoint = endpoint;\n    this.owner = this.owner || getUser(accessToken);\n    invariant(!!this.owner, 'could not determine account from provided accessToken');\n\n  }\n\n  return service;\n}\n\nmodule.exports = makeService;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,SAAS,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAC9C,IAAIC,SAAS,GAAGD,OAAO,CAAC,aAAa,CAAC;AACtC,IAAIE,MAAM,GAAGF,OAAO,CAAC,UAAU,CAAC;AAChC,IAAIG,OAAO,GAAGH,OAAO,CAAC,YAAY,CAAC;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASI,WAAWA,CAACC,IAAI,EAAE;EAEzB,SAASC,OAAOA,CAACC,WAAW,EAAEC,OAAO,EAAE;IACrC,IAAI,CAACH,IAAI,GAAGA,IAAI;IAEhBN,SAAS,CAAC,OAAOQ,WAAW,KAAK,QAAQ,EACvC,mDAAmD,CAAC;IAEtD,IAAIE,QAAQ,GAAGR,SAAS,CAACS,gBAAgB;IAEzC,IAAIF,OAAO,KAAKG,SAAS,EAAE;MACzBZ,SAAS,CAAC,OAAOS,OAAO,KAAK,QAAQ,EAAE,2BAA2B,CAAC;MACnE,IAAIA,OAAO,CAACC,QAAQ,EAAE;QACpBV,SAAS,CAAC,OAAOS,OAAO,CAACC,QAAQ,KAAK,QAAQ,EAAE,2BAA2B,CAAC;QAC5EA,QAAQ,GAAGD,OAAO,CAACC,QAAQ;MAC7B;MACA,IAAID,OAAO,CAACI,OAAO,EAAE;QACnBb,SAAS,CAAC,OAAOS,OAAO,CAACI,OAAO,KAAK,QAAQ,EAAE,0BAA0B,CAAC;QAC1E,IAAI,CAACC,KAAK,GAAGL,OAAO,CAACI,OAAO;MAC9B;IACF;IAEA,IAAI,CAACV,MAAM,GAAGA,MAAM,CAAC;MACnBO,QAAQ,EAAEA,QAAQ;MAClBF,WAAW,EAAEA;IACf,CAAC,CAAC;IAEF,IAAI,CAACA,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACE,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACI,KAAK,GAAG,IAAI,CAACA,KAAK,IAAIV,OAAO,CAACI,WAAW,CAAC;IAC/CR,SAAS,CAAC,CAAC,CAAC,IAAI,CAACc,KAAK,EAAE,uDAAuD,CAAC;EAElF;EAEA,OAAOP,OAAO;AAChB;AAEAQ,MAAM,CAACC,OAAO,GAAGX,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}