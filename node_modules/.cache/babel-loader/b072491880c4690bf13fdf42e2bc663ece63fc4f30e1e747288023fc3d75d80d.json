{"ast":null,"code":"import _slicedToArray from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _defineProperty from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _GL_PARAMETER_DEFAULT, _GL_PARAMETER_SETTERS, _GL_PARAMETER_GETTERS;\nimport { isWebGL2 } from '../utils/webgl-checks';\nexport var GL_PARAMETER_DEFAULTS = (_GL_PARAMETER_DEFAULT = {}, _defineProperty(_GL_PARAMETER_DEFAULT, 3042, false), _defineProperty(_GL_PARAMETER_DEFAULT, 32773, new Float32Array([0, 0, 0, 0])), _defineProperty(_GL_PARAMETER_DEFAULT, 32777, 32774), _defineProperty(_GL_PARAMETER_DEFAULT, 34877, 32774), _defineProperty(_GL_PARAMETER_DEFAULT, 32969, 1), _defineProperty(_GL_PARAMETER_DEFAULT, 32968, 0), _defineProperty(_GL_PARAMETER_DEFAULT, 32971, 1), _defineProperty(_GL_PARAMETER_DEFAULT, 32970, 0), _defineProperty(_GL_PARAMETER_DEFAULT, 3106, new Float32Array([0, 0, 0, 0])), _defineProperty(_GL_PARAMETER_DEFAULT, 3107, [true, true, true, true]), _defineProperty(_GL_PARAMETER_DEFAULT, 2884, false), _defineProperty(_GL_PARAMETER_DEFAULT, 2885, 1029), _defineProperty(_GL_PARAMETER_DEFAULT, 2929, false), _defineProperty(_GL_PARAMETER_DEFAULT, 2931, 1), _defineProperty(_GL_PARAMETER_DEFAULT, 2932, 513), _defineProperty(_GL_PARAMETER_DEFAULT, 2928, new Float32Array([0, 1])), _defineProperty(_GL_PARAMETER_DEFAULT, 2930, true), _defineProperty(_GL_PARAMETER_DEFAULT, 3024, true), _defineProperty(_GL_PARAMETER_DEFAULT, 36006, null), _defineProperty(_GL_PARAMETER_DEFAULT, 2886, 2305), _defineProperty(_GL_PARAMETER_DEFAULT, 33170, 4352), _defineProperty(_GL_PARAMETER_DEFAULT, 2849, 1), _defineProperty(_GL_PARAMETER_DEFAULT, 32823, false), _defineProperty(_GL_PARAMETER_DEFAULT, 32824, 0), _defineProperty(_GL_PARAMETER_DEFAULT, 10752, 0), _defineProperty(_GL_PARAMETER_DEFAULT, 32938, 1.0), _defineProperty(_GL_PARAMETER_DEFAULT, 32939, false), _defineProperty(_GL_PARAMETER_DEFAULT, 3089, false), _defineProperty(_GL_PARAMETER_DEFAULT, 3088, new Int32Array([0, 0, 1024, 1024])), _defineProperty(_GL_PARAMETER_DEFAULT, 2960, false), _defineProperty(_GL_PARAMETER_DEFAULT, 2961, 0), _defineProperty(_GL_PARAMETER_DEFAULT, 2968, 0xffffffff), _defineProperty(_GL_PARAMETER_DEFAULT, 36005, 0xffffffff), _defineProperty(_GL_PARAMETER_DEFAULT, 2962, 519), _defineProperty(_GL_PARAMETER_DEFAULT, 2967, 0), _defineProperty(_GL_PARAMETER_DEFAULT, 2963, 0xffffffff), _defineProperty(_GL_PARAMETER_DEFAULT, 34816, 519), _defineProperty(_GL_PARAMETER_DEFAULT, 36003, 0), _defineProperty(_GL_PARAMETER_DEFAULT, 36004, 0xffffffff), _defineProperty(_GL_PARAMETER_DEFAULT, 2964, 7680), _defineProperty(_GL_PARAMETER_DEFAULT, 2965, 7680), _defineProperty(_GL_PARAMETER_DEFAULT, 2966, 7680), _defineProperty(_GL_PARAMETER_DEFAULT, 34817, 7680), _defineProperty(_GL_PARAMETER_DEFAULT, 34818, 7680), _defineProperty(_GL_PARAMETER_DEFAULT, 34819, 7680), _defineProperty(_GL_PARAMETER_DEFAULT, 2978, [0, 0, 1024, 1024]), _defineProperty(_GL_PARAMETER_DEFAULT, 3333, 4), _defineProperty(_GL_PARAMETER_DEFAULT, 3317, 4), _defineProperty(_GL_PARAMETER_DEFAULT, 37440, false), _defineProperty(_GL_PARAMETER_DEFAULT, 37441, false), _defineProperty(_GL_PARAMETER_DEFAULT, 37443, 37444), _defineProperty(_GL_PARAMETER_DEFAULT, 35723, 4352), _defineProperty(_GL_PARAMETER_DEFAULT, 36010, null), _defineProperty(_GL_PARAMETER_DEFAULT, 35977, false), _defineProperty(_GL_PARAMETER_DEFAULT, 3330, 0), _defineProperty(_GL_PARAMETER_DEFAULT, 3332, 0), _defineProperty(_GL_PARAMETER_DEFAULT, 3331, 0), _defineProperty(_GL_PARAMETER_DEFAULT, 3314, 0), _defineProperty(_GL_PARAMETER_DEFAULT, 32878, 0), _defineProperty(_GL_PARAMETER_DEFAULT, 3316, 0), _defineProperty(_GL_PARAMETER_DEFAULT, 3315, 0), _defineProperty(_GL_PARAMETER_DEFAULT, 32877, 0), _GL_PARAMETER_DEFAULT);\nvar enable = function enable(gl, value, key) {\n  return value ? gl.enable(key) : gl.disable(key);\n};\nvar hint = function hint(gl, value, key) {\n  return gl.hint(key, value);\n};\nvar pixelStorei = function pixelStorei(gl, value, key) {\n  return gl.pixelStorei(key, value);\n};\nvar drawFramebuffer = function drawFramebuffer(gl, value) {\n  var target = isWebGL2(gl) ? 36009 : 36160;\n  return gl.bindFramebuffer(target, value);\n};\nvar readFramebuffer = function readFramebuffer(gl, value) {\n  return gl.bindFramebuffer(36008, value);\n};\nfunction isArray(array) {\n  return Array.isArray(array) || ArrayBuffer.isView(array);\n}\nexport var GL_PARAMETER_SETTERS = (_GL_PARAMETER_SETTERS = {}, _defineProperty(_GL_PARAMETER_SETTERS, 3042, enable), _defineProperty(_GL_PARAMETER_SETTERS, 32773, function _(gl, value) {\n  return gl.blendColor.apply(gl, _toConsumableArray(value));\n}), _defineProperty(_GL_PARAMETER_SETTERS, 32777, 'blendEquation'), _defineProperty(_GL_PARAMETER_SETTERS, 34877, 'blendEquation'), _defineProperty(_GL_PARAMETER_SETTERS, 32969, 'blendFunc'), _defineProperty(_GL_PARAMETER_SETTERS, 32968, 'blendFunc'), _defineProperty(_GL_PARAMETER_SETTERS, 32971, 'blendFunc'), _defineProperty(_GL_PARAMETER_SETTERS, 32970, 'blendFunc'), _defineProperty(_GL_PARAMETER_SETTERS, 3106, function _(gl, value) {\n  return gl.clearColor.apply(gl, _toConsumableArray(value));\n}), _defineProperty(_GL_PARAMETER_SETTERS, 3107, function _(gl, value) {\n  return gl.colorMask.apply(gl, _toConsumableArray(value));\n}), _defineProperty(_GL_PARAMETER_SETTERS, 2884, enable), _defineProperty(_GL_PARAMETER_SETTERS, 2885, function _(gl, value) {\n  return gl.cullFace(value);\n}), _defineProperty(_GL_PARAMETER_SETTERS, 2929, enable), _defineProperty(_GL_PARAMETER_SETTERS, 2931, function _(gl, value) {\n  return gl.clearDepth(value);\n}), _defineProperty(_GL_PARAMETER_SETTERS, 2932, function _(gl, value) {\n  return gl.depthFunc(value);\n}), _defineProperty(_GL_PARAMETER_SETTERS, 2928, function _(gl, value) {\n  return gl.depthRange.apply(gl, _toConsumableArray(value));\n}), _defineProperty(_GL_PARAMETER_SETTERS, 2930, function _(gl, value) {\n  return gl.depthMask(value);\n}), _defineProperty(_GL_PARAMETER_SETTERS, 3024, enable), _defineProperty(_GL_PARAMETER_SETTERS, 35723, hint), _defineProperty(_GL_PARAMETER_SETTERS, 36006, drawFramebuffer), _defineProperty(_GL_PARAMETER_SETTERS, 2886, function _(gl, value) {\n  return gl.frontFace(value);\n}), _defineProperty(_GL_PARAMETER_SETTERS, 33170, hint), _defineProperty(_GL_PARAMETER_SETTERS, 2849, function _(gl, value) {\n  return gl.lineWidth(value);\n}), _defineProperty(_GL_PARAMETER_SETTERS, 32823, enable), _defineProperty(_GL_PARAMETER_SETTERS, 32824, 'polygonOffset'), _defineProperty(_GL_PARAMETER_SETTERS, 10752, 'polygonOffset'), _defineProperty(_GL_PARAMETER_SETTERS, 35977, enable), _defineProperty(_GL_PARAMETER_SETTERS, 32938, 'sampleCoverage'), _defineProperty(_GL_PARAMETER_SETTERS, 32939, 'sampleCoverage'), _defineProperty(_GL_PARAMETER_SETTERS, 3089, enable), _defineProperty(_GL_PARAMETER_SETTERS, 3088, function _(gl, value) {\n  return gl.scissor.apply(gl, _toConsumableArray(value));\n}), _defineProperty(_GL_PARAMETER_SETTERS, 2960, enable), _defineProperty(_GL_PARAMETER_SETTERS, 2961, function _(gl, value) {\n  return gl.clearStencil(value);\n}), _defineProperty(_GL_PARAMETER_SETTERS, 2968, function _(gl, value) {\n  return gl.stencilMaskSeparate(1028, value);\n}), _defineProperty(_GL_PARAMETER_SETTERS, 36005, function _(gl, value) {\n  return gl.stencilMaskSeparate(1029, value);\n}), _defineProperty(_GL_PARAMETER_SETTERS, 2962, 'stencilFuncFront'), _defineProperty(_GL_PARAMETER_SETTERS, 2967, 'stencilFuncFront'), _defineProperty(_GL_PARAMETER_SETTERS, 2963, 'stencilFuncFront'), _defineProperty(_GL_PARAMETER_SETTERS, 34816, 'stencilFuncBack'), _defineProperty(_GL_PARAMETER_SETTERS, 36003, 'stencilFuncBack'), _defineProperty(_GL_PARAMETER_SETTERS, 36004, 'stencilFuncBack'), _defineProperty(_GL_PARAMETER_SETTERS, 2964, 'stencilOpFront'), _defineProperty(_GL_PARAMETER_SETTERS, 2965, 'stencilOpFront'), _defineProperty(_GL_PARAMETER_SETTERS, 2966, 'stencilOpFront'), _defineProperty(_GL_PARAMETER_SETTERS, 34817, 'stencilOpBack'), _defineProperty(_GL_PARAMETER_SETTERS, 34818, 'stencilOpBack'), _defineProperty(_GL_PARAMETER_SETTERS, 34819, 'stencilOpBack'), _defineProperty(_GL_PARAMETER_SETTERS, 2978, function _(gl, value) {\n  return gl.viewport.apply(gl, _toConsumableArray(value));\n}), _defineProperty(_GL_PARAMETER_SETTERS, 3333, pixelStorei), _defineProperty(_GL_PARAMETER_SETTERS, 3317, pixelStorei), _defineProperty(_GL_PARAMETER_SETTERS, 37440, pixelStorei), _defineProperty(_GL_PARAMETER_SETTERS, 37441, pixelStorei), _defineProperty(_GL_PARAMETER_SETTERS, 37443, pixelStorei), _defineProperty(_GL_PARAMETER_SETTERS, 3330, pixelStorei), _defineProperty(_GL_PARAMETER_SETTERS, 3332, pixelStorei), _defineProperty(_GL_PARAMETER_SETTERS, 3331, pixelStorei), _defineProperty(_GL_PARAMETER_SETTERS, 36010, readFramebuffer), _defineProperty(_GL_PARAMETER_SETTERS, 3314, pixelStorei), _defineProperty(_GL_PARAMETER_SETTERS, 32878, pixelStorei), _defineProperty(_GL_PARAMETER_SETTERS, 3316, pixelStorei), _defineProperty(_GL_PARAMETER_SETTERS, 3315, pixelStorei), _defineProperty(_GL_PARAMETER_SETTERS, 32877, pixelStorei), _defineProperty(_GL_PARAMETER_SETTERS, \"framebuffer\", function framebuffer(gl, _framebuffer) {\n  var handle = _framebuffer && 'handle' in _framebuffer ? _framebuffer.handle : _framebuffer;\n  return gl.bindFramebuffer(36160, handle);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"blend\", function blend(gl, value) {\n  return value ? gl.enable(3042) : gl.disable(3042);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"blendColor\", function blendColor(gl, value) {\n  return gl.blendColor.apply(gl, _toConsumableArray(value));\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"blendEquation\", function blendEquation(gl, args) {\n  args = isArray(args) ? args : [args, args];\n  gl.blendEquationSeparate.apply(gl, _toConsumableArray(args));\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"blendFunc\", function blendFunc(gl, args) {\n  args = isArray(args) && args.length === 2 ? [].concat(_toConsumableArray(args), _toConsumableArray(args)) : args;\n  gl.blendFuncSeparate.apply(gl, _toConsumableArray(args));\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"clearColor\", function clearColor(gl, value) {\n  return gl.clearColor.apply(gl, _toConsumableArray(value));\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"clearDepth\", function clearDepth(gl, value) {\n  return gl.clearDepth(value);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"clearStencil\", function clearStencil(gl, value) {\n  return gl.clearStencil(value);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"colorMask\", function colorMask(gl, value) {\n  return gl.colorMask.apply(gl, _toConsumableArray(value));\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"cull\", function cull(gl, value) {\n  return value ? gl.enable(2884) : gl.disable(2884);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"cullFace\", function cullFace(gl, value) {\n  return gl.cullFace(value);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"depthTest\", function depthTest(gl, value) {\n  return value ? gl.enable(2929) : gl.disable(2929);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"depthFunc\", function depthFunc(gl, value) {\n  return gl.depthFunc(value);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"depthMask\", function depthMask(gl, value) {\n  return gl.depthMask(value);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"depthRange\", function depthRange(gl, value) {\n  return gl.depthRange.apply(gl, _toConsumableArray(value));\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"dither\", function dither(gl, value) {\n  return value ? gl.enable(3024) : gl.disable(3024);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"derivativeHint\", function derivativeHint(gl, value) {\n  gl.hint(35723, value);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"frontFace\", function frontFace(gl, value) {\n  return gl.frontFace(value);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"mipmapHint\", function mipmapHint(gl, value) {\n  return gl.hint(33170, value);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"lineWidth\", function lineWidth(gl, value) {\n  return gl.lineWidth(value);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"polygonOffsetFill\", function polygonOffsetFill(gl, value) {\n  return value ? gl.enable(32823) : gl.disable(32823);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"polygonOffset\", function polygonOffset(gl, value) {\n  return gl.polygonOffset.apply(gl, _toConsumableArray(value));\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"sampleCoverage\", function sampleCoverage(gl, value) {\n  return gl.sampleCoverage.apply(gl, _toConsumableArray(value));\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"scissorTest\", function scissorTest(gl, value) {\n  return value ? gl.enable(3089) : gl.disable(3089);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"scissor\", function scissor(gl, value) {\n  return gl.scissor.apply(gl, _toConsumableArray(value));\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"stencilTest\", function stencilTest(gl, value) {\n  return value ? gl.enable(2960) : gl.disable(2960);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"stencilMask\", function stencilMask(gl, value) {\n  value = isArray(value) ? value : [value, value];\n  var _value = value,\n    _value2 = _slicedToArray(_value, 2),\n    mask = _value2[0],\n    backMask = _value2[1];\n  gl.stencilMaskSeparate(1028, mask);\n  gl.stencilMaskSeparate(1029, backMask);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"stencilFunc\", function stencilFunc(gl, args) {\n  args = isArray(args) && args.length === 3 ? [].concat(_toConsumableArray(args), _toConsumableArray(args)) : args;\n  var _args = args,\n    _args2 = _slicedToArray(_args, 6),\n    func = _args2[0],\n    ref = _args2[1],\n    mask = _args2[2],\n    backFunc = _args2[3],\n    backRef = _args2[4],\n    backMask = _args2[5];\n  gl.stencilFuncSeparate(1028, func, ref, mask);\n  gl.stencilFuncSeparate(1029, backFunc, backRef, backMask);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"stencilOp\", function stencilOp(gl, args) {\n  args = isArray(args) && args.length === 3 ? [].concat(_toConsumableArray(args), _toConsumableArray(args)) : args;\n  var _args3 = args,\n    _args4 = _slicedToArray(_args3, 6),\n    sfail = _args4[0],\n    dpfail = _args4[1],\n    dppass = _args4[2],\n    backSfail = _args4[3],\n    backDpfail = _args4[4],\n    backDppass = _args4[5];\n  gl.stencilOpSeparate(1028, sfail, dpfail, dppass);\n  gl.stencilOpSeparate(1029, backSfail, backDpfail, backDppass);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"viewport\", function viewport(gl, value) {\n  return gl.viewport.apply(gl, _toConsumableArray(value));\n}), _GL_PARAMETER_SETTERS);\nfunction getValue(glEnum, values, cache) {\n  return values[glEnum] !== undefined ? values[glEnum] : cache[glEnum];\n}\nexport var GL_COMPOSITE_PARAMETER_SETTERS = {\n  blendEquation: function blendEquation(gl, values, cache) {\n    return gl.blendEquationSeparate(getValue(32777, values, cache), getValue(34877, values, cache));\n  },\n  blendFunc: function blendFunc(gl, values, cache) {\n    return gl.blendFuncSeparate(getValue(32969, values, cache), getValue(32968, values, cache), getValue(32971, values, cache), getValue(32970, values, cache));\n  },\n  polygonOffset: function polygonOffset(gl, values, cache) {\n    return gl.polygonOffset(getValue(32824, values, cache), getValue(10752, values, cache));\n  },\n  sampleCoverage: function sampleCoverage(gl, values, cache) {\n    return gl.sampleCoverage(getValue(32938, values, cache), getValue(32939, values, cache));\n  },\n  stencilFuncFront: function stencilFuncFront(gl, values, cache) {\n    return gl.stencilFuncSeparate(1028, getValue(2962, values, cache), getValue(2967, values, cache), getValue(2963, values, cache));\n  },\n  stencilFuncBack: function stencilFuncBack(gl, values, cache) {\n    return gl.stencilFuncSeparate(1029, getValue(34816, values, cache), getValue(36003, values, cache), getValue(36004, values, cache));\n  },\n  stencilOpFront: function stencilOpFront(gl, values, cache) {\n    return gl.stencilOpSeparate(1028, getValue(2964, values, cache), getValue(2965, values, cache), getValue(2966, values, cache));\n  },\n  stencilOpBack: function stencilOpBack(gl, values, cache) {\n    return gl.stencilOpSeparate(1029, getValue(34817, values, cache), getValue(34818, values, cache), getValue(34819, values, cache));\n  }\n};\nexport var GL_HOOKED_SETTERS = {\n  enable: function enable(update, capability) {\n    return update(_defineProperty({}, capability, true));\n  },\n  disable: function disable(update, capability) {\n    return update(_defineProperty({}, capability, false));\n  },\n  pixelStorei: function pixelStorei(update, pname, value) {\n    return update(_defineProperty({}, pname, value));\n  },\n  hint: function hint(update, pname, _hint) {\n    return update(_defineProperty({}, pname, _hint));\n  },\n  bindFramebuffer: function bindFramebuffer(update, target, framebuffer) {\n    var _update5;\n    switch (target) {\n      case 36160:\n        return update((_update5 = {}, _defineProperty(_update5, 36006, framebuffer), _defineProperty(_update5, 36010, framebuffer), _update5));\n      case 36009:\n        return update(_defineProperty({}, 36006, framebuffer));\n      case 36008:\n        return update(_defineProperty({}, 36010, framebuffer));\n      default:\n        return null;\n    }\n  },\n  blendColor: function blendColor(update, r, g, b, a) {\n    return update(_defineProperty({}, 32773, new Float32Array([r, g, b, a])));\n  },\n  blendEquation: function blendEquation(update, mode) {\n    var _update9;\n    return update((_update9 = {}, _defineProperty(_update9, 32777, mode), _defineProperty(_update9, 34877, mode), _update9));\n  },\n  blendEquationSeparate: function blendEquationSeparate(update, modeRGB, modeAlpha) {\n    var _update10;\n    return update((_update10 = {}, _defineProperty(_update10, 32777, modeRGB), _defineProperty(_update10, 34877, modeAlpha), _update10));\n  },\n  blendFunc: function blendFunc(update, src, dst) {\n    var _update11;\n    return update((_update11 = {}, _defineProperty(_update11, 32969, src), _defineProperty(_update11, 32968, dst), _defineProperty(_update11, 32971, src), _defineProperty(_update11, 32970, dst), _update11));\n  },\n  blendFuncSeparate: function blendFuncSeparate(update, srcRGB, dstRGB, srcAlpha, dstAlpha) {\n    var _update12;\n    return update((_update12 = {}, _defineProperty(_update12, 32969, srcRGB), _defineProperty(_update12, 32968, dstRGB), _defineProperty(_update12, 32971, srcAlpha), _defineProperty(_update12, 32970, dstAlpha), _update12));\n  },\n  clearColor: function clearColor(update, r, g, b, a) {\n    return update(_defineProperty({}, 3106, new Float32Array([r, g, b, a])));\n  },\n  clearDepth: function clearDepth(update, depth) {\n    return update(_defineProperty({}, 2931, depth));\n  },\n  clearStencil: function clearStencil(update, s) {\n    return update(_defineProperty({}, 2961, s));\n  },\n  colorMask: function colorMask(update, r, g, b, a) {\n    return update(_defineProperty({}, 3107, [r, g, b, a]));\n  },\n  cullFace: function cullFace(update, mode) {\n    return update(_defineProperty({}, 2885, mode));\n  },\n  depthFunc: function depthFunc(update, func) {\n    return update(_defineProperty({}, 2932, func));\n  },\n  depthRange: function depthRange(update, zNear, zFar) {\n    return update(_defineProperty({}, 2928, new Float32Array([zNear, zFar])));\n  },\n  depthMask: function depthMask(update, mask) {\n    return update(_defineProperty({}, 2930, mask));\n  },\n  frontFace: function frontFace(update, face) {\n    return update(_defineProperty({}, 2886, face));\n  },\n  lineWidth: function lineWidth(update, width) {\n    return update(_defineProperty({}, 2849, width));\n  },\n  polygonOffset: function polygonOffset(update, factor, units) {\n    var _update23;\n    return update((_update23 = {}, _defineProperty(_update23, 32824, factor), _defineProperty(_update23, 10752, units), _update23));\n  },\n  sampleCoverage: function sampleCoverage(update, value, invert) {\n    var _update24;\n    return update((_update24 = {}, _defineProperty(_update24, 32938, value), _defineProperty(_update24, 32939, invert), _update24));\n  },\n  scissor: function scissor(update, x, y, width, height) {\n    return update(_defineProperty({}, 3088, new Int32Array([x, y, width, height])));\n  },\n  stencilMask: function stencilMask(update, mask) {\n    var _update26;\n    return update((_update26 = {}, _defineProperty(_update26, 2968, mask), _defineProperty(_update26, 36005, mask), _update26));\n  },\n  stencilMaskSeparate: function stencilMaskSeparate(update, face, mask) {\n    return update(_defineProperty({}, face === 1028 ? 2968 : 36005, mask));\n  },\n  stencilFunc: function stencilFunc(update, func, ref, mask) {\n    var _update28;\n    return update((_update28 = {}, _defineProperty(_update28, 2962, func), _defineProperty(_update28, 2967, ref), _defineProperty(_update28, 2963, mask), _defineProperty(_update28, 34816, func), _defineProperty(_update28, 36003, ref), _defineProperty(_update28, 36004, mask), _update28));\n  },\n  stencilFuncSeparate: function stencilFuncSeparate(update, face, func, ref, mask) {\n    var _update29;\n    return update((_update29 = {}, _defineProperty(_update29, face === 1028 ? 2962 : 34816, func), _defineProperty(_update29, face === 1028 ? 2967 : 36003, ref), _defineProperty(_update29, face === 1028 ? 2963 : 36004, mask), _update29));\n  },\n  stencilOp: function stencilOp(update, fail, zfail, zpass) {\n    var _update30;\n    return update((_update30 = {}, _defineProperty(_update30, 2964, fail), _defineProperty(_update30, 2965, zfail), _defineProperty(_update30, 2966, zpass), _defineProperty(_update30, 34817, fail), _defineProperty(_update30, 34818, zfail), _defineProperty(_update30, 34819, zpass), _update30));\n  },\n  stencilOpSeparate: function stencilOpSeparate(update, face, fail, zfail, zpass) {\n    var _update31;\n    return update((_update31 = {}, _defineProperty(_update31, face === 1028 ? 2964 : 34817, fail), _defineProperty(_update31, face === 1028 ? 2965 : 34818, zfail), _defineProperty(_update31, face === 1028 ? 2966 : 34819, zpass), _update31));\n  },\n  viewport: function viewport(update, x, y, width, height) {\n    return update(_defineProperty({}, 2978, [x, y, width, height]));\n  }\n};\nvar isEnabled = function isEnabled(gl, key) {\n  return gl.isEnabled(key);\n};\nexport var GL_PARAMETER_GETTERS = (_GL_PARAMETER_GETTERS = {}, _defineProperty(_GL_PARAMETER_GETTERS, 3042, isEnabled), _defineProperty(_GL_PARAMETER_GETTERS, 2884, isEnabled), _defineProperty(_GL_PARAMETER_GETTERS, 2929, isEnabled), _defineProperty(_GL_PARAMETER_GETTERS, 3024, isEnabled), _defineProperty(_GL_PARAMETER_GETTERS, 32823, isEnabled), _defineProperty(_GL_PARAMETER_GETTERS, 32926, isEnabled), _defineProperty(_GL_PARAMETER_GETTERS, 32928, isEnabled), _defineProperty(_GL_PARAMETER_GETTERS, 3089, isEnabled), _defineProperty(_GL_PARAMETER_GETTERS, 2960, isEnabled), _defineProperty(_GL_PARAMETER_GETTERS, 35977, isEnabled), _GL_PARAMETER_GETTERS);","map":{"version":3,"names":["isWebGL2","GL_PARAMETER_DEFAULTS","_GL_PARAMETER_DEFAULT","_defineProperty","Float32Array","Int32Array","enable","gl","value","key","disable","hint","pixelStorei","drawFramebuffer","target","bindFramebuffer","readFramebuffer","isArray","array","Array","ArrayBuffer","isView","GL_PARAMETER_SETTERS","_GL_PARAMETER_SETTERS","_","blendColor","apply","_toConsumableArray","clearColor","colorMask","cullFace","clearDepth","depthFunc","depthRange","depthMask","frontFace","lineWidth","scissor","clearStencil","stencilMaskSeparate","viewport","framebuffer","handle","blend","blendEquation","args","blendEquationSeparate","blendFunc","length","concat","blendFuncSeparate","cull","depthTest","dither","derivativeHint","mipmapHint","polygonOffsetFill","polygonOffset","sampleCoverage","scissorTest","stencilTest","stencilMask","_value","_value2","_slicedToArray","mask","backMask","stencilFunc","_args","_args2","func","ref","backFunc","backRef","stencilFuncSeparate","stencilOp","_args3","_args4","sfail","dpfail","dppass","backSfail","backDpfail","backDppass","stencilOpSeparate","getValue","glEnum","values","cache","undefined","GL_COMPOSITE_PARAMETER_SETTERS","stencilFuncFront","stencilFuncBack","stencilOpFront","stencilOpBack","GL_HOOKED_SETTERS","update","capability","pname","_update5","r","g","b","a","mode","_update9","modeRGB","modeAlpha","_update10","src","dst","_update11","srcRGB","dstRGB","srcAlpha","dstAlpha","_update12","depth","s","zNear","zFar","face","width","factor","units","_update23","invert","_update24","x","y","height","_update26","_update28","_update29","fail","zfail","zpass","_update30","_update31","isEnabled","GL_PARAMETER_GETTERS","_GL_PARAMETER_GETTERS"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@luma.gl/gltools/src/state-tracker/webgl-parameter-tables.js"],"sourcesContent":["// Tables describing WebGL parameters\nimport GL from '@luma.gl/constants';\nimport {isWebGL2} from '../utils/webgl-checks';\n\n// DEFAULT SETTINGS - FOR FAST CACHE INITIALIZATION AND CONTEXT RESETS\n\n/* eslint-disable no-shadow */\n\nexport const GL_PARAMETER_DEFAULTS = {\n  [GL.BLEND]: false,\n  [GL.BLEND_COLOR]: new Float32Array([0, 0, 0, 0]),\n  [GL.BLEND_EQUATION_RGB]: GL.FUNC_ADD,\n  [GL.BLEND_EQUATION_ALPHA]: GL.FUNC_ADD,\n  [GL.BLEND_SRC_RGB]: GL.ONE,\n  [GL.BLEND_DST_RGB]: GL.ZERO,\n  [GL.BLEND_SRC_ALPHA]: GL.ONE,\n  [GL.BLEND_DST_ALPHA]: GL.ZERO,\n  [GL.COLOR_CLEAR_VALUE]: new Float32Array([0, 0, 0, 0]), // TBD\n  [GL.COLOR_WRITEMASK]: [true, true, true, true],\n  [GL.CULL_FACE]: false,\n  [GL.CULL_FACE_MODE]: GL.BACK,\n  [GL.DEPTH_TEST]: false,\n  [GL.DEPTH_CLEAR_VALUE]: 1,\n  [GL.DEPTH_FUNC]: GL.LESS,\n  [GL.DEPTH_RANGE]: new Float32Array([0, 1]), // TBD\n  [GL.DEPTH_WRITEMASK]: true,\n  [GL.DITHER]: true,\n  // FRAMEBUFFER_BINDING and DRAW_FRAMEBUFFER_BINDING(WebGL2) refer same state.\n  [GL.FRAMEBUFFER_BINDING]: null,\n  [GL.FRONT_FACE]: GL.CCW,\n  [GL.GENERATE_MIPMAP_HINT]: GL.DONT_CARE,\n  [GL.LINE_WIDTH]: 1,\n  [GL.POLYGON_OFFSET_FILL]: false,\n  [GL.POLYGON_OFFSET_FACTOR]: 0,\n  [GL.POLYGON_OFFSET_UNITS]: 0,\n  [GL.SAMPLE_COVERAGE_VALUE]: 1.0,\n  [GL.SAMPLE_COVERAGE_INVERT]: false,\n  [GL.SCISSOR_TEST]: false,\n  // Note: Dynamic value. If scissor test enabled we expect users to set correct scissor box\n  [GL.SCISSOR_BOX]: new Int32Array([0, 0, 1024, 1024]),\n  [GL.STENCIL_TEST]: false,\n  [GL.STENCIL_CLEAR_VALUE]: 0,\n  [GL.STENCIL_WRITEMASK]: 0xffffffff,\n  [GL.STENCIL_BACK_WRITEMASK]: 0xffffffff,\n  [GL.STENCIL_FUNC]: GL.ALWAYS,\n  [GL.STENCIL_REF]: 0,\n  [GL.STENCIL_VALUE_MASK]: 0xffffffff,\n  [GL.STENCIL_BACK_FUNC]: GL.ALWAYS,\n  [GL.STENCIL_BACK_REF]: 0,\n  [GL.STENCIL_BACK_VALUE_MASK]: 0xffffffff,\n  [GL.STENCIL_FAIL]: GL.KEEP,\n  [GL.STENCIL_PASS_DEPTH_FAIL]: GL.KEEP,\n  [GL.STENCIL_PASS_DEPTH_PASS]: GL.KEEP,\n  [GL.STENCIL_BACK_FAIL]: GL.KEEP,\n  [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: GL.KEEP,\n  [GL.STENCIL_BACK_PASS_DEPTH_PASS]: GL.KEEP,\n  // Dynamic value: We use [0, 0, 1024, 1024] as default, but usually this is updated in each frame.\n  [GL.VIEWPORT]: [0, 0, 1024, 1024],\n  // WEBGL1 PIXEL PACK/UNPACK MODES\n  [GL.PACK_ALIGNMENT]: 4,\n  [GL.UNPACK_ALIGNMENT]: 4,\n  [GL.UNPACK_FLIP_Y_WEBGL]: false,\n  [GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL]: false,\n  [GL.UNPACK_COLORSPACE_CONVERSION_WEBGL]: GL.BROWSER_DEFAULT_WEBGL,\n\n  // WEBGL2 / EXTENSIONS\n  // gl1: 'OES_standard_derivatives'\n  [GL.FRAGMENT_SHADER_DERIVATIVE_HINT]: GL.DONT_CARE,\n  [GL.READ_FRAMEBUFFER_BINDING]: null,\n  [GL.RASTERIZER_DISCARD]: false,\n  [GL.PACK_ROW_LENGTH]: 0,\n  [GL.PACK_SKIP_PIXELS]: 0,\n  [GL.PACK_SKIP_ROWS]: 0,\n  [GL.UNPACK_ROW_LENGTH]: 0,\n  [GL.UNPACK_IMAGE_HEIGHT]: 0,\n  [GL.UNPACK_SKIP_PIXELS]: 0,\n  [GL.UNPACK_SKIP_ROWS]: 0,\n  [GL.UNPACK_SKIP_IMAGES]: 0\n};\n\n// SETTER TABLES - ENABLES SETTING ANY PARAMETER WITH A COMMON API\n\nconst enable = (gl, value, key) => (value ? gl.enable(key) : gl.disable(key));\nconst hint = (gl, value, key) => gl.hint(key, value);\nconst pixelStorei = (gl, value, key) => gl.pixelStorei(key, value);\n\nconst drawFramebuffer = (gl, value) => {\n  const target = isWebGL2(gl) ? GL.DRAW_FRAMEBUFFER : GL.FRAMEBUFFER;\n  return gl.bindFramebuffer(target, value);\n};\nconst readFramebuffer = (gl, value) => {\n  return gl.bindFramebuffer(GL.READ_FRAMEBUFFER, value);\n};\n\n// Utility\nfunction isArray(array) {\n  return Array.isArray(array) || ArrayBuffer.isView(array);\n}\n\n// Map from WebGL parameter names to corresponding WebGL setter functions\n// WegGL constants are read by parameter names, but set by function names\n// NOTE: When value type is a string, it will be handled by 'GL_COMPOSITE_PARAMETER_SETTERS'\nexport const GL_PARAMETER_SETTERS = {\n  [GL.BLEND]: enable,\n  [GL.BLEND_COLOR]: (gl, value) => gl.blendColor(...value),\n  [GL.BLEND_EQUATION_RGB]: 'blendEquation',\n  [GL.BLEND_EQUATION_ALPHA]: 'blendEquation',\n  [GL.BLEND_SRC_RGB]: 'blendFunc',\n  [GL.BLEND_DST_RGB]: 'blendFunc',\n  [GL.BLEND_SRC_ALPHA]: 'blendFunc',\n  [GL.BLEND_DST_ALPHA]: 'blendFunc',\n  [GL.COLOR_CLEAR_VALUE]: (gl, value) => gl.clearColor(...value),\n  [GL.COLOR_WRITEMASK]: (gl, value) => gl.colorMask(...value),\n  [GL.CULL_FACE]: enable,\n  [GL.CULL_FACE_MODE]: (gl, value) => gl.cullFace(value),\n  [GL.DEPTH_TEST]: enable,\n  [GL.DEPTH_CLEAR_VALUE]: (gl, value) => gl.clearDepth(value),\n  [GL.DEPTH_FUNC]: (gl, value) => gl.depthFunc(value),\n  [GL.DEPTH_RANGE]: (gl, value) => gl.depthRange(...value),\n  [GL.DEPTH_WRITEMASK]: (gl, value) => gl.depthMask(value),\n  [GL.DITHER]: enable,\n  [GL.FRAGMENT_SHADER_DERIVATIVE_HINT]: hint,\n  // NOTE: FRAMEBUFFER_BINDING and DRAW_FRAMEBUFFER_BINDING(WebGL2) refer same state.\n  [GL.FRAMEBUFFER_BINDING]: drawFramebuffer,\n  [GL.FRONT_FACE]: (gl, value) => gl.frontFace(value),\n  [GL.GENERATE_MIPMAP_HINT]: hint,\n  [GL.LINE_WIDTH]: (gl, value) => gl.lineWidth(value),\n  [GL.POLYGON_OFFSET_FILL]: enable,\n  [GL.POLYGON_OFFSET_FACTOR]: 'polygonOffset',\n  [GL.POLYGON_OFFSET_UNITS]: 'polygonOffset',\n  [GL.RASTERIZER_DISCARD]: enable,\n  [GL.SAMPLE_COVERAGE_VALUE]: 'sampleCoverage',\n  [GL.SAMPLE_COVERAGE_INVERT]: 'sampleCoverage',\n  [GL.SCISSOR_TEST]: enable,\n  [GL.SCISSOR_BOX]: (gl, value) => gl.scissor(...value),\n  [GL.STENCIL_TEST]: enable,\n  [GL.STENCIL_CLEAR_VALUE]: (gl, value) => gl.clearStencil(value),\n  [GL.STENCIL_WRITEMASK]: (gl, value) => gl.stencilMaskSeparate(GL.FRONT, value),\n  [GL.STENCIL_BACK_WRITEMASK]: (gl, value) => gl.stencilMaskSeparate(GL.BACK, value),\n  [GL.STENCIL_FUNC]: 'stencilFuncFront',\n  [GL.STENCIL_REF]: 'stencilFuncFront',\n  [GL.STENCIL_VALUE_MASK]: 'stencilFuncFront',\n  [GL.STENCIL_BACK_FUNC]: 'stencilFuncBack',\n  [GL.STENCIL_BACK_REF]: 'stencilFuncBack',\n  [GL.STENCIL_BACK_VALUE_MASK]: 'stencilFuncBack',\n  [GL.STENCIL_FAIL]: 'stencilOpFront',\n  [GL.STENCIL_PASS_DEPTH_FAIL]: 'stencilOpFront',\n  [GL.STENCIL_PASS_DEPTH_PASS]: 'stencilOpFront',\n  [GL.STENCIL_BACK_FAIL]: 'stencilOpBack',\n  [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: 'stencilOpBack',\n  [GL.STENCIL_BACK_PASS_DEPTH_PASS]: 'stencilOpBack',\n  [GL.VIEWPORT]: (gl, value) => gl.viewport(...value),\n\n  // WEBGL1 PIXEL PACK/UNPACK MODES\n  [GL.PACK_ALIGNMENT]: pixelStorei,\n  [GL.UNPACK_ALIGNMENT]: pixelStorei,\n  [GL.UNPACK_FLIP_Y_WEBGL]: pixelStorei,\n  [GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL]: pixelStorei,\n  [GL.UNPACK_COLORSPACE_CONVERSION_WEBGL]: pixelStorei,\n\n  // WEBGL2 PIXEL PACK/UNPACK MODES\n  // RASTERIZER_DISCARD ...\n  [GL.PACK_ROW_LENGTH]: pixelStorei,\n  [GL.PACK_SKIP_PIXELS]: pixelStorei,\n  [GL.PACK_SKIP_ROWS]: pixelStorei,\n  [GL.READ_FRAMEBUFFER_BINDING]: readFramebuffer,\n  [GL.UNPACK_ROW_LENGTH]: pixelStorei,\n  [GL.UNPACK_IMAGE_HEIGHT]: pixelStorei,\n  [GL.UNPACK_SKIP_PIXELS]: pixelStorei,\n  [GL.UNPACK_SKIP_ROWS]: pixelStorei,\n  [GL.UNPACK_SKIP_IMAGES]: pixelStorei,\n\n  // Function-style setters\n  framebuffer: (gl, framebuffer) => {\n    // accepts 1) a WebGLFramebuffer 2) null (default framebuffer), or 3) luma.gl Framebuffer class\n    // framebuffer is null when restoring to default framebuffer, otherwise use the WebGL handle.\n    const handle = framebuffer && 'handle' in framebuffer ? framebuffer.handle : framebuffer;\n    return gl.bindFramebuffer(GL.FRAMEBUFFER, handle);\n  },\n  blend: (gl, value) => (value ? gl.enable(GL.BLEND) : gl.disable(GL.BLEND)),\n  blendColor: (gl, value) => gl.blendColor(...value),\n  blendEquation: (gl, args) => {\n    args = isArray(args) ? args : [args, args];\n    gl.blendEquationSeparate(...args);\n  },\n  blendFunc: (gl, args) => {\n    args = isArray(args) && args.length === 2 ? [...args, ...args] : args;\n    gl.blendFuncSeparate(...args);\n  },\n\n  clearColor: (gl, value) => gl.clearColor(...value),\n  clearDepth: (gl, value) => gl.clearDepth(value),\n  clearStencil: (gl, value) => gl.clearStencil(value),\n\n  colorMask: (gl, value) => gl.colorMask(...value),\n\n  cull: (gl, value) => (value ? gl.enable(GL.CULL_FACE) : gl.disable(GL.CULL_FACE)),\n  cullFace: (gl, value) => gl.cullFace(value),\n\n  depthTest: (gl, value) => (value ? gl.enable(GL.DEPTH_TEST) : gl.disable(GL.DEPTH_TEST)),\n  depthFunc: (gl, value) => gl.depthFunc(value),\n  depthMask: (gl, value) => gl.depthMask(value),\n  depthRange: (gl, value) => gl.depthRange(...value),\n\n  dither: (gl, value) => (value ? gl.enable(GL.DITHER) : gl.disable(GL.DITHER)),\n\n  derivativeHint: (gl, value) => {\n    // gl1: 'OES_standard_derivatives'\n    gl.hint(GL.FRAGMENT_SHADER_DERIVATIVE_HINT, value);\n  },\n\n  frontFace: (gl, value) => gl.frontFace(value),\n\n  mipmapHint: (gl, value) => gl.hint(GL.GENERATE_MIPMAP_HINT, value),\n\n  lineWidth: (gl, value) => gl.lineWidth(value),\n\n  polygonOffsetFill: (gl, value) =>\n    value ? gl.enable(GL.POLYGON_OFFSET_FILL) : gl.disable(GL.POLYGON_OFFSET_FILL),\n  polygonOffset: (gl, value) => gl.polygonOffset(...value),\n\n  sampleCoverage: (gl, value) => gl.sampleCoverage(...value),\n\n  scissorTest: (gl, value) => (value ? gl.enable(GL.SCISSOR_TEST) : gl.disable(GL.SCISSOR_TEST)),\n  scissor: (gl, value) => gl.scissor(...value),\n\n  stencilTest: (gl, value) => (value ? gl.enable(GL.STENCIL_TEST) : gl.disable(GL.STENCIL_TEST)),\n  stencilMask: (gl, value) => {\n    value = isArray(value) ? value : [value, value];\n    const [mask, backMask] = value;\n    gl.stencilMaskSeparate(GL.FRONT, mask);\n    gl.stencilMaskSeparate(GL.BACK, backMask);\n  },\n  stencilFunc: (gl, args) => {\n    args = isArray(args) && args.length === 3 ? [...args, ...args] : args;\n    const [func, ref, mask, backFunc, backRef, backMask] = args;\n    gl.stencilFuncSeparate(GL.FRONT, func, ref, mask);\n    gl.stencilFuncSeparate(GL.BACK, backFunc, backRef, backMask);\n  },\n  stencilOp: (gl, args) => {\n    args = isArray(args) && args.length === 3 ? [...args, ...args] : args;\n    const [sfail, dpfail, dppass, backSfail, backDpfail, backDppass] = args;\n    gl.stencilOpSeparate(GL.FRONT, sfail, dpfail, dppass);\n    gl.stencilOpSeparate(GL.BACK, backSfail, backDpfail, backDppass);\n  },\n\n  viewport: (gl, value) => gl.viewport(...value)\n};\n\nfunction getValue(glEnum, values, cache) {\n  return values[glEnum] !== undefined ? values[glEnum] : cache[glEnum];\n}\n\n// COMPOSITE_WEBGL_PARAMETER_\nexport const GL_COMPOSITE_PARAMETER_SETTERS = {\n  blendEquation: (gl, values, cache) =>\n    gl.blendEquationSeparate(\n      getValue(GL.BLEND_EQUATION_RGB, values, cache),\n      getValue(GL.BLEND_EQUATION_ALPHA, values, cache)\n    ),\n  blendFunc: (gl, values, cache) =>\n    gl.blendFuncSeparate(\n      getValue(GL.BLEND_SRC_RGB, values, cache),\n      getValue(GL.BLEND_DST_RGB, values, cache),\n      getValue(GL.BLEND_SRC_ALPHA, values, cache),\n      getValue(GL.BLEND_DST_ALPHA, values, cache)\n    ),\n  polygonOffset: (gl, values, cache) =>\n    gl.polygonOffset(\n      getValue(GL.POLYGON_OFFSET_FACTOR, values, cache),\n      getValue(GL.POLYGON_OFFSET_UNITS, values, cache)\n    ),\n  sampleCoverage: (gl, values, cache) =>\n    gl.sampleCoverage(\n      getValue(GL.SAMPLE_COVERAGE_VALUE, values, cache),\n      getValue(GL.SAMPLE_COVERAGE_INVERT, values, cache)\n    ),\n  stencilFuncFront: (gl, values, cache) =>\n    gl.stencilFuncSeparate(\n      GL.FRONT,\n      getValue(GL.STENCIL_FUNC, values, cache),\n      getValue(GL.STENCIL_REF, values, cache),\n      getValue(GL.STENCIL_VALUE_MASK, values, cache)\n    ),\n  stencilFuncBack: (gl, values, cache) =>\n    gl.stencilFuncSeparate(\n      GL.BACK,\n      getValue(GL.STENCIL_BACK_FUNC, values, cache),\n      getValue(GL.STENCIL_BACK_REF, values, cache),\n      getValue(GL.STENCIL_BACK_VALUE_MASK, values, cache)\n    ),\n  stencilOpFront: (gl, values, cache) =>\n    gl.stencilOpSeparate(\n      GL.FRONT,\n      getValue(GL.STENCIL_FAIL, values, cache),\n      getValue(GL.STENCIL_PASS_DEPTH_FAIL, values, cache),\n      getValue(GL.STENCIL_PASS_DEPTH_PASS, values, cache)\n    ),\n  stencilOpBack: (gl, values, cache) =>\n    gl.stencilOpSeparate(\n      GL.BACK,\n      getValue(GL.STENCIL_BACK_FAIL, values, cache),\n      getValue(GL.STENCIL_BACK_PASS_DEPTH_FAIL, values, cache),\n      getValue(GL.STENCIL_BACK_PASS_DEPTH_PASS, values, cache)\n    )\n};\n\n// Setter functions intercepted for cache updates\nexport const GL_HOOKED_SETTERS = {\n  // GENERIC SETTERS\n\n  enable: (update, capability) =>\n    update({\n      [capability]: true\n    }),\n  disable: (update, capability) =>\n    update({\n      [capability]: false\n    }),\n  pixelStorei: (update, pname, value) =>\n    update({\n      [pname]: value\n    }),\n  hint: (update, pname, hint) =>\n    update({\n      [pname]: hint\n    }),\n\n  // SPECIFIC SETTERS\n\n  bindFramebuffer: (update, target, framebuffer) => {\n    switch (target) {\n      case GL.FRAMEBUFFER:\n        return update({\n          [GL.DRAW_FRAMEBUFFER_BINDING]: framebuffer,\n          [GL.READ_FRAMEBUFFER_BINDING]: framebuffer\n        });\n      case GL.DRAW_FRAMEBUFFER:\n        return update({[GL.DRAW_FRAMEBUFFER_BINDING]: framebuffer});\n      case GL.READ_FRAMEBUFFER:\n        return update({[GL.READ_FRAMEBUFFER_BINDING]: framebuffer});\n      default:\n        return null;\n    }\n  },\n  blendColor: (update, r, g, b, a) =>\n    update({\n      [GL.BLEND_COLOR]: new Float32Array([r, g, b, a])\n    }),\n\n  blendEquation: (update, mode) =>\n    update({\n      [GL.BLEND_EQUATION_RGB]: mode,\n      [GL.BLEND_EQUATION_ALPHA]: mode\n    }),\n\n  blendEquationSeparate: (update, modeRGB, modeAlpha) =>\n    update({\n      [GL.BLEND_EQUATION_RGB]: modeRGB,\n      [GL.BLEND_EQUATION_ALPHA]: modeAlpha\n    }),\n\n  blendFunc: (update, src, dst) =>\n    update({\n      [GL.BLEND_SRC_RGB]: src,\n      [GL.BLEND_DST_RGB]: dst,\n      [GL.BLEND_SRC_ALPHA]: src,\n      [GL.BLEND_DST_ALPHA]: dst\n    }),\n\n  blendFuncSeparate: (update, srcRGB, dstRGB, srcAlpha, dstAlpha) =>\n    update({\n      [GL.BLEND_SRC_RGB]: srcRGB,\n      [GL.BLEND_DST_RGB]: dstRGB,\n      [GL.BLEND_SRC_ALPHA]: srcAlpha,\n      [GL.BLEND_DST_ALPHA]: dstAlpha\n    }),\n\n  clearColor: (update, r, g, b, a) =>\n    update({\n      [GL.COLOR_CLEAR_VALUE]: new Float32Array([r, g, b, a])\n    }),\n\n  clearDepth: (update, depth) =>\n    update({\n      [GL.DEPTH_CLEAR_VALUE]: depth\n    }),\n\n  clearStencil: (update, s) =>\n    update({\n      [GL.STENCIL_CLEAR_VALUE]: s\n    }),\n\n  colorMask: (update, r, g, b, a) =>\n    update({\n      [GL.COLOR_WRITEMASK]: [r, g, b, a]\n    }),\n\n  cullFace: (update, mode) =>\n    update({\n      [GL.CULL_FACE_MODE]: mode\n    }),\n\n  depthFunc: (update, func) =>\n    update({\n      [GL.DEPTH_FUNC]: func\n    }),\n\n  depthRange: (update, zNear, zFar) =>\n    update({\n      [GL.DEPTH_RANGE]: new Float32Array([zNear, zFar])\n    }),\n\n  depthMask: (update, mask) =>\n    update({\n      [GL.DEPTH_WRITEMASK]: mask\n    }),\n\n  frontFace: (update, face) =>\n    update({\n      [GL.FRONT_FACE]: face\n    }),\n\n  lineWidth: (update, width) =>\n    update({\n      [GL.LINE_WIDTH]: width\n    }),\n\n  polygonOffset: (update, factor, units) =>\n    update({\n      [GL.POLYGON_OFFSET_FACTOR]: factor,\n      [GL.POLYGON_OFFSET_UNITS]: units\n    }),\n\n  sampleCoverage: (update, value, invert) =>\n    update({\n      [GL.SAMPLE_COVERAGE_VALUE]: value,\n      [GL.SAMPLE_COVERAGE_INVERT]: invert\n    }),\n\n  scissor: (update, x, y, width, height) =>\n    update({\n      [GL.SCISSOR_BOX]: new Int32Array([x, y, width, height])\n    }),\n\n  stencilMask: (update, mask) =>\n    update({\n      [GL.STENCIL_WRITEMASK]: mask,\n      [GL.STENCIL_BACK_WRITEMASK]: mask\n    }),\n\n  stencilMaskSeparate: (update, face, mask) =>\n    update({\n      [face === GL.FRONT ? GL.STENCIL_WRITEMASK : GL.STENCIL_BACK_WRITEMASK]: mask\n    }),\n\n  stencilFunc: (update, func, ref, mask) =>\n    update({\n      [GL.STENCIL_FUNC]: func,\n      [GL.STENCIL_REF]: ref,\n      [GL.STENCIL_VALUE_MASK]: mask,\n      [GL.STENCIL_BACK_FUNC]: func,\n      [GL.STENCIL_BACK_REF]: ref,\n      [GL.STENCIL_BACK_VALUE_MASK]: mask\n    }),\n\n  stencilFuncSeparate: (update, face, func, ref, mask) =>\n    update({\n      [face === GL.FRONT ? GL.STENCIL_FUNC : GL.STENCIL_BACK_FUNC]: func,\n      [face === GL.FRONT ? GL.STENCIL_REF : GL.STENCIL_BACK_REF]: ref,\n      [face === GL.FRONT ? GL.STENCIL_VALUE_MASK : GL.STENCIL_BACK_VALUE_MASK]: mask\n    }),\n\n  stencilOp: (update, fail, zfail, zpass) =>\n    update({\n      [GL.STENCIL_FAIL]: fail,\n      [GL.STENCIL_PASS_DEPTH_FAIL]: zfail,\n      [GL.STENCIL_PASS_DEPTH_PASS]: zpass,\n      [GL.STENCIL_BACK_FAIL]: fail,\n      [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: zfail,\n      [GL.STENCIL_BACK_PASS_DEPTH_PASS]: zpass\n    }),\n\n  stencilOpSeparate: (update, face, fail, zfail, zpass) =>\n    update({\n      [face === GL.FRONT ? GL.STENCIL_FAIL : GL.STENCIL_BACK_FAIL]: fail,\n      [face === GL.FRONT ? GL.STENCIL_PASS_DEPTH_FAIL : GL.STENCIL_BACK_PASS_DEPTH_FAIL]: zfail,\n      [face === GL.FRONT ? GL.STENCIL_PASS_DEPTH_PASS : GL.STENCIL_BACK_PASS_DEPTH_PASS]: zpass\n    }),\n\n  viewport: (update, x, y, width, height) =>\n    update({\n      [GL.VIEWPORT]: [x, y, width, height]\n    })\n};\n\n// GETTER TABLE - FOR READING OUT AN ENTIRE CONTEXT\n\nconst isEnabled = (gl, key) => gl.isEnabled(key);\n\n// Exceptions for any keys that cannot be queried by gl.getParameters\nexport const GL_PARAMETER_GETTERS = {\n  [GL.BLEND]: isEnabled,\n  [GL.CULL_FACE]: isEnabled,\n  [GL.DEPTH_TEST]: isEnabled,\n  [GL.DITHER]: isEnabled,\n  [GL.POLYGON_OFFSET_FILL]: isEnabled,\n  [GL.SAMPLE_ALPHA_TO_COVERAGE]: isEnabled,\n  [GL.SAMPLE_COVERAGE]: isEnabled,\n  [GL.SCISSOR_TEST]: isEnabled,\n  [GL.STENCIL_TEST]: isEnabled,\n\n  // WebGL 2\n  [GL.RASTERIZER_DISCARD]: isEnabled\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}