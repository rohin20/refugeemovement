{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getVertices = getVertices;\nexports.getCentroid = getCentroid;\nexports.idToPolygonGeo = idToPolygonGeo;\nObject.defineProperty(exports, \"h3GetResolution\", {\n  enumerable: true,\n  get: function get() {\n    return _h3Js.h3GetResolution;\n  }\n});\nObject.defineProperty(exports, \"h3IsValid\", {\n  enumerable: true,\n  get: function get() {\n    return _h3Js.h3IsValid;\n  }\n});\nexports.getHexFields = exports.isHexField = void 0;\nvar _h3Js = require(\"h3-js\");\nvar _defaultSettings = require(\"../../constants/default-settings\");\nvar _dataUtils = require(\"../../utils/data-utils\");\n\n// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n// get vertices should return [lon, lat]\nfunction getVertices(_ref) {\n  var id = _ref.id;\n  // always reverse it\n  return (0, _h3Js.h3ToGeoBoundary)(id, true);\n} // get centroid should return [lon, lat]\n\nfunction getCentroid(_ref2) {\n  var id = _ref2.id;\n  // always reverse it to [lng, lat]\n  return (0, _h3Js.h3ToGeo)(id).reverse();\n}\nfunction idToPolygonGeo(object, properties) {\n  if (!object || !object.id) {\n    return null;\n  }\n  var vertices = getVertices(object);\n  return {\n    geometry: {\n      coordinates: vertices,\n      type: 'LineString'\n    },\n    properties: properties\n  };\n}\nvar isHexField = function isHexField(field, fieldIdx, dataContainer) {\n  if (field.type !== _defaultSettings.ALL_FIELD_TYPES.string) {\n    return false;\n  }\n  var firstDP = dataContainer.find(function (d) {\n    return (0, _dataUtils.notNullorUndefined)(d.valueAt(fieldIdx));\n  }, true);\n  return firstDP && (0, _h3Js.h3IsValid)(firstDP.valueAt(fieldIdx));\n};\nexports.isHexField = isHexField;\nvar getHexFields = function getHexFields(fields, dataContainer) {\n  return fields.filter(function (f, i) {\n    return isHexField(f, i, dataContainer);\n  });\n};\nexports.getHexFields = getHexFields;","map":{"version":3,"names":["_h3Js","require","_defaultSettings","_dataUtils","getVertices","_ref","id","h3ToGeoBoundary","getCentroid","_ref2","h3ToGeo","reverse","idToPolygonGeo","object","properties","vertices","geometry","coordinates","type","isHexField","field","fieldIdx","dataContainer","ALL_FIELD_TYPES","string","firstDP","find","d","notNullorUndefined","valueAt","h3IsValid","getHexFields","fields","filter","f","i"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/kepler.gl/src/layers/h3-hexagon-layer/h3-utils.js"],"sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {h3GetResolution, h3IsValid, h3ToGeo, h3ToGeoBoundary} from 'h3-js';\nimport {ALL_FIELD_TYPES} from 'constants/default-settings';\nimport {notNullorUndefined} from 'utils/data-utils';\n\nexport {h3GetResolution, h3IsValid};\n\n// get vertices should return [lon, lat]\nexport function getVertices({id}) {\n  // always reverse it\n  return h3ToGeoBoundary(id, true);\n}\n\n// get centroid should return [lon, lat]\nexport function getCentroid({id}) {\n  // always reverse it to [lng, lat]\n  return h3ToGeo(id).reverse();\n}\n\nexport function idToPolygonGeo(object, properties) {\n  if (!object || !object.id) {\n    return null;\n  }\n\n  const vertices = getVertices(object);\n\n  return {\n    geometry: {\n      coordinates: vertices,\n      type: 'LineString'\n    },\n    properties\n  };\n}\n\nexport const isHexField = (field, fieldIdx, dataContainer) => {\n  if (field.type !== ALL_FIELD_TYPES.string) {\n    return false;\n  }\n\n  const firstDP = dataContainer.find(d => notNullorUndefined(d.valueAt(fieldIdx)), true);\n  return firstDP && h3IsValid(firstDP.valueAt(fieldIdx));\n};\n\nexport const getHexFields = (fields, dataContainer) =>\n  fields.filter((f, i) => isHexField(f, i, dataContainer));\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAoBA,IAAAA,KAAA,GAAAC,OAAA;AACA,IAAAC,gBAAA,GAAAD,OAAA;AACA,IAAAE,UAAA,GAAAF,OAAA;;AAtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACO,SAASG,WAATA,CAAAC,IAAA,EAA2B;EAAA,IAALC,EAAK,GAAAD,IAAA,CAALC,EAAK;EAChC;EACA,OAAO,IAAAN,KAAA,CAAAO,eAAA,EAAgBD,EAAhB,EAAoB,IAApB,CAAP;AACD,C,CAED;;AACO,SAASE,WAATA,CAAAC,KAAA,EAA2B;EAAA,IAALH,EAAK,GAAAG,KAAA,CAALH,EAAK;EAChC;EACA,OAAO,IAAAN,KAAA,CAAAU,OAAA,EAAQJ,EAAR,EAAYK,OAAZ,EAAP;AACD;AAEM,SAASC,cAATA,CAAwBC,MAAxB,EAAgCC,UAAhC,EAA4C;EACjD,IAAI,CAACD,MAAD,IAAW,CAACA,MAAM,CAACP,EAAvB,EAA2B;IACzB,OAAO,IAAP;EACD;EAED,IAAMS,QAAQ,GAAGX,WAAW,CAACS,MAAD,CAA5B;EAEA,OAAO;IACLG,QAAQ,EAAE;MACRC,WAAW,EAAEF,QADL;MAERG,IAAI,EAAE;IAFE,CADL;IAKLJ,UAAU,EAAVA;EALK,CAAP;AAOD;AAEM,IAAMK,UAAU,GAAG,SAAbA,UAAaA,CAACC,KAAD,EAAQC,QAAR,EAAkBC,aAAlB,EAAoC;EAC5D,IAAIF,KAAK,CAACF,IAAN,KAAehB,gBAAA,CAAAqB,eAAA,CAAgBC,MAAnC,EAA2C;IACzC,OAAO,KAAP;EACD;EAED,IAAMC,OAAO,GAAGH,aAAa,CAACI,IAAd,CAAmB,UAAAC,CAAC;IAAA,OAAI,IAAAxB,UAAA,CAAAyB,kBAAA,EAAmBD,CAAC,CAACE,OAAF,CAAUR,QAAV,CAAnB,CAAJ;EAAA,CAApB,EAAiE,IAAjE,CAAhB;EACA,OAAOI,OAAO,IAAI,IAAAzB,KAAA,CAAA8B,SAAA,EAAUL,OAAO,CAACI,OAAR,CAAgBR,QAAhB,CAAV,CAAlB;AACD,CAPM;;AASA,IAAMU,YAAY,GAAG,SAAfA,YAAeA,CAACC,MAAD,EAASV,aAAT;EAAA,OAC1BU,MAAM,CAACC,MAAP,CAAc,UAACC,CAAD,EAAIC,CAAJ;IAAA,OAAUhB,UAAU,CAACe,CAAD,EAAIC,CAAJ,EAAOb,aAAP,CAApB;EAAA,CAAd,CAD0B;AAAA,CAArB"},"metadata":{},"sourceType":"script","externalDependencies":[]}