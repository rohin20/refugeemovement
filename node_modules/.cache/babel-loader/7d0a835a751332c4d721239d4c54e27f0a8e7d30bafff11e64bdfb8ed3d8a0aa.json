{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getUpdateVisDataPayload = getUpdateVisDataPayload;\nexports[\"default\"] = GeocoderPanelFactory;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\nvar _processors = require(\"@kepler.gl/processors\");\nvar _core = require(\"@deck.gl/core\");\nvar _schemas = _interopRequireDefault(require(\"@kepler.gl/schemas\"));\nvar _utils = require(\"@kepler.gl/utils\");\nvar _geocoder = _interopRequireDefault(require(\"./geocoder/geocoder\"));\nvar _constants = require(\"@kepler.gl/constants\");\nvar _templateObject;\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar ICON_LAYER = {\n  id: _constants.GEOCODER_LAYER_ID,\n  type: 'icon',\n  config: {\n    label: 'Geocoder Layer',\n    color: _constants.GEOCODER_ICON_COLOR,\n    dataId: _constants.GEOCODER_DATASET_NAME,\n    columns: {\n      lat: 'lt',\n      lng: 'ln',\n      icon: 'icon',\n      label: 'text'\n    },\n    isVisible: true,\n    hidden: true,\n    visConfig: {\n      radius: _constants.GEOCODER_ICON_SIZE\n    }\n  }\n};\nvar PARSED_CONFIG = _schemas[\"default\"].parseSavedConfig({\n  version: 'v1',\n  config: {\n    visState: {\n      layers: [ICON_LAYER]\n    }\n  }\n});\nvar StyledGeocoderPanel = _styledComponents[\"default\"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  position: absolute;\\n  top: \", \"px;\\n  right: \", \"px;\\n  width: \", \"px;\\n  box-shadow: \", \";\\n  z-index: 100;\\n\"])), function (props) {\n  return props.theme.geocoderTop;\n}, function (props) {\n  return props.theme.geocoderRight;\n}, function (props) {\n  return Number.isFinite(props.width) ? props.width : props.theme.geocoderWidth;\n}, function (props) {\n  return props.theme.boxShadow;\n});\nfunction generateGeocoderDataset(lat, lon, text) {\n  return {\n    data: (0, _processors.processRowObject)([{\n      lt: lat,\n      ln: lon,\n      icon: 'place',\n      text: text\n    }]),\n    id: _constants.GEOCODER_DATASET_NAME,\n    info: {\n      hidden: true,\n      id: _constants.GEOCODER_DATASET_NAME,\n      label: _constants.GEOCODER_DATASET_NAME\n    }\n  };\n}\nfunction isValid(key) {\n  return /pk\\..*\\..*/.test(key);\n}\nfunction getUpdateVisDataPayload(lat, lon, text) {\n  return [[generateGeocoderDataset(lat, lon, text)], {\n    keepExistingConfig: true\n  }, PARSED_CONFIG];\n}\nfunction GeocoderPanelFactory() {\n  var GeocoderPanel = /*#__PURE__*/function (_Component) {\n    (0, _inherits2[\"default\"])(GeocoderPanel, _Component);\n    var _super = _createSuper(GeocoderPanel);\n    function GeocoderPanel() {\n      var _this;\n      (0, _classCallCheck2[\"default\"])(this, GeocoderPanel);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _super.call.apply(_super, [this].concat(args));\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"defaultProps\", {\n        transitionDuration: 3000\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onSelected\", function () {\n        var _this$props;\n        var viewport = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        var geoItem = arguments.length > 1 ? arguments[1] : undefined;\n        var _geoItem$center = (0, _slicedToArray2[\"default\"])(geoItem.center, 2),\n          lon = _geoItem$center[0],\n          lat = _geoItem$center[1],\n          text = geoItem.text,\n          bbox = geoItem.bbox;\n        _this.removeGeocoderDataset();\n        (_this$props = _this.props).updateVisData.apply(_this$props, (0, _toConsumableArray2[\"default\"])(getUpdateVisDataPayload(lat, lon, text)));\n        var bounds = bbox || [lon - _constants.GEOCODER_GEO_OFFSET, lat - _constants.GEOCODER_GEO_OFFSET, lon + _constants.GEOCODER_GEO_OFFSET, lat + _constants.GEOCODER_GEO_OFFSET];\n        var centerAndZoom = (0, _utils.getCenterAndZoomFromBounds)(bounds, {\n          width: _this.props.mapState.width,\n          height: _this.props.mapState.height\n        });\n        if (!centerAndZoom) {\n          // failed to fit bounds\n          return;\n        }\n        _this.props.updateMap(_objectSpread(_objectSpread({\n          latitude: centerAndZoom.center[1],\n          longitude: centerAndZoom.center[0]\n        }, Number.isFinite(centerAndZoom.zoom) ? {\n          zoom: centerAndZoom.zoom\n        } : {}), {}, {\n          pitch: 0,\n          bearing: 0,\n          transitionDuration: _this.props.transitionDuration,\n          transitionInterpolator: new _core.FlyToInterpolator()\n        }));\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"removeMarker\", function () {\n        _this.removeGeocoderDataset();\n      });\n      return _this;\n    }\n    (0, _createClass2[\"default\"])(GeocoderPanel, [{\n      key: \"removeGeocoderDataset\",\n      value: function removeGeocoderDataset() {\n        this.props.removeDataset(_constants.GEOCODER_DATASET_NAME);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props2 = this.props,\n          isGeocoderEnabled = _this$props2.isGeocoderEnabled,\n          mapboxApiAccessToken = _this$props2.mapboxApiAccessToken,\n          width = _this$props2.width;\n        return /*#__PURE__*/_react[\"default\"].createElement(StyledGeocoderPanel, {\n          className: \"geocoder-panel\",\n          width: width,\n          style: {\n            display: isGeocoderEnabled ? 'block' : 'none'\n          }\n        }, isValid(mapboxApiAccessToken) && /*#__PURE__*/_react[\"default\"].createElement(_geocoder[\"default\"], {\n          mapboxApiAccessToken: mapboxApiAccessToken,\n          onSelected: this.onSelected,\n          onDeleteMarker: this.removeMarker,\n          width: width\n        }));\n      }\n    }]);\n    return GeocoderPanel;\n  }(_react.Component);\n  return GeocoderPanel;\n}","map":{"version":3,"names":["_toConsumableArray2","_interopRequireDefault","require","_slicedToArray2","_classCallCheck2","_createClass2","_assertThisInitialized2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_core","_schemas","_utils","_geocoder","_constants","_templateObject","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","hidden","target","i","arguments","length","source","forEach","key","_defineProperty2","getOwnPropertyDescriptors","defineProperties","defineProperty","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","sham","Proxy","Boolean","prototype","valueOf","call","e","id","GEOCODER_LAYER_ID","type","config","label","color","GEOCODER_ICON_COLOR","dataId","GEOCODER_DATASET_NAME","columns","lat","icon","isVisible","visConfig","radius","GEOCODER_ICON_SIZE","PARSED_CONFIG","parseSavedConfig","version","visState","layers","ICON_LAYER","StyledGeocoderPanel","_styledComponents","div","_taggedTemplateLiteral2","props","theme","geocoderTop","geocoderRight","Number","isFinite","width","geocoderWidth","boxShadow","data","_processors","processRowObject","lt","ln","lon","info","test","generateGeocoderDataset","text","keepExistingConfig","GeocoderPanelFactory","GeocoderPanel","_Component","_this","_len","args","Array","_key","_super","concat","transitionDuration","viewport","undefined","geoItem","_geoItem$center","bbox","removeGeocoderDataset","_this$props","updateVisData","getUpdateVisDataPayload","bounds","GEOCODER_GEO_OFFSET","centerAndZoom","getCenterAndZoomFromBounds","mapState","height","updateMap","latitude","center","longitude","zoom","pitch","bearing","transitionInterpolator","FlyToInterpolator","value","removeDataset","render","isGeocoderEnabled","_this$props2","mapboxApiAccessToken"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/components/src/geocoder-panel.tsx"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {Component, ComponentType} from 'react';\nimport styled from 'styled-components';\nimport {processRowObject} from '@kepler.gl/processors';\nimport {FlyToInterpolator} from '@deck.gl/core';\nimport KeplerGlSchema from '@kepler.gl/schemas';\nimport {getCenterAndZoomFromBounds} from '@kepler.gl/utils';\n\nimport Geocoder, {Result} from './geocoder/geocoder';\nimport {\n  GEOCODER_DATASET_NAME,\n  GEOCODER_LAYER_ID,\n  GEOCODER_GEO_OFFSET,\n  GEOCODER_ICON_COLOR,\n  GEOCODER_ICON_SIZE\n} from '@kepler.gl/constants';\nimport {MapState, Viewport} from '@kepler.gl/types';\n\nconst ICON_LAYER = {\n  id: GEOCODER_LAYER_ID,\n  type: 'icon',\n  config: {\n    label: 'Geocoder Layer',\n    color: GEOCODER_ICON_COLOR,\n    dataId: GEOCODER_DATASET_NAME,\n    columns: {\n      lat: 'lt',\n      lng: 'ln',\n      icon: 'icon',\n      label: 'text'\n    },\n    isVisible: true,\n    hidden: true,\n    visConfig: {\n      radius: GEOCODER_ICON_SIZE\n    }\n  }\n};\n\nconst PARSED_CONFIG = KeplerGlSchema.parseSavedConfig({\n  version: 'v1',\n  config: {\n    visState: {\n      layers: [ICON_LAYER]\n    }\n  }\n});\n\ninterface StyledGeocoderPanelProps {\n  width?: number;\n}\n\nconst StyledGeocoderPanel = styled.div<StyledGeocoderPanelProps>`\n  position: absolute;\n  top: ${props => props.theme.geocoderTop}px;\n  right: ${props => props.theme.geocoderRight}px;\n  width: ${props => (Number.isFinite(props.width) ? props.width : props.theme.geocoderWidth)}px;\n  box-shadow: ${props => props.theme.boxShadow};\n  z-index: 100;\n`;\n\nfunction generateGeocoderDataset(lat, lon, text) {\n  return {\n    data: processRowObject([\n      {\n        lt: lat,\n        ln: lon,\n        icon: 'place',\n        text\n      }\n    ]),\n    id: GEOCODER_DATASET_NAME,\n    info: {\n      hidden: true,\n      id: GEOCODER_DATASET_NAME,\n      label: GEOCODER_DATASET_NAME\n    }\n  };\n}\n\nfunction isValid(key) {\n  return /pk\\..*\\..*/.test(key);\n}\n\nexport function getUpdateVisDataPayload(lat, lon, text) {\n  return [\n    [generateGeocoderDataset(lat, lon, text)],\n    {\n      keepExistingConfig: true\n    },\n    PARSED_CONFIG\n  ];\n}\n\ninterface GeocoderPanelProps {\n  isGeocoderEnabled: boolean;\n  mapState: MapState;\n  mapboxApiAccessToken: string;\n  updateVisData: Function;\n  removeDataset: Function;\n  updateMap: Function;\n\n  transitionDuration?: number;\n  width?: number;\n}\n\nexport default function GeocoderPanelFactory(): ComponentType<GeocoderPanelProps> {\n  class GeocoderPanel extends Component<GeocoderPanelProps> {\n    defaultProps = {\n      transitionDuration: 3000\n    };\n\n    removeGeocoderDataset() {\n      this.props.removeDataset(GEOCODER_DATASET_NAME);\n    }\n\n    onSelected = (viewport: Viewport | null = null, geoItem: Result) => {\n      const {\n        center: [lon, lat],\n        text,\n        bbox\n      } = geoItem;\n      this.removeGeocoderDataset();\n      this.props.updateVisData(...getUpdateVisDataPayload(lat, lon, text));\n      const bounds = bbox || [\n        lon - GEOCODER_GEO_OFFSET,\n        lat - GEOCODER_GEO_OFFSET,\n        lon + GEOCODER_GEO_OFFSET,\n        lat + GEOCODER_GEO_OFFSET\n      ];\n      const centerAndZoom = getCenterAndZoomFromBounds(bounds, {\n        width: this.props.mapState.width,\n        height: this.props.mapState.height\n      });\n\n      if (!centerAndZoom) {\n        // failed to fit bounds\n        return;\n      }\n\n      this.props.updateMap({\n        latitude: centerAndZoom.center[1],\n        longitude: centerAndZoom.center[0],\n        // For marginal or invalid bounds, zoom may be NaN. Make sure to provide a valid value in order\n        // to avoid corrupt state and potential crashes as zoom is expected to be a number\n        ...(Number.isFinite(centerAndZoom.zoom) ? {zoom: centerAndZoom.zoom} : {}),\n        pitch: 0,\n        bearing: 0,\n        transitionDuration: this.props.transitionDuration,\n        transitionInterpolator: new FlyToInterpolator()\n      });\n    };\n\n    removeMarker = () => {\n      this.removeGeocoderDataset();\n    };\n\n    render() {\n      const {isGeocoderEnabled, mapboxApiAccessToken, width} = this.props;\n      return (\n        <StyledGeocoderPanel\n          className=\"geocoder-panel\"\n          width={width}\n          style={{display: isGeocoderEnabled ? 'block' : 'none'}}\n        >\n          {isValid(mapboxApiAccessToken) && (\n            <Geocoder\n              mapboxApiAccessToken={mapboxApiAccessToken}\n              onSelected={this.onSelected}\n              onDeleteMarker={this.removeMarker}\n              width={width}\n            />\n          )}\n        </StyledGeocoderPanel>\n      );\n    }\n  }\n\n  return GeocoderPanel;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}