{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.hexagonVisConfigs = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _layers = require(\"@deck.gl/layers\");\nvar _aggregationLayer = _interopRequireDefault(require(\"../aggregation-layer\"));\nvar _deckglLayers = require(\"@kepler.gl/deckgl-layers\");\nvar _hexagonUtils = require(\"./hexagon-utils\");\nvar _hexagonLayerIcon = _interopRequireDefault(require(\"./hexagon-layer-icon\"));\nvar _utils = require(\"@kepler.gl/utils\");\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar hexagonVisConfigs = {\n  opacity: 'opacity',\n  worldUnitSize: 'worldUnitSize',\n  resolution: 'resolution',\n  colorRange: 'colorRange',\n  coverage: 'coverage',\n  sizeRange: 'elevationRange',\n  percentile: 'percentile',\n  elevationPercentile: 'elevationPercentile',\n  elevationScale: 'elevationScale',\n  enableElevationZoomFactor: 'enableElevationZoomFactor',\n  colorAggregation: 'colorAggregation',\n  sizeAggregation: 'sizeAggregation',\n  enable3d: 'enable3d'\n};\nexports.hexagonVisConfigs = hexagonVisConfigs;\nvar HexagonLayer = /*#__PURE__*/function (_AggregationLayer) {\n  (0, _inherits2[\"default\"])(HexagonLayer, _AggregationLayer);\n  var _super = _createSuper(HexagonLayer);\n  function HexagonLayer(props) {\n    var _this;\n    (0, _classCallCheck2[\"default\"])(this, HexagonLayer);\n    _this = _super.call(this, props);\n    _this.registerVisConfig(hexagonVisConfigs);\n    _this.visConfigSettings.worldUnitSize.label = 'columns.hexagon.worldUnitSize';\n    return _this;\n  }\n  (0, _createClass2[\"default\"])(HexagonLayer, [{\n    key: \"type\",\n    get: function get() {\n      return 'hexagon';\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return 'Hexbin';\n    }\n  }, {\n    key: \"layerIcon\",\n    get: function get() {\n      return _hexagonLayerIcon[\"default\"];\n    }\n  }, {\n    key: \"renderLayer\",\n    value: function renderLayer(opts) {\n      var data = opts.data,\n        objectHovered = opts.objectHovered,\n        mapState = opts.mapState;\n      var zoomFactor = this.getZoomFactor(mapState);\n      var visConfig = this.config.visConfig;\n      var radius = visConfig.worldUnitSize * 1000;\n      var hoveredObject = this.hasHoveredObject(objectHovered);\n      return [new _deckglLayers.EnhancedHexagonLayer(_objectSpread(_objectSpread(_objectSpread({}, this.getDefaultAggregationLayerProp(opts)), data), {}, {\n        wrapLongitude: false,\n        radius: radius\n      }))].concat((0, _toConsumableArray2[\"default\"])(hoveredObject && !visConfig.enable3d ? [new _layers.GeoJsonLayer(_objectSpread(_objectSpread({}, this.getDefaultHoverLayerProps()), {}, {\n        wrapLongitude: false,\n        data: [(0, _hexagonUtils.hexagonToPolygonGeo)(hoveredObject, {}, radius * visConfig.coverage, mapState)].filter(function (d) {\n          return d;\n        }),\n        getLineColor: this.config.highlightColor,\n        lineWidthScale: (0, _utils.clamp)([1, 100], radius * 0.1 * zoomFactor)\n      }))] : []));\n    }\n  }]);\n  return HexagonLayer;\n}(_aggregationLayer[\"default\"]);\nexports[\"default\"] = HexagonLayer;","map":{"version":3,"names":["value","exports","hexagonVisConfigs","_defineProperty2","_interopRequireDefault","require","_toConsumableArray2","_classCallCheck2","_layers","_aggregationLayer","_deckglLayers","_hexagonUtils","_hexagonLayerIcon","_utils","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","worldUnitSize","resolution","coverage","sizeRange","elevationPercentile","enableElevationZoomFactor","colorAggregation","sizeAggregation","HexagonLayer","_AggregationLayer","_inherits2","props","_this","_super","call","registerVisConfig","_createClass2","get","visConfig","objectHovered","opts"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/layers/src/hexagon-layer/hexagon-layer.ts"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {GeoJsonLayer} from '@deck.gl/layers';\nimport AggregationLayer, {AggregationLayerConfig} from '../aggregation-layer';\nimport {EnhancedHexagonLayer} from '@kepler.gl/deckgl-layers';\nimport {hexagonToPolygonGeo} from './hexagon-utils';\nimport HexagonLayerIcon from './hexagon-layer-icon';\nimport {clamp} from '@kepler.gl/utils';\nimport {\n  VisConfigBoolean,\n  VisConfigColorRange,\n  VisConfigNumber,\n  VisConfigRange,\n  VisConfigSelection,\n  Merge\n} from '@kepler.gl/types';\nimport {AggregationTypes, ColorRange} from '@kepler.gl/constants';\n\nexport type HexagonLayerVisConfigSettings = {\n  opacity: VisConfigNumber;\n  worldUnitSize: VisConfigNumber;\n  resolution: VisConfigNumber;\n  colorRange: VisConfigColorRange;\n  coverage: VisConfigNumber;\n  sizeRange: VisConfigRange;\n  percentile: VisConfigRange;\n  elevationPercentile: VisConfigRange;\n  elevationScale: VisConfigNumber;\n  enableElevationZoomFactor: VisConfigBoolean;\n  colorAggregation: VisConfigSelection;\n  sizeAggregation: VisConfigSelection;\n  enable3d: VisConfigBoolean;\n};\n\nexport type HexagonLayerVisConfig = {\n  opacity: number;\n  worldUnitSize: number;\n  resolution: number;\n  colorRange: ColorRange;\n  coverage: number;\n  sizeRange: [number, number];\n  percentile: [number, number];\n  elevationPercentile: [number, number];\n  elevationScale: number;\n  enableElevationZoomFactor: boolean;\n  colorAggregation: AggregationTypes;\n  sizeAggregation: AggregationTypes;\n  enable3d: boolean;\n};\n\nexport type HexagonLayerConfig = Merge<AggregationLayerConfig, {visConfig: HexagonLayerVisConfig}>;\n\nexport const hexagonVisConfigs: {\n  opacity: 'opacity';\n  worldUnitSize: 'worldUnitSize';\n  resolution: 'resolution';\n  colorRange: 'colorRange';\n  coverage: 'coverage';\n  sizeRange: 'elevationRange';\n  percentile: 'percentile';\n  elevationPercentile: 'elevationPercentile';\n  elevationScale: 'elevationScale';\n  enableElevationZoomFactor: 'enableElevationZoomFactor';\n  colorAggregation: 'colorAggregation';\n  sizeAggregation: 'sizeAggregation';\n  enable3d: 'enable3d';\n} = {\n  opacity: 'opacity',\n  worldUnitSize: 'worldUnitSize',\n  resolution: 'resolution',\n  colorRange: 'colorRange',\n  coverage: 'coverage',\n  sizeRange: 'elevationRange',\n  percentile: 'percentile',\n  elevationPercentile: 'elevationPercentile',\n  elevationScale: 'elevationScale',\n  enableElevationZoomFactor: 'enableElevationZoomFactor',\n  colorAggregation: 'colorAggregation',\n  sizeAggregation: 'sizeAggregation',\n  enable3d: 'enable3d'\n};\n\nexport default class HexagonLayer extends AggregationLayer {\n  declare visConfigSettings: HexagonLayerVisConfigSettings;\n  declare config: HexagonLayerConfig;\n\n  constructor(props) {\n    super(props);\n\n    this.registerVisConfig(hexagonVisConfigs);\n    this.visConfigSettings.worldUnitSize.label = 'columns.hexagon.worldUnitSize';\n  }\n\n  get type(): 'hexagon' {\n    return 'hexagon';\n  }\n\n  get name(): 'Hexbin' {\n    return 'Hexbin';\n  }\n\n  get layerIcon() {\n    return HexagonLayerIcon;\n  }\n\n  renderLayer(opts) {\n    const {data, objectHovered, mapState} = opts;\n    const zoomFactor = this.getZoomFactor(mapState);\n    const {visConfig} = this.config;\n    const radius = visConfig.worldUnitSize * 1000;\n    const hoveredObject = this.hasHoveredObject(objectHovered);\n\n    return [\n      new EnhancedHexagonLayer({\n        ...this.getDefaultAggregationLayerProp(opts),\n        ...data,\n        wrapLongitude: false,\n        radius\n      }),\n\n      // render an outline of each hexagon if not extruded\n      ...(hoveredObject && !visConfig.enable3d\n        ? [\n            new GeoJsonLayer({\n              ...this.getDefaultHoverLayerProps(),\n              wrapLongitude: false,\n              data: [\n                hexagonToPolygonGeo(hoveredObject, {}, radius * visConfig.coverage, mapState)\n              ].filter(d => d),\n              getLineColor: this.config.highlightColor,\n              lineWidthScale: clamp([1, 100], radius * 0.1 * zoomFactor)\n            })\n          ]\n        : [])\n    ];\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;EAqBAA,KAAA;;AACAC,OAAA,cAAAA,OAAA,CAAAC,iBAAA;AACA,IAAAC,gBAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,mBAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,gBAAA,GAAAH,sBAAA,CAAAC,OAAA;;;;;AA6CO,IAAMG,OAAA,GAAAH,OAcZ,kBAAG;AAEF,IAAAI,iBAAe,GAAAL,sBAFb,CAAAC,OAAA;AAIF,IAAAK,aAAY,GAAAL,OAJV;AAMF,IAAAM,aAAW,GAAAN,OAAA,kBANT;AAQF,IAAAO,iBAAmB,GAAER,sBARnB,CAAAC,OAAA;AAUF,IAAAQ,MAAA,GAAAR,OAAA,mBAA2B;AAE3B,SAAAS,QAAeC,MAAE,EAAAC,cAZf;EAAA,IAAAC,IAAA,GAAAC,MAAA,CAAAD,IAAA,CAAAF,MAAA;EAAA,IAAAG,MAAA,CAAAC,qBAAA;IAAA,IAAAC,OAAA,GAAAF,MAAA,CAAAC,qBAAA,CAAAJ,MAAA;IAAA,IAAAC,cAAA,EAAAI,OAAA,GAAAA,OAAA,CAAAC,MAAA,WAAAC,GAAA;MAAA,OAAAJ,MAAA,CAAAK,wBAAA,CAAAR,MAAA,EAAAO,GAAA,EAAAE,UAAA;IAAA;IAAAP,IAAA,CAAAQ,IAAA,CAAAC,KAAA,CAAAT,IAAA,EAAAG,OAAA;EAAA;EAAA,OAAAH,IAAA;AAAA;AAAA,SAdGU,cAAAC,MAAA;EAAA,SAAAC,CAAA,MAAAA,CAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAF,CAAA;IAAA,IAAAG,MAAA,GAAAF,SAAA,CAAAD,CAAA,YAAAC,SAAA,CAAAD,CAAA;IAAA,IAAAA,CAAA;MAAAf,OAAA,CAAAI,MAAA,CAAAc,MAAA,SAAAC,OAAA,WAAAC,GAAA;QAAA,IAAA/B,gBAAA,aAAAyB,MAAA,EAAAM,GAAA,EAAAF,MAAA,CAAAE,GAAA;MAAA;IAAA,WAAAhB,MAAA,CAAAiB,yBAAA;MAAAjB,MAAA,CAAAkB,gBAAA,CAAAR,MAAA,EAAAV,MAAA,CAAAiB,yBAAA,CAAAH,MAAA;IAAA;MAAAlB,OAAA,CAAAI,MAAA,CAAAc,MAAA,GAAAC,OAAA,WAAAC,GAAA;QAAAhB,MAAA,CAAAmB,cAAA,CAAAT,MAAA,EAAAM,GAAA,EAAAhB,MAAA,CAAAK,wBAAA,CAAAS,MAAA,EAAAE,GAAA;MAAA;IAAA;EAAA;EAAA,OAAAN,MAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAkCLU,aAAA,iBAAmB;EAAAC,UAAA;;EAAAC,QAAA;EACjBC,SAAA;;EAEAC,mBAAK,uBAAkB;;EACvBC,yBAAA,EAAuB,2BAAsB;EAJ5BC,gBAAA;EAKlBC,eAAA;;;;AAGC,IAAAC,YAAO,gBAAP,UAAAC,iBAAA;EACD,IAAAC,UAAA,aAAAF,YAAA,EAAAC,iBAAA;;EAGC,SAAAD,aAAAG,KAAA;IACD,IAAAC,KAAA;;SAED,GAAAC,MAAA,CAAAC,IAAA,CAAgB,MAAAH,KAAA;IAEfC,KAAA,CAAAG,iBAAA,CAAAnD,iBAAA;;WAEDgD,KAAA;EAAkB;EAAA,IAAAI,aAAA,UACY,GAAAR,YADZ;IAEhBZ,GAAA,QAAM;IAFUqB,GAAA,WAGTA,GAHSC,CAAA,EAGI;MACpB,OAAM,SAAS;IACf;EAEA;IAIItB,GAAA;IACAqB,GAAA,WAAAA,IAAA;MAJF,OADF;IAaU;EACA;IAEUrB,GAAA;IAAAqB,GAAA,EAFJ,SAHRA,IAAA;MAME,OAAA3C,iBAAmB,UAAO;IAC1B;EAPF;IAYTsB,GAAA;;;QArDuCuB,aAAA,GAAAC,I"},"metadata":{},"sourceType":"script","externalDependencies":[]}