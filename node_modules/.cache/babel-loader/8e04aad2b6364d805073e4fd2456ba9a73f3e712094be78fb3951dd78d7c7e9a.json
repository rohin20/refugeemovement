{"ast":null,"code":"/*\nHTML escaping is the same as React's\n(on purpose.) Therefore, it has the following Copyright and Licensing:\n\nCopyright 2013-2014, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the LICENSE\nfile in the root directory of React's source tree.\n*/\nimport * as React from 'react';\nimport IntlMessageFormat from 'intl-messageformat';\nimport memoizeIntlConstructor from 'intl-format-cache';\nimport { invariant } from '@formatjs/intl-utils';\nvar ESCAPED_CHARS = {\n  38: '&amp;',\n  62: '&gt;',\n  60: '&lt;',\n  34: '&quot;',\n  39: '&#x27;'\n};\nvar UNSAFE_CHARS_REGEX = /[&><\"']/g;\nexport function escape(str) {\n  return ('' + str).replace(UNSAFE_CHARS_REGEX, function (match) {\n    return ESCAPED_CHARS[match.charCodeAt(0)];\n  });\n}\nexport function filterProps(props, whitelist) {\n  var defaults = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return whitelist.reduce(function (filtered, name) {\n    if (name in props) {\n      filtered[name] = props[name];\n    } else if (name in defaults) {\n      filtered[name] = defaults[name];\n    }\n    return filtered;\n  }, {});\n}\nexport function invariantIntlContext(intl) {\n  invariant(intl, '[React Intl] Could not find required `intl` object. ' + '<IntlProvider> needs to exist in the component ancestry.');\n}\nexport function createError(message, exception) {\n  var eMsg = exception ? \"\\n\".concat(exception.stack) : '';\n  return \"[React Intl] \".concat(message).concat(eMsg);\n}\nexport function defaultErrorHandler(error) {\n  if (process.env.NODE_ENV !== 'production') {\n    console.error(error);\n  }\n}\nexport var DEFAULT_INTL_CONFIG = {\n  formats: {},\n  messages: {},\n  timeZone: undefined,\n  textComponent: React.Fragment,\n  defaultLocale: 'en',\n  defaultFormats: {},\n  onError: defaultErrorHandler\n};\nexport function createIntlCache() {\n  return {\n    dateTime: {},\n    number: {},\n    message: {},\n    relativeTime: {},\n    pluralRules: {},\n    list: {},\n    displayNames: {}\n  };\n}\n/**\n * Create intl formatters and populate cache\n * @param cache explicit cache to prevent leaking memory\n */\nexport function createFormatters() {\n  var cache = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : createIntlCache();\n  var RelativeTimeFormat = Intl.RelativeTimeFormat;\n  var ListFormat = Intl.ListFormat;\n  var DisplayNames = Intl.DisplayNames;\n  return {\n    getDateTimeFormat: memoizeIntlConstructor(Intl.DateTimeFormat, cache.dateTime),\n    getNumberFormat: memoizeIntlConstructor(Intl.NumberFormat, cache.number),\n    getMessageFormat: memoizeIntlConstructor(IntlMessageFormat, cache.message),\n    getRelativeTimeFormat: memoizeIntlConstructor(RelativeTimeFormat, cache.relativeTime),\n    getPluralRules: memoizeIntlConstructor(Intl.PluralRules, cache.pluralRules),\n    getListFormat: memoizeIntlConstructor(ListFormat, cache.list),\n    getDisplayNames: memoizeIntlConstructor(DisplayNames, cache.displayNames)\n  };\n}\nexport function getNamedFormat(formats, type, name, onError) {\n  var formatType = formats && formats[type];\n  var format;\n  if (formatType) {\n    format = formatType[name];\n  }\n  if (format) {\n    return format;\n  }\n  onError(createError(\"No \".concat(type, \" format named: \").concat(name)));\n}","map":{"version":3,"names":["React","IntlMessageFormat","memoizeIntlConstructor","invariant","ESCAPED_CHARS","UNSAFE_CHARS_REGEX","escape","str","replace","match","charCodeAt","filterProps","props","whitelist","defaults","arguments","length","undefined","reduce","filtered","name","invariantIntlContext","intl","createError","message","exception","eMsg","concat","stack","defaultErrorHandler","error","process","env","NODE_ENV","console","DEFAULT_INTL_CONFIG","formats","messages","timeZone","textComponent","Fragment","defaultLocale","defaultFormats","onError","createIntlCache","dateTime","number","relativeTime","pluralRules","list","displayNames","createFormatters","cache","RelativeTimeFormat","Intl","ListFormat","DisplayNames","getDateTimeFormat","DateTimeFormat","getNumberFormat","NumberFormat","getMessageFormat","getRelativeTimeFormat","getPluralRules","PluralRules","getListFormat","getDisplayNames","getNamedFormat","type","formatType","format"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/react-intl/lib/utils.js"],"sourcesContent":["/*\nHTML escaping is the same as React's\n(on purpose.) Therefore, it has the following Copyright and Licensing:\n\nCopyright 2013-2014, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the LICENSE\nfile in the root directory of React's source tree.\n*/\nimport * as React from 'react';\nimport IntlMessageFormat from 'intl-messageformat';\nimport memoizeIntlConstructor from 'intl-format-cache';\nimport { invariant } from '@formatjs/intl-utils';\nconst ESCAPED_CHARS = {\n    38: '&amp;',\n    62: '&gt;',\n    60: '&lt;',\n    34: '&quot;',\n    39: '&#x27;',\n};\nconst UNSAFE_CHARS_REGEX = /[&><\"']/g;\nexport function escape(str) {\n    return ('' + str).replace(UNSAFE_CHARS_REGEX, match => ESCAPED_CHARS[match.charCodeAt(0)]);\n}\nexport function filterProps(props, whitelist, defaults = {}) {\n    return whitelist.reduce((filtered, name) => {\n        if (name in props) {\n            filtered[name] = props[name];\n        }\n        else if (name in defaults) {\n            filtered[name] = defaults[name];\n        }\n        return filtered;\n    }, {});\n}\nexport function invariantIntlContext(intl) {\n    invariant(intl, '[React Intl] Could not find required `intl` object. ' +\n        '<IntlProvider> needs to exist in the component ancestry.');\n}\nexport function createError(message, exception) {\n    const eMsg = exception ? `\\n${exception.stack}` : '';\n    return `[React Intl] ${message}${eMsg}`;\n}\nexport function defaultErrorHandler(error) {\n    if (process.env.NODE_ENV !== 'production') {\n        console.error(error);\n    }\n}\nexport const DEFAULT_INTL_CONFIG = {\n    formats: {},\n    messages: {},\n    timeZone: undefined,\n    textComponent: React.Fragment,\n    defaultLocale: 'en',\n    defaultFormats: {},\n    onError: defaultErrorHandler,\n};\nexport function createIntlCache() {\n    return {\n        dateTime: {},\n        number: {},\n        message: {},\n        relativeTime: {},\n        pluralRules: {},\n        list: {},\n        displayNames: {},\n    };\n}\n/**\n * Create intl formatters and populate cache\n * @param cache explicit cache to prevent leaking memory\n */\nexport function createFormatters(cache = createIntlCache()) {\n    const RelativeTimeFormat = Intl.RelativeTimeFormat;\n    const ListFormat = Intl.ListFormat;\n    const DisplayNames = Intl.DisplayNames;\n    return {\n        getDateTimeFormat: memoizeIntlConstructor(Intl.DateTimeFormat, cache.dateTime),\n        getNumberFormat: memoizeIntlConstructor(Intl.NumberFormat, cache.number),\n        getMessageFormat: memoizeIntlConstructor(IntlMessageFormat, cache.message),\n        getRelativeTimeFormat: memoizeIntlConstructor(RelativeTimeFormat, cache.relativeTime),\n        getPluralRules: memoizeIntlConstructor(Intl.PluralRules, cache.pluralRules),\n        getListFormat: memoizeIntlConstructor(ListFormat, cache.list),\n        getDisplayNames: memoizeIntlConstructor(DisplayNames, cache.displayNames),\n    };\n}\nexport function getNamedFormat(formats, type, name, onError) {\n    const formatType = formats && formats[type];\n    let format;\n    if (formatType) {\n        format = formatType[name];\n    }\n    if (format) {\n        return format;\n    }\n    onError(createError(`No ${type} format named: ${name}`));\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,iBAAiB,MAAM,oBAAoB;AAClD,OAAOC,sBAAsB,MAAM,mBAAmB;AACtD,SAASC,SAAS,QAAQ,sBAAsB;AAChD,IAAMC,aAAa,GAAG;EAClB,EAAE,EAAE,OAAO;EACX,EAAE,EAAE,MAAM;EACV,EAAE,EAAE,MAAM;EACV,EAAE,EAAE,QAAQ;EACZ,EAAE,EAAE;AACR,CAAC;AACD,IAAMC,kBAAkB,GAAG,UAAU;AACrC,OAAO,SAASC,MAAMA,CAACC,GAAG,EAAE;EACxB,OAAO,CAAC,EAAE,GAAGA,GAAG,EAAEC,OAAO,CAACH,kBAAkB,EAAE,UAAAI,KAAK;IAAA,OAAIL,aAAa,CAACK,KAAK,CAACC,UAAU,CAAC,CAAC,CAAC,CAAC;EAAA,EAAC;AAC9F;AACA,OAAO,SAASC,WAAWA,CAACC,KAAK,EAAEC,SAAS,EAAiB;EAAA,IAAfC,QAAQ,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EACvD,OAAOF,SAAS,CAACK,MAAM,CAAC,UAACC,QAAQ,EAAEC,IAAI,EAAK;IACxC,IAAIA,IAAI,IAAIR,KAAK,EAAE;MACfO,QAAQ,CAACC,IAAI,CAAC,GAAGR,KAAK,CAACQ,IAAI,CAAC;IAChC,CAAC,MACI,IAAIA,IAAI,IAAIN,QAAQ,EAAE;MACvBK,QAAQ,CAACC,IAAI,CAAC,GAAGN,QAAQ,CAACM,IAAI,CAAC;IACnC;IACA,OAAOD,QAAQ;EACnB,CAAC,EAAE,CAAC,CAAC,CAAC;AACV;AACA,OAAO,SAASE,oBAAoBA,CAACC,IAAI,EAAE;EACvCnB,SAAS,CAACmB,IAAI,EAAE,sDAAsD,GAClE,0DAA0D,CAAC;AACnE;AACA,OAAO,SAASC,WAAWA,CAACC,OAAO,EAAEC,SAAS,EAAE;EAC5C,IAAMC,IAAI,GAAGD,SAAS,QAAAE,MAAA,CAAQF,SAAS,CAACG,KAAK,IAAK,EAAE;EACpD,uBAAAD,MAAA,CAAuBH,OAAO,EAAAG,MAAA,CAAGD,IAAI;AACzC;AACA,OAAO,SAASG,mBAAmBA,CAACC,KAAK,EAAE;EACvC,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACvCC,OAAO,CAACJ,KAAK,CAACA,KAAK,CAAC;EACxB;AACJ;AACA,OAAO,IAAMK,mBAAmB,GAAG;EAC/BC,OAAO,EAAE,CAAC,CAAC;EACXC,QAAQ,EAAE,CAAC,CAAC;EACZC,QAAQ,EAAErB,SAAS;EACnBsB,aAAa,EAAEvC,KAAK,CAACwC,QAAQ;EAC7BC,aAAa,EAAE,IAAI;EACnBC,cAAc,EAAE,CAAC,CAAC;EAClBC,OAAO,EAAEd;AACb,CAAC;AACD,OAAO,SAASe,eAAeA,CAAA,EAAG;EAC9B,OAAO;IACHC,QAAQ,EAAE,CAAC,CAAC;IACZC,MAAM,EAAE,CAAC,CAAC;IACVtB,OAAO,EAAE,CAAC,CAAC;IACXuB,YAAY,EAAE,CAAC,CAAC;IAChBC,WAAW,EAAE,CAAC,CAAC;IACfC,IAAI,EAAE,CAAC,CAAC;IACRC,YAAY,EAAE,CAAC;EACnB,CAAC;AACL;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,gBAAgBA,CAAA,EAA4B;EAAA,IAA3BC,KAAK,GAAArC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG6B,eAAe,EAAE;EACtD,IAAMS,kBAAkB,GAAGC,IAAI,CAACD,kBAAkB;EAClD,IAAME,UAAU,GAAGD,IAAI,CAACC,UAAU;EAClC,IAAMC,YAAY,GAAGF,IAAI,CAACE,YAAY;EACtC,OAAO;IACHC,iBAAiB,EAAEvD,sBAAsB,CAACoD,IAAI,CAACI,cAAc,EAAEN,KAAK,CAACP,QAAQ,CAAC;IAC9Ec,eAAe,EAAEzD,sBAAsB,CAACoD,IAAI,CAACM,YAAY,EAAER,KAAK,CAACN,MAAM,CAAC;IACxEe,gBAAgB,EAAE3D,sBAAsB,CAACD,iBAAiB,EAAEmD,KAAK,CAAC5B,OAAO,CAAC;IAC1EsC,qBAAqB,EAAE5D,sBAAsB,CAACmD,kBAAkB,EAAED,KAAK,CAACL,YAAY,CAAC;IACrFgB,cAAc,EAAE7D,sBAAsB,CAACoD,IAAI,CAACU,WAAW,EAAEZ,KAAK,CAACJ,WAAW,CAAC;IAC3EiB,aAAa,EAAE/D,sBAAsB,CAACqD,UAAU,EAAEH,KAAK,CAACH,IAAI,CAAC;IAC7DiB,eAAe,EAAEhE,sBAAsB,CAACsD,YAAY,EAAEJ,KAAK,CAACF,YAAY;EAC5E,CAAC;AACL;AACA,OAAO,SAASiB,cAAcA,CAAC/B,OAAO,EAAEgC,IAAI,EAAEhD,IAAI,EAAEuB,OAAO,EAAE;EACzD,IAAM0B,UAAU,GAAGjC,OAAO,IAAIA,OAAO,CAACgC,IAAI,CAAC;EAC3C,IAAIE,MAAM;EACV,IAAID,UAAU,EAAE;IACZC,MAAM,GAAGD,UAAU,CAACjD,IAAI,CAAC;EAC7B;EACA,IAAIkD,MAAM,EAAE;IACR,OAAOA,MAAM;EACjB;EACA3B,OAAO,CAACpB,WAAW,OAAAI,MAAA,CAAOyC,IAAI,qBAAAzC,MAAA,CAAkBP,IAAI,EAAG,CAAC;AAC5D"},"metadata":{},"sourceType":"module","externalDependencies":[]}