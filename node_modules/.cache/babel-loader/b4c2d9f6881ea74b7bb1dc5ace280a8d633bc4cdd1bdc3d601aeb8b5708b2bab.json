{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getVisibleDatasets = getVisibleDatasets;\nexports.mapStateToProps = mapStateToProps;\nexports[\"default\"] = exports.DEFAULT_KEPLER_GL_PROPS = exports.notificationPanelSelector = exports.geoCoderPanelSelector = exports.modalContainerSelector = exports.bottomWidgetSelector = exports.isSplitSelector = exports.plotContainerSelector = exports.sidePanelSelector = exports.mapFieldsSelector = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _console = _interopRequireDefault(require(\"global/console\"));\nvar _redux = require(\"redux\");\nvar _styledComponents = _interopRequireWildcard(require(\"styled-components\"));\nvar _reselect = require(\"reselect\");\nvar _keplerglConnect = require(\"./connect/keplergl-connect\");\nvar _reactIntl = require(\"react-intl\");\nvar _localization = require(\"@kepler.gl/localization\");\nvar _context = require(\"./context\");\nvar _actions = require(\"@kepler.gl/actions\");\nvar _constants = require(\"@kepler.gl/constants\");\nvar _sidePanel = _interopRequireDefault(require(\"./side-panel\"));\nvar _mapContainer = _interopRequireDefault(require(\"./map-container\"));\nvar _mapsLayout = _interopRequireDefault(require(\"./maps-layout\"));\nvar _bottomWidget = _interopRequireDefault(require(\"./bottom-widget\"));\nvar _modalContainer = _interopRequireDefault(require(\"./modal-container\"));\nvar _plotContainer = _interopRequireDefault(require(\"./plot-container\"));\nvar _notificationPanel = _interopRequireDefault(require(\"./notification-panel\"));\nvar _geocoderPanel = _interopRequireDefault(require(\"./geocoder-panel\"));\nvar _utils = require(\"@kepler.gl/utils\");\nvar _styles = require(\"@kepler.gl/styles\");\nvar _templateObject;\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n// Maybe we should think about exporting this or creating a variable\n// as part of the base.js theme\nvar GlobalStyle = _styledComponents[\"default\"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  font-family: \", \";\\n  font-weight: \", \";\\n  font-size: \", \";\\n  line-height: \", \";\\n\\n  *,\\n  *:before,\\n  *:after {\\n    -webkit-box-sizing: border-box;\\n    -moz-box-sizing: border-box;\\n    box-sizing: border-box;\\n  }\\n\\n  ul {\\n    margin: 0;\\n    padding: 0;\\n  }\\n\\n  li {\\n    margin: 0;\\n  }\\n\\n  a {\\n    text-decoration: none;\\n    color: \", \";\\n  }\\n\\n  .mapboxgl-ctrl .mapboxgl-ctrl-logo {\\n    display: none;\\n  }\\n\"])), function (props) {\n  return props.theme.fontFamily;\n}, function (props) {\n  return props.theme.fontWeight;\n}, function (props) {\n  return props.theme.fontSize;\n}, function (props) {\n  return props.theme.lineHeight;\n}, function (props) {\n  return props.theme.labelColor;\n});\nvar BottomWidgetOuter = _styledComponents[\"default\"].div(function (_ref) {\n  var absolute = _ref.absolute;\n  return \"\\n  \".concat(absolute ? 'position: absolute; bottom: 0; right: 0;' : '', \"\\n  pointer-events: none; /* prevent padding from blocking input */\\n  & > * {\\n    /* all children should allow input */\\n    pointer-events: all;\\n  }\");\n});\nvar mapFieldsSelector = function mapFieldsSelector(props) {\n  return {\n    getMapboxRef: props.getMapboxRef,\n    mapboxApiAccessToken: props.mapboxApiAccessToken,\n    mapboxApiUrl: props.mapboxApiUrl ? props.mapboxApiUrl : DEFAULT_KEPLER_GL_PROPS.mapboxApiUrl,\n    mapState: props.mapState,\n    mapStyle: props.mapStyle,\n    onDeckInitialized: props.onDeckInitialized,\n    onViewStateChange: props.onViewStateChange,\n    deckGlProps: props.deckGlProps,\n    uiStateActions: props.uiStateActions,\n    visStateActions: props.visStateActions,\n    mapStateActions: props.mapStateActions,\n    // visState\n    visState: props.visState,\n    // uiState\n    activeSidePanel: props.uiState.activeSidePanel,\n    mapControls: props.uiState.mapControls,\n    readOnly: props.uiState.readOnly,\n    locale: props.uiState.locale,\n    // mapStyle\n    topMapContainerProps: props.topMapContainerProps,\n    bottomMapContainerProps: props.bottomMapContainerProps\n  };\n};\nexports.mapFieldsSelector = mapFieldsSelector;\nfunction getVisibleDatasets(datasets) {\n  // We don't want Geocoder dataset to be present in SidePanel dataset list\n  return (0, _utils.filterObjectByPredicate)(datasets, function (key, value) {\n    return key !== _constants.GEOCODER_DATASET_NAME;\n  });\n}\nvar sidePanelSelector = function sidePanelSelector(props, availableProviders, filteredDatasets) {\n  return {\n    appName: props.appName ? props.appName : DEFAULT_KEPLER_GL_PROPS.appName,\n    version: props.version ? props.version : DEFAULT_KEPLER_GL_PROPS.version,\n    appWebsite: props.appWebsite,\n    mapStyle: props.mapStyle,\n    onSaveMap: props.onSaveMap,\n    uiState: props.uiState,\n    mapStyleActions: props.mapStyleActions,\n    visStateActions: props.visStateActions,\n    uiStateActions: props.uiStateActions,\n    mapStateActions: props.mapStateActions,\n    datasets: filteredDatasets,\n    filters: props.visState.filters,\n    layers: props.visState.layers,\n    layerOrder: props.visState.layerOrder,\n    layerClasses: props.visState.layerClasses,\n    interactionConfig: props.visState.interactionConfig,\n    mapInfo: props.visState.mapInfo,\n    layerBlending: props.visState.layerBlending,\n    width: props.sidePanelWidth ? props.sidePanelWidth : DEFAULT_KEPLER_GL_PROPS.width,\n    availableProviders: availableProviders,\n    mapSaved: props.providerState.mapSaved\n  };\n};\nexports.sidePanelSelector = sidePanelSelector;\nvar plotContainerSelector = function plotContainerSelector(props) {\n  return {\n    width: props.width,\n    height: props.height,\n    exportImageSetting: props.uiState.exportImage,\n    mapFields: mapFieldsSelector(props),\n    addNotification: props.uiStateActions.addNotification,\n    setExportImageSetting: props.uiStateActions.setExportImageSetting,\n    setExportImageDataUri: props.uiStateActions.setExportImageDataUri,\n    setExportImageError: props.uiStateActions.setExportImageError,\n    splitMaps: props.visState.splitMaps\n  };\n};\nexports.plotContainerSelector = plotContainerSelector;\nvar isSplitSelector = function isSplitSelector(props) {\n  return props.visState.splitMaps && props.visState.splitMaps.length > 1;\n};\nexports.isSplitSelector = isSplitSelector;\nvar bottomWidgetSelector = function bottomWidgetSelector(props, theme) {\n  return {\n    filters: props.visState.filters,\n    datasets: props.visState.datasets,\n    uiState: props.uiState,\n    layers: props.visState.layers,\n    animationConfig: props.visState.animationConfig,\n    visStateActions: props.visStateActions,\n    toggleModal: props.uiStateActions.toggleModal,\n    sidePanelWidth: props.uiState.readOnly ? 0 : props.sidePanelWidth + theme.sidePanel.margin.left\n  };\n};\nexports.bottomWidgetSelector = bottomWidgetSelector;\nvar modalContainerSelector = function modalContainerSelector(props, rootNode) {\n  return {\n    appName: props.appName ? props.appName : DEFAULT_KEPLER_GL_PROPS.appName,\n    mapStyle: props.mapStyle,\n    visState: props.visState,\n    mapState: props.mapState,\n    uiState: props.uiState,\n    providerState: props.providerState,\n    mapboxApiAccessToken: props.mapboxApiAccessToken,\n    mapboxApiUrl: props.mapboxApiUrl,\n    visStateActions: props.visStateActions,\n    uiStateActions: props.uiStateActions,\n    mapStyleActions: props.mapStyleActions,\n    providerActions: props.providerActions,\n    rootNode: rootNode,\n    // User defined cloud provider props\n    cloudProviders: props.cloudProviders ? props.cloudProviders : DEFAULT_KEPLER_GL_PROPS.cloudProviders,\n    onExportToCloudSuccess: props.onExportToCloudSuccess,\n    onLoadCloudMapSuccess: props.onLoadCloudMapSuccess,\n    onLoadCloudMapError: props.onLoadCloudMapError,\n    onExportToCloudError: props.onExportToCloudError\n  };\n};\nexports.modalContainerSelector = modalContainerSelector;\nvar geoCoderPanelSelector = function geoCoderPanelSelector(props) {\n  return {\n    isGeocoderEnabled: props.visState.interactionConfig.geocoder.enabled,\n    mapboxApiAccessToken: props.mapboxApiAccessToken,\n    mapState: props.mapState,\n    updateVisData: props.visStateActions.updateVisData,\n    removeDataset: props.visStateActions.removeDataset,\n    updateMap: props.mapStateActions.updateMap\n  };\n};\nexports.geoCoderPanelSelector = geoCoderPanelSelector;\nvar notificationPanelSelector = function notificationPanelSelector(props) {\n  return {\n    removeNotification: props.uiStateActions.removeNotification,\n    notifications: props.uiState.notifications\n  };\n};\nexports.notificationPanelSelector = notificationPanelSelector;\nvar DEFAULT_KEPLER_GL_PROPS = {\n  mapStyles: [],\n  mapStylesReplaceDefault: false,\n  mapboxApiUrl: _constants.DEFAULT_MAPBOX_API_URL,\n  width: 800,\n  height: 800,\n  appName: _constants.KEPLER_GL_NAME,\n  version: _constants.KEPLER_GL_VERSION,\n  sidePanelWidth: _constants.DIMENSIONS.sidePanel.width,\n  theme: {},\n  cloudProviders: [],\n  readOnly: false,\n  featureFlags: {}\n};\nexports.DEFAULT_KEPLER_GL_PROPS = DEFAULT_KEPLER_GL_PROPS;\nKeplerGlFactory.deps = [_bottomWidget[\"default\"], _geocoderPanel[\"default\"], _mapContainer[\"default\"], _mapsLayout[\"default\"], _modalContainer[\"default\"], _sidePanel[\"default\"], _plotContainer[\"default\"], _notificationPanel[\"default\"]];\nfunction KeplerGlFactory(BottomWidget, GeoCoderPanel, MapContainer, MapsLayout, ModalContainer, SidePanel, PlotContainer, NotificationPanel) {\n  /** @typedef {import('./kepler-gl').UnconnectedKeplerGlProps} KeplerGlProps */\n\n  /** @augments React.Component<KeplerGlProps> */\n  var KeplerGL = /*#__PURE__*/function (_Component) {\n    (0, _inherits2[\"default\"])(KeplerGL, _Component);\n    var _super = _createSuper(KeplerGL);\n    function KeplerGL() {\n      var _this;\n      (0, _classCallCheck2[\"default\"])(this, KeplerGL);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _super.call.apply(_super, [this].concat(args));\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"state\", {\n        dimensions: null\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_handleResize\", function (dimensions) {\n        _this.setState({\n          dimensions: dimensions\n        });\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"root\", /*#__PURE__*/(0, _react.createRef)());\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"bottomWidgetRef\", /*#__PURE__*/(0, _react.createRef)());\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"themeSelector\", function (props) {\n        return props.theme;\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"availableThemeSelector\", (0, _reselect.createSelector)(_this.themeSelector, function (theme) {\n        return (0, _typeof2[\"default\"])(theme) === 'object' ? _objectSpread(_objectSpread({}, _styles.theme), theme) : theme === _constants.THEME.light ? _styles.themeLT : theme === _constants.THEME.base ? _styles.themeBS : theme;\n      }));\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"datasetsSelector\", function (props) {\n        return props.visState.datasets;\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"filteredDatasetsSelector\", (0, _reselect.createSelector)(_this.datasetsSelector, getVisibleDatasets));\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"availableProviders\", (0, _reselect.createSelector)(function (props) {\n        return props.cloudProviders;\n      }, function (providers) {\n        return Array.isArray(providers) && providers.length ? {\n          hasStorage: providers.some(function (p) {\n            return p.hasPrivateStorage();\n          }),\n          hasShare: providers.some(function (p) {\n            return p.hasSharingUrl();\n          })\n        } : {};\n      }));\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"localeMessagesSelector\", (0, _reselect.createSelector)(function (props) {\n        return props.localeMessages;\n      }, function (customMessages) {\n        return customMessages ? (0, _utils.mergeMessages)(_localization.messages, customMessages) : _localization.messages;\n      }));\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_loadMapStyle\", function () {\n        var defaultStyles = Object.values(_this.props.mapStyle.mapStyles); // add id to custom map styles if not given\n\n        var customStyles = (_this.props.mapStyles || []).map(function (ms) {\n          return _objectSpread(_objectSpread({}, ms), {}, {\n            id: ms.id || (0, _utils.generateHashId)()\n          });\n        });\n        var allStyles = [].concat((0, _toConsumableArray2[\"default\"])(customStyles), (0, _toConsumableArray2[\"default\"])(defaultStyles)).reduce(function (accu, style) {\n          var hasStyleObject = style.style && (0, _typeof2[\"default\"])(style.style) === 'object';\n          accu[hasStyleObject ? 'toLoad' : 'toRequest'][style.id] = style;\n          return accu;\n        }, {\n          toLoad: {},\n          toRequest: {}\n        });\n        _this.props.mapStyleActions.loadMapStyles(allStyles.toLoad);\n        _this.props.mapStyleActions.requestMapStyles(allStyles.toRequest);\n      });\n      return _this;\n    }\n    (0, _createClass2[\"default\"])(KeplerGL, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this._validateMapboxToken();\n        this._loadMapStyle();\n        if (typeof this.props.onKeplerGlInitialized === 'function') {\n          this.props.onKeplerGlInitialized();\n        }\n        if (this.root.current instanceof HTMLElement) {\n          (0, _utils.observeDimensions)(this.root.current, this._handleResize);\n        }\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        if (this.root.current instanceof HTMLElement) {\n          (0, _utils.unobserveDimensions)(this.root.current);\n        }\n      }\n    }, {\n      key: \"_validateMapboxToken\",\n      value: /* private methods */\n      function _validateMapboxToken() {\n        var mapboxApiAccessToken = this.props.mapboxApiAccessToken;\n        if (!(0, _utils.validateToken)(mapboxApiAccessToken)) {\n          _console[\"default\"].warn(_constants.MISSING_MAPBOX_TOKEN);\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n          _this$props$id = _this$props.id,\n          id = _this$props$id === void 0 ? 'map' : _this$props$id,\n          _this$props$width = _this$props.width,\n          width = _this$props$width === void 0 ? DEFAULT_KEPLER_GL_PROPS.width : _this$props$width,\n          _this$props$height = _this$props.height,\n          height = _this$props$height === void 0 ? DEFAULT_KEPLER_GL_PROPS.height : _this$props$height,\n          uiState = _this$props.uiState,\n          visState = _this$props.visState,\n          readOnly = _this$props.readOnly,\n          featureFlags = _this$props.featureFlags;\n        var dimensions = this.state.dimensions || {\n          width: width,\n          height: height\n        };\n        var splitMaps = visState.splitMaps,\n          interactionConfig = visState.interactionConfig;\n        var isSplit = isSplitSelector(this.props);\n        var theme = this.availableThemeSelector(this.props);\n        var localeMessages = this.localeMessagesSelector(this.props);\n        var isExportingImage = uiState.exportImage.exporting;\n        var availableProviders = this.availableProviders(this.props);\n        var mapFields = mapFieldsSelector(this.props);\n        var filteredDatasets = this.filteredDatasetsSelector(this.props);\n        var sideFields = sidePanelSelector(this.props, availableProviders, filteredDatasets);\n        var plotContainerFields = plotContainerSelector(this.props);\n        var bottomWidgetFields = bottomWidgetSelector(this.props, theme);\n        var modalContainerFields = modalContainerSelector(this.props, this.root.current);\n        var geoCoderPanelFields = geoCoderPanelSelector(this.props);\n        var notificationPanelFields = notificationPanelSelector(this.props);\n        var mapContainers = !isSplit ? [/*#__PURE__*/_react[\"default\"].createElement(MapContainer, (0, _extends2[\"default\"])({\n          primary: true,\n          key: 0,\n          index: 0\n        }, mapFields))] : splitMaps.map(function (settings, index) {\n          return /*#__PURE__*/_react[\"default\"].createElement(MapContainer, (0, _extends2[\"default\"])({\n            key: index,\n            index: index,\n            primary: index === 1\n          }, mapFields));\n        });\n        return /*#__PURE__*/_react[\"default\"].createElement(_context.RootContext.Provider, {\n          value: this.root\n        }, /*#__PURE__*/_react[\"default\"].createElement(_context.FeatureFlagsContextProvider, {\n          featureFlags: featureFlags\n        }, /*#__PURE__*/_react[\"default\"].createElement(_reactIntl.IntlProvider, {\n          locale: uiState.locale,\n          messages: localeMessages[uiState.locale]\n        }, /*#__PURE__*/_react[\"default\"].createElement(_styledComponents.ThemeProvider, {\n          theme: theme\n        }, /*#__PURE__*/_react[\"default\"].createElement(GlobalStyle, {\n          className: \"kepler-gl\",\n          id: \"kepler-gl__\".concat(id),\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            position: 'relative',\n            width: \"\".concat(width, \"px\"),\n            height: \"\".concat(height, \"px\")\n          },\n          ref: this.root\n        }, /*#__PURE__*/_react[\"default\"].createElement(NotificationPanel, notificationPanelFields), !uiState.readOnly && !readOnly && /*#__PURE__*/_react[\"default\"].createElement(SidePanel, sideFields), /*#__PURE__*/_react[\"default\"].createElement(MapsLayout, {\n          className: \"maps\"\n        }, mapContainers), isExportingImage && /*#__PURE__*/_react[\"default\"].createElement(PlotContainer, plotContainerFields), interactionConfig.geocoder.enabled && /*#__PURE__*/_react[\"default\"].createElement(GeoCoderPanel, geoCoderPanelFields), /*#__PURE__*/_react[\"default\"].createElement(BottomWidgetOuter, {\n          absolute: !(0, _utils.hasPortableWidth)(_styles.breakPointValues)\n        }, /*#__PURE__*/_react[\"default\"].createElement(BottomWidget, (0, _extends2[\"default\"])({\n          rootRef: this.bottomWidgetRef\n        }, bottomWidgetFields, {\n          containerW: dimensions.width\n        }))), /*#__PURE__*/_react[\"default\"].createElement(ModalContainer, (0, _extends2[\"default\"])({}, modalContainerFields, {\n          containerW: dimensions.width,\n          containerH: dimensions.height\n        })))))));\n      }\n    }]);\n    return KeplerGL;\n  }(_react.Component);\n  (0, _defineProperty2[\"default\"])(KeplerGL, \"defaultProps\", DEFAULT_KEPLER_GL_PROPS);\n  (0, _defineProperty2[\"default\"])(KeplerGL, \"contextType\", _context.RootContext);\n  return (0, _keplerglConnect.connect)(mapStateToProps, makeMapDispatchToProps)((0, _styledComponents.withTheme)(KeplerGL));\n}\nfunction mapStateToProps(state, props) {\n  return _objectSpread(_objectSpread({}, props), {}, {\n    visState: state.visState,\n    mapStyle: state.mapStyle,\n    mapState: state.mapState,\n    uiState: state.uiState,\n    providerState: state.providerState\n  });\n}\nvar defaultUserActions = {};\nvar getDispatch = function getDispatch(dispatch, props) {\n  return dispatch;\n};\nvar getUserActions = function getUserActions(dispatch, props) {\n  return props.actions || defaultUserActions;\n};\n/** @type {() => import('reselect').OutputParametricSelector<any, any, any, any>} */\n\nfunction makeGetActionCreators() {\n  return (0, _reselect.createSelector)([getDispatch, getUserActions], function (dispatch, userActions) {\n    var _map = [_actions.VisStateActions, _actions.MapStateActions, _actions.MapStyleActions, _actions.UIStateActions, _actions.ProviderActions].map(function (actions) {\n        return (0, _redux.bindActionCreators)(mergeActions(actions, userActions), dispatch);\n      }),\n      _map2 = (0, _slicedToArray2[\"default\"])(_map, 5),\n      visStateActions = _map2[0],\n      mapStateActions = _map2[1],\n      mapStyleActions = _map2[2],\n      uiStateActions = _map2[3],\n      providerActions = _map2[4];\n    return {\n      visStateActions: visStateActions,\n      mapStateActions: mapStateActions,\n      mapStyleActions: mapStyleActions,\n      uiStateActions: uiStateActions,\n      providerActions: providerActions,\n      dispatch: dispatch\n    };\n  });\n}\nfunction makeMapDispatchToProps() {\n  var getActionCreators = makeGetActionCreators();\n  var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {\n    var groupedActionCreators = getActionCreators(dispatch, ownProps);\n    return _objectSpread(_objectSpread({}, groupedActionCreators), {}, {\n      dispatch: dispatch\n    });\n  };\n  return mapDispatchToProps;\n}\n/**\n * Override default kepler.gl actions with user defined actions using the same key\n */\n\nfunction mergeActions(actions, userActions) {\n  var overrides = {};\n  for (var _key2 in userActions) {\n    if (userActions.hasOwnProperty(_key2) && actions.hasOwnProperty(_key2)) {\n      overrides[_key2] = userActions[_key2];\n    }\n  }\n  return _objectSpread(_objectSpread({}, actions), overrides);\n}\nvar _default = KeplerGlFactory;\nexports[\"default\"] = _default;","map":{"version":3,"names":["_toConsumableArray2","_interopRequireDefault","require","_typeof2","_classCallCheck2","_createClass2","_assertThisInitialized2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_defineProperty2","_taggedTemplateLiteral2","_react","_interopRequireWildcard","_console","_redux","_styledComponents","_reselect","_keplerglConnect","_reactIntl","_localization","_context","_actions","_constants","_plotContainer","_notificationPanel","_geocoderPanel","_utils","_styles","_templateObject","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","BottomWidgetOuter","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","GlobalStyle","div","props","theme","fontFamily","fontWeight","fontSize","lineHeight","labelColor","_ref","absolute","concat","mapFieldsSelector","getMapboxRef","mapboxApiAccessToken","mapboxApiUrl","DEFAULT_KEPLER_GL_PROPS","onViewStateChange","deckGlProps","uiStateActions","visStateActions","mapStateActions","activeSidePanel","uiState","mapControls","readOnly","locale","topMapContainerProps","bottomMapContainerProps","exports","getVisibleDatasets","filters","datasets","filterObjectByPredicate","value","GEOCODER_DATASET_NAME","sidePanelSelector","availableProviders","filteredDatasets","appName","version","appWebsite","mapStyleActions","visState","layers","layerOrder","layerClasses","interactionConfig","mapInfo","layerBlending","width","sidePanelWidth","height","exportImageSetting","exportImage","mapFields","addNotification","setExportImageSetting","setExportImageDataUri","setExportImageError","splitMaps","isSplitSelector","bottomWidgetSelector","animationConfig","toggleModal","sidePanel","margin","left","modalContainerSelector","rootNode","providerState","providerActions","onLoadCloudMapError","onExportToCloudError","isGeocoderEnabled","geocoder","enabled","mapState","updateVisData","removeDataset","updateMap","geoCoderPanelSelector","notificationPanelSelector","notifications","mapStyles","mapStylesReplaceDefault","KEPLER_GL_NAME","KEPLER_GL_VERSION","featureFlags","KeplerGlFactory","deps","_bottomWidget","_mapContainer","_mapsLayout","_modalContainer","_sidePanel","dimensions","BottomWidget","GeoCoderPanel","MapContainer","MapsLayout","ModalContainer","SidePanel","PlotContainer","NotificationPanel","KeplerGL","_Component","_super","_this","_len","args","Array","_key","call","setState","createRef","createSelector","themeSelector","THEME","light","themeLT","base","themeBS","cloudProviders","providers","isArray","hasStorage","some","p","hasPrivateStorage","hasShare","hasSharingUrl","customMessages","defaultStyles","values","mapStyle","ms","id","generateHashId","hasStyleObject","style","accu","toLoad","loadMapStyles","allStyles","requestMapStyles","toRequest","componentDidMount","_validateMapboxToken","_loadMapStyle","onKeplerGlInitialized","root","current","HTMLElement","observeDimensions","_handleResize","componentWillUnmount","unobserveDimensions","validateToken","warn","MISSING_MAPBOX_TOKEN","render","localeMessages","_this$props","_this$props$id","_this$props$width","_this$props$height","state","isSplit","availableThemeSelector","localeMessagesSelector","isExportingImage","exporting","filteredDatasetsSelector","sideFields","plotContainerFields","plotContainerSelector","bottomWidgetFields","modalContainerFields","geoCoderPanelFields","notificationPanelFields","mapContainers","createElement","_extends2","primary","index","map","settings","RootContext","Provider","FeatureFlagsContextProvider","IntlProvider","messages","ThemeProvider","className","display","flexDirection","position","ref","hasPortableWidth","breakPointValues","rootRef","bottomWidgetRef","containerW","containerH","Component","connect","mapStateToProps","makeMapDispatchToProps","withTheme","defaultUserActions","getDispatch","dispatch","getUserActions","actions","makeGetActionCreators","userActions","bindActionCreators","mergeActions","_map2","getActionCreators","mapDispatchToProps","ownProps","groupedActionCreators"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/components/src/kepler-gl.tsx"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {Component, createRef, Dispatch} from 'react';\nimport Console from 'global/console';\nimport {bindActionCreators} from 'redux';\nimport styled, {ThemeProvider, withTheme} from 'styled-components';\nimport {createSelector} from 'reselect';\nimport {connect as keplerGlConnect} from './connect/keplergl-connect';\nimport {IntlProvider} from 'react-intl';\nimport {messages} from '@kepler.gl/localization';\nimport {RootContext, FeatureFlagsContextProvider, FeatureFlags} from './context';\nimport {OnErrorCallBack, OnSuccessCallBack} from '@kepler.gl/types';\n\nimport {\n  MapStateActions,\n  MapStyleActions,\n  ProviderActions,\n  UIStateActions,\n  VisStateActions\n} from '@kepler.gl/actions';\n\ntype KeplerGlActions = {\n  visStateActions: typeof VisStateActions;\n  mapStateActions: typeof MapStateActions;\n  mapStyleActions: typeof MapStyleActions;\n  uiStateActions: typeof UIStateActions;\n  providerActions: typeof ProviderActions;\n};\n\nimport {\n  DIMENSIONS,\n  KEPLER_GL_NAME,\n  KEPLER_GL_VERSION,\n  THEME,\n  DEFAULT_MAPBOX_API_URL,\n  GEOCODER_DATASET_NAME,\n  MISSING_MAPBOX_TOKEN\n} from '@kepler.gl/constants';\n\nimport SidePanelFactory from './side-panel';\nimport MapContainerFactory from './map-container';\nimport MapsLayoutFactory from './maps-layout';\nimport BottomWidgetFactory from './bottom-widget';\nimport ModalContainerFactory from './modal-container';\nimport PlotContainerFactory from './plot-container';\nimport NotificationPanelFactory from './notification-panel';\nimport GeoCoderPanelFactory from './geocoder-panel';\n\nimport {\n  filterObjectByPredicate,\n  generateHashId,\n  validateToken,\n  mergeMessages,\n  observeDimensions,\n  unobserveDimensions,\n  hasPortableWidth\n} from '@kepler.gl/utils';\n\nimport {theme as basicTheme, themeLT, themeBS, breakPointValues} from '@kepler.gl/styles';\nimport {KeplerGlState} from '@kepler.gl/reducers';\nimport {Provider} from '@kepler.gl/cloud-providers';\n\n// Maybe we should think about exporting this or creating a variable\n// as part of the base.js theme\nconst GlobalStyle = styled.div`\n  font-family: ${props => props.theme.fontFamily};\n  font-weight: ${props => props.theme.fontWeight};\n  font-size: ${props => props.theme.fontSize};\n  line-height: ${props => props.theme.lineHeight};\n\n  *,\n  *:before,\n  *:after {\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n  }\n\n  ul {\n    margin: 0;\n    padding: 0;\n  }\n\n  li {\n    margin: 0;\n  }\n\n  a {\n    text-decoration: none;\n    color: ${props => props.theme.labelColor};\n  }\n\n  .mapboxgl-ctrl .mapboxgl-ctrl-logo {\n    display: none;\n  }\n`;\n\ninterface BottomWidgetOuterProps {\n  absolute?: boolean;\n}\n\nconst BottomWidgetOuter = styled.div<BottomWidgetOuterProps>(\n  ({absolute}) => `\n  ${absolute ? 'position: absolute; bottom: 0; right: 0;' : ''}\n  pointer-events: none; /* prevent padding from blocking input */\n  & > * {\n    /* all children should allow input */\n    pointer-events: all;\n  }`\n);\n\nexport const mapFieldsSelector = (props: KeplerGLProps) => ({\n  getMapboxRef: props.getMapboxRef,\n  mapboxApiAccessToken: props.mapboxApiAccessToken,\n  mapboxApiUrl: props.mapboxApiUrl ? props.mapboxApiUrl : DEFAULT_KEPLER_GL_PROPS.mapboxApiUrl,\n  mapState: props.mapState,\n  mapStyle: props.mapStyle,\n  onDeckInitialized: props.onDeckInitialized,\n  onViewStateChange: props.onViewStateChange,\n  deckGlProps: props.deckGlProps,\n  uiStateActions: props.uiStateActions,\n  visStateActions: props.visStateActions,\n  mapStateActions: props.mapStateActions,\n\n  // visState\n  visState: props.visState,\n\n  // uiState\n  activeSidePanel: props.uiState.activeSidePanel,\n  mapControls: props.uiState.mapControls,\n  readOnly: props.uiState.readOnly,\n  locale: props.uiState.locale,\n\n  // mapStyle\n  topMapContainerProps: props.topMapContainerProps,\n  bottomMapContainerProps: props.bottomMapContainerProps\n});\n\nexport function getVisibleDatasets(datasets) {\n  // We don't want Geocoder dataset to be present in SidePanel dataset list\n  return filterObjectByPredicate(datasets, (key, value) => key !== GEOCODER_DATASET_NAME);\n}\n\nexport const sidePanelSelector = (props: KeplerGLProps, availableProviders, filteredDatasets) => ({\n  appName: props.appName ? props.appName : DEFAULT_KEPLER_GL_PROPS.appName,\n  version: props.version ? props.version : DEFAULT_KEPLER_GL_PROPS.version,\n  appWebsite: props.appWebsite,\n  mapStyle: props.mapStyle,\n  onSaveMap: props.onSaveMap,\n  uiState: props.uiState,\n  mapStyleActions: props.mapStyleActions,\n  visStateActions: props.visStateActions,\n  uiStateActions: props.uiStateActions,\n  mapStateActions: props.mapStateActions,\n\n  datasets: filteredDatasets,\n  filters: props.visState.filters,\n  layers: props.visState.layers,\n  layerOrder: props.visState.layerOrder,\n  layerClasses: props.visState.layerClasses,\n  interactionConfig: props.visState.interactionConfig,\n  mapInfo: props.visState.mapInfo,\n  layerBlending: props.visState.layerBlending,\n\n  width: props.sidePanelWidth ? props.sidePanelWidth : DEFAULT_KEPLER_GL_PROPS.width,\n  availableProviders,\n  mapSaved: props.providerState.mapSaved\n});\n\nexport const plotContainerSelector = (props: KeplerGLProps) => ({\n  width: props.width,\n  height: props.height,\n  exportImageSetting: props.uiState.exportImage,\n  mapFields: mapFieldsSelector(props),\n  addNotification: props.uiStateActions.addNotification,\n  setExportImageSetting: props.uiStateActions.setExportImageSetting,\n  setExportImageDataUri: props.uiStateActions.setExportImageDataUri,\n  setExportImageError: props.uiStateActions.setExportImageError,\n  splitMaps: props.visState.splitMaps\n});\n\nexport const isSplitSelector = (props: KeplerGLProps) =>\n  props.visState.splitMaps && props.visState.splitMaps.length > 1;\n\nexport const bottomWidgetSelector = (props: KeplerGLProps, theme) => ({\n  filters: props.visState.filters,\n  datasets: props.visState.datasets,\n  uiState: props.uiState,\n  layers: props.visState.layers,\n  animationConfig: props.visState.animationConfig,\n  visStateActions: props.visStateActions,\n  toggleModal: props.uiStateActions.toggleModal,\n  sidePanelWidth: props.uiState.readOnly ? 0 : props.sidePanelWidth + theme.sidePanel.margin.left\n});\n\nexport const modalContainerSelector = (props: KeplerGLProps, rootNode) => ({\n  appName: props.appName ? props.appName : DEFAULT_KEPLER_GL_PROPS.appName,\n  mapStyle: props.mapStyle,\n  visState: props.visState,\n  mapState: props.mapState,\n  uiState: props.uiState,\n  providerState: props.providerState,\n\n  mapboxApiAccessToken: props.mapboxApiAccessToken,\n  mapboxApiUrl: props.mapboxApiUrl,\n  visStateActions: props.visStateActions,\n  uiStateActions: props.uiStateActions,\n  mapStyleActions: props.mapStyleActions,\n  providerActions: props.providerActions,\n\n  rootNode,\n  // User defined cloud provider props\n  cloudProviders: props.cloudProviders\n    ? props.cloudProviders\n    : DEFAULT_KEPLER_GL_PROPS.cloudProviders,\n  onExportToCloudSuccess: props.onExportToCloudSuccess,\n  onLoadCloudMapSuccess: props.onLoadCloudMapSuccess,\n  onLoadCloudMapError: props.onLoadCloudMapError,\n  onExportToCloudError: props.onExportToCloudError\n});\n\nexport const geoCoderPanelSelector = (props: KeplerGLProps) => ({\n  isGeocoderEnabled: props.visState.interactionConfig.geocoder.enabled,\n  mapboxApiAccessToken: props.mapboxApiAccessToken,\n  mapState: props.mapState,\n  updateVisData: props.visStateActions.updateVisData,\n  removeDataset: props.visStateActions.removeDataset,\n  updateMap: props.mapStateActions.updateMap\n});\n\nexport const notificationPanelSelector = (props: KeplerGLProps) => ({\n  removeNotification: props.uiStateActions.removeNotification,\n  notifications: props.uiState.notifications\n});\n\nexport const DEFAULT_KEPLER_GL_PROPS = {\n  mapStyles: [],\n  mapStylesReplaceDefault: false,\n  mapboxApiUrl: DEFAULT_MAPBOX_API_URL,\n  width: 800,\n  height: 800,\n  appName: KEPLER_GL_NAME,\n  version: KEPLER_GL_VERSION,\n  sidePanelWidth: DIMENSIONS.sidePanel.width,\n  theme: {},\n  cloudProviders: [],\n  readOnly: false,\n  featureFlags: {}\n};\n\ntype KeplerGLBasicProps = {\n  mapboxApiAccessToken: string;\n  mapboxApiUrl?: string;\n  id: string;\n  width?: number;\n  height?: number;\n\n  appWebsite?: any;\n  onSaveMap?: () => void;\n  onViewStateChange?: () => void;\n  onDeckInitialized?: () => void;\n  onKeplerGlInitialized?: () => void;\n  getMapboxRef?: () => React.RefObject<any>;\n  mapStyles?: {id: string; style?: object}[];\n  mapStylesReplaceDefault?: boolean;\n  appName?: string;\n  version?: string;\n  sidePanelWidth?: number;\n  theme?: object;\n  cloudProviders?: Provider[];\n  deckGlProps?: object;\n  onLoadCloudMapSuccess?: OnSuccessCallBack;\n  onLoadCloudMapError?: OnErrorCallBack;\n  onExportToCloudSuccess?: OnSuccessCallBack;\n  onExportToCloudError?: OnErrorCallBack;\n  readOnly?: boolean;\n  featureFlags?: FeatureFlags;\n\n  localeMessages?: {[key: string]: {[key: string]: string}};\n  dispatch: Dispatch<any>;\n\n  topMapContainerProps?: object;\n  bottomMapContainerProps?: object;\n};\n\ntype KeplerGLProps = KeplerGlState & KeplerGlActions & KeplerGLBasicProps;\n\nKeplerGlFactory.deps = [\n  BottomWidgetFactory,\n  GeoCoderPanelFactory,\n  MapContainerFactory,\n  MapsLayoutFactory,\n  ModalContainerFactory,\n  SidePanelFactory,\n  PlotContainerFactory,\n  NotificationPanelFactory\n];\n\nfunction KeplerGlFactory(\n  BottomWidget: ReturnType<typeof BottomWidgetFactory>,\n  GeoCoderPanel: ReturnType<typeof GeoCoderPanelFactory>,\n  MapContainer: ReturnType<typeof MapContainerFactory>,\n  MapsLayout: ReturnType<typeof MapsLayoutFactory>,\n  ModalContainer: ReturnType<typeof ModalContainerFactory>,\n  SidePanel: ReturnType<typeof SidePanelFactory>,\n  PlotContainer: ReturnType<typeof PlotContainerFactory>,\n  NotificationPanel: ReturnType<typeof NotificationPanelFactory>\n): React.ComponentType<KeplerGLBasicProps & {selector: (...args: any[]) => KeplerGlState}> {\n  /** @typedef {import('./kepler-gl').UnconnectedKeplerGlProps} KeplerGlProps */\n  /** @augments React.Component<KeplerGlProps> */\n  class KeplerGL extends Component<KeplerGLProps & {selector: (...args: any[]) => KeplerGlState}> {\n    static defaultProps = DEFAULT_KEPLER_GL_PROPS;\n\n    state = {\n      dimensions: null\n    };\n\n    componentDidMount() {\n      this._validateMapboxToken();\n      this._loadMapStyle();\n      if (typeof this.props.onKeplerGlInitialized === 'function') {\n        this.props.onKeplerGlInitialized();\n      }\n      if (this.root.current instanceof HTMLElement) {\n        observeDimensions(this.root.current, this._handleResize);\n      }\n    }\n\n    componentWillUnmount() {\n      if (this.root.current instanceof HTMLElement) {\n        unobserveDimensions(this.root.current);\n      }\n    }\n\n    _handleResize = dimensions => {\n      this.setState({dimensions});\n    };\n\n    static contextType = RootContext;\n\n    root = createRef<HTMLDivElement>();\n    bottomWidgetRef = createRef<HTMLDivElement>();\n\n    /* selectors */\n    themeSelector = props => props.theme;\n    availableThemeSelector = createSelector(this.themeSelector, theme =>\n      typeof theme === 'object'\n        ? {\n            ...basicTheme,\n            ...theme\n          }\n        : theme === THEME.light\n        ? themeLT\n        : theme === THEME.base\n        ? themeBS\n        : theme\n    );\n\n    datasetsSelector = props => props.visState.datasets;\n    filteredDatasetsSelector = createSelector(this.datasetsSelector, getVisibleDatasets);\n\n    availableProviders = createSelector(\n      (props: KeplerGLProps) => props.cloudProviders,\n      providers =>\n        Array.isArray(providers) && providers.length\n          ? {\n              hasStorage: providers.some(p => p.hasPrivateStorage()),\n              hasShare: providers.some(p => p.hasSharingUrl())\n            }\n          : {}\n    );\n\n    localeMessagesSelector = createSelector(\n      (props: KeplerGLProps) => props.localeMessages,\n      customMessages => (customMessages ? mergeMessages(messages, customMessages) : messages)\n    );\n\n    /* private methods */\n    _validateMapboxToken() {\n      const {mapboxApiAccessToken} = this.props;\n      if (!validateToken(mapboxApiAccessToken)) {\n        Console.warn(MISSING_MAPBOX_TOKEN);\n      }\n    }\n\n    _loadMapStyle = () => {\n      const defaultStyles = Object.values(this.props.mapStyle.mapStyles);\n      // add id to custom map styles if not given\n      const customStyles = (this.props.mapStyles || []).map(ms => ({\n        ...ms,\n        id: ms.id || generateHashId()\n      }));\n\n      const allStyles = [...customStyles, ...defaultStyles].reduce(\n        (accu, style) => {\n          const hasStyleObject = style.style && typeof style.style === 'object';\n          accu[hasStyleObject ? 'toLoad' : 'toRequest'][style.id] = style;\n\n          return accu;\n        },\n        {toLoad: {}, toRequest: {}}\n      );\n\n      this.props.mapStyleActions.loadMapStyles(allStyles.toLoad);\n      this.props.mapStyleActions.requestMapStyles(allStyles.toRequest);\n    };\n\n    render() {\n      const {\n        id = 'map',\n        width = DEFAULT_KEPLER_GL_PROPS.width,\n        height = DEFAULT_KEPLER_GL_PROPS.height,\n        uiState,\n        visState,\n        // readOnly override\n        readOnly,\n\n        // features\n        featureFlags\n      } = this.props;\n\n      const dimensions = this.state.dimensions || {width, height};\n      const {\n        splitMaps, // this will store support for split map view is necessary\n        interactionConfig\n      } = visState;\n\n      const isSplit = isSplitSelector(this.props);\n      const theme = this.availableThemeSelector(this.props);\n      const localeMessages = this.localeMessagesSelector(this.props);\n      const isExportingImage = uiState.exportImage.exporting;\n      const availableProviders = this.availableProviders(this.props);\n\n      const mapFields = mapFieldsSelector(this.props);\n      const filteredDatasets = this.filteredDatasetsSelector(this.props);\n      const sideFields = sidePanelSelector(this.props, availableProviders, filteredDatasets);\n      const plotContainerFields = plotContainerSelector(this.props);\n      const bottomWidgetFields = bottomWidgetSelector(this.props, theme);\n      const modalContainerFields = modalContainerSelector(this.props, this.root.current);\n      const geoCoderPanelFields = geoCoderPanelSelector(this.props);\n      const notificationPanelFields = notificationPanelSelector(this.props);\n\n      const mapContainers = !isSplit\n        ? [<MapContainer primary={true} key={0} index={0} {...mapFields} />]\n        : splitMaps.map((settings, index) => (\n            <MapContainer key={index} index={index} primary={index === 1} {...mapFields} />\n          ));\n\n      return (\n        <RootContext.Provider value={this.root}>\n          <FeatureFlagsContextProvider featureFlags={featureFlags}>\n            <IntlProvider locale={uiState.locale} messages={localeMessages[uiState.locale]}>\n              <ThemeProvider theme={theme}>\n                <GlobalStyle\n                  className=\"kepler-gl\"\n                  id={`kepler-gl__${id}`}\n                  style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    position: 'relative',\n                    width: `${width}px`,\n                    height: `${height}px`\n                  }}\n                  ref={this.root}\n                >\n                  <NotificationPanel {...notificationPanelFields} />\n                  {!uiState.readOnly && !readOnly && <SidePanel {...sideFields} />}\n                  <MapsLayout className=\"maps\">{mapContainers}</MapsLayout>\n                  {isExportingImage && <PlotContainer {...plotContainerFields} />}\n                  {interactionConfig.geocoder.enabled && <GeoCoderPanel {...geoCoderPanelFields} />}\n                  <BottomWidgetOuter absolute={!hasPortableWidth(breakPointValues)}>\n                    <BottomWidget\n                      rootRef={this.bottomWidgetRef}\n                      {...bottomWidgetFields}\n                      containerW={dimensions.width}\n                    />\n                  </BottomWidgetOuter>\n                  <ModalContainer\n                    {...modalContainerFields}\n                    containerW={dimensions.width}\n                    containerH={dimensions.height}\n                  />\n                </GlobalStyle>\n              </ThemeProvider>\n            </IntlProvider>\n          </FeatureFlagsContextProvider>\n        </RootContext.Provider>\n      );\n    }\n  }\n\n  return keplerGlConnect(mapStateToProps, makeMapDispatchToProps)(withTheme(KeplerGL));\n}\n\nexport function mapStateToProps(state: KeplerGlState, props: KeplerGLProps) {\n  return {\n    ...props,\n    visState: state.visState,\n    mapStyle: state.mapStyle,\n    mapState: state.mapState,\n    uiState: state.uiState,\n    providerState: state.providerState\n  };\n}\n\nconst defaultUserActions = {};\n\nconst getDispatch = (dispatch, props) => dispatch;\nconst getUserActions = (dispatch, props) => props.actions || defaultUserActions;\n\n/** @type {() => import('reselect').OutputParametricSelector<any, any, any, any>} */\nfunction makeGetActionCreators() {\n  return createSelector([getDispatch, getUserActions], (dispatch, userActions) => {\n    const [visStateActions, mapStateActions, mapStyleActions, uiStateActions, providerActions] = [\n      VisStateActions,\n      MapStateActions,\n      MapStyleActions,\n      UIStateActions,\n      ProviderActions\n    ].map(actions => bindActionCreators(mergeActions(actions, userActions), dispatch));\n\n    return {\n      visStateActions,\n      mapStateActions,\n      mapStyleActions,\n      uiStateActions,\n      providerActions,\n      dispatch\n    };\n  });\n}\n\nfunction makeMapDispatchToProps() {\n  const getActionCreators = makeGetActionCreators();\n  const mapDispatchToProps = (dispatch, ownProps) => {\n    const groupedActionCreators = getActionCreators(dispatch, ownProps);\n\n    return {\n      ...groupedActionCreators,\n      dispatch\n    };\n  };\n\n  return mapDispatchToProps;\n}\n\n/**\n * Override default kepler.gl actions with user defined actions using the same key\n */\nfunction mergeActions(actions, userActions) {\n  const overrides = {};\n  for (const key in userActions) {\n    if (userActions.hasOwnProperty(key) && actions.hasOwnProperty(key)) {\n      overrides[key] = userActions[key];\n    }\n  }\n\n  return {...actions, ...overrides};\n}\n\nexport default KeplerGlFactory;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}