{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createDataContainer = createDataContainer;\nexports.createIndexedDataContainer = createIndexedDataContainer;\nexports.getSampleData = getSampleData;\nexports.DataForm = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _rowDataContainer = require(\"./row-data-container\");\nvar _indexedDataContainer = require(\"./indexed-data-container\");\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nvar DataForm = {\n  ROWS_ARRAY: 'ROWS_ARRAY'\n};\nexports.DataForm = DataForm;\nvar defaultOptions = {\n  inputDataFormat: DataForm.ROWS_ARRAY\n};\n/**\n * Creates a data container wrapper for the data.\n * @param data Data.\n * @param options Options.\n * @returns A data container object which is based on data and options.\n */\n\nfunction createDataContainer(data) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOptions;\n  options = _objectSpread(_objectSpread({}, defaultOptions), options);\n  if (options.inputDataFormat === DataForm.ROWS_ARRAY) {\n    return new _rowDataContainer.RowDataContainer({\n      rows: data,\n      fields: options.fields\n    });\n  }\n  throw Error('Failed to create a data container: not implemented format');\n}\n/**\n * Creates a data container wrapper around another data container.\n * @param dataContainer Parent data container.\n * @param indices An array of row indices in the parent data container.\n */\n\nfunction createIndexedDataContainer(dataContainer, indices) {\n  return new _indexedDataContainer.IndexedDataContainer(dataContainer, indices);\n}\n/**\n * Get a sample of rows from a data container.\n * @param dataContainer Data container to get samples from.\n * @param sampleSize Max number of samples.\n * @returns A data container which contains samples from the original data container.\n */\n\nfunction getSampleData(dataContainer) {\n  var sampleSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;\n  var numberOfRows = dataContainer.numRows();\n  var sampleStep = Math.max(Math.floor(numberOfRows / sampleSize), 1);\n  var indices = [];\n  for (var i = 0; i < numberOfRows; i += sampleStep) {\n    indices.push(i);\n  }\n  return createIndexedDataContainer(dataContainer, indices);\n}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","createDataContainer","createIndexedDataContainer","getSampleData","DataForm","_defineProperty2","_rowDataContainer","_indexedDataContainer","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","ROWS_ARRAY","inputDataFormat","data","options","undefined","defaultOptions","RowDataContainer","rows","fields","Error","IndexedDataContainer","dataContainer","indices"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/utils/src/data-container-utils.ts"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {RowDataContainer} from './row-data-container';\nimport {IndexedDataContainer} from './indexed-data-container';\n\nimport {DataContainerInterface} from './data-container-interface';\nimport {Field} from '@kepler.gl/types';\n\nexport type DataContainerOptions = {\n  inputDataFormat?: string; // one of DataForm\n  fields?: Field[];\n};\n\nexport const DataForm = {\n  ROWS_ARRAY: 'ROWS_ARRAY'\n};\n\nconst defaultOptions: DataContainerOptions = {\n  inputDataFormat: DataForm.ROWS_ARRAY\n};\n\n/**\n * Creates a data container wrapper for the data.\n * @param data Data.\n * @param options Options.\n * @returns A data container object which is based on data and options.\n */\nexport function createDataContainer(\n  data: any[],\n  options: DataContainerOptions = defaultOptions\n): DataContainerInterface {\n  options = {...defaultOptions, ...options};\n\n  if (options.inputDataFormat === DataForm.ROWS_ARRAY) {\n    return new RowDataContainer({rows: data, fields: options.fields});\n  }\n\n  throw Error('Failed to create a data container: not implemented format');\n}\n\n/**\n * Creates a data container wrapper around another data container.\n * @param dataContainer Parent data container.\n * @param indices An array of row indices in the parent data container.\n */\nexport function createIndexedDataContainer(\n  dataContainer: DataContainerInterface,\n  indices: number[]\n): DataContainerInterface {\n  return new IndexedDataContainer(dataContainer, indices);\n}\n\n/**\n * Get a sample of rows from a data container.\n * @param dataContainer Data container to get samples from.\n * @param sampleSize Max number of samples.\n * @returns A data container which contains samples from the original data container.\n */\nexport function getSampleData(\n  dataContainer: DataContainerInterface,\n  sampleSize = 500\n): DataContainerInterface {\n  const numberOfRows = dataContainer.numRows();\n  const sampleStep = Math.max(Math.floor(numberOfRows / sampleSize), 1);\n\n  const indices: number[] = [];\n  for (let i = 0; i < numberOfRows; i += sampleStep) {\n    indices.push(i);\n  }\n\n  return createIndexedDataContainer(dataContainer, indices);\n}\n"],"mappings":";;;;;;;;;;;;;;AAoBA;;AACA;;;;;;AAUO,IAAMA,sBAAW,GAAAC,OAAA;AAAAC,MAAjB,CAAAC,cAAA,CAAAC,OAAA;;AAIP;AACEA,OAAA,CAAAC,mBAAyB,GAACA,mBAAA;AADiBD,OAA7C,CAAAE,0BAAA,GAAAA,0BAAA;AAIAF,OAAA,CAAAG,aAAA,GAAAA,aAAA;AACAH,OAAA,CAAAI,QAAA;AAEA,IAAAC,gBAAA,GAAAT,sBAAA,CAAAC,OAAA;AAEA,IAAAS,iBAAA,GAAAT,OAAA;AACO,IAAAU,qBAAS,GAATV,OAGmB;AACxB,SAAOW,QAAAC,MAAA,EAAAC,cAAA;EAAA,IAAOC,IAAA,GAAAb,MAAP,CAA0Ba,IAAA,CAAAF,MAAjC;EAAA,IAAAX,MAAA,CAAAc,qBAAA;IAAA,IAAAC,OAAA,GAAAf,MAAA,CAAAc,qBAAA,CAAAH,MAAA;IAAA,IAAAC,cAAA,EAAAG,OAAA,GAAAA,OAAA,CAAAC,MAAA,WAAAC,GAAA;MAAA,OAAAjB,MAAA,CAAAkB,wBAAA,CAAAP,MAAA,EAAAM,GAAA,EAAAE,UAAA;IAAA;IAAAN,IAAA,CAAAO,IAAA,CAAAC,KAAA,CAAAR,IAAA,EAAAE,OAAA;EAAA;EAAA,OAAAF,IAAA;AAAA;AAEA,SAAIS,aAAQA,CAAAC,MAAR;EAAA,KAA4B,IAAQC,CAAC,MAAAA,CAAA,GAAzCC,SAAqD,CAAAC,MAAA,EAAAF,CAAA;IAAA,IAAAG,MAAA,GAAAF,SAAA,CAAAD,CAAA,YAAAC,SAAA,CAAAD,CAAA;IAAA,IAAAA,CAAA;MAAAd,OAAA,CAAAV,MAAA,CAAA2B,MAAA,SAAAC,OAAA,WAAAC,GAAA;QAAA,IAAAtB,gBAAA,aAAAgB,MAAA,EAAAM,GAAA,EAAAF,MAAA,CAAAE,GAAA;MAAA;IAAA,WAAA7B,MAAA,CAAA8B,yBAAA;MAAA9B,MAAA,CAAA+B,gBAAA,CAAAR,MAAA,EAAAvB,MAAA,CAAA8B,yBAAA,CAAAH,MAAA;IAAA;MAAAjB,OAAA,CAAAV,MAAA,CAAA2B,MAAA,GAAAC,OAAA,WAAAC,GAAA;QAAA7B,MAAA,CAAAC,cAAA,CAAAsB,MAAA,EAAAM,GAAA,EAAA7B,MAAA,CAAAkB,wBAAA,CAAAS,MAAA,EAAAE,GAAA;MAAA;IAAA;EAAA;EAAA,OAAAN,MAAA;AAAA;AACtB,IAAAjB,QAAM;EAAM0B,UAAM,EAAE;AAArB;AAC7B9B,OAAA,CAAAI,QAAA,GAAAA,QAAA;;EAED2B,eAAY,EAAA3B,QAAA,CAAA0B;AACb;AAED;AACA;AACA;AACA;AACA;;;AACO,SAAS7B,oBAAA+B,IAAA,EAAT;EAIL,IAAAC,OAAW,GAAAV,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAqBW,SAAA,GAAzBX,SAAA,CAAP,KAAAY,cAAA;EACDF,OAAA,GAAAb,aAAA,CAAAA,aAAA,KAAAe,cAAA,GAAAF,OAAA;EAGD,IAAAA,OAAA,CAAAF,eAAA,KAAA3B,QAAA,CAAA0B,UAAA;IACA,WAAAxB,iBAAA,CAAA8B,gBAAA;MACAC,IAAA,EAAAL,IAAA;MACAM,MAAA,EAAAL,OAAA,CAAAK;IACA;;EACO,MAAAC,KAAS,4DAGU;AAAA;AACxB;AACA;AAEA;;AACA;;;EAIA,OAAO,IAAAhC,qBAAA,CAA0BiC,oBAAgB,CAAAC,aAAjD,EAAAC,OAAA;AACD"},"metadata":{},"sourceType":"script","externalDependencies":[]}