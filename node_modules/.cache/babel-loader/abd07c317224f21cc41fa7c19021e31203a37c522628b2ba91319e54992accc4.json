{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar _icons = require(\"../common/icons\");\nvar _styledComponents = require(\"../common/styled-components\");\nvar _mapControlTooltip = _interopRequireDefault(require(\"./map-control-tooltip\"));\nToggle3dButtonFactory.deps = [_mapControlTooltip[\"default\"]];\nfunction Toggle3dButtonFactory(MapControlTooltip) {\n  var defaultActionIcons = {\n    cube: _icons.Cube3d\n  };\n  /** @type {import('./toggle-3d-button').Toggle3dButtonComponent} */\n\n  var Toggle3dButton = function Toggle3dButton(_ref) {\n    var dragRotate = _ref.dragRotate,\n      onTogglePerspective = _ref.onTogglePerspective,\n      _ref$actionIcons = _ref.actionIcons,\n      actionIcons = _ref$actionIcons === void 0 ? defaultActionIcons : _ref$actionIcons,\n      mapControls = _ref.mapControls;\n    var onClick = (0, _react.useCallback)(function (event) {\n      event.preventDefault();\n      onTogglePerspective();\n    }, [onTogglePerspective]);\n    var isVisible = (0, _react.useMemo)(function () {\n      return ((mapControls === null || mapControls === void 0 ? void 0 : mapControls.toggle3d) || {}).show;\n    }, [mapControls]);\n    return isVisible ? /*#__PURE__*/_react[\"default\"].createElement(MapControlTooltip, {\n      id: \"action-3d\",\n      message: dragRotate ? 'tooltip.disable3DMap' : 'tooltip.3DMap'\n    }, /*#__PURE__*/_react[\"default\"].createElement(_styledComponents.MapControlButton, {\n      onClick: onClick,\n      active: dragRotate,\n      className: (0, _classnames[\"default\"])('map-control-button', 'toggle-3d', {\n        map3d: dragRotate\n      })\n    }, /*#__PURE__*/_react[\"default\"].createElement(actionIcons.cube, {\n      height: \"22px\"\n    }))) : null;\n  };\n  Toggle3dButton.displayName = 'Toggle3dButton';\n  return /*#__PURE__*/_react[\"default\"].memo(Toggle3dButton);\n}\nvar _default = Toggle3dButtonFactory;\nexports[\"default\"] = _default;","map":{"version":3,"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","_react","_classnames","_icons","_styledComponents","_mapControlTooltip","Toggle3dButtonFactory","deps","defaultActionIcons","cube","Cube3d","dragRotate","_ref","onTogglePerspective","_ref$actionIcons","actionIcons","mapControls","onClick","useCallback","event","preventDefault","isVisible","useMemo","toggle3d","show","createElement","MapControlTooltip","id","message","MapControlButton","active","className","map3d","height","memo","Toggle3dButton","_default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/components/src/map/toggle-3d-button.tsx"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {ComponentType, useCallback, useMemo} from 'react';\nimport classnames from 'classnames';\nimport {Cube3d} from '../common/icons';\nimport {MapControlButton} from '../common/styled-components';\nimport MapControlTooltipFactory from './map-control-tooltip';\nimport {MapControls} from '@kepler.gl/types';\n\nToggle3dButtonFactory.deps = [MapControlTooltipFactory];\n\ninterface Toggle3dButtonIcons {\n  cube: ComponentType<any>;\n}\n\nexport type Toggle3dButtonProps = {\n  dragRotate: boolean;\n  onTogglePerspective: () => void;\n  actionIcons: Toggle3dButtonIcons;\n  mapControls: MapControls;\n};\n\nfunction Toggle3dButtonFactory(MapControlTooltip) {\n  const defaultActionIcons = {\n    cube: Cube3d\n  };\n  /** @type {import('./toggle-3d-button').Toggle3dButtonComponent} */\n  const Toggle3dButton: React.FC<Toggle3dButtonProps> = ({\n    dragRotate,\n    onTogglePerspective,\n    actionIcons = defaultActionIcons,\n    mapControls\n  }) => {\n    const onClick = useCallback(\n      event => {\n        event.preventDefault();\n        onTogglePerspective();\n      },\n      [onTogglePerspective]\n    );\n\n    const isVisible = useMemo(() => {\n      return (mapControls?.toggle3d || {}).show;\n    }, [mapControls]);\n\n    return isVisible ? (\n      <MapControlTooltip\n        id=\"action-3d\"\n        message={dragRotate ? 'tooltip.disable3DMap' : 'tooltip.3DMap'}\n      >\n        <MapControlButton\n          onClick={onClick}\n          active={dragRotate}\n          className={classnames('map-control-button', 'toggle-3d', {map3d: dragRotate})}\n        >\n          <actionIcons.cube height=\"22px\" />\n        </MapControlButton>\n      </MapControlTooltip>\n    ) : null;\n  };\n\n  Toggle3dButton.displayName = 'Toggle3dButton';\n  return React.memo(Toggle3dButton);\n}\n\nexport default Toggle3dButtonFactory;\n"],"mappings":";;;;;;;;;;;AAoBA;;AACA;;AACA;;AACA;;;;;AAtBA,IAAAA,sBAAA,GAAAC,OAAA;AAEA,IAAAC,uBAAA,GAAAD,OAAA;AAEAE,MAAA,CAAAC,cAAA,CAAAC,OAAA;EACAC,KAAA;AACA;AACAD,OAAA;AAEA,IAAAE,MAAA,GAAAL,uBAAA,CAAAD,OAAA;AAEA,IAAAO,WAAA,GAAAR,sBAAA,CAAAC,OAAA;AAEA,IAAAQ,MAAA,GAAAR,OAAA;AAEA,IAAAS,iBAAA,GAAAT,OAAA;AAEA,IAAAU,kBAAA,GAAAX,sBAAA,CAAAC,OAAA;AAAAW,qBAAA,CAAAC,IAAA,IAAAF,kBAAA;;EAsBA,IAAAG,kBAAS;IACPC,IAAM,EAAAN,MAAA,CAAAO;EACJ;EADyB;;;IAI3B,IAAMC,UAAA,GAA6CC,IAAG,CAAAD,UAAhD;MACJE,mBAAA,GAAAD,IAAA,CAAAC,mBAII;MAHJC,gBAAA,GAGIF,IAAA,CAAAG,WAHJ;MAGIA,WAAA,GAAAD,gBAFJ,KAEI,SAAAN,kBAAA,GAAAM,gBAAA;MAFJE,WAEI,GAAAJ,IAAA,CAAAI,WAAA;IAAA,IADJC,OAAA,IACI,GAAAhB,MADJ,CAAAiB,WACI,YAAAC,KAAA;MACJA,KAAM,CAAAC,cAAU;MAEZP,mBAAM,EAAN;IACA,IAAAA,mBAAmB;IACpB,IACAQ,SAAA,OAAApB,MALH,CAAAqB,OAAA;MAQA,OAAM,EAAAN,WAAY,aAAAA,WAAQ,KAAM,kBAAAA,WAAA,CAAAO,QAAA,SAAAC,IAAA;IAC9B,IAAAR,WAAQ;IACT,OAAGK,SAFc,GAAlB,aAAApB,MAAA,YAAAwB,aAAA,CAAAC,iBAAA;MAIAC,EAAA,aAAgB;MAEZC,OAAG,EAAAjB,UADL;IAEE,gBAASV,MAAU,UAAG,EAAAwB,aAAH,CAAArB,iBAA4B,CAAAyB,gBAAA;MAFjDZ,OAAA,EAAAA,OAIE;MACEa,MAAA,EAAOnB,UADT;MAEEoB,SAAQ,MAAA7B,WAFV;QAGE8B,KAAA,EAASrB;MAAiD;IAAD,GAA9C,aAAAV,MAAA,YAAAwB,aAAA,CAAAV,WAAA,CAAAN,IAAA;MAHbwB,MAAA;IAKoB,WAAO;EAAzB;;EAMR,oBAAehC,MAAf,UAA6B,EAAAiC,IAAA,CAAAC,cAA7B;AACA;;iBAGa,IAAAC,QAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}