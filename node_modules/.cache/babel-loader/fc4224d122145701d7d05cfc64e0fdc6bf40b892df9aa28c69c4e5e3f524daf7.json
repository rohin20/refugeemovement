{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _styledComponents = _interopRequireWildcard(require(\"styled-components\"));\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar _progressBar = _interopRequireDefault(require(\"../progress-bar\"));\nvar _styledComponents2 = require(\"../styled-components\");\nvar _utils = require(\"@kepler.gl/utils\");\nvar _templateObject, _templateObject2, _templateObject3;\nvar StyledFileProgress = _styledComponents[\"default\"].div.attrs(function (props) {\n  return {\n    className: (0, _classnames[\"default\"])('file-upload__progress', props.className)\n  };\n})(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  color: \", \";\\n  font-size: 12px;\\n  margin-top: 12px;\\n  border-image: initial;\\n  padding: 8px 12px;\\n\\n  .top-row {\\n    display: flex;\\n    justify-content: space-between;\\n  }\\n\\n  .file-name {\\n    font-weight: 500;\\n  }\\n  .middle-row {\\n    margin-top: 6px;\\n  }\\n  .bottom-row {\\n    margin-top: 6px;\\n    text-align: start;\\n  }\\n\"])), function (props) {\n  return props.theme.textColorLT;\n});\nvar StyledProgressWrapper = _styledComponents[\"default\"].div.attrs({\n  className: 'file-upload__progress__wrapper'\n})(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  width: 400px;\\n\"])));\nvar StyledContainer = _styledComponents[\"default\"].div(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  width: 100%;\\n  display: flex;\\n  justify-content: center;\\n\"])));\nvar formatPercent = function formatPercent(percent) {\n  return \"\".concat(Math.floor(percent * 100), \"%\");\n};\n\n/**\n * @param {object} params\n * @param {string} params.message\n * @param {string} params.fileName\n * @param {number} params.percent\n * @param {any} params.error\n * @param {object} params.theme\n */\nvar UploadProgress = function UploadProgress(_ref) {\n  var message = _ref.message,\n    fileName = _ref.fileName,\n    percent = _ref.percent,\n    error = _ref.error,\n    theme = _ref.theme;\n  var percentStr = formatPercent(percent);\n  var barColor = error ? theme.errorColor : theme.activeColorLT;\n  return /*#__PURE__*/_react[\"default\"].createElement(StyledFileProgress, {\n    className: \"file-upload-progress__message\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"top-row\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_styledComponents2.TruncatedTitleText, {\n    className: \"file-name\",\n    title: fileName\n  }, fileName), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"percent\"\n  }, percentStr)), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"middle-row\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_progressBar[\"default\"], {\n    percent: percentStr,\n    barColor: barColor,\n    isLoading: true,\n    theme: theme\n  })), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"bottom-row\",\n    style: {\n      color: error ? theme.errorColor : theme.textColorLT\n    }\n  }, error ? (0, _utils.getError)(error) : message));\n};\n\n/** @type {React.FunctionComponent<FileUploadProgressProps>} */\nvar FileUploadProgress = function FileUploadProgress(_ref2) {\n  var fileLoadingProgress = _ref2.fileLoadingProgress,\n    theme = _ref2.theme;\n  return /*#__PURE__*/_react[\"default\"].createElement(StyledContainer, null, /*#__PURE__*/_react[\"default\"].createElement(StyledProgressWrapper, null, Object.values(fileLoadingProgress).map(function (item) {\n    return /*#__PURE__*/_react[\"default\"].createElement(UploadProgress, (0, _extends2[\"default\"])({}, item, {\n      key: item.fileName,\n      theme: theme\n    }));\n  })));\n};\nvar _default = (0, _styledComponents.withTheme)(FileUploadProgress);\nexports[\"default\"] = _default;","map":{"version":3,"names":["exports","_extends2","_interopRequireDefault","require","_taggedTemplateLiteral2","_react","_styledComponents","_interopRequireWildcard","_classnames","_progressBar","_styledComponents2","_utils","_templateObject","_templateObject2","_templateObject3","StyledFileProgress","div","attrs","props","className","theme","textColorLT","StyledProgressWrapper","StyledContainer","formatPercent","percent","concat","Math","floor","UploadProgress","_ref","message","fileName","error","percentStr","barColor","errorColor","activeColorLT","createElement","TruncatedTitleText","title","isLoading"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/components/src/common/file-uploader/file-upload-progress.tsx"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React from 'react';\nimport styled, {withTheme} from 'styled-components';\nimport classnames from 'classnames';\nimport ProgressBar from '../progress-bar';\nimport {TruncatedTitleText} from '../styled-components';\nimport {getError} from '@kepler.gl/utils';\nimport {FileLoadingProgress} from '@kepler.gl/types';\n\nconst StyledFileProgress = styled.div.attrs(props => ({\n  className: classnames('file-upload__progress', props.className)\n}))`\n  color: ${props => props.theme.textColorLT};\n  font-size: 12px;\n  margin-top: 12px;\n  border-image: initial;\n  padding: 8px 12px;\n\n  .top-row {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  .file-name {\n    font-weight: 500;\n  }\n  .middle-row {\n    margin-top: 6px;\n  }\n  .bottom-row {\n    margin-top: 6px;\n    text-align: start;\n  }\n`;\n\nconst StyledProgressWrapper = styled.div.attrs({\n  className: 'file-upload__progress__wrapper'\n})`\n  width: 400px;\n`;\n\nconst StyledContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nconst formatPercent = percent => `${Math.floor(percent * 100)}%`;\n\ninterface UploadProgressProps {\n  message?: string;\n  fileName?: string;\n  percent: number;\n  error?: any;\n  theme: any;\n}\n\n/**\n * @param {object} params\n * @param {string} params.message\n * @param {string} params.fileName\n * @param {number} params.percent\n * @param {any} params.error\n * @param {object} params.theme\n */\nconst UploadProgress = ({message, fileName, percent, error, theme}: UploadProgressProps) => {\n  const percentStr = formatPercent(percent);\n  const barColor = error ? theme.errorColor : theme.activeColorLT;\n\n  return (\n    <StyledFileProgress className=\"file-upload-progress__message\">\n      <div className=\"top-row\">\n        <TruncatedTitleText className=\"file-name\" title={fileName}>\n          {fileName}\n        </TruncatedTitleText>\n        <div className=\"percent\">{percentStr}</div>\n      </div>\n      <div className=\"middle-row\">\n        <ProgressBar percent={percentStr} barColor={barColor} isLoading theme={theme} />\n      </div>\n      <div className=\"bottom-row\" style={{color: error ? theme.errorColor : theme.textColorLT}}>\n        {error ? getError(error) : message}\n      </div>\n    </StyledFileProgress>\n  );\n};\n\ninterface FileUploadProgressProps {\n  fileLoadingProgress: FileLoadingProgress;\n  theme: any;\n}\n\n/** @type {React.FunctionComponent<FileUploadProgressProps>} */\nconst FileUploadProgress = ({fileLoadingProgress, theme}: FileUploadProgressProps) => (\n  <StyledContainer>\n    <StyledProgressWrapper>\n      {Object.values(fileLoadingProgress).map(item => (\n        <UploadProgress {...item} key={item.fileName} theme={theme} />\n      ))}\n    </StyledProgressWrapper>\n  </StyledContainer>\n);\n\nexport default withTheme(FileUploadProgress);\n"],"mappings":";;;;;;;;;;;;;;;AAoBA;;AACA;;;;;;;;;;AAOAA,OAAM,mBAAqB;AACzB,IAAAC,SAAS,GAAEC,sBAAA,CAAAC,OAAW,iCAA+B;AADN,IAAzBC,uBAAA,GAAAF,sBAAA,CAAAC,OAAA;AAGR,IAHhBE,MAAA,GAAAH,sBAAA,CAAAC,OAAA;AA0BA,IAAMG,iBAAA,GAAAC,uBAAwB,CAAAJ,OAAA,oBAAiB;AAAA,IAApBK,WAAA,GAAAN,sBAAA,CAAAC,OAAA;AAM3B,IAAMM,YAAA,GAAeP,sBAAG,CAAAC,OAAA,kBAAH;AAMrB,IAAMO,kBAAgB,GAAAP,OAAhB,uBAAuB;AAAA,IAA7BQ,MAAA,GAAAR,OAAA;AAUA,IAAAS,eAAA,EAAAC,gBAAA,EAAAC,gBAAA;AAEA,IAAAC,kBAAA,GAAAT,iBAAA,YAAAU,GAAA,CAAAC,KAAA,WAAAC,KAAA;EACA;IACAC,SAAA,MAAAX,WAAA,sCAAAU,KAAA,CAAAC,SAAA;EACA;AACA,GAAAP,eAAA,KAAAA,eAAA,OAAAR,uBAAA,sXAAAc,KAAA;EACA,OAAAA,KAAA,CAAAE,KAAA,CAAAC,WAAA;AACA;AAA4F,IAAAC,qBAA1D,GAAAhB,iBAA0D,YAAAU,GAAA,CAAAC,KAAA;EAAAE,SAAhD,EAAgD;AAAA,GAAAN,gBAAvC,KAAuCA,gBAAA,OAAAT,uBAAA;AAC1F,IAAAmB,eAAmB,GAAAjB,iBAAc,CAAD,SAAhC,EAAAU,GAAA,CAAAF,gBAAA,KAAAA,gBAAA,OAAAV,uBAAA;AAGA,IAAAoB,aAAA,YACEA,cAAAC,OAAA;EAAoB,UAAAC,MAAU,CAAAC,IAAA,CAAAC,KAAA,CAAAH,OAAA;AAA9B;;AACE;AACsB;AAAsB;AAA1C;AAGK;AAAL;AAEG;AAAL;AACe,IAAAI,cAAS,YAAtBA,eAAAC,IAAA;EAAkC,IAAAC,OAAQ,GAAED,IAAA,CAAAC,OAA5C;IAAsDC,QAAS,GAAAF,IAA/D,CAAAE,QAAA;IAAgEP,OAAO,GAAAK,IAAA,CAAAL,OAAA;IAR3EQ,KAAA,GAAAH,IAAA,CAAAG,KAUE;IAAKb,KAAA,GAASU,IAAC,CAAAV,KAAA;EAAa,IAAAc,UAAO,GAAAV,aAAA,CAAAC,OAAA;EAAC,IAAAU,QAAO,GAAAF,KAAQ,GAAAb,KAAM,CAAAgB,UAAa,GAAAhB,KAAM,CAAAiB,aAAA;EAAzC,oBAAAhC,MAAA,YAAAiC,aAAA,CAAAvB,kBAAA;IAAnCI,SACW;EAhBjB,gBAAAd,MAAA,YAAAiC,aAAA;;EA2BA,gBAAAjC,MAAA,YAAAiC,aAAA,CAAA5B,kBAAA,CAAA6B,kBAAA;IACMpB,SAAA,aAAqB;IAAAqB,KAAE,EAAAR;EAAF,GAAAA,QAAA,gBAAA3B,MAAA,YAAAiC,aAAA;IAAAnB,SAAA;EAGuB,GAAAe,UAAA,iBAC1C7B,MAAA,YAAAiC,aAAC,QAAD;IAA0BnB,SAAK,EAAI;EAAW,gBAAOd,MAAA,YAAAiC,aAAA,CAAA7B,YAAA;IAArDgB,OAD0C,EAAAS,UAAA;IAD9CC,QAFuB,EAAAA,QAAA;IAA3BM,SAAA;;oBAUepC,MAAA,YAAAiC,aAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}