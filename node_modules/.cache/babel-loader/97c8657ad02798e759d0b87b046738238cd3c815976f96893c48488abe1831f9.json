{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.MapInfoPanel = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\nvar _cloudTile = _interopRequireDefault(require(\"./cloud-tile\"));\nvar _imageModalContainer = _interopRequireDefault(require(\"./image-modal-container\"));\nvar _providerModalContainer = _interopRequireDefault(require(\"./provider-modal-container\"));\nvar _statusPanel = _interopRequireWildcard(require(\"./status-panel\"));\nvar _constants = require(\"@kepler.gl/constants\");\nvar _styledComponents2 = require(\"../common/styled-components\");\nvar _imagePreview = _interopRequireDefault(require(\"../common/image-preview\"));\nvar _localization = require(\"@kepler.gl/localization\");\nvar _templateObject;\n\n/** @typedef {import('./save-map-modal').SaveMapModalProps} SaveMapModalProps */\nvar StyledSaveMapModal = _styledComponents[\"default\"].div.attrs({\n  className: 'save-map-modal'\n})(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  .save-map-modal-content {\\n    min-height: 400px;\\n    flex-direction: column;\\n  }\\n\\n  .description {\\n    width: 300px;\\n  }\\n\\n  .image-preview-panel {\\n    width: 300px;\\n\\n    .image-preview {\\n      padding: 0;\\n    }\\n  }\\n\\n  .map-info-panel {\\n    flex-direction: column;\\n  }\\n\\n  .save-map-modal-description {\\n    .modal-section-subtitle {\\n      margin-left: 6px;\\n    }\\n  }\\n\"])));\nvar nop = function nop(_) {};\nvar MapInfoPanel = function MapInfoPanel(_ref) {\n  var _ref$mapInfo = _ref.mapInfo,\n    mapInfo = _ref$mapInfo === void 0 ? {\n      description: '',\n      title: ''\n    } : _ref$mapInfo,\n    characterLimits = _ref.characterLimits,\n    onChangeInput = _ref.onChangeInput;\n  return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"selection map-info-panel\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_styledComponents2.StyledModalSection, {\n    className: \"save-map-modal-name\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"modal-section-title\"\n  }, \"Name*\"), /*#__PURE__*/_react[\"default\"].createElement(\"div\", null, /*#__PURE__*/_react[\"default\"].createElement(_styledComponents2.InputLight, {\n    id: \"map-title\",\n    type: \"text\",\n    value: mapInfo.title,\n    onChange: function onChange(e) {\n      return onChangeInput('title', e);\n    },\n    placeholder: \"Type map title\"\n  }))), /*#__PURE__*/_react[\"default\"].createElement(_styledComponents2.StyledModalSection, null, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"save-map-modal-description\",\n    style: {\n      display: 'flex'\n    }\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"modal-section-title\"\n  }, \"Description\"), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"modal-section-subtitle\"\n  }, \"(optional)\")), /*#__PURE__*/_react[\"default\"].createElement(\"div\", null, /*#__PURE__*/_react[\"default\"].createElement(_styledComponents2.TextAreaLight, {\n    rows: 3,\n    id: \"map-description\",\n    style: {\n      resize: 'none'\n    },\n    value: mapInfo.description,\n    onChange: function onChange(e) {\n      return onChangeInput('description', e);\n    },\n    placeholder: \"Type map description\"\n  })), /*#__PURE__*/_react[\"default\"].createElement(_styledComponents2.StyledModalInputFootnote, {\n    error: Boolean(characterLimits === null || characterLimits === void 0 ? void 0 : characterLimits.description) && mapInfo.description.length > Number(characterLimits === null || characterLimits === void 0 ? void 0 : characterLimits.description)\n  }, mapInfo.description.length, \"/\", (characterLimits === null || characterLimits === void 0 ? void 0 : characterLimits.description) || _constants.MAP_INFO_CHARACTER.description, \" characters\")));\n};\nexports.MapInfoPanel = MapInfoPanel;\nfunction SaveMapModalFactory() {\n  /**\n   * @type {React.FunctionComponent<SaveMapModalProps>}\n   */\n  var SaveMapModal = function SaveMapModal(_ref2) {\n    var mapInfo = _ref2.mapInfo,\n      exportImage = _ref2.exportImage,\n      _ref2$characterLimits = _ref2.characterLimits,\n      characterLimits = _ref2$characterLimits === void 0 ? {} : _ref2$characterLimits,\n      cloudProviders = _ref2.cloudProviders,\n      isProviderLoading = _ref2.isProviderLoading,\n      currentProvider = _ref2.currentProvider,\n      providerError = _ref2.providerError,\n      onSetCloudProvider = _ref2.onSetCloudProvider,\n      onUpdateImageSetting = _ref2.onUpdateImageSetting,\n      cleanupExportImage = _ref2.cleanupExportImage,\n      onSetMapInfo = _ref2.onSetMapInfo;\n    var onChangeInput = function onChangeInput(key, _ref3) {\n      var value = _ref3.target.value;\n      onSetMapInfo((0, _defineProperty2[\"default\"])({}, key, value));\n    };\n    var provider = currentProvider ? cloudProviders.find(function (p) {\n      return p.name === currentProvider;\n    }) : null;\n    return /*#__PURE__*/_react[\"default\"].createElement(_providerModalContainer[\"default\"], {\n      onSetCloudProvider: onSetCloudProvider,\n      cloudProviders: cloudProviders,\n      currentProvider: currentProvider\n    }, /*#__PURE__*/_react[\"default\"].createElement(_imageModalContainer[\"default\"], {\n      currentProvider: currentProvider,\n      cloudProviders: cloudProviders,\n      onUpdateImageSetting: onUpdateImageSetting,\n      cleanupExportImage: cleanupExportImage\n    }, /*#__PURE__*/_react[\"default\"].createElement(StyledSaveMapModal, null, /*#__PURE__*/_react[\"default\"].createElement(_styledComponents2.StyledModalContent, {\n      className: \"save-map-modal-content\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(_styledComponents2.StyledExportSection, {\n      disabled: isProviderLoading\n    }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n      className: \"description\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n      className: \"title\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(_localization.FormattedMessage, {\n      id: 'modal.saveMap.title'\n    })), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n      className: \"subtitle\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(_localization.FormattedMessage, {\n      id: 'modal.saveMap.subtitle'\n    }))), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n      className: \"selection\"\n    }, cloudProviders.map(function (cloudProvider) {\n      return /*#__PURE__*/_react[\"default\"].createElement(_cloudTile[\"default\"], {\n        key: cloudProvider.name,\n        onSelect: function onSelect() {\n          return onSetCloudProvider(cloudProvider.name);\n        },\n        onSetCloudProvider: onSetCloudProvider,\n        cloudProvider: cloudProvider,\n        isSelected: cloudProvider.name === currentProvider,\n        isConnected: Boolean(cloudProvider.getAccessToken && cloudProvider.getAccessToken())\n      });\n    }))), provider && provider.getManagementUrl && /*#__PURE__*/_react[\"default\"].createElement(_styledComponents2.StyledExportSection, {\n      style: {\n        margin: '2px 0'\n      }\n    }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n      className: \"description\"\n    }), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n      className: \"selection\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(\"a\", {\n      key: 1,\n      href: provider.getManagementUrl(),\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      style: {\n        textDecoration: 'underline'\n      }\n    }, \"Go to your Kepler.gl \", provider.displayName, \" page\"))), /*#__PURE__*/_react[\"default\"].createElement(_styledComponents2.StyledExportSection, null, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n      className: \"description image-preview-panel\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(_imagePreview[\"default\"], {\n      exportImage: exportImage,\n      width: _constants.MAP_THUMBNAIL_DIMENSION.width,\n      showDimension: false\n    })), isProviderLoading ? /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n      className: \"selection map-saving-animation\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(_statusPanel.UploadAnimation, {\n      icon: provider && provider.icon\n    })) : /*#__PURE__*/_react[\"default\"].createElement(MapInfoPanel, {\n      mapInfo: mapInfo,\n      characterLimits: characterLimits,\n      onChangeInput: onChangeInput\n    })), providerError ? /*#__PURE__*/_react[\"default\"].createElement(_statusPanel[\"default\"], {\n      isLoading: false,\n      error: providerError,\n      providerIcon: provider && provider.icon\n    }) : null))));\n  };\n  SaveMapModal.defaultProps = {\n    characterLimits: _constants.MAP_INFO_CHARACTER,\n    cloudProviders: [],\n    providerError: null,\n    isProviderLoading: false,\n    onSetCloudProvider: nop,\n    onUpdateImageSetting: nop\n  };\n  return SaveMapModal;\n}\nvar _default = SaveMapModalFactory;\nexports[\"default\"] = _default;","map":{"version":3,"names":["value","exports","MapInfoPanel","_defineProperty2","_interopRequireDefault","require","_taggedTemplateLiteral2","_styledComponents","_cloudTile","_statusPanel","_interopRequireWildcard","_constants","_styledComponents2","_imagePreview","_localization","_templateObject","StyledSaveMapModal","div","attrs","className","nop","_","_ref","_ref$mapInfo","mapInfo","description","title","characterLimits","onChangeInput","_react","createElement","StyledModalSection","InputLight","id","type","onChange","e","placeholder","style","display","TextAreaLight","rows","resize","StyledModalInputFootnote","error","Boolean","length","Number","MAP_INFO_CHARACTER","SaveMapModalFactory","onSetMapInfo","SaveMapModal","currentProvider","_ref2","exportImage","_ref2$characterLimits","cloudProviders","isProviderLoading","providerError","onSetCloudProvider","onUpdateImageSetting","cleanupExportImage","key","_ref3","target","provider","find","p","name","_providerModalContainer","_imageModalContainer","StyledModalContent","StyledExportSection","disabled","FormattedMessage","map","cloudProvider","onSelect","isSelected","isConnected","getAccessToken","getManagementUrl","margin","href","rel","textDecoration","width","MAP_THUMBNAIL_DIMENSION","showDimension","UploadAnimation","icon"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/components/src/modals/save-map-modal.tsx"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport CloudTile from './cloud-tile';\nimport ImageModalContainer, {ImageModalContainerProps} from './image-modal-container';\nimport ProviderModalContainer, {ProviderModalContainerProps} from './provider-modal-container';\nimport StatusPanel, {UploadAnimation} from './status-panel';\n\nimport {MAP_THUMBNAIL_DIMENSION, MAP_INFO_CHARACTER, ExportImage} from '@kepler.gl/constants';\n\nimport {\n  StyledModalContent,\n  InputLight,\n  TextAreaLight,\n  StyledExportSection,\n  StyledModalSection,\n  StyledModalInputFootnote\n} from '../common/styled-components';\nimport ImagePreview from '../common/image-preview';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {MapInfo} from '@kepler.gl/types';\nimport {Provider} from '@kepler.gl/cloud-providers';\nimport {setMapInfo, cleanupExportImage as cleanupExportImageAction} from '@kepler.gl/actions';\n\n/** @typedef {import('./save-map-modal').SaveMapModalProps} SaveMapModalProps */\n\nconst StyledSaveMapModal = styled.div.attrs({\n  className: 'save-map-modal'\n})`\n  .save-map-modal-content {\n    min-height: 400px;\n    flex-direction: column;\n  }\n\n  .description {\n    width: 300px;\n  }\n\n  .image-preview-panel {\n    width: 300px;\n\n    .image-preview {\n      padding: 0;\n    }\n  }\n\n  .map-info-panel {\n    flex-direction: column;\n  }\n\n  .save-map-modal-description {\n    .modal-section-subtitle {\n      margin-left: 6px;\n    }\n  }\n`;\n\nconst nop = _ => {};\n\ntype CharacterLimits = {\n  title?: number;\n  description?: number;\n};\n\ntype SaveMapModalProps = {\n  mapInfo: MapInfo;\n  exportImage: ExportImage;\n  cloudProviders: Provider[];\n  isProviderLoading: boolean;\n  currentProvider?: string | null;\n  providerError?: any;\n  characterLimits?: CharacterLimits;\n\n  // callbacks\n  onSetCloudProvider: ProviderModalContainerProps['onSetCloudProvider'];\n  onUpdateImageSetting: ImageModalContainerProps['onUpdateImageSetting'];\n  cleanupExportImage: typeof cleanupExportImageAction;\n  onSetMapInfo: typeof setMapInfo;\n};\n\ntype MapInfoPanelProps = Pick<SaveMapModalProps, 'mapInfo' | 'characterLimits'> & {\n  onChangeInput: (\n    type: string,\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => void;\n};\n\nexport const MapInfoPanel: React.FC<MapInfoPanelProps> = ({\n  mapInfo = {description: '', title: ''},\n  characterLimits,\n  onChangeInput\n}) => (\n  <div className=\"selection map-info-panel\">\n    <StyledModalSection className=\"save-map-modal-name\">\n      <div className=\"modal-section-title\">Name*</div>\n      <div>\n        <InputLight\n          id=\"map-title\"\n          type=\"text\"\n          value={mapInfo.title}\n          onChange={e => onChangeInput('title', e)}\n          placeholder=\"Type map title\"\n        />\n      </div>\n    </StyledModalSection>\n    <StyledModalSection>\n      <div className=\"save-map-modal-description\" style={{display: 'flex'}}>\n        <div className=\"modal-section-title\">Description</div>\n        <div className=\"modal-section-subtitle\">(optional)</div>\n      </div>\n      <div>\n        <TextAreaLight\n          rows={3}\n          id=\"map-description\"\n          style={{resize: 'none'}}\n          value={mapInfo.description}\n          onChange={e => onChangeInput('description', e)}\n          placeholder=\"Type map description\"\n        />\n      </div>\n      <StyledModalInputFootnote\n        error={\n          Boolean(characterLimits?.description) &&\n          mapInfo.description.length > Number(characterLimits?.description)\n        }\n      >\n        {mapInfo.description.length}/\n        {characterLimits?.description || MAP_INFO_CHARACTER.description} characters\n      </StyledModalInputFootnote>\n    </StyledModalSection>\n  </div>\n);\n\nfunction SaveMapModalFactory() {\n  /**\n   * @type {React.FunctionComponent<SaveMapModalProps>}\n   */\n  const SaveMapModal: React.FC<SaveMapModalProps> = ({\n    mapInfo,\n    exportImage,\n    characterLimits = {},\n    cloudProviders,\n    isProviderLoading,\n    currentProvider,\n    providerError,\n    onSetCloudProvider,\n    onUpdateImageSetting,\n    cleanupExportImage,\n    onSetMapInfo\n  }) => {\n    const onChangeInput = (\n      key: string,\n      {target: {value}}: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n    ) => {\n      onSetMapInfo({[key]: value});\n    };\n    const provider = currentProvider ? cloudProviders.find(p => p.name === currentProvider) : null;\n\n    return (\n      <ProviderModalContainer\n        onSetCloudProvider={onSetCloudProvider}\n        cloudProviders={cloudProviders}\n        currentProvider={currentProvider}\n      >\n        <ImageModalContainer\n          currentProvider={currentProvider}\n          cloudProviders={cloudProviders}\n          onUpdateImageSetting={onUpdateImageSetting}\n          cleanupExportImage={cleanupExportImage}\n        >\n          <StyledSaveMapModal>\n            <StyledModalContent className=\"save-map-modal-content\">\n              <StyledExportSection disabled={isProviderLoading}>\n                <div className=\"description\">\n                  <div className=\"title\">\n                    <FormattedMessage id={'modal.saveMap.title'} />\n                  </div>\n                  <div className=\"subtitle\">\n                    <FormattedMessage id={'modal.saveMap.subtitle'} />\n                  </div>\n                </div>\n                <div className=\"selection\">\n                  {cloudProviders.map(cloudProvider => (\n                    <CloudTile\n                      key={cloudProvider.name}\n                      onSelect={() => onSetCloudProvider(cloudProvider.name)}\n                      onSetCloudProvider={onSetCloudProvider}\n                      cloudProvider={cloudProvider}\n                      isSelected={cloudProvider.name === currentProvider}\n                      isConnected={Boolean(\n                        cloudProvider.getAccessToken && cloudProvider.getAccessToken()\n                      )}\n                    />\n                  ))}\n                </div>\n              </StyledExportSection>\n              {provider && provider.getManagementUrl && (\n                <StyledExportSection style={{margin: '2px 0'}}>\n                  <div className=\"description\" />\n                  <div className=\"selection\">\n                    <a\n                      key={1}\n                      href={provider.getManagementUrl()}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      style={{textDecoration: 'underline'}}\n                    >\n                      Go to your Kepler.gl {provider.displayName} page\n                    </a>\n                  </div>\n                </StyledExportSection>\n              )}\n              <StyledExportSection>\n                <div className=\"description image-preview-panel\">\n                  <ImagePreview\n                    exportImage={exportImage}\n                    width={MAP_THUMBNAIL_DIMENSION.width}\n                    showDimension={false}\n                  />\n                </div>\n                {isProviderLoading ? (\n                  <div className=\"selection map-saving-animation\">\n                    <UploadAnimation icon={provider && provider.icon} />\n                  </div>\n                ) : (\n                  <MapInfoPanel\n                    mapInfo={mapInfo}\n                    characterLimits={characterLimits}\n                    onChangeInput={onChangeInput}\n                  />\n                )}\n              </StyledExportSection>\n              {providerError ? (\n                <StatusPanel\n                  isLoading={false}\n                  error={providerError}\n                  providerIcon={provider && provider.icon}\n                />\n              ) : null}\n            </StyledModalContent>\n          </StyledSaveMapModal>\n        </ImageModalContainer>\n      </ProviderModalContainer>\n    );\n  };\n\n  SaveMapModal.defaultProps = {\n    characterLimits: MAP_INFO_CHARACTER,\n    cloudProviders: [],\n    providerError: null,\n    isProviderLoading: false,\n    onSetCloudProvider: nop,\n    onUpdateImageSetting: nop\n  };\n\n  return SaveMapModal;\n}\n\nexport default SaveMapModalFactory;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}