{"ast":null,"code":"import _objectSpread from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _assertThisInitialized from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport Viewport from '../viewports/viewport';\nimport { getMeterZoom } from '@math.gl/web-mercator';\nimport { Matrix4, _SphericalCoordinates as SphericalCoordinates } from '@math.gl/core';\nvar FirstPersonViewport = /*#__PURE__*/function (_Viewport) {\n  _inherits(FirstPersonViewport, _Viewport);\n  var _super = _createSuper(FirstPersonViewport);\n  function FirstPersonViewport(props) {\n    var _this;\n    _classCallCheck(this, FirstPersonViewport);\n    var longitude = props.longitude,\n      latitude = props.latitude,\n      modelMatrix = props.modelMatrix,\n      _props$bearing = props.bearing,\n      bearing = _props$bearing === void 0 ? 0 : _props$bearing,\n      _props$pitch = props.pitch,\n      pitch = _props$pitch === void 0 ? 0 : _props$pitch,\n      _props$up = props.up,\n      up = _props$up === void 0 ? [0, 0, 1] : _props$up;\n    var spherical = new SphericalCoordinates({\n      bearing: bearing,\n      pitch: pitch === -90 ? 0.0001 : 90 + pitch\n    });\n    var dir = spherical.toVector3().normalize();\n    var center = modelMatrix ? new Matrix4(modelMatrix).transformAsVector(dir) : dir;\n    var zoom = Number.isFinite(latitude) ? getMeterZoom({\n      latitude: latitude\n    }) : 0;\n    var scale = Math.pow(2, zoom);\n    var viewMatrix = new Matrix4().lookAt({\n      eye: [0, 0, 0],\n      center: center,\n      up: up\n    }).scale(scale);\n    _this = _super.call(this, _objectSpread(_objectSpread({}, props), {}, {\n      zoom: zoom,\n      viewMatrix: viewMatrix\n    }));\n    _defineProperty(_assertThisInitialized(_this), \"longitude\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"latitude\", void 0);\n    _this.latitude = latitude;\n    _this.longitude = longitude;\n    return _this;\n  }\n  return _createClass(FirstPersonViewport);\n}(Viewport);\nexport { FirstPersonViewport as default };","map":{"version":3,"names":["Viewport","getMeterZoom","Matrix4","_SphericalCoordinates","SphericalCoordinates","FirstPersonViewport","_Viewport","_inherits","_super","_createSuper","props","_this","_classCallCheck","longitude","latitude","modelMatrix","_props$bearing","bearing","_props$pitch","pitch","_props$up","up","spherical","dir","toVector3","normalize","center","transformAsVector","zoom","Number","isFinite","scale","Math","pow","viewMatrix","lookAt","eye","call","_objectSpread","_defineProperty","_assertThisInitialized","_createClass","default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/core/src/viewports/first-person-viewport.ts"],"sourcesContent":["import Viewport from '../viewports/viewport';\nimport {getMeterZoom} from '@math.gl/web-mercator';\nimport {Matrix4, _SphericalCoordinates as SphericalCoordinates} from '@math.gl/core';\n\nexport type FirstPersonViewportOptions = {\n  /** Name of the viewport */\n  id?: string;\n  /** Left offset from the canvas edge, in pixels */\n  x?: number;\n  /** Top offset from the canvas edge, in pixels */\n  y?: number;\n  /** Viewport width in pixels */\n  width?: number;\n  /** Viewport height in pixels */\n  height?: number;\n  /** Longitude of the camera, in the geospatial case. */\n  longitude?: number;\n  /** Latitude of the camera, in the geospatial case. */\n  latitude?: number;\n  /** Meter offsets of the camera from the lng-lat anchor point. Default `[0, 0, 0]`. */\n  position?: [number, number, number];\n  /** Bearing (heading) of the camera in degrees. Default `0` (north). */\n  bearing?: number;\n  /** Pitch (tilt) of the camera in degrees. Default `0` (horizontal). */\n  pitch?: number;\n  /** Transform applied to the camera position and direction */\n  modelMatrix?: number[] | null;\n  /** Custom projection matrix */\n  projectionMatrix?: number[];\n  /** The up direction, default positive z axis. */\n  up?: [number, number, number];\n  /** Field of view covered by camera, in degrees. Default `75`. */\n  fovy?: number;\n  /** Distance of near clipping plane. Default `0.1`. */\n  near?: number;\n  /** Distance of far clipping plane. Default `1000`. */\n  far?: number;\n  /** Modifier of viewport scale. Corresponds to the number of pixels per meter. Default `1`. */\n  focalDistance?: number;\n};\n\nexport default class FirstPersonViewport extends Viewport {\n  longitude?: number;\n  latitude?: number;\n\n  constructor(props: FirstPersonViewportOptions) {\n    // TODO - push direction handling into Matrix4.lookAt\n    const {longitude, latitude, modelMatrix, bearing = 0, pitch = 0, up = [0, 0, 1]} = props;\n\n    // Always calculate direction from bearing and pitch\n    const spherical = new SphericalCoordinates({\n      bearing,\n      // Avoid \"pixel project matrix not invertible\" error\n      pitch: pitch === -90 ? 0.0001 : 90 + pitch\n    });\n    const dir = spherical.toVector3().normalize();\n\n    // Direction is relative to model coordinates, of course\n    const center = modelMatrix ? new Matrix4(modelMatrix).transformAsVector(dir) : dir;\n\n    // Just the direction. All the positioning is done in viewport.js\n    const zoom = Number.isFinite(latitude) ? getMeterZoom({latitude: latitude as number}) : 0;\n    const scale = Math.pow(2, zoom);\n    const viewMatrix = new Matrix4().lookAt({eye: [0, 0, 0], center, up}).scale(scale);\n\n    super({\n      ...props,\n      zoom,\n      viewMatrix\n    });\n\n    this.latitude = latitude;\n    this.longitude = longitude;\n  }\n}\n"],"mappings":";;;;;;;AAAA,OAAOA,QAAP,MAAqB,uBAArB;AACA,SAAQC,YAAR,QAA2B,uBAA3B;AACA,SAAQC,OAAR,EAAiBC,qBAAqB,IAAIC,oBAA1C,QAAqE,eAArE;AAAA,IAuCqBC,mBAAN,0BAAAC,SAAA;EAAAC,SAAA,CAAAF,mBAAA,EAAAC,SAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,mBAAA;EAIb,SAAAA,oBAAYK,KAAD,EAAoC;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAP,mBAAA;IAE7C,IAAOQ,SAAD,GAA6EH,KAAnF,CAAOG,SAAD;MAAYC,QAAZ,GAA6EJ,KAAnF,CAAkBI,QAAZ;MAAsBC,WAAtB,GAA6EL,KAAnF,CAA4BK,WAAtB;MAAAC,cAAA,GAA6EN,KAAnF,CAAyCO,OAAO;MAAPA,OAAO,GAAAD,cAAA,cAAG,CAA7C,GAAAA,cAAA;MAAAE,YAAA,GAA6ER,KAAnF,CAAsDS,KAAK;MAALA,KAAK,GAAAD,YAAA,cAAG,CAAxD,GAAAA,YAAA;MAAAE,SAAA,GAA6EV,KAAnF,CAAiEW,EAAE;MAAFA,EAAE,GAAAD,SAAA,cAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,IAAAA,SAAA;IAGtE,IAAME,SAAS,GAAG,IAAIlB,oBAAJ,CAAyB;MACzCa,OADyC,EACzCA,OADyC;MAGzCE,KAAK,EAAEA,KAAK,KAAK,CAAC,EAAX,GAAgB,MAAhB,GAAyB,KAAKA;IAHI,CAAzB,CAAlB;IAKA,IAAMI,GAAG,GAAGD,SAAS,CAACE,SAAV,GAAsBC,SAAtB,EAAZ;IAGA,IAAMC,MAAM,GAAGX,WAAW,GAAG,IAAIb,OAAJ,CAAYa,WAAZ,EAAyBY,iBAAzB,CAA2CJ,GAA3C,CAAH,GAAqDA,GAA/E;IAGA,IAAMK,IAAI,GAAGC,MAAM,CAACC,QAAP,CAAgBhB,QAAhB,IAA4Bb,YAAY,CAAC;MAACa,QAAQ,EAAEA;IAAX,CAAD,CAAxC,GAA2E,CAAxF;IACA,IAAMiB,KAAK,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYL,IAAZ,CAAd;IACA,IAAMM,UAAU,GAAG,IAAIhC,OAAJ,GAAciC,MAAd,CAAqB;MAACC,GAAG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAN;MAAiBV,MAAjB,EAAiBA,MAAjB;MAAyBL,EAAA,EAAAA;IAAzB,CAArB,EAAmDU,KAAnD,CAAyDA,KAAzD,CAAnB;IAEApB,KAAA,GAAAH,MAAA,CAAA6B,IAAA,OAAAC,aAAA,CAAAA,aAAA,KACK5B,KADC;MAEJkB,IAFI,EAEJA,IAFI;MAGJM,UAAA,EAAAA;IAAA;IAvB2CK,eAAA,CAAAC,sBAAA,CAAA7B,KAAA;IAAA4B,eAAA,CAAAC,sBAAA,CAAA7B,KAAA;IA0B7CA,KAAA,CAAKG,QAAL,GAAgBA,QAAhB;IACAH,KAAA,CAAKE,SAAL,GAAiBA,SAAjB;IAAA,OAAAF,KAAA;EACD;EAAA,OAAA8B,YAAA,CAAApC,mBAAA;AAAA,EAhC8CL,QAAlC;AAAA,SAAMK,mBAAN,IAAAqC,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}