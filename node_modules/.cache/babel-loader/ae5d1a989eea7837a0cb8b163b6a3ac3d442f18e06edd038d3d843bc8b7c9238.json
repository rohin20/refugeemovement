{"ast":null,"code":"import { getNamedFormat, filterProps, createError } from '../utils';\nvar RELATIVE_TIME_FORMAT_OPTIONS = ['numeric', 'style'];\nfunction getFormatter(_ref, getRelativeTimeFormat) {\n  var locale = _ref.locale,\n    formats = _ref.formats,\n    onError = _ref.onError;\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var format = options.format;\n  var defaults = !!format && getNamedFormat(formats, 'relative', format, onError) || {};\n  var filteredOptions = filterProps(options, RELATIVE_TIME_FORMAT_OPTIONS, defaults);\n  return getRelativeTimeFormat(locale, filteredOptions);\n}\nexport function formatRelativeTime(config, getRelativeTimeFormat, value, unit) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  if (!unit) {\n    unit = 'second';\n  }\n  var RelativeTimeFormat = Intl.RelativeTimeFormat;\n  if (!RelativeTimeFormat) {\n    config.onError(createError(\"Intl.RelativeTimeFormat is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-relativetimeformat\\\"\\n\"));\n  }\n  try {\n    return getFormatter(config, getRelativeTimeFormat, options).format(value, unit);\n  } catch (e) {\n    config.onError(createError('Error formatting relative time.', e));\n  }\n  return String(value);\n}","map":{"version":3,"names":["getNamedFormat","filterProps","createError","RELATIVE_TIME_FORMAT_OPTIONS","getFormatter","_ref","getRelativeTimeFormat","locale","formats","onError","options","arguments","length","undefined","format","defaults","filteredOptions","formatRelativeTime","config","value","unit","RelativeTimeFormat","Intl","e","String"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/react-intl/lib/formatters/relativeTime.js"],"sourcesContent":["import { getNamedFormat, filterProps, createError } from '../utils';\nconst RELATIVE_TIME_FORMAT_OPTIONS = [\n    'numeric',\n    'style',\n];\nfunction getFormatter({ locale, formats, onError, }, getRelativeTimeFormat, options = {}) {\n    const { format } = options;\n    const defaults = (!!format && getNamedFormat(formats, 'relative', format, onError)) || {};\n    const filteredOptions = filterProps(options, RELATIVE_TIME_FORMAT_OPTIONS, defaults);\n    return getRelativeTimeFormat(locale, filteredOptions);\n}\nexport function formatRelativeTime(config, getRelativeTimeFormat, value, unit, options = {}) {\n    if (!unit) {\n        unit = 'second';\n    }\n    const RelativeTimeFormat = Intl.RelativeTimeFormat;\n    if (!RelativeTimeFormat) {\n        config.onError(createError(`Intl.RelativeTimeFormat is not available in this environment.\nTry polyfilling it using \"@formatjs/intl-relativetimeformat\"\n`));\n    }\n    try {\n        return getFormatter(config, getRelativeTimeFormat, options).format(value, unit);\n    }\n    catch (e) {\n        config.onError(createError('Error formatting relative time.', e));\n    }\n    return String(value);\n}\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,WAAW,EAAEC,WAAW,QAAQ,UAAU;AACnE,IAAMC,4BAA4B,GAAG,CACjC,SAAS,EACT,OAAO,CACV;AACD,SAASC,YAAYA,CAAAC,IAAA,EAAgCC,qBAAqB,EAAgB;EAAA,IAAlEC,MAAM,GAAAF,IAAA,CAANE,MAAM;IAAEC,OAAO,GAAAH,IAAA,CAAPG,OAAO;IAAEC,OAAO,GAAAJ,IAAA,CAAPI,OAAO;EAAA,IAA4BC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EACpF,IAAQG,MAAM,GAAKJ,OAAO,CAAlBI,MAAM;EACd,IAAMC,QAAQ,GAAI,CAAC,CAACD,MAAM,IAAId,cAAc,CAACQ,OAAO,EAAE,UAAU,EAAEM,MAAM,EAAEL,OAAO,CAAC,IAAK,CAAC,CAAC;EACzF,IAAMO,eAAe,GAAGf,WAAW,CAACS,OAAO,EAAEP,4BAA4B,EAAEY,QAAQ,CAAC;EACpF,OAAOT,qBAAqB,CAACC,MAAM,EAAES,eAAe,CAAC;AACzD;AACA,OAAO,SAASC,kBAAkBA,CAACC,MAAM,EAAEZ,qBAAqB,EAAEa,KAAK,EAAEC,IAAI,EAAgB;EAAA,IAAdV,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EACvF,IAAI,CAACS,IAAI,EAAE;IACPA,IAAI,GAAG,QAAQ;EACnB;EACA,IAAMC,kBAAkB,GAAGC,IAAI,CAACD,kBAAkB;EAClD,IAAI,CAACA,kBAAkB,EAAE;IACrBH,MAAM,CAACT,OAAO,CAACP,WAAW,mIAEhC,CAAC;EACC;EACA,IAAI;IACA,OAAOE,YAAY,CAACc,MAAM,EAAEZ,qBAAqB,EAAEI,OAAO,CAAC,CAACI,MAAM,CAACK,KAAK,EAAEC,IAAI,CAAC;EACnF,CAAC,CACD,OAAOG,CAAC,EAAE;IACNL,MAAM,CAACT,OAAO,CAACP,WAAW,CAAC,iCAAiC,EAAEqB,CAAC,CAAC,CAAC;EACrE;EACA,OAAOC,MAAM,CAACL,KAAK,CAAC;AACxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}