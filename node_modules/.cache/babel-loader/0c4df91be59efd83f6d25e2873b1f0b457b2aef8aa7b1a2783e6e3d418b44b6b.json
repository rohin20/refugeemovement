{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { isBlob } from '../../javascript-utils/is-type';\nimport { isLoaderObject } from '../loader-utils/normalize-loader';\nimport { getFetchFunction } from '../loader-utils/option-utils';\nimport { parse } from './parse';\nexport function load(_x, _x2, _x3) {\n  return _load.apply(this, arguments);\n}\nfunction _load() {\n  _load = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(url, loaders, options) {\n    var fetch, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!Array.isArray(loaders) && !isLoaderObject(loaders)) {\n              options = loaders;\n              loaders = null;\n            }\n            fetch = getFetchFunction(options || {});\n            data = url;\n            if (!(typeof url === 'string')) {\n              _context.next = 9;\n              break;\n            }\n            _context.next = 6;\n            return fetch(url);\n          case 6:\n            data = _context.sent;\n            _context.next = 10;\n            break;\n          case 9:\n            url = null;\n          case 10:\n            if (!isBlob(url)) {\n              _context.next = 15;\n              break;\n            }\n            _context.next = 13;\n            return fetch(url);\n          case 13:\n            data = _context.sent;\n            url = null;\n          case 15:\n            _context.next = 17;\n            return parse(data, loaders, options);\n          case 17:\n            return _context.abrupt(\"return\", _context.sent);\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _load.apply(this, arguments);\n}","map":{"version":3,"names":["isBlob","isLoaderObject","getFetchFunction","parse","load","_x","_x2","_x3","_load","apply","arguments","_callee","url","loaders","options","fetch","data","_regeneratorRuntime","wrap","_callee$","_context","prev","next","Array","isArray","sent","abrupt","stop"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/kepler.gl/node_modules/@loaders.gl/core/src/lib/api/load.js"],"sourcesContent":["import {isBlob} from '../../javascript-utils/is-type';\nimport {isLoaderObject} from '../loader-utils/normalize-loader';\nimport {getFetchFunction} from '../loader-utils/option-utils';\n\nimport {parse} from './parse';\n\n// Note: Load does duplicate a lot of parse.\n// it can also call fetchFile on string urls, which `parse` won't do.\nexport async function load(url, loaders, options) {\n  // Signature: load(url, options)\n  if (!Array.isArray(loaders) && !isLoaderObject(loaders)) {\n    options = loaders;\n    loaders = null;\n  }\n\n  // Select fetch function\n  const fetch = getFetchFunction(options || {});\n\n  // at this point, `url` could be already loaded binary data\n  let data = url;\n  // url is a string, fetch the url\n  if (typeof url === 'string') {\n    data = await fetch(url);\n  } else {\n    url = null;\n  }\n\n  // URL is Blob or File, fetchFile handles it (alt: we could generate ObjectURL here)\n  if (isBlob(url)) {\n    // The fetch response object will contain blob.name\n    data = await fetch(url);\n    url = null;\n  }\n\n  // Data is loaded (at least we have a `Response` object) so time to hand over to `parse`\n  return await parse(data, loaders, options);\n}\n"],"mappings":";;AAAA,SAAQA,MAAR,QAAqB,gCAArB;AACA,SAAQC,cAAR,QAA6B,kCAA7B;AACA,SAAQC,gBAAR,QAA+B,8BAA/B;AAEA,SAAQC,KAAR,QAAoB,SAApB;AAIA,gBAAsBC,IAAtBA,CAAAC,EAAA,EAAAC,GAAA,EAAAC,GAAA;EAAA,OAAAC,KAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;;qDAAO,SAAAC,QAAoBC,GAApB,EAAyBC,OAAzB,EAAkCC,OAAlC;IAAA,IAAAC,KAAA,EAAAC,IAAA;IAAA,OAAAC,mBAAA,CAAAC,IAAA,UAAAC,SAAAC,QAAA;MAAA;QAAA,QAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAEL,IAAI,CAACC,KAAK,CAACC,OAAN,CAAcX,OAAd,CAAD,IAA2B,CAACZ,cAAc,CAACY,OAAD,CAA9C,EAAyD;cACvDC,OAAO,GAAGD,OAAV;cACAA,OAAO,GAAG,IAAV;YACD;YAGKE,KARD,GAQSb,gBAAgB,CAACY,OAAO,IAAI,EAAZ,CARzB;YAWDE,IAXC,GAWMJ,GAXN;YAAA,MAaD,OAAOA,GAAP,KAAe,QAbd;cAAAQ,QAAA,CAAAE,IAAA;cAAA;YAAA;YAAAF,QAAA,CAAAE,IAAA;YAAA,OAcUP,KAAK,CAACH,GAAD,CAdf;UAAA;YAcHI,IAdG,GAAAI,QAAA,CAAAK,IAAA;YAAAL,QAAA,CAAAE,IAAA;YAAA;UAAA;YAgBHV,GAAG,GAAG,IAAN;UAhBG;YAAA,KAoBDZ,MAAM,CAACY,GAAD,CApBL;cAAAQ,QAAA,CAAAE,IAAA;cAAA;YAAA;YAAAF,QAAA,CAAAE,IAAA;YAAA,OAsBUP,KAAK,CAACH,GAAD,CAtBf;UAAA;YAsBHI,IAtBG,GAAAI,QAAA,CAAAK,IAAA;YAuBHb,GAAG,GAAG,IAAN;UAvBG;YAAAQ,QAAA,CAAAE,IAAA;YAAA,OA2BQnB,KAAK,CAACa,IAAD,EAAOH,OAAP,EAAgBC,OAAhB,CA3Bb;UAAA;YAAA,OAAAM,QAAA,CAAAM,MAAA,WAAAN,QAAA,CAAAK,IAAA;UAAA;UAAA;YAAA,OAAAL,QAAA,CAAAO,IAAA;QAAA;MAAA;IAAA,GAAAhB,OAAA;EAAA,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}