{"ast":null,"code":"import _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Transition from './transition';\nvar EPSILON = 1e-5;\nfunction updateSpringElement(prev, cur, dest, damping, stiffness) {\n  var velocity = cur - prev;\n  var delta = dest - cur;\n  var spring = delta * stiffness;\n  var damper = -velocity * damping;\n  return spring + damper + velocity + cur;\n}\nfunction updateSpring(prev, cur, dest, damping, stiffness) {\n  if (Array.isArray(dest)) {\n    var next = [];\n    for (var i = 0; i < dest.length; i++) {\n      next[i] = updateSpringElement(prev[i], cur[i], dest[i], damping, stiffness);\n    }\n    return next;\n  }\n  return updateSpringElement(prev, cur, dest, damping, stiffness);\n}\nfunction distance(value1, value2) {\n  if (Array.isArray(value1)) {\n    var distanceSquare = 0;\n    for (var i = 0; i < value1.length; i++) {\n      var d = value1[i] - value2[i];\n      distanceSquare += d * d;\n    }\n    return Math.sqrt(distanceSquare);\n  }\n  return Math.abs(value1 - value2);\n}\nvar CPUSpringTransition = /*#__PURE__*/function (_Transition) {\n  _inherits(CPUSpringTransition, _Transition);\n  var _super = _createSuper(CPUSpringTransition);\n  function CPUSpringTransition() {\n    _classCallCheck(this, CPUSpringTransition);\n    return _super.apply(this, arguments);\n  }\n  _createClass(CPUSpringTransition, [{\n    key: \"value\",\n    get: function get() {\n      return this._currValue;\n    }\n  }, {\n    key: \"_onUpdate\",\n    value: function _onUpdate() {\n      var _this$settings = this.settings,\n        fromValue = _this$settings.fromValue,\n        toValue = _this$settings.toValue,\n        damping = _this$settings.damping,\n        stiffness = _this$settings.stiffness;\n      var _this$_prevValue = this._prevValue,\n        _prevValue = _this$_prevValue === void 0 ? fromValue : _this$_prevValue,\n        _this$_currValue = this._currValue,\n        _currValue = _this$_currValue === void 0 ? fromValue : _this$_currValue;\n      var nextValue = updateSpring(_prevValue, _currValue, toValue, damping, stiffness);\n      var delta = distance(nextValue, toValue);\n      var velocity = distance(nextValue, _currValue);\n      if (delta < EPSILON && velocity < EPSILON) {\n        nextValue = toValue;\n        this.end();\n      }\n      this._prevValue = _currValue;\n      this._currValue = nextValue;\n    }\n  }]);\n  return CPUSpringTransition;\n}(Transition);\nexport { CPUSpringTransition as default };","map":{"version":3,"names":["Transition","EPSILON","updateSpringElement","prev","cur","dest","damping","stiffness","velocity","delta","spring","damper","updateSpring","Array","isArray","next","i","length","distance","value1","value2","distanceSquare","d","Math","sqrt","abs","CPUSpringTransition","_Transition","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","get","_currValue","value","_onUpdate","_this$settings","settings","fromValue","toValue","_this$_prevValue","_prevValue","_this$_currValue","nextValue","end","default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/core/src/transitions/cpu-spring-transition.js"],"sourcesContent":["import Transition from './transition';\n\nconst EPSILON = 1e-5;\n\n/*\n * Calculate the next value in the spring transition\n * @param prev {Number} - previous value\n * @param cur {Number} - current value\n * @param dest {Number} - destination value\n * @param damping {Number}\n * @param stiffness {Number}\n */\nfunction updateSpringElement(prev, cur, dest, damping, stiffness) {\n  const velocity = cur - prev;\n  const delta = dest - cur;\n  const spring = delta * stiffness;\n  const damper = -velocity * damping;\n  return spring + damper + velocity + cur;\n}\n\n/*\n * Calculate the next value in the spring transition\n * @param prev {Number|Array} - previous value\n * @param cur {Number|Array} - current value\n * @param dest {Number|Array} - destination value\n * @param damping {Number}\n * @param stiffness {Number}\n */\nfunction updateSpring(prev, cur, dest, damping, stiffness) {\n  if (Array.isArray(dest)) {\n    const next = [];\n    for (let i = 0; i < dest.length; i++) {\n      next[i] = updateSpringElement(prev[i], cur[i], dest[i], damping, stiffness);\n    }\n    return next;\n  }\n  return updateSpringElement(prev, cur, dest, damping, stiffness);\n}\n\n/*\n * Calculate the distance between two numbers or two vectors\n */\nfunction distance(value1, value2) {\n  if (Array.isArray(value1)) {\n    let distanceSquare = 0;\n    for (let i = 0; i < value1.length; i++) {\n      const d = value1[i] - value2[i];\n      distanceSquare += d * d;\n    }\n    return Math.sqrt(distanceSquare);\n  }\n  return Math.abs(value1 - value2);\n}\n\nexport default class CPUSpringTransition extends Transition {\n  get value() {\n    return this._currValue;\n  }\n\n  _onUpdate() {\n    // TODO - use timeline\n    // const {time} = this;\n\n    const {fromValue, toValue, damping, stiffness} = this.settings;\n    const {_prevValue = fromValue, _currValue = fromValue} = this;\n    let nextValue = updateSpring(_prevValue, _currValue, toValue, damping, stiffness);\n    const delta = distance(nextValue, toValue);\n    const velocity = distance(nextValue, _currValue);\n\n    if (delta < EPSILON && velocity < EPSILON) {\n      nextValue = toValue;\n      this.end();\n    }\n\n    this._prevValue = _currValue;\n    this._currValue = nextValue;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}