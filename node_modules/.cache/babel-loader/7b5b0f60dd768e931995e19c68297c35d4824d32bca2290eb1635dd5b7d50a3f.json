{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LayerLegendHeaderFactory = LayerLegendHeaderFactory;\nexports.LayerLegendContentFactory = LayerLegendContentFactory;\nexports[\"default\"] = exports.LayerColorLegend = exports.SingleColorLegend = exports.LayerSizeLegend = exports.VisualChannelMetric = exports.StyledMapControlLegend = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\nvar _d3Color = require(\"d3-color\");\nvar _colorLegend = _interopRequireDefault(require(\"../common/color-legend\"));\nvar _constants = require(\"@kepler.gl/constants\");\nvar _localization = require(\"@kepler.gl/localization\");\nvar _templateObject;\nvar StyledMapControlLegend = _styledComponents[\"default\"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  padding: 10px \", \"px 10px\\n    \", \"px;\\n  font-size: 11px;\\n  font-family: \", \";\\n  border-bottom-color: \", \";\\n  border-bottom-style: solid;\\n  border-bottom-width: \", \";\\n  width: \", \"px;\\n  box-sizing: border-box;\\n\\n  .legend--layer_name {\\n    font-size: 12px;\\n    padding-right: \", \"px;\\n    color: \", \";\\n    font-weight: 500;\\n  }\\n  .legend--layer_type {\\n    color: \", \";\\n    font-weight: 500;\\n    font-size: 11px;\\n    padding-right: \", \"px;\\n  }\\n\\n  .legend--layer__title {\\n    padding-right: \", \"px;\\n  }\\n\\n  .legend--layer_by {\\n    color: \", \";\\n  }\\n\\n  .legend--layer_color_field {\\n    color: \", \";\\n    font-weight: 500;\\n  }\\n\\n  .legend--layer_color-legend {\\n    margin-top: 6px;\\n  }\\n\"])), function (props) {\n  return props.theme.mapControl.padding;\n}, function (props) {\n  return props.theme.mapControl.padding;\n}, function (props) {\n  return props.theme.fontFamily;\n}, function (props) {\n  return props.theme.panelBorderColor;\n}, function (props) {\n  return props.last ? 0 : '1px';\n}, function (props) {\n  return props.width;\n}, function (props) {\n  return props.theme.mapControl.padding;\n}, function (props) {\n  return props.theme.textColor;\n}, function (props) {\n  return props.theme.subtextColor;\n}, function (props) {\n  return props.theme.mapControl.padding;\n}, function (props) {\n  return props.theme.mapControl.padding;\n}, function (props) {\n  return props.theme.subtextColor;\n}, function (props) {\n  return props.theme.textColorHl;\n});\nexports.StyledMapControlLegend = StyledMapControlLegend;\nvar VisualChannelMetric = function VisualChannelMetric(_ref) {\n  var name = _ref.name;\n  return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"legend--layer__title\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n    className: \"legend--layer_color_field\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_localization.FormattedMessage, {\n    id: name\n  })));\n};\nexports.VisualChannelMetric = VisualChannelMetric;\n\n/** @type {typeof import('./map-legend').LayerSizeLegend} */\nvar LayerSizeLegend = function LayerSizeLegend(_ref2) {\n  var label = _ref2.label,\n    name = _ref2.name;\n  return label ? /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"legend--layer_size-schema\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"p\", null, /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n    className: \"legend--layer_by\"\n  }, label ? /*#__PURE__*/_react[\"default\"].createElement(_localization.FormattedMessage, {\n    id: label\n  }) : null), /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n    className: \"legend--layer_by\"\n  }, \" by \")), name && /*#__PURE__*/_react[\"default\"].createElement(VisualChannelMetric, {\n    name: name\n  })) : null;\n};\nexports.LayerSizeLegend = LayerSizeLegend;\nvar SINGLE_COLOR_DOMAIN = [''];\n\n/** @type {typeof import('./map-legend').SingleColorLegend} */\nvar SingleColorLegend = /*#__PURE__*/_react[\"default\"].memo(function (_ref3) {\n  var width = _ref3.width,\n    color = _ref3.color;\n  return /*#__PURE__*/_react[\"default\"].createElement(_colorLegend[\"default\"], {\n    scaleType: \"ordinal\",\n    displayLabel: false,\n    domain: SINGLE_COLOR_DOMAIN,\n    fieldType: null,\n    range: {\n      colors: [_d3Color.rgb.apply(void 0, (0, _toConsumableArray2[\"default\"])(color)).toString()]\n    },\n    width: width\n  });\n});\nexports.SingleColorLegend = SingleColorLegend;\nSingleColorLegend.displayName = 'SingleColorLegend';\n\n/** @type {typeof import('./map-legend').LayerColorLegend} */\nvar LayerColorLegend = /*#__PURE__*/_react[\"default\"].memo(function (_ref4) {\n  var description = _ref4.description,\n    config = _ref4.config,\n    width = _ref4.width,\n    colorChannel = _ref4.colorChannel;\n  var enableColorBy = description.measure;\n  var scale = colorChannel.scale,\n    field = colorChannel.field,\n    domain = colorChannel.domain,\n    range = colorChannel.range,\n    property = colorChannel.property;\n  var _map = [scale, field, domain].map(function (k) {\n      return config[k];\n    }),\n    _map2 = (0, _slicedToArray2[\"default\"])(_map, 3),\n    colorScale = _map2[0],\n    colorField = _map2[1],\n    colorDomain = _map2[2];\n  var colorRange = config.visConfig[range];\n  return /*#__PURE__*/_react[\"default\"].createElement(\"div\", null, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"legend--layer_color-schema\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", null, enableColorBy ? /*#__PURE__*/_react[\"default\"].createElement(VisualChannelMetric, {\n    name: enableColorBy\n  }) : null, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"legend--layer_color-legend\"\n  }, enableColorBy ? /*#__PURE__*/_react[\"default\"].createElement(_colorLegend[\"default\"], {\n    scaleType: colorScale,\n    displayLabel: true,\n    domain: colorDomain,\n    fieldType: colorField && colorField.type || 'real',\n    range: colorRange,\n    width: width\n  }) : /*#__PURE__*/_react[\"default\"].createElement(SingleColorLegend, {\n    color: config.visConfig[property] || config[property] || config.color,\n    width: width\n  })))));\n}); // eslint-disable-next-line react/display-name\n\nexports.LayerColorLegend = LayerColorLegend;\nLayerColorLegend.displayName = 'LayerColorLegend';\nvar isColorChannel = function isColorChannel(visualChannel) {\n  return [_constants.CHANNEL_SCALES.color, _constants.CHANNEL_SCALES.colorAggr].includes(visualChannel.channelScaleType);\n};\nfunction LayerLegendHeaderFactory() {\n  /** @type {typeof import('./map-legend').LayerLegendHeader }> */\n  var LayerLegendHeader = function LayerLegendHeader(_ref5) {\n    var options = _ref5.options,\n      layer = _ref5.layer;\n    return (options === null || options === void 0 ? void 0 : options.showLayerName) !== false ? /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n      className: \"legend--layer_name\"\n    }, layer.config.label) : null;\n  };\n  return LayerLegendHeader;\n}\nfunction LayerLegendContentFactory() {\n  /** @type {typeof import('./map-legend').LayerLegendContent }> */\n  var LayerLegendContent = function LayerLegendContent(_ref6) {\n    var layer = _ref6.layer,\n      containerW = _ref6.containerW;\n    var colorChannels = Object.values(layer.visualChannels).filter(isColorChannel);\n    var nonColorChannels = Object.values(layer.visualChannels).filter(function (vc) {\n      return !isColorChannel(vc);\n    });\n    return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, colorChannels.map(function (colorChannel) {\n      return !colorChannel.condition || colorChannel.condition(layer.config) ? /*#__PURE__*/_react[\"default\"].createElement(LayerColorLegend, {\n        key: colorChannel.key,\n        description: layer.getVisualChannelDescription(colorChannel.key),\n        config: layer.config,\n        width: containerW - 2 * _constants.DIMENSIONS.mapControl.padding,\n        colorChannel: colorChannel\n      }) : null;\n    }), nonColorChannels.map(function (visualChannel) {\n      var matchCondition = !visualChannel.condition || visualChannel.condition(layer.config);\n      var enabled = layer.config[visualChannel.field] || visualChannel.defaultMeasure;\n      var description = layer.getVisualChannelDescription(visualChannel.key);\n      return matchCondition && enabled ? /*#__PURE__*/_react[\"default\"].createElement(LayerSizeLegend, {\n        key: visualChannel.key,\n        label: description.label,\n        name: description.measure\n      }) : null;\n    }));\n  };\n  return LayerLegendContent;\n}\nMapLegendFactory.deps = [LayerLegendHeaderFactory, LayerLegendContentFactory];\nfunction MapLegendFactory(LayerLegendHeader, LayerLegendContent) {\n  /** @type {typeof import('./map-legend').MapLegend }> */\n  var MapLegend = function MapLegend(_ref7) {\n    var _ref7$layers = _ref7.layers,\n      layers = _ref7$layers === void 0 ? [] : _ref7$layers,\n      width = _ref7.width,\n      mapHeight = _ref7.mapHeight,\n      options = _ref7.options;\n    return /*#__PURE__*/_react[\"default\"].createElement(\"div\", (0, _extends2[\"default\"])({\n      className: \"map-legend\"\n    }, mapHeight && {\n      style: {\n        /* subtracting rough size of 4 map control buttons and padding */\n        maxHeight: mapHeight - 250\n      }\n    }), layers.map(function (layer, index) {\n      if (!layer.isValidToSave() || layer.config.hidden) {\n        return null;\n      }\n      var containerW = width || _constants.DIMENSIONS.mapControl.width;\n      return /*#__PURE__*/_react[\"default\"].createElement(StyledMapControlLegend, {\n        className: \"legend--layer\",\n        last: index === layers.length - 1,\n        key: index,\n        width: containerW\n      }, /*#__PURE__*/_react[\"default\"].createElement(LayerLegendHeader, {\n        options: options,\n        layer: layer\n      }), /*#__PURE__*/_react[\"default\"].createElement(LayerLegendContent, {\n        containerW: containerW,\n        layer: layer\n      }));\n    }));\n  };\n  MapLegend.displayName = 'MapLegend';\n  return MapLegend;\n}\nvar _default = MapLegendFactory;\nexports[\"default\"] = _default;","map":{"version":3,"names":["value","exports","LayerLegendHeaderFactory","LayerColorLegend","SingleColorLegend","LayerSizeLegend","VisualChannelMetric","StyledMapControlLegend","_slicedToArray2","_interopRequireDefault","require","_toConsumableArray2","_taggedTemplateLiteral2","_react","_styledComponents","_d3Color","_colorLegend","_constants","_localization","_templateObject","div","props","theme","mapControl","padding","fontFamily","width","textColor","subtextColor","textColorHl","_ref","name","createElement","className","FormattedMessage","id","_ref2","label","memo","_ref3","color","scaleType","displayLabel","domain","SINGLE_COLOR_DOMAIN","fieldType","range","colors","rgb","apply","toString","displayName","_ref4","description","config","colorChannel","enableColorBy","measure","scale","field","property","_map","map","k","_map2","colorScale","colorField","colorDomain","type","colorRange","visConfig","isColorChannel","visualChannel","CHANNEL_SCALES","colorAggr","includes","channelScaleType","LayerLegendHeader","_ref5","options","layer","showLayerName","LayerLegendContentFactory","LayerLegendContent","_ref6","containerW","colorChannels","Object","values","visualChannels","filter","nonColorChannels","vc","Fragment","condition","getVisualChannelDescription","key","DIMENSIONS","matchCondition","enabled","defaultMeasure","MapLegendFactory","deps","MapLegend","_ref7","_ref7$layers","layers","mapHeight","_extends2","style","maxHeight","isValidToSave","hidden"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/components/src/map/map-legend.tsx"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport {rgb} from 'd3-color';\nimport ColorLegend from '../common/color-legend';\nimport {CHANNEL_SCALES, DIMENSIONS} from '@kepler.gl/constants';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {\n  Layer,\n  LayerBaseConfig,\n  VisualChannel,\n  VisualChannelDescription\n} from '@kepler.gl/layers';\n\ninterface StyledMapControlLegendProps {\n  width?: number;\n  last?: boolean;\n}\n\nexport const StyledMapControlLegend = styled.div<StyledMapControlLegendProps>`\n  padding: 10px ${props => props.theme.mapControl.padding}px 10px\n    ${props => props.theme.mapControl.padding}px;\n  font-size: 11px;\n  font-family: ${props => props.theme.fontFamily};\n  border-bottom-color: ${props => props.theme.panelBorderColor};\n  border-bottom-style: solid;\n  border-bottom-width: ${props => (props.last ? 0 : '1px')};\n  width: ${props => props.width}px;\n  box-sizing: border-box;\n\n  .legend--layer_name {\n    font-size: 12px;\n    padding-right: ${props => props.theme.mapControl.padding}px;\n    color: ${props => props.theme.textColor};\n    font-weight: 500;\n  }\n  .legend--layer_type {\n    color: ${props => props.theme.subtextColor};\n    font-weight: 500;\n    font-size: 11px;\n    padding-right: ${props => props.theme.mapControl.padding}px;\n  }\n\n  .legend--layer__title {\n    padding-right: ${props => props.theme.mapControl.padding}px;\n  }\n\n  .legend--layer_by {\n    color: ${props => props.theme.subtextColor};\n  }\n\n  .legend--layer_color_field {\n    color: ${props => props.theme.textColorHl};\n    font-weight: 500;\n  }\n\n  .legend--layer_color-legend {\n    margin-top: 6px;\n  }\n`;\n\nexport const VisualChannelMetric = ({name}) => {\n  return (\n    <div className=\"legend--layer__title\">\n      <span className=\"legend--layer_color_field\">\n        <FormattedMessage id={name} />\n      </span>\n    </div>\n  );\n};\n\nexport type LayerSizeLegendProps = {\n  label: string;\n  name: string | undefined;\n};\n\n/** @type {typeof import('./map-legend').LayerSizeLegend} */\nexport const LayerSizeLegend: React.FC<LayerSizeLegendProps> = ({label, name}) =>\n  label ? (\n    <div className=\"legend--layer_size-schema\">\n      <p>\n        <span className=\"legend--layer_by\">{label ? <FormattedMessage id={label} /> : null}</span>\n        <span className=\"legend--layer_by\"> by </span>\n      </p>\n      {name && <VisualChannelMetric name={name} />}\n    </div>\n  ) : null;\n\nconst SINGLE_COLOR_DOMAIN = [''];\n\nexport type SingleColorLegendProps = {\n  width: number;\n  color: string;\n};\n\n/** @type {typeof import('./map-legend').SingleColorLegend} */\nexport const SingleColorLegend: React.FC<SingleColorLegendProps> = React.memo(({width, color}) => (\n  <ColorLegend\n    scaleType=\"ordinal\"\n    displayLabel={false}\n    domain={SINGLE_COLOR_DOMAIN}\n    fieldType={null}\n    range={{colors: [rgb(...color).toString()]}}\n    width={width}\n  />\n));\n\nSingleColorLegend.displayName = 'SingleColorLegend';\n\nexport type LayerColorLegendProps = {\n  description: VisualChannelDescription;\n  config: LayerBaseConfig;\n  width: number;\n  colorChannel: VisualChannel;\n};\n\n/** @type {typeof import('./map-legend').LayerColorLegend} */\nexport const LayerColorLegend: React.FC<LayerColorLegendProps> = React.memo(\n  ({description, config, width, colorChannel}) => {\n    const enableColorBy = description.measure;\n    const {scale, field, domain, range, property} = colorChannel;\n    const [colorScale, colorField, colorDomain] = [scale, field, domain].map(k => config[k]);\n    const colorRange = config.visConfig[range];\n\n    return (\n      <div>\n        <div className=\"legend--layer_color-schema\">\n          <div>\n            {enableColorBy ? <VisualChannelMetric name={enableColorBy} /> : null}\n            <div className=\"legend--layer_color-legend\">\n              {enableColorBy ? (\n                <ColorLegend\n                  scaleType={colorScale}\n                  displayLabel\n                  domain={colorDomain}\n                  fieldType={(colorField && colorField.type) || 'real'}\n                  range={colorRange}\n                  width={width}\n                />\n              ) : (\n                <SingleColorLegend\n                  color={config.visConfig[property] || config[property] || config.color}\n                  width={width}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n\n// eslint-disable-next-line react/display-name\nLayerColorLegend.displayName = 'LayerColorLegend';\n\nconst isColorChannel = visualChannel =>\n  [CHANNEL_SCALES.color, CHANNEL_SCALES.colorAggr].includes(visualChannel.channelScaleType);\n\nexport type LayerLegendHeaderProps = {\n  layer: Layer;\n  options?: {\n    showLayerName?: boolean;\n  };\n};\n\nexport function LayerLegendHeaderFactory() {\n  /** @type {typeof import('./map-legend').LayerLegendHeader }> */\n  const LayerLegendHeader: React.FC<LayerLegendHeaderProps> = ({options, layer}) => {\n    return options?.showLayerName !== false ? (\n      <div className=\"legend--layer_name\">{layer.config.label}</div>\n    ) : null;\n  };\n  return LayerLegendHeader;\n}\n\nexport type LayerLegendContentProps = {\n  layer: Layer;\n  containerW: number;\n};\n\nexport function LayerLegendContentFactory() {\n  /** @type {typeof import('./map-legend').LayerLegendContent }> */\n  const LayerLegendContent: React.FC<LayerLegendContentProps> = ({layer, containerW}) => {\n    const colorChannels = Object.values(layer.visualChannels).filter(isColorChannel);\n    const nonColorChannels = Object.values(layer.visualChannels).filter(vc => !isColorChannel(vc));\n\n    return (\n      <>\n        {colorChannels.map(colorChannel =>\n          !colorChannel.condition || colorChannel.condition(layer.config) ? (\n            <LayerColorLegend\n              key={colorChannel.key}\n              description={layer.getVisualChannelDescription(colorChannel.key)}\n              config={layer.config}\n              width={containerW - 2 * DIMENSIONS.mapControl.padding}\n              colorChannel={colorChannel}\n            />\n          ) : null\n        )}\n        {nonColorChannels.map(visualChannel => {\n          const matchCondition = !visualChannel.condition || visualChannel.condition(layer.config);\n          const enabled = layer.config[visualChannel.field] || visualChannel.defaultMeasure;\n\n          const description = layer.getVisualChannelDescription(visualChannel.key);\n\n          return matchCondition && enabled ? (\n            <LayerSizeLegend\n              key={visualChannel.key}\n              label={description.label}\n              name={description.measure}\n            />\n          ) : null;\n        })}\n      </>\n    );\n  };\n\n  return LayerLegendContent;\n}\n\nexport type MapLegendProps = {\n  layers?: ReadonlyArray<Layer>;\n  width?: number;\n  mapHeight?: number;\n  options?: {\n    showLayerName?: boolean;\n  };\n};\n\nMapLegendFactory.deps = [LayerLegendHeaderFactory, LayerLegendContentFactory];\nfunction MapLegendFactory(LayerLegendHeader, LayerLegendContent) {\n  /** @type {typeof import('./map-legend').MapLegend }> */\n  const MapLegend: React.FC<MapLegendProps> = ({layers = [], width, mapHeight, options}) => (\n    <div\n      className=\"map-legend\"\n      {...(mapHeight && {\n        style: {\n          /* subtracting rough size of 4 map control buttons and padding */\n          maxHeight: mapHeight - 250\n        }\n      })}\n    >\n      {layers.map((layer, index) => {\n        if (!layer.isValidToSave() || layer.config.hidden) {\n          return null;\n        }\n        const containerW = width || DIMENSIONS.mapControl.width;\n\n        return (\n          <StyledMapControlLegend\n            className=\"legend--layer\"\n            last={index === layers.length - 1}\n            key={index}\n            width={containerW}\n          >\n            <LayerLegendHeader options={options} layer={layer} />\n            <LayerLegendContent containerW={containerW} layer={layer} />\n          </StyledMapControlLegend>\n        );\n      })}\n    </div>\n  );\n\n  MapLegend.displayName = 'MapLegend';\n\n  return MapLegend;\n}\n\nexport default MapLegendFactory;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}