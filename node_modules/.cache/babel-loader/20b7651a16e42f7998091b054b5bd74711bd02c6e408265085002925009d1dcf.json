{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ChildProcessProxy } from '@loaders.gl/worker-utils';\nexport function encodeImageURLToCompressedTextureURL(_x, _x2, _x3) {\n  return _encodeImageURLToCompressedTextureURL.apply(this, arguments);\n}\nfunction _encodeImageURLToCompressedTextureURL() {\n  _encodeImageURLToCompressedTextureURL = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(inputUrl, outputUrl, options) {\n    var args, childProcess;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          args = ['texture-compressor', '--type', 's3tc', '--compression', 'DXT1', '--quality', 'normal', '--input', inputUrl, '--output', outputUrl];\n          childProcess = new ChildProcessProxy();\n          _context.next = 4;\n          return childProcess.start({\n            command: 'npx',\n            arguments: args,\n            spawn: options\n          });\n        case 4:\n          return _context.abrupt(\"return\", outputUrl);\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _encodeImageURLToCompressedTextureURL.apply(this, arguments);\n}","map":{"version":3,"names":["ChildProcessProxy","encodeImageURLToCompressedTextureURL","_x","_x2","_x3","_encodeImageURLToCompressedTextureURL","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","inputUrl","outputUrl","options","args","childProcess","wrap","_callee$","_context","prev","next","start","command","spawn","abrupt","stop"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@loaders.gl/textures/src/lib/encoders/encode-texture.ts"],"sourcesContent":["import {ChildProcessProxy} from '@loaders.gl/worker-utils';\nimport {CompressedTextureWriterOptions} from '../../compressed-texture-writer';\n\n/*\n * @see https://github.com/TimvanScherpenzeel/texture-compressor\n */\nexport async function encodeImageURLToCompressedTextureURL(\n  inputUrl: string,\n  outputUrl: string,\n  options?: CompressedTextureWriterOptions\n): Promise<string> {\n  // prettier-ignore\n  const args = [\n    // Note: our actual executable is `npx`, so `texture-compressor` is an argument\n    'texture-compressor',\n    '--type', 's3tc',\n    '--compression', 'DXT1',\n    '--quality', 'normal',\n    '--input', inputUrl,\n    '--output', outputUrl\n  ];\n  const childProcess = new ChildProcessProxy();\n  await childProcess.start({\n    command: 'npx',\n    arguments: args,\n    spawn: options\n  });\n  return outputUrl;\n}\n"],"mappings":";;AAAA,SAAQA,iBAAiB,QAAO,0BAA0B;AAM1D,gBAAsBC,oCAAoCA,CAAAC,EAAA,EAAAC,GAAA,EAAAC,GAAA;EAAA,OAAAC,qCAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAsB1D,SAAAF,sCAAA;EAAAA,qCAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAtBO,SAAAC,QACLC,QAAgB,EAChBC,SAAiB,EACjBC,OAAwC;IAAA,IAAAC,IAAA,EAAAC,YAAA;IAAA,OAAAP,mBAAA,GAAAQ,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAGlCN,IAAI,GAAG,CAEX,oBAAoB,EACpB,QAAQ,EAAE,MAAM,EAChB,eAAe,EAAE,MAAM,EACvB,WAAW,EAAE,QAAQ,EACrB,SAAS,EAAEH,QAAQ,EACnB,UAAU,EAAEC,SAAS,CACtB;UACKG,YAAY,GAAG,IAAIhB,iBAAiB,EAAE;UAAAmB,QAAA,CAAAE,IAAA;UAAA,OACtCL,YAAY,CAACM,KAAK,CAAC;YACvBC,OAAO,EAAE,KAAK;YACdhB,SAAS,EAAEQ,IAAI;YACfS,KAAK,EAAEV;UACT,CAAC,CAAC;QAAA;UAAA,OAAAK,QAAA,CAAAM,MAAA,WACKZ,SAAS;QAAA;QAAA;UAAA,OAAAM,QAAA,CAAAO,IAAA;MAAA;IAAA,GAAAf,OAAA;EAAA,CAClB;EAAA,OAAAN,qCAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}