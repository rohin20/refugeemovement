{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { resolvePath } from '@loaders.gl/loader-utils';\nimport { makeResponse } from '../utils/response-utils';\nexport function fetchFile(_x, _x2) {\n  return _fetchFile.apply(this, arguments);\n}\nfunction _fetchFile() {\n  _fetchFile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(url, options) {\n    var fetchOptions;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!(typeof url === 'string')) {\n            _context.next = 7;\n            break;\n          }\n          url = resolvePath(url);\n          fetchOptions = options;\n          if (options !== null && options !== void 0 && options.fetch && typeof (options === null || options === void 0 ? void 0 : options.fetch) !== 'function') {\n            fetchOptions = options.fetch;\n          }\n          _context.next = 6;\n          return fetch(url, fetchOptions);\n        case 6:\n          return _context.abrupt(\"return\", _context.sent);\n        case 7:\n          _context.next = 9;\n          return makeResponse(url);\n        case 9:\n          return _context.abrupt(\"return\", _context.sent);\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _fetchFile.apply(this, arguments);\n}","map":{"version":3,"names":["resolvePath","makeResponse","fetchFile","_x","_x2","_fetchFile","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","options","fetchOptions","wrap","_callee$","_context","prev","next","fetch","abrupt","sent","stop"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/layers/node_modules/@loaders.gl/core/src/lib/fetch/fetch-file.ts"],"sourcesContent":["import {resolvePath} from '@loaders.gl/loader-utils';\nimport {makeResponse} from '../utils/response-utils';\n// import {getErrorMessageFromResponse} from './fetch-error-message';\n\n/**\n * fetch compatible function\n * Reads file data from:\n * - http/http urls\n * - data urls\n * - File/Blob objects\n * Leverages `@loaders.gl/polyfills` for Node.js support\n * Respects pathPrefix and file aliases\n */\nexport async function fetchFile(\n  url: string | Blob,\n  options?: RequestInit & {fetch?: RequestInit | Function}\n): Promise<Response> {\n  if (typeof url === 'string') {\n    url = resolvePath(url);\n\n    let fetchOptions: RequestInit = options as RequestInit;\n    if (options?.fetch && typeof options?.fetch !== 'function') {\n      fetchOptions = options.fetch;\n    }\n\n    return await fetch(url, fetchOptions);\n  }\n\n  return await makeResponse(url);\n}\n"],"mappings":";;AAAA,SAAQA,WAAW,QAAO,0BAA0B;AACpD,SAAQC,YAAY,QAAO,yBAAyB;AAYpD,gBAAsBC,SAASA,CAAAC,EAAA,EAAAC,GAAA;EAAA,OAAAC,UAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAgB/B,SAAAF,WAAA;EAAAA,UAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAhBO,SAAAC,QACLC,GAAkB,EAClBC,OAAwD;IAAA,IAAAC,YAAA;IAAA,OAAAL,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAA,MAEpD,OAAOP,GAAG,KAAK,QAAQ;YAAAK,QAAA,CAAAE,IAAA;YAAA;UAAA;UACzBP,GAAG,GAAGZ,WAAW,CAACY,GAAG,CAAC;UAElBE,YAAyB,GAAGD,OAAsB;UACtD,IAAIA,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEO,KAAK,IAAI,QAAOP,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEO,KAAK,MAAK,UAAU,EAAE;YAC1DN,YAAY,GAAGD,OAAO,CAACO,KAAK;UAC9B;UAAAH,QAAA,CAAAE,IAAA;UAAA,OAEaC,KAAK,CAACR,GAAG,EAAEE,YAAY,CAAC;QAAA;UAAA,OAAAG,QAAA,CAAAI,MAAA,WAAAJ,QAAA,CAAAK,IAAA;QAAA;UAAAL,QAAA,CAAAE,IAAA;UAAA,OAG1BlB,YAAY,CAACW,GAAG,CAAC;QAAA;UAAA,OAAAK,QAAA,CAAAI,MAAA,WAAAJ,QAAA,CAAAK,IAAA;QAAA;QAAA;UAAA,OAAAL,QAAA,CAAAM,IAAA;MAAA;IAAA,GAAAZ,OAAA;EAAA,CAChC;EAAA,OAAAN,UAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}