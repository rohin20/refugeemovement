{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.lineVisConfigs = exports.lineColumnLabels = exports.lineOptionalColumns = exports.lineRequiredColumns = exports.linePosAccessor = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _extensions = require(\"@deck.gl/extensions\");\nvar _deckglLayers = require(\"@kepler.gl/deckgl-layers\");\nvar _lineLayerIcon = _interopRequireDefault(require(\"./line-layer-icon\"));\nvar _arcLayer = _interopRequireDefault(require(\"../arc-layer/arc-layer\"));\nvar _constants = require(\"@kepler.gl/constants\");\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nvar linePosAccessor = function linePosAccessor(_ref) {\n  var lat0 = _ref.lat0,\n    lng0 = _ref.lng0,\n    lat1 = _ref.lat1,\n    lng1 = _ref.lng1,\n    alt0 = _ref.alt0,\n    alt1 = _ref.alt1;\n  return function (dc) {\n    return function (d) {\n      return [dc.valueAt(d.index, lng0.fieldIdx), dc.valueAt(d.index, lat0.fieldIdx), alt0 && alt0.fieldIdx > -1 ? dc.valueAt(d.index, alt0.fieldIdx) : 0, dc.valueAt(d.index, lng1.fieldIdx), dc.valueAt(d.index, lat1.fieldIdx), alt1 && (alt1 === null || alt1 === void 0 ? void 0 : alt1.fieldIdx) > -1 ? dc.valueAt(d.index, alt1.fieldIdx) : 0];\n    };\n  };\n};\nexports.linePosAccessor = linePosAccessor;\nvar lineRequiredColumns = ['lat0', 'lng0', 'lat1', 'lng1'];\nexports.lineRequiredColumns = lineRequiredColumns;\nvar lineOptionalColumns = ['alt0', 'alt1'];\nexports.lineOptionalColumns = lineOptionalColumns;\nvar lineColumnLabels = {\n  lat0: 'arc.lat0',\n  lng0: 'arc.lng0',\n  lat1: 'arc.lat1',\n  lng1: 'arc.lng1',\n  alt0: 'line.alt0',\n  alt1: 'line.alt1'\n};\nexports.lineColumnLabels = lineColumnLabels;\nvar lineVisConfigs = {\n  opacity: 'opacity',\n  thickness: 'thickness',\n  colorRange: 'colorRange',\n  sizeRange: 'strokeWidthRange',\n  targetColor: 'targetColor',\n  elevationScale: _objectSpread(_objectSpread({}, _constants.LAYER_VIS_CONFIGS.elevationScale), {}, {\n    defaultValue: 1\n  })\n};\nexports.lineVisConfigs = lineVisConfigs;\nvar LineLayer = /*#__PURE__*/function (_ArcLayer) {\n  (0, _inherits2[\"default\"])(LineLayer, _ArcLayer);\n  var _super = _createSuper(LineLayer);\n  function LineLayer(props) {\n    var _this;\n    (0, _classCallCheck2[\"default\"])(this, LineLayer);\n    _this = _super.call(this, props);\n    _this.registerVisConfig(lineVisConfigs);\n    _this.getPositionAccessor = function (dataContainer) {\n      return linePosAccessor(_this.config.columns)(dataContainer);\n    };\n    return _this;\n  }\n  (0, _createClass2[\"default\"])(LineLayer, [{\n    key: \"type\",\n    get: function get() {\n      return 'line';\n    }\n  }, {\n    key: \"layerIcon\",\n    get: function get() {\n      return _lineLayerIcon[\"default\"];\n    }\n  }, {\n    key: \"requiredLayerColumns\",\n    get: function get() {\n      return lineRequiredColumns;\n    }\n  }, {\n    key: \"optionalColumns\",\n    get: function get() {\n      return lineOptionalColumns;\n    }\n  }, {\n    key: \"columnLabels\",\n    get: function get() {\n      return lineColumnLabels;\n    }\n  }, {\n    key: \"visualChannels\",\n    get: function get() {\n      var visualChannels = (0, _get2[\"default\"])((0, _getPrototypeOf2[\"default\"])(LineLayer.prototype), \"visualChannels\", this);\n      return _objectSpread(_objectSpread({}, visualChannels), {}, {\n        sourceColor: _objectSpread(_objectSpread({}, visualChannels.sourceColor), {}, {\n          accessor: 'getColor'\n        })\n      });\n    }\n  }, {\n    key: \"renderLayer\",\n    value: function renderLayer(opts) {\n      var data = opts.data,\n        gpuFilter = opts.gpuFilter,\n        objectHovered = opts.objectHovered,\n        interactionConfig = opts.interactionConfig;\n      var layerProps = {\n        widthScale: this.config.visConfig.thickness * _constants.PROJECTED_PIXEL_SIZE_MULTIPLIER,\n        elevationScale: this.config.visConfig.elevationScale\n      };\n      var updateTriggers = _objectSpread({\n        getPosition: this.config.columns,\n        getFilterValue: gpuFilter.filterValueUpdateTriggers\n      }, this.getVisualChannelUpdateTriggers());\n      var defaultLayerProps = this.getDefaultDeckLayerProps(opts);\n      var hoveredObject = this.hasHoveredObject(objectHovered);\n      return [\n      // base layer\n      new _deckglLayers.EnhancedLineLayer(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, defaultLayerProps), this.getBrushingExtensionProps(interactionConfig, 'source_target')), data), layerProps), {}, {\n        updateTriggers: updateTriggers,\n        extensions: [].concat((0, _toConsumableArray2[\"default\"])(defaultLayerProps.extensions), [new _extensions.BrushingExtension()])\n      }))].concat((0, _toConsumableArray2[\"default\"])(hoveredObject ? [new _deckglLayers.EnhancedLineLayer(_objectSpread(_objectSpread(_objectSpread({}, this.getDefaultHoverLayerProps()), layerProps), {}, {\n        data: [hoveredObject],\n        getColor: this.config.highlightColor,\n        getTargetColor: this.config.highlightColor,\n        getWidth: data.getWidth\n      }))] : []));\n    }\n  }], [{\n    key: \"findDefaultLayerProps\",\n    value: function findDefaultLayerProps(_ref2) {\n      var _ref2$fieldPairs = _ref2.fieldPairs,\n        fieldPairs = _ref2$fieldPairs === void 0 ? [] : _ref2$fieldPairs;\n      if (fieldPairs.length < 2) {\n        return {\n          props: []\n        };\n      }\n      var props = {\n        // connect the first two point layer with line\n        columns: {\n          lat0: fieldPairs[0].pair.lat,\n          lng0: fieldPairs[0].pair.lng,\n          alt0: {\n            value: null,\n            fieldIdx: -1,\n            optional: true\n          },\n          lat1: fieldPairs[1].pair.lat,\n          lng1: fieldPairs[1].pair.lng,\n          alt1: {\n            value: null,\n            fieldIdx: -1,\n            optional: true\n          }\n        },\n        label: \"\".concat(fieldPairs[0].defaultName, \" -> \").concat(fieldPairs[1].defaultName, \" line\")\n      };\n      return {\n        props: [props]\n      };\n    }\n  }]);\n  return LineLayer;\n}(_arcLayer[\"default\"]);\nexports[\"default\"] = LineLayer;","map":{"version":3,"names":["value","exports","lineVisConfigs","lineColumnLabels","lineOptionalColumns","lineRequiredColumns","linePosAccessor","_toConsumableArray2","_interopRequireDefault","require","_classCallCheck2","_createClass2","_defineProperty2","_extensions","_deckglLayers","_lineLayerIcon","_arcLayer","_constants","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","_ref","lat0","lng0","lat1","lng1","alt0","alt1","d","dc","valueAt","index","fieldIdx","opacity","colorRange","targetColor","elevationScale","_objectSpread","LAYER_VIS_CONFIGS","defaultValue","_super","LineLayer","_this","call","props","getPositionAccessor","dataContainer","config","columns","get","key","layerProps","visualChannels","_get2","prototype","sourceColor","renderLayer","opts","data","gpuFilter","objectHovered","interactionConfig","widthScale","visConfig","thickness","PROJECTED_PIXEL_SIZE_MULTIPLIER","getPosition","getFilterValue","filterValueUpdateTriggers","defaultLayerProps","getDefaultDeckLayerProps","hoveredObject","hasHoveredObject","EnhancedLineLayer","getBrushingExtensionProps","extensions","concat","BrushingExtension","getDefaultHoverLayerProps","getColor","highlightColor","getTargetColor","getWidth","findDefaultLayerProps","fieldPairs","_ref2","_ref2$fieldPairs","length","pair","lat"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/layers/src/line-layer/line-layer.ts"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {BrushingExtension} from '@deck.gl/extensions';\n\nimport {EnhancedLineLayer} from '@kepler.gl/deckgl-layers';\nimport LineLayerIcon from './line-layer-icon';\nimport ArcLayer, {ArcLayerConfig} from '../arc-layer/arc-layer';\nimport {LayerColumn} from '../base-layer';\nimport {\n  LAYER_VIS_CONFIGS,\n  ColorRange,\n  PROJECTED_PIXEL_SIZE_MULTIPLIER\n} from '@kepler.gl/constants';\nimport {\n  Merge,\n  RGBColor,\n  VisConfigColorRange,\n  VisConfigColorSelect,\n  VisConfigNumber,\n  VisConfigRange\n} from '@kepler.gl/types';\nimport {default as KeplerTable} from '@kepler.gl/table';\nimport {DataContainerInterface} from '@kepler.gl/utils';\n\nexport type LineLayerVisConfigSettings = {\n  opacity: VisConfigNumber;\n  thickness: VisConfigNumber;\n  colorRange: VisConfigColorRange;\n  sizeRange: VisConfigRange;\n  targetColor: VisConfigColorSelect;\n  elevationScale: VisConfigNumber;\n};\n\nexport type LineLayerColumnsConfig = {\n  lat0: LayerColumn;\n  lng0: LayerColumn;\n  lat1: LayerColumn;\n  lng1: LayerColumn;\n  alt0?: LayerColumn;\n  alt1?: LayerColumn;\n};\n\nexport type LineLayerVisConfig = {\n  colorRange: ColorRange;\n  opacity: number;\n  sizeRange: [number, number];\n  targetColor: RGBColor;\n  thickness: number;\n  elevationScale: number;\n};\n\nexport type LineLayerConfig = Merge<\n  ArcLayerConfig,\n  {columns: LineLayerColumnsConfig; visConfig: LineLayerVisConfig}\n>;\n\nexport const linePosAccessor = ({lat0, lng0, lat1, lng1, alt0, alt1}: LineLayerColumnsConfig) => (\n  dc: DataContainerInterface\n) => d => [\n  dc.valueAt(d.index, lng0.fieldIdx),\n  dc.valueAt(d.index, lat0.fieldIdx),\n  alt0 && alt0.fieldIdx > -1 ? dc.valueAt(d.index, alt0.fieldIdx) : 0,\n  dc.valueAt(d.index, lng1.fieldIdx),\n  dc.valueAt(d.index, lat1.fieldIdx),\n  alt1 && alt1?.fieldIdx > -1 ? dc.valueAt(d.index, alt1.fieldIdx) : 0\n];\n\nexport const lineRequiredColumns: ['lat0', 'lng0', 'lat1', 'lng1'] = [\n  'lat0',\n  'lng0',\n  'lat1',\n  'lng1'\n];\nexport const lineOptionalColumns: ['alt0', 'alt1'] = ['alt0', 'alt1'];\n\nexport const lineColumnLabels = {\n  lat0: 'arc.lat0',\n  lng0: 'arc.lng0',\n  lat1: 'arc.lat1',\n  lng1: 'arc.lng1',\n  alt0: 'line.alt0',\n  alt1: 'line.alt1'\n};\n\nexport const lineVisConfigs: {\n  opacity: 'opacity';\n  thickness: 'thickness';\n  colorRange: 'colorRange';\n  sizeRange: 'strokeWidthRange';\n  targetColor: 'targetColor';\n  elevationScale: VisConfigNumber;\n} = {\n  opacity: 'opacity',\n  thickness: 'thickness',\n  colorRange: 'colorRange',\n  sizeRange: 'strokeWidthRange',\n  targetColor: 'targetColor',\n  elevationScale: {\n    ...LAYER_VIS_CONFIGS.elevationScale,\n    defaultValue: 1\n  }\n};\n\nexport default class LineLayer extends ArcLayer {\n  declare visConfigSettings: LineLayerVisConfigSettings;\n  declare config: LineLayerConfig;\n\n  constructor(props) {\n    super(props);\n\n    this.registerVisConfig(lineVisConfigs);\n    this.getPositionAccessor = (dataContainer: DataContainerInterface) =>\n      linePosAccessor(this.config.columns)(dataContainer);\n  }\n\n  get type() {\n    return 'line';\n  }\n\n  get layerIcon() {\n    return LineLayerIcon;\n  }\n\n  get requiredLayerColumns() {\n    return lineRequiredColumns;\n  }\n\n  get optionalColumns() {\n    return lineOptionalColumns;\n  }\n\n  get columnLabels() {\n    return lineColumnLabels;\n  }\n\n  get visualChannels() {\n    const visualChannels = super.visualChannels;\n    return {\n      ...visualChannels,\n      sourceColor: {\n        ...visualChannels.sourceColor,\n        accessor: 'getColor'\n      }\n    };\n  }\n\n  static findDefaultLayerProps({fieldPairs = []}: KeplerTable) {\n    if (fieldPairs.length < 2) {\n      return {props: []};\n    }\n    const props: {columns: LineLayerColumnsConfig; label: string} = {\n      // connect the first two point layer with line\n      columns: {\n        lat0: fieldPairs[0].pair.lat,\n        lng0: fieldPairs[0].pair.lng,\n        alt0: {value: null, fieldIdx: -1, optional: true},\n        lat1: fieldPairs[1].pair.lat,\n        lng1: fieldPairs[1].pair.lng,\n        alt1: {value: null, fieldIdx: -1, optional: true}\n      },\n      label: `${fieldPairs[0].defaultName} -> ${fieldPairs[1].defaultName} line`\n    };\n\n    return {props: [props]};\n  }\n\n  renderLayer(opts) {\n    const {data, gpuFilter, objectHovered, interactionConfig} = opts;\n\n    const layerProps = {\n      widthScale: this.config.visConfig.thickness * PROJECTED_PIXEL_SIZE_MULTIPLIER,\n      elevationScale: this.config.visConfig.elevationScale\n    };\n\n    const updateTriggers = {\n      getPosition: this.config.columns,\n      getFilterValue: gpuFilter.filterValueUpdateTriggers,\n      ...this.getVisualChannelUpdateTriggers()\n    };\n    const defaultLayerProps = this.getDefaultDeckLayerProps(opts);\n    const hoveredObject = this.hasHoveredObject(objectHovered);\n\n    return [\n      // base layer\n      new EnhancedLineLayer({\n        ...defaultLayerProps,\n        ...this.getBrushingExtensionProps(interactionConfig, 'source_target'),\n        ...data,\n        ...layerProps,\n        updateTriggers,\n        extensions: [...defaultLayerProps.extensions, new BrushingExtension()]\n      }),\n      // hover layer\n      ...(hoveredObject\n        ? [\n            new EnhancedLineLayer({\n              ...this.getDefaultHoverLayerProps(),\n              ...layerProps,\n              data: [hoveredObject],\n              getColor: this.config.highlightColor,\n              getTargetColor: this.config.highlightColor,\n              getWidth: data.getWidth\n            })\n          ]\n        : [])\n    ];\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}