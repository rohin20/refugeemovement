{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _datasetLayerSection = _interopRequireDefault(require(\"./dataset-layer-section\"));\nDatasetLayerGroupFactory.deps = [_datasetLayerSection[\"default\"]];\nfunction DatasetLayerGroupFactory(DatasetLayerSection) {\n  var DatasetLayerGroup = function DatasetLayerGroup(props) {\n    var datasets = props.datasets,\n      showDatasetTable = props.showDatasetTable,\n      layers = props.layers,\n      updateTableColor = props.updateTableColor,\n      showDeleteDataset = props.showDeleteDataset,\n      removeDataset = props.removeDataset,\n      layerOrder = props.layerOrder,\n      layerClasses = props.layerClasses,\n      uiStateActions = props.uiStateActions,\n      visStateActions = props.visStateActions;\n    var datasetLayerSectionData = (0, _react.useMemo)(function () {\n      return Object.values(datasets).map(function (dataset) {\n        // Global layer order will contain the correct order of layers\n        // We just empty the positions in layers array (for each dataset)\n        // where the layer doesn't belong to a dataset and set it to null\n        var datasetLayers = layers.map(function (layer) {\n          return layer.config.dataId === dataset.id ? layer : null;\n        }).filter(function (layer) {\n          return Boolean(layer);\n        });\n        return {\n          dataset: dataset,\n          datasetLayers: datasetLayers\n        };\n      });\n    }, [datasets, layers]);\n    return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, datasetLayerSectionData.map(function (dlsData) {\n      return /*#__PURE__*/_react[\"default\"].createElement(DatasetLayerSection, {\n        key: dlsData.dataset.id,\n        dataset: dlsData.dataset,\n        layers: dlsData.datasetLayers,\n        showDatasetTable: showDatasetTable,\n        updateTableColor: updateTableColor,\n        showDeleteDataset: showDeleteDataset,\n        removeDataset: removeDataset,\n        layerOrder: layerOrder,\n        layerClasses: layerClasses,\n        uiStateActions: uiStateActions,\n        visStateActions: visStateActions\n      });\n    }));\n  };\n  return DatasetLayerGroup;\n}\nvar _default = DatasetLayerGroupFactory;\nexports[\"default\"] = _default;","map":{"version":3,"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","_react","_datasetLayerSection","DatasetLayerGroupFactory","deps","DatasetLayerGroup","props","datasets","showDatasetTable","layers","updateTableColor","showDeleteDataset","removeDataset","layerOrder","layerClasses","uiStateActions","visStateActions","datasetLayerSectionData","useMemo","values","map","dataset","datasetLayers","layer","config","dataId","id","filter","Boolean","createElement","Fragment","dlsData","DatasetLayerSection","key","_default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/components/src/side-panel/layer-panel/dataset-layer-group.tsx"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {useMemo} from 'react';\n\nimport DatasetLayerSectionFactory from './dataset-layer-section';\nimport {Layer, LayerClassesType} from '@kepler.gl/layers';\nimport {UIStateActions, VisStateActions, ActionHandler} from '@kepler.gl/actions';\nimport {Datasets} from '@kepler.gl/table';\n\ntype DatasetLayerGroupProps = {\n  datasets: Datasets;\n  layers: Layer[];\n  layerOrder: number[];\n  layerClasses: LayerClassesType;\n  showDeleteDataset: boolean;\n  removeDataset: ActionHandler<typeof UIStateActions.openDeleteModal>;\n  showDatasetTable: ActionHandler<typeof VisStateActions.showDatasetTable>;\n  updateTableColor: ActionHandler<typeof VisStateActions.updateTableColor>;\n  uiStateActions: typeof UIStateActions;\n  visStateActions: typeof VisStateActions;\n};\n\nDatasetLayerGroupFactory.deps = [DatasetLayerSectionFactory];\n\nfunction DatasetLayerGroupFactory(\n  DatasetLayerSection: ReturnType<typeof DatasetLayerSectionFactory>\n) {\n  const DatasetLayerGroup: React.FC<DatasetLayerGroupProps> = props => {\n    const {\n      datasets,\n      showDatasetTable,\n      layers,\n      updateTableColor,\n      showDeleteDataset,\n      removeDataset,\n      layerOrder,\n      layerClasses,\n      uiStateActions,\n      visStateActions\n    } = props;\n\n    const datasetLayerSectionData = useMemo(() => {\n      return Object.values(datasets).map(dataset => {\n        // Global layer order will contain the correct order of layers\n        // We just empty the positions in layers array (for each dataset)\n        // where the layer doesn't belong to a dataset and set it to null\n        const datasetLayers = layers\n          .map(layer => (layer.config.dataId === dataset.id ? layer : null))\n          .filter(layer => Boolean(layer));\n\n        return {dataset, datasetLayers};\n      });\n    }, [datasets, layers]);\n\n    return (\n      <>\n        {datasetLayerSectionData.map(dlsData => (\n          <DatasetLayerSection\n            key={dlsData.dataset.id}\n            dataset={dlsData.dataset}\n            layers={dlsData.datasetLayers as Layer[]}\n            showDatasetTable={showDatasetTable}\n            updateTableColor={updateTableColor}\n            showDeleteDataset={showDeleteDataset}\n            removeDataset={removeDataset}\n            layerOrder={layerOrder}\n            layerClasses={layerClasses}\n            uiStateActions={uiStateActions}\n            visStateActions={visStateActions}\n          />\n        ))}\n      </>\n    );\n  };\n\n  return DatasetLayerGroup;\n}\n\nexport default DatasetLayerGroupFactory;\n"],"mappings":";;;;;;;;;;;AAoBA;;AAEA;;AAtBA;AACA;AACA;AACA;;AAEA;;AAEA,IAAAA,sBAAA,GAAAC,OAAA;AAEA,IAAAC,uBAAA,GAAAD,OAAA;AAEAE,MAAA,CAAAC,cAAA,CAAAC,OAAA;EACAC,KAAA;AACA;AACAD,OAAA;AAEA,IAAAE,MAAA,GAAAL,uBAAA,CAAAD,OAAA;AAEA,IAAAO,oBAAA,GAAAR,sBAAA,CAAAC,OAAA;AAAAQ,wBAAA,CAAAC,IAAA,IAAAF,oBAAA;;EAwBA,IAAAG,iBAAS,YACPA,kBADFC,KAEE;IACA,IAAMC,QAAA,GAAAD,KAAmD,CAAAC,QAAG;MAExDC,gBAFiE,GAEjEF,KAAA,CAFiEE,gBAAA;MAGjEC,MAAA,GAAAH,KAAA,CAAAG,MASE;MARFC,gBAAA,GAAAJ,KAJiE,CAAAI,gBAAA;MAKjEC,iBALiE,GAY/DL,KAPF,CAAAK,iBALiE;MAMjEC,aAAA,GAAAN,KAME,CAAAM,aANF;MACAC,UAAA,GAPiEP,KAY/D,CAAAO,UALF;MACAC,YARiE,GAY/DR,KAJF,CAAAQ,YARiE;MASjEC,cATiE,GAY/DT,KAHF,CAAAS,cATiE;MAUjEC,eAViE,GAY/DV,KAFF,CAAAU,eAViE;IAAA,IAWjEC,uBAXiE,GAWjE,IAAAhB,MAAA,CAAAiB,OAXiE;MAcnE,OAAMrB,MAAA,CAAAsB,MAAA,CAAAZ,QAA0B,EAAAa,GAAA,WAAAC,OAAQ;QACtC;QACE;QACA;QACA,IAAAC,aAAA,GAAAb,MAAA,CAAAW,GAAA,WAAAG,KAAA;UACA,OAAMA,KAAA,CAAAC,MAAgB,CAAAC,MACnB,KAAIJ,OAAA,CAAAK,EAAA,GAAKH,KAAA;QAAA,GAAAI,MAAK,WAAMJ,KAAO;UADR,OAAAK,OAEZ,CAAAL,KAAA;QAAK;QAAA,OAFf;UAIAF,OAAO,EAAAA,OAAA;UAACC,aAAA,EAAAA;QAAS;MAAV;IACR,GATM,CAAPf,QAAA,EAAAE,MAAA;IAUD,OAAG,aAADR,MAXH,YAAA4B,aAAA,CAAA5B,MAAA,YAAA6B,QAAA,QAAAb,uBAAA,CAAAG,GAAA,WAAAW,OAAA;MAaA,oBACE9B,MAAA,YAAA4B,aAAA,CAAAG,mBAAA;QACsCC,GAAA,EAAAF,OAAA,CAAAV,OAClC,CAAAK,EAAA;QACEL,OAAK,EAAAU,OAAQ,CAAAV,OADf;QAEEZ,MAAA,EAAOsB,OAAE,CAAOT,aAFlB;QAGEd,gBAAgB,EAAAA,gBAHlB;QAIEE,gBAAgB,EAAEA,gBAJpB;QAKEC,iBAAgB,EAAEA,iBALpB;QAMEC,aAAA,EAAAA,aAAmB;QACnBC,UAAA,EAAAA,UAAe;QACfC,YAAY,EAAAA,YARd;QASEC,cAAc,EAAAA,cAThB;QAUEC,eAAc,EAAEA;MAChB;IAXF;EADkC;;AAmB1C;;iBAGa,IAAAkB,QAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}