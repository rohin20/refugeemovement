{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport OrthographicView from '../../views/orthographic-view';\nimport WebMercatorViewport from '../../viewports/web-mercator-viewport';\nimport { fitBounds } from '@math.gl/web-mercator';\nexport function getMaskBounds(_ref) {\n  var layers = _ref.layers,\n    viewport = _ref.viewport;\n  var bounds = null;\n  var _iterator = _createForOfIteratorHelper(layers),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var layer = _step.value;\n      var subLayerBounds = layer.getBounds();\n      if (subLayerBounds) {\n        if (bounds) {\n          bounds[0] = Math.min(bounds[0], subLayerBounds[0][0]);\n          bounds[1] = Math.min(bounds[1], subLayerBounds[0][1]);\n          bounds[2] = Math.max(bounds[2], subLayerBounds[1][0]);\n          bounds[3] = Math.max(bounds[3], subLayerBounds[1][1]);\n        } else {\n          bounds = [subLayerBounds[0][0], subLayerBounds[0][1], subLayerBounds[1][0], subLayerBounds[1][1]];\n        }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  var viewportBounds = viewport.getBounds();\n  if (!bounds) {\n    return viewportBounds;\n  }\n  var paddedBounds = _doubleBounds(viewportBounds);\n  if (bounds[2] - bounds[0] < paddedBounds[2] - paddedBounds[0] || bounds[3] - bounds[1] < paddedBounds[3] - paddedBounds[1]) {\n    return bounds;\n  }\n  bounds[0] = Math.max(bounds[0], paddedBounds[0]);\n  bounds[1] = Math.max(bounds[1], paddedBounds[1]);\n  bounds[2] = Math.min(bounds[2], paddedBounds[2]);\n  bounds[3] = Math.min(bounds[3], paddedBounds[3]);\n  return bounds;\n}\nexport function getMaskViewport(_ref2) {\n  var bounds = _ref2.bounds,\n    viewport = _ref2.viewport,\n    width = _ref2.width,\n    height = _ref2.height;\n  if (bounds[2] <= bounds[0] || bounds[3] <= bounds[1]) {\n    return null;\n  }\n  var padding = 1;\n  width -= padding * 2;\n  height -= padding * 2;\n  if (viewport instanceof WebMercatorViewport) {\n    var _fitBounds = fitBounds({\n        width: width,\n        height: height,\n        bounds: [[bounds[0], bounds[1]], [bounds[2], bounds[3]]],\n        maxZoom: 20\n      }),\n      longitude = _fitBounds.longitude,\n      latitude = _fitBounds.latitude,\n      zoom = _fitBounds.zoom;\n    return new WebMercatorViewport({\n      longitude: longitude,\n      latitude: latitude,\n      zoom: zoom,\n      x: padding,\n      y: padding,\n      width: width,\n      height: height\n    });\n  }\n  var center = [(bounds[0] + bounds[2]) / 2, (bounds[1] + bounds[3]) / 2, 0];\n  var scale = Math.min(20, width / (bounds[2] - bounds[0]), height / (bounds[3] - bounds[1]));\n  return new OrthographicView({\n    x: padding,\n    y: padding\n  }).makeViewport({\n    width: width,\n    height: height,\n    viewState: {\n      target: center,\n      zoom: Math.log2(scale)\n    }\n  });\n}\nfunction _doubleBounds(bounds) {\n  var size = {\n    x: bounds[2] - bounds[0],\n    y: bounds[3] - bounds[1]\n  };\n  var center = {\n    x: bounds[0] + 0.5 * size.x,\n    y: bounds[1] + 0.5 * size.y\n  };\n  return [center.x - size.x, center.y - size.y, center.x + size.x, center.y + size.y];\n}","map":{"version":3,"names":["OrthographicView","WebMercatorViewport","fitBounds","getMaskBounds","_ref","layers","viewport","bounds","_iterator","_createForOfIteratorHelper","_step","s","n","done","layer","value","subLayerBounds","getBounds","Math","min","max","err","e","f","viewportBounds","paddedBounds","_doubleBounds","getMaskViewport","_ref2","width","height","padding","_fitBounds","maxZoom","longitude","latitude","zoom","x","y","center","scale","makeViewport","viewState","target","log2","size"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/core/src/effects/mask/utils.ts"],"sourcesContent":["import OrthographicView from '../../views/orthographic-view';\nimport WebMercatorViewport from '../../viewports/web-mercator-viewport';\nimport {fitBounds} from '@math.gl/web-mercator';\n\nimport type Layer from '../../lib/layer';\nimport type Viewport from '../../viewports/viewport';\n\nexport type MaskBounds = [number, number, number, number];\n\n/*\n * Compute the bounds of the mask in world space, such that it covers an\n * area currently visible (extended by a buffer) or the area of the masking\n * data, whichever is smaller\n */\nexport function getMaskBounds({\n  layers,\n  viewport\n}: {\n  layers: Layer[];\n  viewport: Viewport;\n}): MaskBounds {\n  // Join the bounds of layer data\n  let bounds: MaskBounds | null = null;\n  for (const layer of layers) {\n    const subLayerBounds = layer.getBounds();\n    if (subLayerBounds) {\n      if (bounds) {\n        bounds[0] = Math.min(bounds[0], subLayerBounds[0][0]);\n        bounds[1] = Math.min(bounds[1], subLayerBounds[0][1]);\n        bounds[2] = Math.max(bounds[2], subLayerBounds[1][0]);\n        bounds[3] = Math.max(bounds[3], subLayerBounds[1][1]);\n      } else {\n        bounds = [\n          subLayerBounds[0][0],\n          subLayerBounds[0][1],\n          subLayerBounds[1][0],\n          subLayerBounds[1][1]\n        ];\n      }\n    }\n  }\n  const viewportBounds = viewport.getBounds();\n  if (!bounds) {\n    return viewportBounds;\n  }\n\n  // Expand viewport bounds by 2X. Heurestically chosen to avoid masking\n  // errors when mask is partially out of view\n  const paddedBounds = _doubleBounds(viewportBounds);\n\n  // When bounds of the mask are smaller than the viewport bounds simply use\n  // mask bounds, so as to maximize resolution & avoid mask rerenders\n  if (\n    bounds[2] - bounds[0] < paddedBounds[2] - paddedBounds[0] ||\n    bounds[3] - bounds[1] < paddedBounds[3] - paddedBounds[1]\n  ) {\n    return bounds;\n  }\n\n  // As viewport shrinks, to avoid pixelation along mask edges\n  // we need to reduce the bounds and only render the visible portion\n  // of the mask.\n  // We pad the viewport bounds to capture the section\n  // of the mask just outside the viewport to correctly maskByInstance.\n  // Intersect mask & padded viewport bounds\n  bounds[0] = Math.max(bounds[0], paddedBounds[0]);\n  bounds[1] = Math.max(bounds[1], paddedBounds[1]);\n  bounds[2] = Math.min(bounds[2], paddedBounds[2]);\n  bounds[3] = Math.min(bounds[3], paddedBounds[3]);\n  return bounds;\n}\n\n/*\n * Compute viewport to render the mask into, covering the given bounds\n */\nexport function getMaskViewport({\n  bounds,\n  viewport,\n  width,\n  height\n}: {\n  bounds: MaskBounds;\n  viewport: Viewport;\n  width: number;\n  height: number;\n}): Viewport | null {\n  if (bounds[2] <= bounds[0] || bounds[3] <= bounds[1]) {\n    return null;\n  }\n\n  // Single pixel border to prevent mask bleeding at edge of texture\n  const padding = 1;\n  width -= padding * 2;\n  height -= padding * 2;\n\n  if (viewport instanceof WebMercatorViewport) {\n    const {longitude, latitude, zoom} = fitBounds({\n      width,\n      height,\n      bounds: [\n        [bounds[0], bounds[1]],\n        [bounds[2], bounds[3]]\n      ],\n      maxZoom: 20\n    });\n    return new WebMercatorViewport({\n      longitude,\n      latitude,\n      zoom,\n      x: padding,\n      y: padding,\n      width,\n      height\n    });\n  }\n\n  const center = [(bounds[0] + bounds[2]) / 2, (bounds[1] + bounds[3]) / 2, 0];\n  const scale = Math.min(20, width / (bounds[2] - bounds[0]), height / (bounds[3] - bounds[1]));\n\n  return new OrthographicView({\n    x: padding,\n    y: padding\n  }).makeViewport({\n    width,\n    height,\n    viewState: {\n      target: center,\n      zoom: Math.log2(scale)\n    }\n  });\n}\n\nfunction _doubleBounds(bounds: MaskBounds): MaskBounds {\n  const size = {\n    x: bounds[2] - bounds[0],\n    y: bounds[3] - bounds[1]\n  };\n  const center = {\n    x: bounds[0] + 0.5 * size.x,\n    y: bounds[1] + 0.5 * size.y\n  };\n  return [center.x - size.x, center.y - size.y, center.x + size.x, center.y + size.y];\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}