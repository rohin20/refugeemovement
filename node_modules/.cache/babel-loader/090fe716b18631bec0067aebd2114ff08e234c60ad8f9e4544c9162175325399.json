{"ast":null,"code":"import { isBrowser, global } from './utils/globals';\nimport { TextDecoder, TextEncoder } from './libs/encoding';\nimport * as base64 from './text-encoding/btoa.node';\nimport HeadersNode from './fetch-node/headers.node';\nimport ResponseNode from './fetch-node/response.node';\nimport fetchNode from './fetch-node/fetch.node';\nimport { encodeImageNode } from './images-node/encode-image.node';\nimport { parseImageNode } from './images-node/parse-image.node';\nexport { ReadableStreamPolyfill } from './file/readable-stream-polyfill';\nexport { BlobPolyfill } from './file/blob-polyfill';\nexport { FileReaderPolyfill } from './file/file-reader-polyfill';\nexport { FilePolyfill } from './file/file-polyfill';\nexport { installFilePolyfills } from './file/polyfills';\nvar installTextEncoder = TextEncoder && (!isBrowser || !('TextEncoder' in global));\nif (installTextEncoder) {\n  global['TextEncoder'] = TextEncoder;\n}\nvar installTextDecoder = TextEncoder && (!isBrowser || !('TextDecoder' in global));\nif (installTextDecoder) {\n  global['TextDecoder'] = TextDecoder;\n}\nif (!isBrowser && !('atob' in global) && base64.atob) {\n  global['atob'] = base64.atob;\n}\nif (!isBrowser && !('btoa' in global) && base64.btoa) {\n  global['btoa'] = base64.btoa;\n}\nif (!isBrowser && !('Headers' in global) && HeadersNode) {\n  global['Headers'] = HeadersNode;\n}\nif (!isBrowser && !('Response' in global) && ResponseNode) {\n  global['Response'] = ResponseNode;\n}\nif (!isBrowser && !('fetch' in global) && fetchNode) {\n  global['fetch'] = fetchNode;\n}\nif (!isBrowser && !('_encodeImageNode' in global) && encodeImageNode) {\n  global['_encodeImageNode'] = encodeImageNode;\n}\nif (!isBrowser && !('_parseImageNode' in global) && parseImageNode) {\n  global['_parseImageNode'] = parseImageNode;\n}","map":{"version":3,"names":["isBrowser","global","TextDecoder","TextEncoder","base64","HeadersNode","ResponseNode","fetchNode","encodeImageNode","parseImageNode","ReadableStreamPolyfill","BlobPolyfill","FileReaderPolyfill","FilePolyfill","installFilePolyfills","installTextEncoder","installTextDecoder","atob","btoa"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@loaders.gl/polyfills/src/index.js"],"sourcesContent":["/* eslint-disable dot-notation */\nimport {isBrowser, global} from './utils/globals';\n\nimport {TextDecoder, TextEncoder} from './libs/encoding';\nimport * as base64 from './text-encoding/btoa.node';\n\nimport HeadersNode from './fetch-node/headers.node';\nimport ResponseNode from './fetch-node/response.node';\nimport fetchNode from './fetch-node/fetch.node';\n\nimport {encodeImageNode} from './images-node/encode-image.node';\nimport {parseImageNode} from './images-node/parse-image.node';\n\nexport {ReadableStreamPolyfill} from './file/readable-stream-polyfill';\nexport {BlobPolyfill} from './file/blob-polyfill';\nexport {FileReaderPolyfill} from './file/file-reader-polyfill';\nexport {FilePolyfill} from './file/file-polyfill';\nexport {installFilePolyfills} from './file/polyfills';\n\n// POLYFILLS: TextEncoder, TextDecoder\n// - Recent Node versions habe these classes but virtually no encodings unless special build.\n// - Browser: Edge, IE11 do not have these\n\nconst installTextEncoder = TextEncoder && (!isBrowser || !('TextEncoder' in global));\nif (installTextEncoder) {\n  global['TextEncoder'] = TextEncoder;\n}\n\nconst installTextDecoder = TextEncoder && (!isBrowser || !('TextDecoder' in global));\nif (installTextDecoder) {\n  global['TextDecoder'] = TextDecoder;\n}\n\n// POLYFILLS: btoa, atob\n// - Node: Yes\n// - Browser: No\n\nif (!isBrowser && !('atob' in global) && base64.atob) {\n  global['atob'] = base64.atob;\n}\nif (!isBrowser && !('btoa' in global) && base64.btoa) {\n  global['btoa'] = base64.btoa;\n}\n\n// POLYFILL: fetch\n// - Node: Yes\n// - Browser: No. For This polyfill is node only, IE11 etc, install external polyfill\n\nif (!isBrowser && !('Headers' in global) && HeadersNode) {\n  global['Headers'] = HeadersNode;\n}\n\nif (!isBrowser && !('Response' in global) && ResponseNode) {\n  global['Response'] = ResponseNode;\n}\n\nif (!isBrowser && !('fetch' in global) && fetchNode) {\n  global['fetch'] = fetchNode;\n}\n\n// NODE IMAGE FUNCTIONS:\n// These are not official polyfills but used by the @loaders.gl/images module if installed\n// TODO - is there an appropriate Image API we could polyfill using an adapter?\n\nif (!isBrowser && !('_encodeImageNode' in global) && encodeImageNode) {\n  global['_encodeImageNode'] = encodeImageNode;\n}\n\nif (!isBrowser && !('_parseImageNode' in global) && parseImageNode) {\n  global['_parseImageNode'] = parseImageNode;\n}\n"],"mappings":"AACA,SAAQA,SAAR,EAAmBC,MAAnB,QAAgC,iBAAhC;AAEA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,iBAAvC;AACA,OAAO,KAAKC,MAAZ,MAAwB,2BAAxB;AAEA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,SAAQC,eAAR,QAA8B,iCAA9B;AACA,SAAQC,cAAR,QAA6B,gCAA7B;AAEA,SAAQC,sBAAR,QAAqC,iCAArC;AACA,SAAQC,YAAR,QAA2B,sBAA3B;AACA,SAAQC,kBAAR,QAAiC,6BAAjC;AACA,SAAQC,YAAR,QAA2B,sBAA3B;AACA,SAAQC,oBAAR,QAAmC,kBAAnC;AAMA,IAAMC,kBAAkB,GAAGZ,WAAW,KAAK,CAACH,SAAD,IAAc,EAAE,iBAAiBC,MAAnB,CAAnB,CAAtC;AACA,IAAIc,kBAAJ,EAAwB;EACtBd,MAAM,CAAC,aAAD,CAAN,GAAwBE,WAAxB;AACD;AAED,IAAMa,kBAAkB,GAAGb,WAAW,KAAK,CAACH,SAAD,IAAc,EAAE,iBAAiBC,MAAnB,CAAnB,CAAtC;AACA,IAAIe,kBAAJ,EAAwB;EACtBf,MAAM,CAAC,aAAD,CAAN,GAAwBC,WAAxB;AACD;AAMD,IAAI,CAACF,SAAD,IAAc,EAAE,UAAUC,MAAZ,CAAd,IAAqCG,MAAM,CAACa,IAAhD,EAAsD;EACpDhB,MAAM,CAAC,MAAD,CAAN,GAAiBG,MAAM,CAACa,IAAxB;AACD;AACD,IAAI,CAACjB,SAAD,IAAc,EAAE,UAAUC,MAAZ,CAAd,IAAqCG,MAAM,CAACc,IAAhD,EAAsD;EACpDjB,MAAM,CAAC,MAAD,CAAN,GAAiBG,MAAM,CAACc,IAAxB;AACD;AAMD,IAAI,CAAClB,SAAD,IAAc,EAAE,aAAaC,MAAf,CAAd,IAAwCI,WAA5C,EAAyD;EACvDJ,MAAM,CAAC,SAAD,CAAN,GAAoBI,WAApB;AACD;AAED,IAAI,CAACL,SAAD,IAAc,EAAE,cAAcC,MAAhB,CAAd,IAAyCK,YAA7C,EAA2D;EACzDL,MAAM,CAAC,UAAD,CAAN,GAAqBK,YAArB;AACD;AAED,IAAI,CAACN,SAAD,IAAc,EAAE,WAAWC,MAAb,CAAd,IAAsCM,SAA1C,EAAqD;EACnDN,MAAM,CAAC,OAAD,CAAN,GAAkBM,SAAlB;AACD;AAMD,IAAI,CAACP,SAAD,IAAc,EAAE,sBAAsBC,MAAxB,CAAd,IAAiDO,eAArD,EAAsE;EACpEP,MAAM,CAAC,kBAAD,CAAN,GAA6BO,eAA7B;AACD;AAED,IAAI,CAACR,SAAD,IAAc,EAAE,qBAAqBC,MAAvB,CAAd,IAAgDQ,cAApD,EAAoE;EAClER,MAAM,CAAC,iBAAD,CAAN,GAA4BQ,cAA5B;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}