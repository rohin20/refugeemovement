{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ImageLoader } from '@loaders.gl/images';\nimport { getImageUrls } from './load-image';\nimport { deepLoad } from './deep-load';\nexport function loadImageTextureArray(_x, _x2) {\n  return _loadImageTextureArray.apply(this, arguments);\n}\nfunction _loadImageTextureArray() {\n  _loadImageTextureArray = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(count, getUrl) {\n    var options,\n      imageUrls,\n      _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n          _context.next = 3;\n          return getImageArrayUrls(count, getUrl, options);\n        case 3:\n          imageUrls = _context.sent;\n          _context.next = 6;\n          return deepLoad(imageUrls, ImageLoader.parse, options);\n        case 6:\n          return _context.abrupt(\"return\", _context.sent);\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _loadImageTextureArray.apply(this, arguments);\n}\nexport function getImageArrayUrls(_x3, _x4) {\n  return _getImageArrayUrls.apply(this, arguments);\n}\nfunction _getImageArrayUrls() {\n  _getImageArrayUrls = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(count, getUrl) {\n    var options,\n      promises,\n      index,\n      promise,\n      _args2 = arguments;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          options = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : {};\n          promises = [];\n          for (index = 0; index < count; index++) {\n            promise = getImageUrls(getUrl, options, {\n              index: index\n            });\n            promises.push(promise);\n          }\n          _context2.next = 5;\n          return Promise.all(promises);\n        case 5:\n          return _context2.abrupt(\"return\", _context2.sent);\n        case 6:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _getImageArrayUrls.apply(this, arguments);\n}","map":{"version":3,"names":["ImageLoader","getImageUrls","deepLoad","loadImageTextureArray","_x","_x2","_loadImageTextureArray","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","count","getUrl","options","imageUrls","_args","wrap","_callee$","_context","prev","next","length","undefined","getImageArrayUrls","sent","parse","abrupt","stop","_x3","_x4","_getImageArrayUrls","_callee2","promises","index","promise","_args2","_callee2$","_context2","push","Promise","all"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@loaders.gl/textures/src/lib/texture-api/load-image-array.ts"],"sourcesContent":["// loaders.gl, MIT license\nimport {ImageLoader} from '@loaders.gl/images';\nimport type {GetUrl} from './texture-api-types';\nimport {getImageUrls} from './load-image';\nimport {deepLoad} from './deep-load';\n\nexport async function loadImageTextureArray(\n  count: number,\n  getUrl: GetUrl,\n  options = {}\n): Promise<any> {\n  const imageUrls = await getImageArrayUrls(count, getUrl, options);\n  return await deepLoad(imageUrls, ImageLoader.parse, options);\n}\n\nexport async function getImageArrayUrls(count: number, getUrl: GetUrl, options = {}): Promise<any> {\n  const promises: Promise<any>[] = [];\n  for (let index = 0; index < count; index++) {\n    const promise = getImageUrls(getUrl, options, {index});\n    promises.push(promise);\n  }\n  return await Promise.all(promises);\n}\n"],"mappings":";;AACA,SAAQA,WAAW,QAAO,oBAAoB;AAE9C,SAAQC,YAAY,QAAO,cAAc;AACzC,SAAQC,QAAQ,QAAO,aAAa;AAEpC,gBAAsBC,qBAAqBA,CAAAC,EAAA,EAAAC,GAAA;EAAA,OAAAC,sBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAO3C,SAAAF,uBAAA;EAAAA,sBAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAPO,SAAAC,QACLC,KAAa,EACbC,MAAc;IAAA,IAAAC,OAAA;MAAAC,SAAA;MAAAC,KAAA,GAAAT,SAAA;IAAA,OAAAE,mBAAA,GAAAQ,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UACdP,OAAO,GAAAE,KAAA,CAAAM,MAAA,QAAAN,KAAA,QAAAO,SAAA,GAAAP,KAAA,MAAG,CAAC,CAAC;UAAAG,QAAA,CAAAE,IAAA;UAAA,OAEYG,iBAAiB,CAACZ,KAAK,EAAEC,MAAM,EAAEC,OAAO,CAAC;QAAA;UAA3DC,SAAS,GAAAI,QAAA,CAAAM,IAAA;UAAAN,QAAA,CAAAE,IAAA;UAAA,OACFpB,QAAQ,CAACc,SAAS,EAAEhB,WAAW,CAAC2B,KAAK,EAAEZ,OAAO,CAAC;QAAA;UAAA,OAAAK,QAAA,CAAAQ,MAAA,WAAAR,QAAA,CAAAM,IAAA;QAAA;QAAA;UAAA,OAAAN,QAAA,CAAAS,IAAA;MAAA;IAAA,GAAAjB,OAAA;EAAA,CAC9D;EAAA,OAAAN,sBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAEA,gBAAsBiB,iBAAiBA,CAAAK,GAAA,EAAAC,GAAA;EAAA,OAAAC,kBAAA,CAAAzB,KAAA,OAAAC,SAAA;AAAA;AAOvC,SAAAwB,mBAAA;EAAAA,kBAAA,GAAAvB,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAPO,SAAAsB,SAAiCpB,KAAa,EAAEC,MAAc;IAAA,IAAAC,OAAA;MAAAmB,QAAA;MAAAC,KAAA;MAAAC,OAAA;MAAAC,MAAA,GAAA7B,SAAA;IAAA,OAAAE,mBAAA,GAAAQ,IAAA,UAAAoB,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAlB,IAAA,GAAAkB,SAAA,CAAAjB,IAAA;QAAA;UAAEP,OAAO,GAAAsB,MAAA,CAAAd,MAAA,QAAAc,MAAA,QAAAb,SAAA,GAAAa,MAAA,MAAG,CAAC,CAAC;UAC3EH,QAAwB,GAAG,EAAE;UACnC,KAASC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGtB,KAAK,EAAEsB,KAAK,EAAE,EAAE;YACpCC,OAAO,GAAGnC,YAAY,CAACa,MAAM,EAAEC,OAAO,EAAE;cAACoB,KAAA,EAAAA;YAAK,CAAC,CAAC;YACtDD,QAAQ,CAACM,IAAI,CAACJ,OAAO,CAAC;UACxB;UAAAG,SAAA,CAAAjB,IAAA;UAAA,OACamB,OAAO,CAACC,GAAG,CAACR,QAAQ,CAAC;QAAA;UAAA,OAAAK,SAAA,CAAAX,MAAA,WAAAW,SAAA,CAAAb,IAAA;QAAA;QAAA;UAAA,OAAAa,SAAA,CAAAV,IAAA;MAAA;IAAA,GAAAI,QAAA;EAAA,CACpC;EAAA,OAAAD,kBAAA,CAAAzB,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}