{"ast":null,"code":"import _slicedToArray from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport Viewport from './viewport';\nimport { pixelsToWorld, getViewMatrix, addMetersToLngLat as _addMetersToLngLat, getProjectionParameters, altitudeToFovy, fovyToAltitude, fitBounds as _fitBounds, getBounds as _getBounds } from '@math.gl/web-mercator';\nimport * as vec2 from 'gl-matrix/vec2';\nimport { Matrix4 } from '@math.gl/core';\nvar TILE_SIZE = 512;\nvar EARTH_CIRCUMFERENCE = 40.03e6;\nvar DEGREES_TO_RADIANS = Math.PI / 180;\nfunction unitsPerMeter(latitude) {\n  var latCosine = Math.cos(latitude * DEGREES_TO_RADIANS);\n  return TILE_SIZE / EARTH_CIRCUMFERENCE / latCosine;\n}\nvar WebMercatorViewport = /*#__PURE__*/function (_Viewport) {\n  _inherits(WebMercatorViewport, _Viewport);\n  var _super = _createSuper(WebMercatorViewport);\n  function WebMercatorViewport() {\n    var _this;\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, WebMercatorViewport);\n    var _opts$latitude = opts.latitude,\n      latitude = _opts$latitude === void 0 ? 0 : _opts$latitude,\n      _opts$longitude = opts.longitude,\n      longitude = _opts$longitude === void 0 ? 0 : _opts$longitude,\n      _opts$zoom = opts.zoom,\n      zoom = _opts$zoom === void 0 ? 0 : _opts$zoom,\n      _opts$pitch = opts.pitch,\n      pitch = _opts$pitch === void 0 ? 0 : _opts$pitch,\n      _opts$bearing = opts.bearing,\n      bearing = _opts$bearing === void 0 ? 0 : _opts$bearing,\n      _opts$nearZMultiplier = opts.nearZMultiplier,\n      nearZMultiplier = _opts$nearZMultiplier === void 0 ? 0.1 : _opts$nearZMultiplier,\n      _opts$farZMultiplier = opts.farZMultiplier,\n      farZMultiplier = _opts$farZMultiplier === void 0 ? 1.01 : _opts$farZMultiplier,\n      _opts$orthographic = opts.orthographic,\n      orthographic = _opts$orthographic === void 0 ? false : _opts$orthographic,\n      projectionMatrix = opts.projectionMatrix,\n      _opts$repeat = opts.repeat,\n      repeat = _opts$repeat === void 0 ? false : _opts$repeat,\n      _opts$worldOffset = opts.worldOffset,\n      worldOffset = _opts$worldOffset === void 0 ? 0 : _opts$worldOffset,\n      _opts$legacyMeterSize = opts.legacyMeterSizes,\n      legacyMeterSizes = _opts$legacyMeterSize === void 0 ? false : _opts$legacyMeterSize;\n    var width = opts.width,\n      height = opts.height,\n      _opts$altitude = opts.altitude,\n      altitude = _opts$altitude === void 0 ? 1.5 : _opts$altitude;\n    var scale = Math.pow(2, zoom);\n    width = width || 1;\n    height = height || 1;\n    var fovy;\n    var projectionParameters = null;\n    if (projectionMatrix) {\n      altitude = projectionMatrix[5] / 2;\n      fovy = altitudeToFovy(altitude);\n    } else {\n      if (opts.fovy) {\n        fovy = opts.fovy;\n        altitude = fovyToAltitude(fovy);\n      } else {\n        fovy = altitudeToFovy(altitude);\n      }\n      projectionParameters = getProjectionParameters({\n        width: width,\n        height: height,\n        pitch: pitch,\n        fovy: fovy,\n        nearZMultiplier: nearZMultiplier,\n        farZMultiplier: farZMultiplier\n      });\n    }\n    var viewMatrixUncentered = getViewMatrix({\n      height: height,\n      pitch: pitch,\n      bearing: bearing,\n      scale: scale,\n      altitude: altitude\n    });\n    if (worldOffset) {\n      var viewOffset = new Matrix4().translate([512 * worldOffset, 0, 0]);\n      viewMatrixUncentered = viewOffset.multiplyLeft(viewMatrixUncentered);\n    }\n    _this = _super.call(this, _objectSpread(_objectSpread(_objectSpread({}, opts), {}, {\n      width: width,\n      height: height,\n      viewMatrix: viewMatrixUncentered,\n      longitude: longitude,\n      latitude: latitude,\n      zoom: zoom\n    }, projectionParameters), {}, {\n      fovy: fovy,\n      focalDistance: altitude\n    }));\n    _defineProperty(_assertThisInitialized(_this), \"longitude\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"latitude\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"pitch\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"bearing\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"altitude\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"fovy\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"orthographic\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_subViewports\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_pseudoMeters\", void 0);\n    _this.latitude = latitude;\n    _this.longitude = longitude;\n    _this.zoom = zoom;\n    _this.pitch = pitch;\n    _this.bearing = bearing;\n    _this.altitude = altitude;\n    _this.fovy = fovy;\n    _this.orthographic = orthographic;\n    _this._subViewports = repeat ? [] : null;\n    _this._pseudoMeters = legacyMeterSizes;\n    Object.freeze(_assertThisInitialized(_this));\n    return _this;\n  }\n  _createClass(WebMercatorViewport, [{\n    key: \"subViewports\",\n    get: function get() {\n      if (this._subViewports && !this._subViewports.length) {\n        var bounds = this.getBounds();\n        var minOffset = Math.floor((bounds[0] + 180) / 360);\n        var maxOffset = Math.ceil((bounds[2] - 180) / 360);\n        for (var x = minOffset; x <= maxOffset; x++) {\n          var offsetViewport = x ? new WebMercatorViewport(_objectSpread(_objectSpread({}, this), {}, {\n            worldOffset: x\n          })) : this;\n          this._subViewports.push(offsetViewport);\n        }\n      }\n      return this._subViewports;\n    }\n  }, {\n    key: \"projectPosition\",\n    value: function projectPosition(xyz) {\n      if (this._pseudoMeters) {\n        return _get(_getPrototypeOf(WebMercatorViewport.prototype), \"projectPosition\", this).call(this, xyz);\n      }\n      var _this$projectFlat = this.projectFlat(xyz),\n        _this$projectFlat2 = _slicedToArray(_this$projectFlat, 2),\n        X = _this$projectFlat2[0],\n        Y = _this$projectFlat2[1];\n      var Z = (xyz[2] || 0) * unitsPerMeter(xyz[1]);\n      return [X, Y, Z];\n    }\n  }, {\n    key: \"unprojectPosition\",\n    value: function unprojectPosition(xyz) {\n      if (this._pseudoMeters) {\n        return _get(_getPrototypeOf(WebMercatorViewport.prototype), \"unprojectPosition\", this).call(this, xyz);\n      }\n      var _this$unprojectFlat = this.unprojectFlat(xyz),\n        _this$unprojectFlat2 = _slicedToArray(_this$unprojectFlat, 2),\n        X = _this$unprojectFlat2[0],\n        Y = _this$unprojectFlat2[1];\n      var Z = (xyz[2] || 0) / unitsPerMeter(Y);\n      return [X, Y, Z];\n    }\n  }, {\n    key: \"addMetersToLngLat\",\n    value: function addMetersToLngLat(lngLatZ, xyz) {\n      return _addMetersToLngLat(lngLatZ, xyz);\n    }\n  }, {\n    key: \"panByPosition\",\n    value: function panByPosition(coords, pixel) {\n      var fromLocation = pixelsToWorld(pixel, this.pixelUnprojectionMatrix);\n      var toLocation = this.projectFlat(coords);\n      var translate = vec2.add([], toLocation, vec2.negate([], fromLocation));\n      var newCenter = vec2.add([], this.center, translate);\n      var _this$unprojectFlat3 = this.unprojectFlat(newCenter),\n        _this$unprojectFlat4 = _slicedToArray(_this$unprojectFlat3, 2),\n        longitude = _this$unprojectFlat4[0],\n        latitude = _this$unprojectFlat4[1];\n      return {\n        longitude: longitude,\n        latitude: latitude\n      };\n    }\n  }, {\n    key: \"getBounds\",\n    value: function getBounds() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var corners = _getBounds(this, options.z || 0);\n      return [Math.min(corners[0][0], corners[1][0], corners[2][0], corners[3][0]), Math.min(corners[0][1], corners[1][1], corners[2][1], corners[3][1]), Math.max(corners[0][0], corners[1][0], corners[2][0], corners[3][0]), Math.max(corners[0][1], corners[1][1], corners[2][1], corners[3][1])];\n    }\n  }, {\n    key: \"fitBounds\",\n    value: function fitBounds(bounds) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var width = this.width,\n        height = this.height;\n      var _fitBounds2 = _fitBounds(_objectSpread({\n          width: width,\n          height: height,\n          bounds: bounds\n        }, options)),\n        longitude = _fitBounds2.longitude,\n        latitude = _fitBounds2.latitude,\n        zoom = _fitBounds2.zoom;\n      return new WebMercatorViewport({\n        width: width,\n        height: height,\n        longitude: longitude,\n        latitude: latitude,\n        zoom: zoom\n      });\n    }\n  }]);\n  return WebMercatorViewport;\n}(Viewport);\nexport { WebMercatorViewport as default };\n_defineProperty(WebMercatorViewport, \"displayName\", 'WebMercatorViewport');","map":{"version":3,"names":["Viewport","pixelsToWorld","getViewMatrix","addMetersToLngLat","getProjectionParameters","altitudeToFovy","fovyToAltitude","fitBounds","getBounds","vec2","Matrix4","TILE_SIZE","EARTH_CIRCUMFERENCE","DEGREES_TO_RADIANS","Math","PI","unitsPerMeter","latitude","latCosine","cos","WebMercatorViewport","_Viewport","_inherits","_super","_createSuper","_this","opts","arguments","length","undefined","_classCallCheck","_opts$latitude","_opts$longitude","longitude","_opts$zoom","zoom","_opts$pitch","pitch","_opts$bearing","bearing","_opts$nearZMultiplier","nearZMultiplier","_opts$farZMultiplier","farZMultiplier","_opts$orthographic","orthographic","projectionMatrix","_opts$repeat","repeat","_opts$worldOffset","worldOffset","_opts$legacyMeterSize","legacyMeterSizes","width","height","_opts$altitude","altitude","scale","pow","fovy","projectionParameters","viewMatrixUncentered","viewOffset","translate","multiplyLeft","call","_objectSpread","viewMatrix","focalDistance","_defineProperty","_assertThisInitialized","_subViewports","_pseudoMeters","Object","freeze","_createClass","key","get","bounds","minOffset","floor","maxOffset","ceil","x","offsetViewport","push","value","projectPosition","xyz","_get","_getPrototypeOf","prototype","_this$projectFlat","projectFlat","_this$projectFlat2","_slicedToArray","X","Y","Z","unprojectPosition","_this$unprojectFlat","unprojectFlat","_this$unprojectFlat2","lngLatZ","panByPosition","coords","pixel","fromLocation","pixelUnprojectionMatrix","toLocation","add","negate","newCenter","center","_this$unprojectFlat3","_this$unprojectFlat4","options","corners","z","min","max","_fitBounds2","default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/core/src/viewports/web-mercator-viewport.ts"],"sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// View and Projection Matrix calculations for mapbox-js style\n// map view properties\nimport Viewport from './viewport';\n\nimport {\n  pixelsToWorld,\n  getViewMatrix,\n  addMetersToLngLat,\n  getProjectionParameters,\n  altitudeToFovy,\n  fovyToAltitude,\n  fitBounds,\n  getBounds\n} from '@math.gl/web-mercator';\nimport {Padding} from './viewport';\n\n// TODO - import from math.gl\nimport * as vec2 from 'gl-matrix/vec2';\nimport {Matrix4} from '@math.gl/core';\n\nconst TILE_SIZE = 512;\nconst EARTH_CIRCUMFERENCE = 40.03e6;\nconst DEGREES_TO_RADIANS = Math.PI / 180;\n\nexport type WebMercatorViewportOptions = {\n  /** Name of the viewport */\n  id?: string;\n  /** Left offset from the canvas edge, in pixels */\n  x?: number;\n  /** Top offset from the canvas edge, in pixels */\n  y?: number;\n  /** Viewport width in pixels */\n  width?: number;\n  /** Viewport height in pixels */\n  height?: number;\n  /** Longitude in degrees */\n  longitude?: number;\n  /** Latitude in degrees */\n  latitude?: number;\n  /** Tilt of the camera in degrees */\n  pitch?: number;\n  /** Heading of the camera in degrees */\n  bearing?: number;\n  /** Camera altitude relative to the viewport height, legacy property used to control the FOV. Default `1.5` */\n  altitude?: number;\n  /** Camera fovy in degrees. If provided, overrides `altitude` */\n  fovy?: number;\n  /** Viewport center in world space. If geospatial, refers to meter offsets from lng, lat */\n  position?: number[];\n  /** Zoom level */\n  zoom?: number;\n  /** Model matrix of viewport center */\n  modelMatrix?: number[] | null;\n  /** Custom projection matrix */\n  projectionMatrix?: number[];\n  /** Use orthographic projection */\n  orthographic?: boolean;\n  /** Scaler for the near plane, 1 unit equals to the height of the viewport. Default `0.1` */\n  nearZMultiplier?: number;\n  /** Scaler for the far plane, 1 unit equals to the distance from the camera to the edge of the screen. Default `1.01` */\n  farZMultiplier?: number;\n  /** Render multiple copies of the world */\n  repeat?: boolean;\n  /** Internal use */\n  worldOffset?: number;\n  /** @deprecated Revert to approximated meter size calculation prior to v8.5 */\n  legacyMeterSizes?: boolean;\n};\n\nfunction unitsPerMeter(latitude: number): number {\n  const latCosine = Math.cos(latitude * DEGREES_TO_RADIANS);\n  return TILE_SIZE / EARTH_CIRCUMFERENCE / latCosine;\n}\n\n/**\n * Manages transformations to/from WGS84 coordinates using the Web Mercator Projection.\n */\nexport default class WebMercatorViewport extends Viewport {\n  static displayName = 'WebMercatorViewport';\n\n  longitude: number;\n  latitude: number;\n  pitch: number;\n  bearing: number;\n  altitude: number;\n  fovy: number;\n  orthographic: boolean;\n\n  /** Each sub viewport renders one copy of the world if repeat:true. The list is generated and cached on first request. */\n  private _subViewports: WebMercatorViewport[] | null;\n  /** @deprecated Revert to approximated meter size calculation prior to v8.5 */\n  private _pseudoMeters: boolean;\n\n  /* eslint-disable complexity, max-statements */\n  constructor(opts: WebMercatorViewportOptions = {}) {\n    const {\n      latitude = 0,\n      longitude = 0,\n      zoom = 0,\n      pitch = 0,\n      bearing = 0,\n      nearZMultiplier = 0.1,\n      farZMultiplier = 1.01,\n      orthographic = false,\n      projectionMatrix,\n\n      repeat = false,\n      worldOffset = 0,\n\n      // backward compatibility\n      // TODO: remove in v9\n      legacyMeterSizes = false\n    } = opts;\n\n    let {width, height, altitude = 1.5} = opts;\n    const scale = Math.pow(2, zoom);\n\n    // Silently allow apps to send in 0,0 to facilitate isomorphic render etc\n    width = width || 1;\n    height = height || 1;\n\n    let fovy;\n    let projectionParameters: any = null;\n    if (projectionMatrix) {\n      altitude = projectionMatrix[5] / 2;\n      fovy = altitudeToFovy(altitude);\n    } else {\n      if (opts.fovy) {\n        fovy = opts.fovy;\n        altitude = fovyToAltitude(fovy);\n      } else {\n        fovy = altitudeToFovy(altitude);\n      }\n      projectionParameters = getProjectionParameters({\n        width,\n        height,\n        pitch,\n        fovy,\n        nearZMultiplier,\n        farZMultiplier\n      });\n    }\n\n    // The uncentered matrix allows us two move the center addition to the\n    // shader (cheap) which gives a coordinate system that has its center in\n    // the layer's center position. This makes rotations and other modelMatrx\n    // transforms much more useful.\n    let viewMatrixUncentered = getViewMatrix({\n      height,\n      pitch,\n      bearing,\n      scale,\n      altitude\n    });\n\n    if (worldOffset) {\n      const viewOffset = new Matrix4().translate([512 * worldOffset, 0, 0]);\n      viewMatrixUncentered = viewOffset.multiplyLeft(viewMatrixUncentered);\n    }\n\n    super({\n      ...opts,\n      // x, y,\n      width,\n      height,\n\n      // view matrix\n      viewMatrix: viewMatrixUncentered,\n      longitude,\n      latitude,\n      zoom,\n\n      // projection matrix parameters\n      ...projectionParameters,\n      fovy,\n      focalDistance: altitude\n    });\n\n    // Save parameters\n    this.latitude = latitude;\n    this.longitude = longitude;\n    this.zoom = zoom;\n    this.pitch = pitch;\n    this.bearing = bearing;\n    this.altitude = altitude;\n    this.fovy = fovy;\n\n    this.orthographic = orthographic;\n\n    this._subViewports = repeat ? [] : null;\n    this._pseudoMeters = legacyMeterSizes;\n\n    Object.freeze(this);\n  }\n  /* eslint-enable complexity, max-statements */\n\n  get subViewports(): WebMercatorViewport[] | null {\n    if (this._subViewports && !this._subViewports.length) {\n      // Cache sub viewports so that we only calculate them once\n      const bounds = this.getBounds();\n\n      const minOffset = Math.floor((bounds[0] + 180) / 360);\n      const maxOffset = Math.ceil((bounds[2] - 180) / 360);\n\n      for (let x = minOffset; x <= maxOffset; x++) {\n        const offsetViewport = x\n          ? new WebMercatorViewport({\n              ...this,\n              worldOffset: x\n            })\n          : this;\n        this._subViewports.push(offsetViewport);\n      }\n    }\n    return this._subViewports;\n  }\n\n  projectPosition(xyz: number[]): [number, number, number] {\n    if (this._pseudoMeters) {\n      // Backward compatibility\n      return super.projectPosition(xyz);\n    }\n    const [X, Y] = this.projectFlat(xyz);\n    const Z = (xyz[2] || 0) * unitsPerMeter(xyz[1]);\n    return [X, Y, Z];\n  }\n\n  unprojectPosition(xyz: number[]): [number, number, number] {\n    if (this._pseudoMeters) {\n      // Backward compatibility\n      return super.unprojectPosition(xyz);\n    }\n    const [X, Y] = this.unprojectFlat(xyz);\n    const Z = (xyz[2] || 0) / unitsPerMeter(Y);\n    return [X, Y, Z];\n  }\n\n  /**\n   * Add a meter delta to a base lnglat coordinate, returning a new lnglat array\n   *\n   * Note: Uses simple linear approximation around the viewport center\n   * Error increases with size of offset (roughly 1% per 100km)\n   *\n   * @param {[Number,Number]|[Number,Number,Number]) lngLatZ - base coordinate\n   * @param {[Number,Number]|[Number,Number,Number]) xyz - array of meter deltas\n   * @return {[Number,Number]|[Number,Number,Number]) array of [lng,lat,z] deltas\n   */\n  addMetersToLngLat(lngLatZ: number[], xyz: number[]): number[] {\n    return addMetersToLngLat(lngLatZ, xyz);\n  }\n\n  panByPosition(coords: number[], pixel: number[]): WebMercatorViewportOptions {\n    const fromLocation = pixelsToWorld(pixel, this.pixelUnprojectionMatrix);\n    const toLocation = this.projectFlat(coords);\n\n    const translate = vec2.add([], toLocation, vec2.negate([], fromLocation));\n    const newCenter = vec2.add([], this.center, translate);\n\n    const [longitude, latitude] = this.unprojectFlat(newCenter);\n    return {longitude, latitude};\n  }\n\n  getBounds(options: {z?: number} = {}): [number, number, number, number] {\n    // @ts-ignore\n    const corners = getBounds(this, options.z || 0);\n\n    return [\n      Math.min(corners[0][0], corners[1][0], corners[2][0], corners[3][0]),\n      Math.min(corners[0][1], corners[1][1], corners[2][1], corners[3][1]),\n      Math.max(corners[0][0], corners[1][0], corners[2][0], corners[3][0]),\n      Math.max(corners[0][1], corners[1][1], corners[2][1], corners[3][1])\n    ];\n  }\n\n  /**\n   * Returns a new viewport that fit around the given rectangle.\n   * Only supports non-perspective mode.\n   */\n  fitBounds(\n    /** [[lon, lat], [lon, lat]] */\n    bounds: [[number, number], [number, number]],\n    options: {\n      /** If not supplied, will use the current width of the viewport (default `1`) */\n      width?: number;\n      /** If not supplied, will use the current height of the viewport (default `1`) */\n      height?: number;\n      /** In degrees, 0.01 would be about 1000 meters */\n      minExtent?: number;\n      /** Max zoom level */\n      maxZoom?: number;\n      /** Extra padding in pixels */\n      padding?: number | Required<Padding>;\n      /** Center shift in pixels */\n      offset?: number[];\n    } = {}\n  ) {\n    const {width, height} = this;\n    const {longitude, latitude, zoom} = fitBounds({width, height, bounds, ...options});\n    return new WebMercatorViewport({width, height, longitude, latitude, zoom});\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}