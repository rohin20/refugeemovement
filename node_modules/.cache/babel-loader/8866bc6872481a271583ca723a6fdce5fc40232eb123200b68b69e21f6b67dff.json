{"ast":null,"code":"import _toConsumableArray from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { concatenateTypedArrays } from '@loaders.gl/loader-utils';\nexport function addSkirt(attributes, triangles, skirtHeight, outsideIndices) {\n  var outsideEdges = outsideIndices ? getOutsideEdgesFromIndices(outsideIndices, attributes.POSITION.value) : getOutsideEdgesFromTriangles(triangles);\n  var newPosition = new attributes.POSITION.value.constructor(outsideEdges.length * 6);\n  var newTexcoord0 = new attributes.TEXCOORD_0.value.constructor(outsideEdges.length * 4);\n  var newTriangles = new triangles.constructor(outsideEdges.length * 6);\n  for (var i = 0; i < outsideEdges.length; i++) {\n    var edge = outsideEdges[i];\n    updateAttributesForNewEdge({\n      edge: edge,\n      edgeIndex: i,\n      attributes: attributes,\n      skirtHeight: skirtHeight,\n      newPosition: newPosition,\n      newTexcoord0: newTexcoord0,\n      newTriangles: newTriangles\n    });\n  }\n  attributes.POSITION.value = concatenateTypedArrays(attributes.POSITION.value, newPosition);\n  attributes.TEXCOORD_0.value = concatenateTypedArrays(attributes.TEXCOORD_0.value, newTexcoord0);\n  var resultTriangles = triangles instanceof Array ? triangles.concat(newTriangles) : concatenateTypedArrays(triangles, newTriangles);\n  return {\n    attributes: attributes,\n    triangles: resultTriangles\n  };\n}\nfunction getOutsideEdgesFromTriangles(triangles) {\n  var edges = [];\n  for (var i = 0; i < triangles.length; i += 3) {\n    edges.push([triangles[i], triangles[i + 1]]);\n    edges.push([triangles[i + 1], triangles[i + 2]]);\n    edges.push([triangles[i + 2], triangles[i]]);\n  }\n  edges.sort(function (a, b) {\n    return Math.min.apply(Math, _toConsumableArray(a)) - Math.min.apply(Math, _toConsumableArray(b)) || Math.max.apply(Math, _toConsumableArray(a)) - Math.max.apply(Math, _toConsumableArray(b));\n  });\n  var outsideEdges = [];\n  var index = 0;\n  while (index < edges.length) {\n    var _edges, _edges2;\n    if (edges[index][0] === ((_edges = edges[index + 1]) === null || _edges === void 0 ? void 0 : _edges[1]) && edges[index][1] === ((_edges2 = edges[index + 1]) === null || _edges2 === void 0 ? void 0 : _edges2[0])) {\n      index += 2;\n    } else {\n      outsideEdges.push(edges[index]);\n      index++;\n    }\n  }\n  return outsideEdges;\n}\nfunction getOutsideEdgesFromIndices(indices, position) {\n  indices.westIndices.sort(function (a, b) {\n    return position[3 * a + 1] - position[3 * b + 1];\n  });\n  indices.eastIndices.sort(function (a, b) {\n    return position[3 * b + 1] - position[3 * a + 1];\n  });\n  indices.southIndices.sort(function (a, b) {\n    return position[3 * b] - position[3 * a];\n  });\n  indices.northIndices.sort(function (a, b) {\n    return position[3 * a] - position[3 * b];\n  });\n  var edges = [];\n  for (var index in indices) {\n    var indexGroup = indices[index];\n    for (var i = 0; i < indexGroup.length - 1; i++) {\n      edges.push([indexGroup[i], indexGroup[i + 1]]);\n    }\n  }\n  return edges;\n}\nfunction updateAttributesForNewEdge(_ref) {\n  var edge = _ref.edge,\n    edgeIndex = _ref.edgeIndex,\n    attributes = _ref.attributes,\n    skirtHeight = _ref.skirtHeight,\n    newPosition = _ref.newPosition,\n    newTexcoord0 = _ref.newTexcoord0,\n    newTriangles = _ref.newTriangles;\n  var positionsLength = attributes.POSITION.value.length;\n  var vertex1Offset = edgeIndex * 2;\n  var vertex2Offset = edgeIndex * 2 + 1;\n  newPosition.set(attributes.POSITION.value.subarray(edge[0] * 3, edge[0] * 3 + 3), vertex1Offset * 3);\n  newPosition[vertex1Offset * 3 + 2] = newPosition[vertex1Offset * 3 + 2] - skirtHeight;\n  newPosition.set(attributes.POSITION.value.subarray(edge[1] * 3, edge[1] * 3 + 3), vertex2Offset * 3);\n  newPosition[vertex2Offset * 3 + 2] = newPosition[vertex2Offset * 3 + 2] - skirtHeight;\n  newTexcoord0.set(attributes.TEXCOORD_0.value.subarray(edge[0] * 2, edge[0] * 2 + 2), vertex1Offset * 2);\n  newTexcoord0.set(attributes.TEXCOORD_0.value.subarray(edge[1] * 2, edge[1] * 2 + 2), vertex2Offset * 2);\n  var triangle1Offset = edgeIndex * 2 * 3;\n  newTriangles[triangle1Offset] = edge[0];\n  newTriangles[triangle1Offset + 1] = positionsLength / 3 + vertex2Offset;\n  newTriangles[triangle1Offset + 2] = edge[1];\n  newTriangles[triangle1Offset + 3] = positionsLength / 3 + vertex2Offset;\n  newTriangles[triangle1Offset + 4] = edge[0];\n  newTriangles[triangle1Offset + 5] = positionsLength / 3 + vertex1Offset;\n}","map":{"version":3,"names":["concatenateTypedArrays","addSkirt","attributes","triangles","skirtHeight","outsideIndices","outsideEdges","getOutsideEdgesFromIndices","POSITION","value","getOutsideEdgesFromTriangles","newPosition","constructor","length","newTexcoord0","TEXCOORD_0","newTriangles","i","edge","updateAttributesForNewEdge","edgeIndex","resultTriangles","Array","concat","edges","push","sort","a","b","Math","min","apply","_toConsumableArray","max","index","_edges","_edges2","indices","position","westIndices","eastIndices","southIndices","northIndices","indexGroup","_ref","positionsLength","vertex1Offset","vertex2Offset","set","subarray","triangle1Offset"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@loaders.gl/terrain/src/lib/helpers/skirt.ts"],"sourcesContent":["import {concatenateTypedArrays} from '@loaders.gl/loader-utils';\n\nexport type EdgeIndices = {\n  westIndices: number[];\n  northIndices: number[];\n  eastIndices: number[];\n  southIndices: number[];\n};\n\n/**\n * Add skirt to existing mesh\n * @param {object} attributes - POSITION and TEXCOOD_0 attributes data\n * @param {any} triangles - indices array of the mesh geometry\n * @param skirtHeight - height of the skirt geometry\n * @param outsideIndices - edge indices from quantized mesh data\n * @returns - geometry data with added skirt\n */\nexport function addSkirt(attributes, triangles, skirtHeight: number, outsideIndices?: EdgeIndices) {\n  const outsideEdges = outsideIndices\n    ? getOutsideEdgesFromIndices(outsideIndices, attributes.POSITION.value)\n    : getOutsideEdgesFromTriangles(triangles);\n\n  // 2 new vertices for each outside edge\n  const newPosition = new attributes.POSITION.value.constructor(outsideEdges.length * 6);\n  const newTexcoord0 = new attributes.TEXCOORD_0.value.constructor(outsideEdges.length * 4);\n\n  // 2 new triangles for each outside edge\n  const newTriangles = new triangles.constructor(outsideEdges.length * 6);\n\n  for (let i = 0; i < outsideEdges.length; i++) {\n    const edge = outsideEdges[i];\n\n    updateAttributesForNewEdge({\n      edge,\n      edgeIndex: i,\n      attributes,\n      skirtHeight,\n      newPosition,\n      newTexcoord0,\n      newTriangles\n    });\n  }\n\n  attributes.POSITION.value = concatenateTypedArrays(attributes.POSITION.value, newPosition);\n  attributes.TEXCOORD_0.value = concatenateTypedArrays(attributes.TEXCOORD_0.value, newTexcoord0);\n  const resultTriangles =\n    triangles instanceof Array\n      ? triangles.concat(newTriangles)\n      : concatenateTypedArrays(triangles, newTriangles);\n\n  return {\n    attributes,\n    triangles: resultTriangles\n  };\n}\n\n/**\n * Get geometry edges that located on a border of the mesh\n * @param {any} triangles - indices array of the mesh geometry\n * @returns {number[][]} - outside edges data\n */\nfunction getOutsideEdgesFromTriangles(triangles) {\n  const edges: number[][] = [];\n  for (let i = 0; i < triangles.length; i += 3) {\n    edges.push([triangles[i], triangles[i + 1]]);\n    edges.push([triangles[i + 1], triangles[i + 2]]);\n    edges.push([triangles[i + 2], triangles[i]]);\n  }\n\n  edges.sort((a, b) => Math.min(...a) - Math.min(...b) || Math.max(...a) - Math.max(...b));\n\n  const outsideEdges: number[][] = [];\n  let index = 0;\n  while (index < edges.length) {\n    if (edges[index][0] === edges[index + 1]?.[1] && edges[index][1] === edges[index + 1]?.[0]) {\n      index += 2;\n    } else {\n      outsideEdges.push(edges[index]);\n      index++;\n    }\n  }\n  return outsideEdges;\n}\n\n/**\n * Get geometry edges that located on a border of the mesh\n * @param {object} indices - edge indices from quantized mesh data\n * @param {TypedArray} position - position attribute geometry data\n * @returns {number[][]} - outside edges data\n */\nfunction getOutsideEdgesFromIndices(indices: EdgeIndices, position) {\n  // Sort skirt indices to create adjacent triangles\n  indices.westIndices.sort((a, b) => position[3 * a + 1] - position[3 * b + 1]);\n  // Reverse (b - a) to match triangle winding\n  indices.eastIndices.sort((a, b) => position[3 * b + 1] - position[3 * a + 1]);\n  indices.southIndices.sort((a, b) => position[3 * b] - position[3 * a]);\n  // Reverse (b - a) to match triangle winding\n  indices.northIndices.sort((a, b) => position[3 * a] - position[3 * b]);\n\n  const edges: number[][] = [];\n  for (const index in indices) {\n    const indexGroup = indices[index];\n    for (let i = 0; i < indexGroup.length - 1; i++) {\n      edges.push([indexGroup[i], indexGroup[i + 1]]);\n    }\n  }\n  return edges;\n}\n\n/**\n * Get geometry edges that located on a border of the mesh\n * @param {object} args\n * @param {number[]} args.edge - edge indices in geometry\n * @param {number} args.edgeIndex - edge index in outsideEdges array\n * @param {object} args.attributes - POSITION and TEXCOORD_0 attributes\n * @param {number} args.skirtHeight - height of the skirt geometry\n * @param {TypedArray} args.newPosition - POSITION array for skirt data\n * @param {TypedArray} args.newTexcoord0 - TEXCOORD_0 array for skirt data\n * @param {TypedArray | Array} args.newTriangles - trinagle indices array for skirt data\n * @returns {void}\n */\nfunction updateAttributesForNewEdge({\n  edge,\n  edgeIndex,\n  attributes,\n  skirtHeight,\n  newPosition,\n  newTexcoord0,\n  newTriangles\n}) {\n  const positionsLength = attributes.POSITION.value.length;\n  const vertex1Offset = edgeIndex * 2;\n  const vertex2Offset = edgeIndex * 2 + 1;\n\n  // Define POSITION for new 1st vertex\n  newPosition.set(\n    attributes.POSITION.value.subarray(edge[0] * 3, edge[0] * 3 + 3),\n    vertex1Offset * 3\n  );\n  newPosition[vertex1Offset * 3 + 2] = newPosition[vertex1Offset * 3 + 2] - skirtHeight; // put down elevation on the skirt height\n\n  // Define POSITION for new 2nd vertex\n  newPosition.set(\n    attributes.POSITION.value.subarray(edge[1] * 3, edge[1] * 3 + 3),\n    vertex2Offset * 3\n  );\n  newPosition[vertex2Offset * 3 + 2] = newPosition[vertex2Offset * 3 + 2] - skirtHeight; // put down elevation on the skirt height\n\n  // Use same TEXCOORDS for skirt vertices\n  newTexcoord0.set(\n    attributes.TEXCOORD_0.value.subarray(edge[0] * 2, edge[0] * 2 + 2),\n    vertex1Offset * 2\n  );\n  newTexcoord0.set(\n    attributes.TEXCOORD_0.value.subarray(edge[1] * 2, edge[1] * 2 + 2),\n    vertex2Offset * 2\n  );\n\n  // Define new triangles\n  const triangle1Offset = edgeIndex * 2 * 3;\n  newTriangles[triangle1Offset] = edge[0];\n  newTriangles[triangle1Offset + 1] = positionsLength / 3 + vertex2Offset;\n  newTriangles[triangle1Offset + 2] = edge[1];\n\n  newTriangles[triangle1Offset + 3] = positionsLength / 3 + vertex2Offset;\n  newTriangles[triangle1Offset + 4] = edge[0];\n  newTriangles[triangle1Offset + 5] = positionsLength / 3 + vertex1Offset;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}