{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _asyncIterator from \"@babel/runtime/helpers/esm/asyncIterator\";\nimport { concatenateArrayBuffers, resolvePath } from '@loaders.gl/loader-utils';\nimport { isBrowser } from '@loaders.gl/loader-utils';\nimport { writeFile } from '../fetch/write-file';\nimport { fetchFile } from '../fetch/fetch-file';\nfunction getTemporaryFilename(filename) {\n  return \"/tmp/\".concat(filename);\n}\nexport function encode(_x, _x2, _x3, _x4) {\n  return _encode.apply(this, arguments);\n}\nfunction _encode() {\n  _encode = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(data, writer, options, url) {\n    var batches, chunks, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, batch, tmpInputFilename, tmpOutputFilename, outputFilename, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!writer.encode) {\n              _context.next = 4;\n              break;\n            }\n            _context.next = 3;\n            return writer.encode(data, options);\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n          case 4:\n            if (!writer.encodeSync) {\n              _context.next = 6;\n              break;\n            }\n            return _context.abrupt(\"return\", writer.encodeSync(data, options));\n          case 6:\n            if (!writer.encodeText) {\n              _context.next = 12;\n              break;\n            }\n            _context.t0 = new TextEncoder();\n            _context.next = 10;\n            return writer.encodeText(data, options);\n          case 10:\n            _context.t1 = _context.sent;\n            return _context.abrupt(\"return\", _context.t0.encode.call(_context.t0, _context.t1));\n          case 12:\n            if (!writer.encodeInBatches) {\n              _context.next = 51;\n              break;\n            }\n            batches = encodeInBatches(data, writer, options);\n            chunks = [];\n            _iteratorNormalCompletion = true;\n            _didIteratorError = false;\n            _context.prev = 17;\n            _iterator = _asyncIterator(batches);\n          case 19:\n            _context.next = 21;\n            return _iterator.next();\n          case 21:\n            _step = _context.sent;\n            _iteratorNormalCompletion = _step.done;\n            _context.next = 25;\n            return _step.value;\n          case 25:\n            _value = _context.sent;\n            if (_iteratorNormalCompletion) {\n              _context.next = 32;\n              break;\n            }\n            batch = _value;\n            chunks.push(batch);\n          case 29:\n            _iteratorNormalCompletion = true;\n            _context.next = 19;\n            break;\n          case 32:\n            _context.next = 38;\n            break;\n          case 34:\n            _context.prev = 34;\n            _context.t2 = _context[\"catch\"](17);\n            _didIteratorError = true;\n            _iteratorError = _context.t2;\n          case 38:\n            _context.prev = 38;\n            _context.prev = 39;\n            if (!(!_iteratorNormalCompletion && _iterator[\"return\"] != null)) {\n              _context.next = 43;\n              break;\n            }\n            _context.next = 43;\n            return _iterator[\"return\"]();\n          case 43:\n            _context.prev = 43;\n            if (!_didIteratorError) {\n              _context.next = 46;\n              break;\n            }\n            throw _iteratorError;\n          case 46:\n            return _context.finish(43);\n          case 47:\n            return _context.finish(38);\n          case 48:\n            _context.next = 50;\n            return concatenateArrayBuffers.apply(void 0, chunks);\n          case 50:\n            return _context.abrupt(\"return\", _context.sent);\n          case 51:\n            if (!(!isBrowser && writer.encodeURLtoURL)) {\n              _context.next = 63;\n              break;\n            }\n            tmpInputFilename = getTemporaryFilename('input');\n            _context.next = 55;\n            return writeFile(tmpInputFilename, data);\n          case 55:\n            tmpOutputFilename = getTemporaryFilename('output');\n            _context.next = 58;\n            return encodeURLtoURL(tmpInputFilename, tmpOutputFilename, writer, options);\n          case 58:\n            outputFilename = _context.sent;\n            _context.next = 61;\n            return fetchFile(outputFilename);\n          case 61:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.arrayBuffer());\n          case 63:\n            throw new Error('Writer could not encode data');\n          case 64:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[17, 34, 38, 48], [39,, 43, 47]]);\n  }));\n  return _encode.apply(this, arguments);\n}\nexport function encodeSync(data, writer, options, url) {\n  if (writer.encodeSync) {\n    return writer.encodeSync(data, options);\n  }\n  throw new Error('Writer could not synchronously encode data');\n}\nexport function encodeText(_x5, _x6, _x7, _x8) {\n  return _encodeText.apply(this, arguments);\n}\nfunction _encodeText() {\n  _encodeText = _asyncToGenerator(_regeneratorRuntime.mark(function _callee2(data, writer, options, url) {\n    var arrayBuffer;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(writer.text && writer.encodeText)) {\n              _context2.next = 4;\n              break;\n            }\n            _context2.next = 3;\n            return writer.encodeText(data, options);\n          case 3:\n            return _context2.abrupt(\"return\", _context2.sent);\n          case 4:\n            if (!(writer.text && (writer.encode || writer.encodeInBatches))) {\n              _context2.next = 9;\n              break;\n            }\n            _context2.next = 7;\n            return encode(data, writer, options);\n          case 7:\n            arrayBuffer = _context2.sent;\n            return _context2.abrupt(\"return\", new TextDecoder().decode(arrayBuffer));\n          case 9:\n            throw new Error('Writer could not encode data as text');\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _encodeText.apply(this, arguments);\n}\nexport function encodeInBatches(data, writer, options, url) {\n  if (writer.encodeInBatches) {\n    var dataIterator = getIterator(data);\n    return writer.encodeInBatches(dataIterator, options);\n  }\n  throw new Error('Writer could not encode data in batches');\n}\nfunction getIterator(data) {\n  var dataIterator = [{\n    table: data,\n    start: 0,\n    end: data.length\n  }];\n  return dataIterator;\n}\nexport function encodeURLtoURL(_x9, _x10, _x11, _x12) {\n  return _encodeURLtoURL.apply(this, arguments);\n}\nfunction _encodeURLtoURL() {\n  _encodeURLtoURL = _asyncToGenerator(_regeneratorRuntime.mark(function _callee3(inputUrl, outputUrl, writer, options) {\n    var outputFilename;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            inputUrl = resolvePath(inputUrl);\n            outputUrl = resolvePath(outputUrl);\n            if (!(isBrowser || !writer.encodeURLtoURL)) {\n              _context3.next = 4;\n              break;\n            }\n            throw new Error();\n          case 4:\n            _context3.next = 6;\n            return writer.encodeURLtoURL(inputUrl, outputUrl, options);\n          case 6:\n            outputFilename = _context3.sent;\n            return _context3.abrupt(\"return\", outputFilename);\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _encodeURLtoURL.apply(this, arguments);\n}","map":{"version":3,"names":["concatenateArrayBuffers","resolvePath","isBrowser","writeFile","fetchFile","getTemporaryFilename","filename","concat","encode","_x","_x2","_x3","_x4","_encode","apply","arguments","_callee","data","writer","options","url","batches","chunks","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_value","batch","tmpInputFilename","tmpOutputFilename","outputFilename","response","_regeneratorRuntime","wrap","_callee$","_context","prev","next","abrupt","sent","encodeSync","encodeText","t0","TextEncoder","t1","call","encodeInBatches","_asyncIterator","done","value","push","t2","finish","encodeURLtoURL","arrayBuffer","Error","stop","_x5","_x6","_x7","_x8","_encodeText","_callee2","_callee2$","_context2","text","TextDecoder","decode","dataIterator","getIterator","table","start","end","length","_x9","_x10","_x11","_x12","_encodeURLtoURL","_callee3","inputUrl","outputUrl","_callee3$","_context3"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/kepler.gl/node_modules/@loaders.gl/core/src/lib/api/encode.js"],"sourcesContent":["/* global TextEncoder, TextDecoder */\n/** @typedef {import('./encode')} types */\nimport {concatenateArrayBuffers, resolvePath} from '@loaders.gl/loader-utils';\nimport {isBrowser} from '@loaders.gl/loader-utils';\nimport {writeFile} from '../fetch/write-file';\nimport {fetchFile} from '../fetch/fetch-file';\n\n/**\n * @param {string} filename\n * @returns {string}\n * @todo Move to utils\n */\nfunction getTemporaryFilename(filename) {\n  return `/tmp/${filename}`;\n}\n\nexport async function encode(data, writer, options, url) {\n  if (writer.encode) {\n    return await writer.encode(data, options);\n  }\n\n  if (writer.encodeSync) {\n    return writer.encodeSync(data, options);\n  }\n\n  if (writer.encodeText) {\n    return new TextEncoder().encode(await writer.encodeText(data, options));\n  }\n\n  if (writer.encodeInBatches) {\n    // Create an iterator representing the data\n    // TODO - Assumes this is a table\n    const batches = encodeInBatches(data, writer, options);\n\n    // Concatenate the output\n    const chunks = [];\n    for await (const batch of batches) {\n      chunks.push(batch);\n    }\n    // @ts-ignore\n    return await concatenateArrayBuffers(...chunks);\n  }\n\n  if (!isBrowser && writer.encodeURLtoURL) {\n    // TODO - how to generate filenames with correct extensions?\n    const tmpInputFilename = getTemporaryFilename('input');\n    await writeFile(tmpInputFilename, data);\n\n    const tmpOutputFilename = getTemporaryFilename('output');\n\n    const outputFilename = await encodeURLtoURL(\n      tmpInputFilename,\n      tmpOutputFilename,\n      writer,\n      options\n    );\n\n    const response = await fetchFile(outputFilename);\n    return response.arrayBuffer();\n  }\n\n  throw new Error('Writer could not encode data');\n}\n\nexport function encodeSync(data, writer, options, url) {\n  if (writer.encodeSync) {\n    return writer.encodeSync(data, options);\n  }\n  throw new Error('Writer could not synchronously encode data');\n}\n\nexport async function encodeText(data, writer, options, url) {\n  if (writer.text && writer.encodeText) {\n    return await writer.encodeText(data, options);\n  }\n\n  if (writer.text && (writer.encode || writer.encodeInBatches)) {\n    const arrayBuffer = await encode(data, writer, options);\n    return new TextDecoder().decode(arrayBuffer);\n  }\n\n  throw new Error('Writer could not encode data as text');\n}\n\nexport function encodeInBatches(data, writer, options, url) {\n  if (writer.encodeInBatches) {\n    const dataIterator = getIterator(data);\n    return writer.encodeInBatches(dataIterator, options);\n  }\n  // TODO -fall back to atomic encode?\n  throw new Error('Writer could not encode data in batches');\n}\n\nfunction getIterator(data) {\n  // TODO - this is an unacceptable hack!!!\n  const dataIterator = [{table: data, start: 0, end: data.length}];\n  return dataIterator;\n}\n\nexport async function encodeURLtoURL(inputUrl, outputUrl, writer, options) {\n  inputUrl = resolvePath(inputUrl);\n  outputUrl = resolvePath(outputUrl);\n  if (isBrowser || !writer.encodeURLtoURL) {\n    throw new Error();\n  }\n  const outputFilename = await writer.encodeURLtoURL(inputUrl, outputUrl, options);\n  return outputFilename;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}