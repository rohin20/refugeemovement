{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createForOfIteratorHelper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport GLTFScenegraph from '../../api/gltf-scenegraph';\nvar KHR_MATERIALS_UNLIT = 'KHR_materials_unlit';\nexport var name = KHR_MATERIALS_UNLIT;\nexport function decode(_x) {\n  return _decode.apply(this, arguments);\n}\nfunction _decode() {\n  _decode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(gltfData) {\n    var gltfScenegraph, json, _iterator2, _step2, material, extension;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          gltfScenegraph = new GLTFScenegraph(gltfData);\n          json = gltfScenegraph.json;\n          _iterator2 = _createForOfIteratorHelper(json.materials || []);\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              material = _step2.value;\n              extension = material.extensions && material.extensions.KHR_materials_unlit;\n              if (extension) {\n                material.unlit = true;\n              }\n              gltfScenegraph.removeObjectExtension(material, KHR_MATERIALS_UNLIT);\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n          gltfScenegraph.removeExtension(KHR_MATERIALS_UNLIT);\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _decode.apply(this, arguments);\n}\nexport function encode(gltfData) {\n  var gltfScenegraph = new GLTFScenegraph(gltfData);\n  var json = gltfScenegraph.json;\n  if (gltfScenegraph.materials) {\n    var _iterator = _createForOfIteratorHelper(json.materials || []),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var material = _step.value;\n        if (material.unlit) {\n          delete material.unlit;\n          gltfScenegraph.addObjectExtension(material, KHR_MATERIALS_UNLIT, {});\n          gltfScenegraph.addExtension(KHR_MATERIALS_UNLIT);\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n}","map":{"version":3,"names":["GLTFScenegraph","KHR_MATERIALS_UNLIT","name","decode","_x","_decode","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","gltfData","gltfScenegraph","json","_iterator2","_step2","material","extension","wrap","_callee$","_context","prev","next","_createForOfIteratorHelper","materials","s","n","done","value","extensions","KHR_materials_unlit","unlit","removeObjectExtension","err","e","f","removeExtension","stop","encode","_iterator","_step","addObjectExtension","addExtension"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@loaders.gl/gltf/src/lib/extensions/deprecated/KHR_materials_unlit.ts"],"sourcesContent":["// GLTF EXTENSION: KHR_materials_unlit\n// https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n\nimport type {GLTF} from '../../types/gltf-types';\n\nimport GLTFScenegraph from '../../api/gltf-scenegraph';\n\nconst KHR_MATERIALS_UNLIT = 'KHR_materials_unlit';\n\nexport const name = KHR_MATERIALS_UNLIT;\n\nexport async function decode(gltfData: {json: GLTF}): Promise<void> {\n  const gltfScenegraph = new GLTFScenegraph(gltfData);\n  const {json} = gltfScenegraph;\n\n  // Any nodes that have the extension, add lights field pointing to light object\n  // and remove the extension\n  for (const material of json.materials || []) {\n    const extension = material.extensions && material.extensions.KHR_materials_unlit;\n    if (extension) {\n      // @ts-ignore TODO\n      material.unlit = true;\n    }\n    gltfScenegraph.removeObjectExtension(material, KHR_MATERIALS_UNLIT);\n  }\n\n  // Remove the top-level extension\n  gltfScenegraph.removeExtension(KHR_MATERIALS_UNLIT);\n}\n\nexport function encode(gltfData) {\n  const gltfScenegraph = new GLTFScenegraph(gltfData);\n  const {json} = gltfScenegraph;\n\n  // Any nodes that have lights field pointing to light object\n  // add the extension\n  // @ts-ignore\n  if (gltfScenegraph.materials) {\n    for (const material of json.materials || []) {\n      // @ts-ignore\n      if (material.unlit) {\n        // @ts-ignore\n        delete material.unlit;\n        gltfScenegraph.addObjectExtension(material, KHR_MATERIALS_UNLIT, {});\n        gltfScenegraph.addExtension(KHR_MATERIALS_UNLIT);\n      }\n    }\n  }\n}\n"],"mappings":";;;AAKA,OAAOA,cAAc,MAAM,2BAA2B;AAEtD,IAAMC,mBAAmB,GAAG,qBAAqB;AAEjD,OAAO,IAAMC,IAAI,GAAGD,mBAAmB;AAEvC,gBAAsBE,MAAMA,CAAAC,EAAA;EAAA,OAAAC,OAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAiB5B,SAAAF,QAAA;EAAAA,OAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAjBO,SAAAC,QAAsBC,QAAsB;IAAA,IAAAC,cAAA,EAAAC,IAAA,EAAAC,UAAA,EAAAC,MAAA,EAAAC,QAAA,EAAAC,SAAA;IAAA,OAAAT,mBAAA,GAAAU,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAC3CV,cAAc,GAAG,IAAIb,cAAc,CAACY,QAAQ,CAAC;UAC5CE,IAAA,GAAQD,cAAc,CAAtBC,IAAA;UAAAC,UAAA,GAAAS,0BAAA,CAIgBV,IAAI,CAACW,SAAS,IAAI,EAAE;UAAA;YAA3C,KAAAV,UAAA,CAAAW,CAAA,MAAAV,MAAA,GAAAD,UAAA,CAAAY,CAAA,IAAAC,IAAA,GAA6C;cAAlCX,QAAQ,GAAAD,MAAA,CAAAa,KAAA;cACXX,SAAS,GAAGD,QAAQ,CAACa,UAAU,IAAIb,QAAQ,CAACa,UAAU,CAACC,mBAAmB;cAChF,IAAIb,SAAS,EAAE;gBAEbD,QAAQ,CAACe,KAAK,GAAG,IAAI;cACvB;cACAnB,cAAc,CAACoB,qBAAqB,CAAChB,QAAQ,EAAEhB,mBAAmB,CAAC;YACrE;UAAA,SAAAiC,GAAA;YAAAnB,UAAA,CAAAoB,CAAA,CAAAD,GAAA;UAAA;YAAAnB,UAAA,CAAAqB,CAAA;UAAA;UAGAvB,cAAc,CAACwB,eAAe,CAACpC,mBAAmB,CAAC;QAAA;QAAA;UAAA,OAAAoB,QAAA,CAAAiB,IAAA;MAAA;IAAA,GAAA3B,OAAA;EAAA,CACrD;EAAA,OAAAN,OAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAEA,OAAO,SAASgC,MAAMA,CAAC3B,QAAQ,EAAE;EAC/B,IAAMC,cAAc,GAAG,IAAIb,cAAc,CAACY,QAAQ,CAAC;EACnD,IAAOE,IAAA,GAAQD,cAAc,CAAtBC,IAAA;EAKP,IAAID,cAAc,CAACY,SAAS,EAAE;IAAA,IAAAe,SAAA,GAAAhB,0BAAA,CACLV,IAAI,CAACW,SAAS,IAAI,EAAE;MAAAgB,KAAA;IAAA;MAA3C,KAAAD,SAAA,CAAAd,CAAA,MAAAe,KAAA,GAAAD,SAAA,CAAAb,CAAA,IAAAC,IAAA,GAA6C;QAAA,IAAlCX,QAAQ,GAAAwB,KAAA,CAAAZ,KAAA;QAEjB,IAAIZ,QAAQ,CAACe,KAAK,EAAE;UAElB,OAAOf,QAAQ,CAACe,KAAK;UACrBnB,cAAc,CAAC6B,kBAAkB,CAACzB,QAAQ,EAAEhB,mBAAmB,EAAE,CAAC,CAAC,CAAC;UACpEY,cAAc,CAAC8B,YAAY,CAAC1C,mBAAmB,CAAC;QAClD;MACF;IAAA,SAAAiC,GAAA;MAAAM,SAAA,CAAAL,CAAA,CAAAD,GAAA;IAAA;MAAAM,SAAA,CAAAJ,CAAA;IAAA;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}