{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unique = unique;\nexports.findMapBounds = findMapBounds;\nexports.getLatLngBounds = getLatLngBounds;\nexports.clamp = clamp;\nexports.getSampleData = getSampleData;\nexports.timeToUnixMilli = timeToUnixMilli;\nexports.maybeToDate = maybeToDate;\nexports.notNullorUndefined = notNullorUndefined;\nexports.isNumber = isNumber;\nexports.isPlainObject = isPlainObject;\nexports.numberSort = numberSort;\nexports.getSortingFunction = getSortingFunction;\nexports.preciseRound = preciseRound;\nexports.getRoundingDecimalFromStep = getRoundingDecimalFromStep;\nexports.snapToMarks = snapToMarks;\nexports.normalizeSliderValue = normalizeSliderValue;\nexports.roundValToStep = roundValToStep;\nexports.getFormatter = getFormatter;\nexports.applyDefaultFormat = applyDefaultFormat;\nexports.getBooleanFormatter = getBooleanFormatter;\nexports.applyCustomFormat = applyCustomFormat;\nexports.datetimeFormatter = datetimeFormatter;\nexports.arrayMove = exports.parseFieldValue = exports.FIELD_DISPLAY_FORMAT = exports.defaultFormatter = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _assert = _interopRequireDefault(require(\"assert\"));\nvar _defaultSettings = require(\"../constants/default-settings\");\nvar _tooltip = require(\"../constants/tooltip\");\nvar _d3Format = require(\"d3-format\");\nvar _d3Array = require(\"d3-array\");\nvar _momentTimezone = _interopRequireDefault(require(\"moment-timezone\"));\nvar _FIELD_DISPLAY_FORMAT;\nvar MAX_LATITUDE = 90;\nvar MIN_LATITUDE = -90;\nvar MAX_LONGITUDE = 180;\nvar MIN_LONGITUDE = -180;\n/**\n * simple getting unique values of an array\n *\n * @param {array} values\n * @returns {array} unique values\n */\n\nfunction unique(values) {\n  var results = [];\n  var uniqueSet = new Set(values);\n  uniqueSet.forEach(function (v) {\n    if (notNullorUndefined(v)) {\n      results.push(v);\n    }\n  });\n  return results;\n}\n/* eslint-disable max-statements */\n\n/**\n * return center of map from given points\n * @param {array} layers\n * @returns {object} coordinates of map center, empty if not found\n */\n\nfunction findMapBounds(layers) {\n  // find bounds in formatted layerData\n  // take ALL layers into account when finding map bounds\n  var availableLayerBounds = layers.reduce(function (res, l) {\n    if (l.meta && l.meta.bounds) {\n      res.push(l.meta.bounds);\n    }\n    return res;\n  }, []); // return null if no layer is available\n\n  if (availableLayerBounds.length === 0) {\n    return null;\n  } // merge bounds in each layer\n\n  var newBounds = availableLayerBounds.reduce(function (res, b) {\n    return [Math.min(res[0], b[0]), Math.min(res[1], b[1]), Math.max(res[2], b[2]), Math.max(res[3], b[3])];\n  }, [MAX_LONGITUDE, MAX_LATITUDE, MIN_LONGITUDE, MIN_LATITUDE]);\n  return newBounds;\n}\n/* eslint-enable max-statements */\n\nfunction getLatLngBounds(points, idx, limit) {\n  var lats = points.map(function (d) {\n    return Array.isArray(d) && d[idx];\n  }).filter(Number.isFinite).sort(numberSort);\n  if (!lats.length) {\n    return null;\n  } // clamp to limit\n\n  return [Math.max(lats[0], limit[0]), Math.min(lats[lats.length - 1], limit[1])];\n}\nfunction clamp(_ref, val) {\n  var _ref2 = (0, _slicedToArray2[\"default\"])(_ref, 2),\n    min = _ref2[0],\n    max = _ref2[1];\n  return val <= min ? min : val >= max ? max : val;\n}\nfunction getSampleData(data) {\n  var sampleSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;\n  var getValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function (d) {\n    return d;\n  };\n  var sampleStep = Math.max(Math.floor(data.length / sampleSize), 1);\n  var output = [];\n  for (var i = 0; i < data.length; i += sampleStep) {\n    output.push(getValue(data[i]));\n  }\n  return output;\n}\n/**\n * Convert different time format to unix milliseconds\n * @type {typeof import('./data-utils').timeToUnixMilli}\n */\n\nfunction timeToUnixMilli(value, format) {\n  if (notNullorUndefined(value)) {\n    return typeof value === 'string' ? _momentTimezone[\"default\"].utc(value, format).valueOf() : format === 'x' ? value * 1000 : value;\n  }\n  return null;\n}\n/**\n *\n * @type {typeof import('./data-utils').maybeToDate}\n */\n\nfunction maybeToDate(isTime, fieldIdx, format, dc, d) {\n  if (isTime) {\n    return timeToUnixMilli(dc.valueAt(d.index, fieldIdx), format);\n  }\n  return dc.valueAt(d.index, fieldIdx);\n}\n/**\n * whether null or undefined\n * @type {typeof import('./data-utils').notNullorUndefined}\n */\n\nfunction notNullorUndefined(d) {\n  return d !== undefined && d !== null;\n}\n/**\n * Whether d is a number, this filtered out NaN as well\n * @type {typeof import('./data-utils').notNullorUndefined}\n */\n\nfunction isNumber(d) {\n  return Number.isFinite(d);\n}\n/**\n * whether null or undefined\n */\n\nfunction isPlainObject(obj) {\n  return obj === Object(obj) && typeof obj !== 'function' && !Array.isArray(obj);\n}\n/**\n * @type {typeof import('./data-utils').numberSort}\n */\n\nfunction numberSort(a, b) {\n  return a - b;\n}\n/**\n * @type {typeof import('./data-utils').getSortingFunction}\n */\n\nfunction getSortingFunction(fieldType) {\n  switch (fieldType) {\n    case _defaultSettings.ALL_FIELD_TYPES.real:\n    case _defaultSettings.ALL_FIELD_TYPES.integer:\n    case _defaultSettings.ALL_FIELD_TYPES.timestamp:\n      return numberSort;\n    default:\n      return undefined;\n  }\n}\n/**\n * round number with exact number of decimals\n * return as a string\n * @type {typeof import('./data-utils').preciseRound}\n */\n\nfunction preciseRound(num, decimals) {\n  var t = Math.pow(10, decimals);\n  return (Math.round(num * t + (decimals > 0 ? 1 : 0) * (Math.sign(num) * (10 / Math.pow(100, decimals)))) / t).toFixed(decimals);\n}\n/**\n * get number of decimals to round to for slider from step\n * @param {number} step\n * @returns {number} - number of decimal\n */\n\nfunction getRoundingDecimalFromStep(step) {\n  if (isNaN(step)) {\n    (0, _assert[\"default\"])('step is not a number');\n    (0, _assert[\"default\"])(step);\n  }\n  var splitZero = step.toString().split('.');\n  if (splitZero.length === 1) {\n    return 0;\n  }\n  return splitZero[1].length;\n}\n/**\n * Use in slider, given a number and an array of numbers, return the nears number from the array\n * @type {typeof import('./data-utils').snapToMarks}\n * @param value\n * @param marks\n */\n\nfunction snapToMarks(value, marks) {\n  // always use bin x0\n  var i = (0, _d3Array.bisectLeft)(marks, value);\n  if (i === 0) {\n    return marks[i];\n  } else if (i === marks.length) {\n    return marks[i - 1];\n  }\n  var idx = marks[i] - value < value - marks[i - 1] ? i : i - 1;\n  return marks[idx];\n}\n/**\n * If marks is provided, snap to marks, if not normalize to step\n * @type {typeof import('./data-utils').normalizeSliderValue}\n * @param val\n * @param minValue\n * @param step\n * @param marks\n */\n\nfunction normalizeSliderValue(val, minValue, step, marks) {\n  if (marks && marks.length) {\n    return snapToMarks(val, marks);\n  }\n  return roundValToStep(minValue, step, val);\n}\n/**\n * round the value to step for the slider\n * @type {typeof import('./data-utils').roundValToStep}\n * @param minValue\n * @param step\n * @param val\n * @returns - rounded number\n */\n\nfunction roundValToStep(minValue, step, val) {\n  if (!isNumber(step) || !isNumber(minValue)) {\n    return val;\n  }\n  var decimal = getRoundingDecimalFromStep(step);\n  var steps = Math.floor((val - minValue) / step);\n  var remain = val - (steps * step + minValue); // has to round because javascript turns 0.1 into 0.9999999999999987\n\n  remain = Number(preciseRound(remain, 8));\n  var closest;\n  if (remain === 0) {\n    closest = val;\n  } else if (remain < step / 2) {\n    closest = steps * step + minValue;\n  } else {\n    closest = (steps + 1) * step + minValue;\n  } // precise round return a string rounded to the defined decimal\n\n  var rounded = preciseRound(closest, decimal);\n  return Number(rounded);\n}\n/**\n * Get the value format based on field and format options\n * Used in render tooltip value\n * @type {typeof import('./data-utils').defaultFormatter}\n */\n\nvar defaultFormatter = function defaultFormatter(v) {\n  return notNullorUndefined(v) ? String(v) : '';\n};\nexports.defaultFormatter = defaultFormatter;\nvar FIELD_DISPLAY_FORMAT = (_FIELD_DISPLAY_FORMAT = {}, (0, _defineProperty2[\"default\"])(_FIELD_DISPLAY_FORMAT, _defaultSettings.ALL_FIELD_TYPES.string, defaultFormatter), (0, _defineProperty2[\"default\"])(_FIELD_DISPLAY_FORMAT, _defaultSettings.ALL_FIELD_TYPES.timestamp, defaultFormatter), (0, _defineProperty2[\"default\"])(_FIELD_DISPLAY_FORMAT, _defaultSettings.ALL_FIELD_TYPES.integer, defaultFormatter), (0, _defineProperty2[\"default\"])(_FIELD_DISPLAY_FORMAT, _defaultSettings.ALL_FIELD_TYPES.real, defaultFormatter), (0, _defineProperty2[\"default\"])(_FIELD_DISPLAY_FORMAT, _defaultSettings.ALL_FIELD_TYPES[\"boolean\"], defaultFormatter), (0, _defineProperty2[\"default\"])(_FIELD_DISPLAY_FORMAT, _defaultSettings.ALL_FIELD_TYPES.date, defaultFormatter), (0, _defineProperty2[\"default\"])(_FIELD_DISPLAY_FORMAT, _defaultSettings.ALL_FIELD_TYPES.geojson, function (d) {\n  return typeof d === 'string' ? d : isPlainObject(d) ? JSON.stringify(d) : Array.isArray(d) ? \"[\".concat(String(d), \"]\") : '';\n}), _FIELD_DISPLAY_FORMAT);\n/**\n * Parse field value and type and return a string representation\n * @type {typeof import('./data-utils').parseFieldValue}\n */\n\nexports.FIELD_DISPLAY_FORMAT = FIELD_DISPLAY_FORMAT;\nvar parseFieldValue = function parseFieldValue(value, type) {\n  if (!notNullorUndefined(value)) {\n    return '';\n  }\n  return FIELD_DISPLAY_FORMAT[type] ? FIELD_DISPLAY_FORMAT[type](value) : String(value);\n};\nexports.parseFieldValue = parseFieldValue;\nvar arrayMoveMutate = function arrayMoveMutate(array, from, to) {\n  array.splice(to < 0 ? array.length + to : to, 0, array.splice(from, 1)[0]);\n};\n/**\n *\n * @param {*} array\n * @param {*} from\n * @param {*} to\n */\n\nvar arrayMove = function arrayMove(array, from, to) {\n  array = array.slice();\n  arrayMoveMutate(array, from, to);\n  return array;\n};\n/**\n * Get the value format based on field and format options\n * Used in render tooltip value\n * @type {typeof import('./data-utils').getFormatter}\n * @param format\n * @param field\n */\n\nexports.arrayMove = arrayMove;\nfunction getFormatter(format, field) {\n  if (!format) {\n    return defaultFormatter;\n  }\n  var tooltipFormat = Object.values(_tooltip.TOOLTIP_FORMATS).find(function (f) {\n    return f[_tooltip.TOOLTIP_KEY] === format;\n  });\n  if (tooltipFormat) {\n    return applyDefaultFormat(tooltipFormat);\n  } else if (typeof format === 'string' && field) {\n    return applyCustomFormat(format, field);\n  }\n  return defaultFormatter;\n}\nfunction applyDefaultFormat(tooltipFormat) {\n  if (!tooltipFormat || !tooltipFormat.format) {\n    return defaultFormatter;\n  }\n  switch (tooltipFormat.type) {\n    case _tooltip.TOOLTIP_FORMAT_TYPES.DECIMAL:\n      return (0, _d3Format.format)(tooltipFormat.format);\n    case _tooltip.TOOLTIP_FORMAT_TYPES.DATE:\n    case _tooltip.TOOLTIP_FORMAT_TYPES.DATE_TIME:\n      return datetimeFormatter(null)(tooltipFormat.format);\n    case _tooltip.TOOLTIP_FORMAT_TYPES.PERCENTAGE:\n      return function (v) {\n        return \"\".concat((0, _d3Format.format)(_tooltip.TOOLTIP_FORMATS.DECIMAL_DECIMAL_FIXED_2.format)(v), \"%\");\n      };\n    case _tooltip.TOOLTIP_FORMAT_TYPES.BOOLEAN:\n      return getBooleanFormatter(tooltipFormat.format);\n    default:\n      return defaultFormatter;\n  }\n}\nfunction getBooleanFormatter(format) {\n  switch (format) {\n    case '01':\n      return function (v) {\n        return v ? '1' : '0';\n      };\n    case 'yn':\n      return function (v) {\n        return v ? 'yes' : 'no';\n      };\n    default:\n      return defaultFormatter;\n  }\n} // Allow user to specify custom tooltip format via config\n\nfunction applyCustomFormat(format, field) {\n  switch (field.type) {\n    case _defaultSettings.ALL_FIELD_TYPES.real:\n    case _defaultSettings.ALL_FIELD_TYPES.integer:\n      return (0, _d3Format.format)(format);\n    case _defaultSettings.ALL_FIELD_TYPES.date:\n    case _defaultSettings.ALL_FIELD_TYPES.timestamp:\n      return datetimeFormatter(null)(format);\n    default:\n      return function (v) {\n        return v;\n      };\n  }\n}\n/**\n * Format epoch milliseconds with a format string\n * @type {typeof import('./data-utils').datetimeFormatter} timezone\n */\n\nfunction datetimeFormatter(timezone) {\n  return timezone ? function (format) {\n    return function (ts) {\n      return _momentTimezone[\"default\"].utc(ts).tz(timezone).format(format);\n    };\n  } : function (format) {\n    return function (ts) {\n      return _momentTimezone[\"default\"].utc(ts).format(format);\n    };\n  };\n}","map":{"version":3,"names":["_assert","_interopRequireDefault","require","_defaultSettings","_tooltip","_d3Format","_d3Array","_momentTimezone","MAX_LATITUDE","MIN_LATITUDE","MAX_LONGITUDE","MIN_LONGITUDE","unique","values","results","uniqueSet","Set","forEach","v","notNullorUndefined","push","findMapBounds","layers","availableLayerBounds","reduce","res","l","meta","bounds","length","newBounds","b","Math","min","max","getLatLngBounds","points","idx","limit","lats","map","d","Array","isArray","filter","Number","isFinite","sort","numberSort","clamp","_ref","val","_ref2","_slicedToArray2","getSampleData","data","sampleSize","arguments","undefined","getValue","sampleStep","floor","output","i","timeToUnixMilli","value","format","utc","valueOf","maybeToDate","isTime","fieldIdx","dc","valueAt","index","isNumber","isPlainObject","obj","Object","a","getSortingFunction","fieldType","ALL_FIELD_TYPES","real","integer","timestamp","preciseRound","num","decimals","t","pow","round","sign","toFixed","getRoundingDecimalFromStep","step","isNaN","splitZero","toString","split","snapToMarks","marks","bisectLeft","normalizeSliderValue","minValue","roundValToStep","decimal","steps","remain","closest","rounded","defaultFormatter","String","FIELD_DISPLAY_FORMAT","_FIELD_DISPLAY_FORMAT","_defineProperty2","string","date","geojson","JSON","stringify","concat","parseFieldValue","type","arrayMoveMutate","array","from","to","splice","arrayMove","slice","getFormatter","field","tooltipFormat","TOOLTIP_FORMATS","find","f","TOOLTIP_KEY","applyDefaultFormat","applyCustomFormat","TOOLTIP_FORMAT_TYPES","DECIMAL","DATE","DATE_TIME","datetimeFormatter","PERCENTAGE","DECIMAL_DECIMAL_FIXED_2","BOOLEAN","getBooleanFormatter","timezone","ts","tz"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/kepler.gl/src/utils/data-utils.js"],"sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport assert from 'assert';\nimport {ALL_FIELD_TYPES} from 'constants/default-settings';\nimport {TOOLTIP_FORMATS, TOOLTIP_FORMAT_TYPES, TOOLTIP_KEY} from 'constants/tooltip';\nimport {format as d3Format} from 'd3-format';\nimport {bisectLeft} from 'd3-array';\nimport moment from 'moment-timezone';\n\nconst MAX_LATITUDE = 90;\nconst MIN_LATITUDE = -90;\nconst MAX_LONGITUDE = 180;\nconst MIN_LONGITUDE = -180;\n\n/**\n * simple getting unique values of an array\n *\n * @param {array} values\n * @returns {array} unique values\n */\nexport function unique(values) {\n  const results = [];\n  const uniqueSet = new Set(values);\n  uniqueSet.forEach(v => {\n    if (notNullorUndefined(v)) {\n      results.push(v);\n    }\n  });\n  return results;\n}\n\n/* eslint-disable max-statements */\n/**\n * return center of map from given points\n * @param {array} layers\n * @returns {object} coordinates of map center, empty if not found\n */\nexport function findMapBounds(layers) {\n  // find bounds in formatted layerData\n  // take ALL layers into account when finding map bounds\n  const availableLayerBounds = layers.reduce((res, l) => {\n    if (l.meta && l.meta.bounds) {\n      res.push(l.meta.bounds);\n    }\n    return res;\n  }, []);\n  // return null if no layer is available\n  if (availableLayerBounds.length === 0) {\n    return null;\n  }\n  // merge bounds in each layer\n  const newBounds = availableLayerBounds.reduce(\n    (res, b) => {\n      return [\n        Math.min(res[0], b[0]),\n        Math.min(res[1], b[1]),\n        Math.max(res[2], b[2]),\n        Math.max(res[3], b[3])\n      ];\n    },\n    [MAX_LONGITUDE, MAX_LATITUDE, MIN_LONGITUDE, MIN_LATITUDE]\n  );\n  return newBounds;\n}\n/* eslint-enable max-statements */\n\nexport function getLatLngBounds(points, idx, limit) {\n  const lats = points\n    .map(d => Array.isArray(d) && d[idx])\n    .filter(Number.isFinite)\n    .sort(numberSort);\n\n  if (!lats.length) {\n    return null;\n  }\n\n  // clamp to limit\n  return [Math.max(lats[0], limit[0]), Math.min(lats[lats.length - 1], limit[1])];\n}\n\nexport function clamp([min, max], val) {\n  return val <= min ? min : val >= max ? max : val;\n}\n\nexport function getSampleData(data, sampleSize = 500, getValue = d => d) {\n  const sampleStep = Math.max(Math.floor(data.length / sampleSize), 1);\n  const output = [];\n  for (let i = 0; i < data.length; i += sampleStep) {\n    output.push(getValue(data[i]));\n  }\n\n  return output;\n}\n\n/**\n * Convert different time format to unix milliseconds\n * @type {typeof import('./data-utils').timeToUnixMilli}\n */\nexport function timeToUnixMilli(value, format) {\n  if (notNullorUndefined(value)) {\n    return typeof value === 'string'\n      ? moment.utc(value, format).valueOf()\n      : format === 'x'\n      ? value * 1000\n      : value;\n  }\n  return null;\n}\n\n/**\n *\n * @type {typeof import('./data-utils').maybeToDate}\n */\nexport function maybeToDate(isTime, fieldIdx, format, dc, d) {\n  if (isTime) {\n    return timeToUnixMilli(dc.valueAt(d.index, fieldIdx), format);\n  }\n\n  return dc.valueAt(d.index, fieldIdx);\n}\n\n/**\n * whether null or undefined\n * @type {typeof import('./data-utils').notNullorUndefined}\n */\nexport function notNullorUndefined(d) {\n  return d !== undefined && d !== null;\n}\n\n/**\n * Whether d is a number, this filtered out NaN as well\n * @type {typeof import('./data-utils').notNullorUndefined}\n */\nexport function isNumber(d) {\n  return Number.isFinite(d);\n}\n/**\n * whether null or undefined\n */\nexport function isPlainObject(obj) {\n  return obj === Object(obj) && typeof obj !== 'function' && !Array.isArray(obj);\n}\n\n/**\n * @type {typeof import('./data-utils').numberSort}\n */\nexport function numberSort(a, b) {\n  return a - b;\n}\n\n/**\n * @type {typeof import('./data-utils').getSortingFunction}\n */\nexport function getSortingFunction(fieldType) {\n  switch (fieldType) {\n    case ALL_FIELD_TYPES.real:\n    case ALL_FIELD_TYPES.integer:\n    case ALL_FIELD_TYPES.timestamp:\n      return numberSort;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * round number with exact number of decimals\n * return as a string\n * @type {typeof import('./data-utils').preciseRound}\n */\nexport function preciseRound(num, decimals) {\n  const t = Math.pow(10, decimals);\n  return (\n    Math.round(\n      num * t + (decimals > 0 ? 1 : 0) * (Math.sign(num) * (10 / Math.pow(100, decimals)))\n    ) / t\n  ).toFixed(decimals);\n}\n\n/**\n * get number of decimals to round to for slider from step\n * @param {number} step\n * @returns {number} - number of decimal\n */\nexport function getRoundingDecimalFromStep(step) {\n  if (isNaN(step)) {\n    assert('step is not a number');\n    assert(step);\n  }\n\n  const splitZero = step.toString().split('.');\n  if (splitZero.length === 1) {\n    return 0;\n  }\n  return splitZero[1].length;\n}\n\n/**\n * Use in slider, given a number and an array of numbers, return the nears number from the array\n * @type {typeof import('./data-utils').snapToMarks}\n * @param value\n * @param marks\n */\nexport function snapToMarks(value, marks) {\n  // always use bin x0\n  const i = bisectLeft(marks, value);\n  if (i === 0) {\n    return marks[i];\n  } else if (i === marks.length) {\n    return marks[i - 1];\n  }\n  const idx = marks[i] - value < value - marks[i - 1] ? i : i - 1;\n  return marks[idx];\n}\n\n/**\n * If marks is provided, snap to marks, if not normalize to step\n * @type {typeof import('./data-utils').normalizeSliderValue}\n * @param val\n * @param minValue\n * @param step\n * @param marks\n */\nexport function normalizeSliderValue(val, minValue, step, marks) {\n  if (marks && marks.length) {\n    return snapToMarks(val, marks);\n  }\n\n  return roundValToStep(minValue, step, val);\n}\n\n/**\n * round the value to step for the slider\n * @type {typeof import('./data-utils').roundValToStep}\n * @param minValue\n * @param step\n * @param val\n * @returns - rounded number\n */\nexport function roundValToStep(minValue, step, val) {\n  if (!isNumber(step) || !isNumber(minValue)) {\n    return val;\n  }\n\n  const decimal = getRoundingDecimalFromStep(step);\n  const steps = Math.floor((val - minValue) / step);\n  let remain = val - (steps * step + minValue);\n\n  // has to round because javascript turns 0.1 into 0.9999999999999987\n  remain = Number(preciseRound(remain, 8));\n\n  let closest;\n  if (remain === 0) {\n    closest = val;\n  } else if (remain < step / 2) {\n    closest = steps * step + minValue;\n  } else {\n    closest = (steps + 1) * step + minValue;\n  }\n\n  // precise round return a string rounded to the defined decimal\n  const rounded = preciseRound(closest, decimal);\n\n  return Number(rounded);\n}\n\n/**\n * Get the value format based on field and format options\n * Used in render tooltip value\n * @type {typeof import('./data-utils').defaultFormatter}\n */\nexport const defaultFormatter = v => (notNullorUndefined(v) ? String(v) : '');\n\nexport const FIELD_DISPLAY_FORMAT = {\n  [ALL_FIELD_TYPES.string]: defaultFormatter,\n  [ALL_FIELD_TYPES.timestamp]: defaultFormatter,\n  [ALL_FIELD_TYPES.integer]: defaultFormatter,\n  [ALL_FIELD_TYPES.real]: defaultFormatter,\n  [ALL_FIELD_TYPES.boolean]: defaultFormatter,\n  [ALL_FIELD_TYPES.date]: defaultFormatter,\n  [ALL_FIELD_TYPES.geojson]: d =>\n    typeof d === 'string'\n      ? d\n      : isPlainObject(d)\n      ? JSON.stringify(d)\n      : Array.isArray(d)\n      ? `[${String(d)}]`\n      : ''\n};\n\n/**\n * Parse field value and type and return a string representation\n * @type {typeof import('./data-utils').parseFieldValue}\n */\nexport const parseFieldValue = (value, type) => {\n  if (!notNullorUndefined(value)) {\n    return '';\n  }\n\n  return FIELD_DISPLAY_FORMAT[type] ? FIELD_DISPLAY_FORMAT[type](value) : String(value);\n};\n\nconst arrayMoveMutate = (array, from, to) => {\n  array.splice(to < 0 ? array.length + to : to, 0, array.splice(from, 1)[0]);\n};\n\n/**\n *\n * @param {*} array\n * @param {*} from\n * @param {*} to\n */\nexport const arrayMove = (array, from, to) => {\n  array = array.slice();\n  arrayMoveMutate(array, from, to);\n  return array;\n};\n\n/**\n * Get the value format based on field and format options\n * Used in render tooltip value\n * @type {typeof import('./data-utils').getFormatter}\n * @param format\n * @param field\n */\nexport function getFormatter(format, field) {\n  if (!format) {\n    return defaultFormatter;\n  }\n  const tooltipFormat = Object.values(TOOLTIP_FORMATS).find(f => f[TOOLTIP_KEY] === format);\n\n  if (tooltipFormat) {\n    return applyDefaultFormat(tooltipFormat);\n  } else if (typeof format === 'string' && field) {\n    return applyCustomFormat(format, field);\n  }\n\n  return defaultFormatter;\n}\n\nexport function applyDefaultFormat(tooltipFormat) {\n  if (!tooltipFormat || !tooltipFormat.format) {\n    return defaultFormatter;\n  }\n\n  switch (tooltipFormat.type) {\n    case TOOLTIP_FORMAT_TYPES.DECIMAL:\n      return d3Format(tooltipFormat.format);\n    case TOOLTIP_FORMAT_TYPES.DATE:\n    case TOOLTIP_FORMAT_TYPES.DATE_TIME:\n      return datetimeFormatter(null)(tooltipFormat.format);\n    case TOOLTIP_FORMAT_TYPES.PERCENTAGE:\n      return v => `${d3Format(TOOLTIP_FORMATS.DECIMAL_DECIMAL_FIXED_2.format)(v)}%`;\n    case TOOLTIP_FORMAT_TYPES.BOOLEAN:\n      return getBooleanFormatter(tooltipFormat.format);\n    default:\n      return defaultFormatter;\n  }\n}\n\nexport function getBooleanFormatter(format) {\n  switch (format) {\n    case '01':\n      return v => (v ? '1' : '0');\n    case 'yn':\n      return v => (v ? 'yes' : 'no');\n    default:\n      return defaultFormatter;\n  }\n}\n// Allow user to specify custom tooltip format via config\nexport function applyCustomFormat(format, field) {\n  switch (field.type) {\n    case ALL_FIELD_TYPES.real:\n    case ALL_FIELD_TYPES.integer:\n      return d3Format(format);\n    case ALL_FIELD_TYPES.date:\n    case ALL_FIELD_TYPES.timestamp:\n      return datetimeFormatter(null)(format);\n    default:\n      return v => v;\n  }\n}\n\n/**\n * Format epoch milliseconds with a format string\n * @type {typeof import('./data-utils').datetimeFormatter} timezone\n */\nexport function datetimeFormatter(timezone) {\n  return timezone\n    ? format => ts =>\n        moment\n          .utc(ts)\n          .tz(timezone)\n          .format(format)\n    : format => ts => moment.utc(ts).format(format);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}