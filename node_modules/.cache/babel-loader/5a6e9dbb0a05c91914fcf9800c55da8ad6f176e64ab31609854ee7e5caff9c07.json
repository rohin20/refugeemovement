{"ast":null,"code":"import _objectSpread from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { assert } from '@loaders.gl/loader-utils';\nimport { ImageLoader, getImageSize } from '@loaders.gl/images';\nimport { generateUrl } from './generate-url';\nimport { deepLoad, shallowLoad } from './deep-load';\nexport function loadImageTexture(_x) {\n  return _loadImageTexture.apply(this, arguments);\n}\nfunction _loadImageTexture() {\n  _loadImageTexture = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(getUrl) {\n    var options,\n      imageUrls,\n      _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n          _context.next = 3;\n          return getImageUrls(getUrl, options);\n        case 3:\n          imageUrls = _context.sent;\n          _context.next = 6;\n          return deepLoad(imageUrls, ImageLoader.parse, options);\n        case 6:\n          return _context.abrupt(\"return\", _context.sent);\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _loadImageTexture.apply(this, arguments);\n}\nexport function getImageUrls(_x2, _x3) {\n  return _getImageUrls.apply(this, arguments);\n}\nfunction _getImageUrls() {\n  _getImageUrls = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(getUrl, options) {\n    var urlOptions,\n      mipLevels,\n      _args2 = arguments;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          urlOptions = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : {};\n          mipLevels = options && options.image && options.image.mipLevels || 0;\n          if (!(mipLevels !== 0)) {\n            _context2.next = 8;\n            break;\n          }\n          _context2.next = 5;\n          return getMipmappedImageUrls(getUrl, mipLevels, options, urlOptions);\n        case 5:\n          _context2.t0 = _context2.sent;\n          _context2.next = 9;\n          break;\n        case 8:\n          _context2.t0 = generateUrl(getUrl, options, urlOptions);\n        case 9:\n          return _context2.abrupt(\"return\", _context2.t0);\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _getImageUrls.apply(this, arguments);\n}\nfunction getMipmappedImageUrls(_x4, _x5, _x6, _x7) {\n  return _getMipmappedImageUrls.apply(this, arguments);\n}\nfunction _getMipmappedImageUrls() {\n  _getMipmappedImageUrls = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(getUrl, mipLevels, options, urlOptions) {\n    var urls, url, image, _getImageSize, width, height, mipLevel, _url;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          urls = [];\n          if (!(mipLevels === 'auto')) {\n            _context3.next = 9;\n            break;\n          }\n          url = generateUrl(getUrl, options, _objectSpread(_objectSpread({}, urlOptions), {}, {\n            lod: 0\n          }));\n          _context3.next = 5;\n          return shallowLoad(url, ImageLoader.parse, options);\n        case 5:\n          image = _context3.sent;\n          _getImageSize = getImageSize(image), width = _getImageSize.width, height = _getImageSize.height;\n          mipLevels = getMipLevels({\n            width: width,\n            height: height\n          });\n          urls.push(url);\n        case 9:\n          assert(mipLevels > 0);\n          for (mipLevel = urls.length; mipLevel < mipLevels; ++mipLevel) {\n            _url = generateUrl(getUrl, options, _objectSpread(_objectSpread({}, urlOptions), {}, {\n              lod: mipLevel\n            }));\n            urls.push(_url);\n          }\n          return _context3.abrupt(\"return\", urls);\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return _getMipmappedImageUrls.apply(this, arguments);\n}\nexport function getMipLevels(size) {\n  return 1 + Math.floor(Math.log2(Math.max(size.width, size.height)));\n}","map":{"version":3,"names":["assert","ImageLoader","getImageSize","generateUrl","deepLoad","shallowLoad","loadImageTexture","_x","_loadImageTexture","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","getUrl","options","imageUrls","_args","wrap","_callee$","_context","prev","next","length","undefined","getImageUrls","sent","parse","abrupt","stop","_x2","_x3","_getImageUrls","_callee2","urlOptions","mipLevels","_args2","_callee2$","_context2","image","getMipmappedImageUrls","t0","_x4","_x5","_x6","_x7","_getMipmappedImageUrls","_callee3","urls","url","_getImageSize","width","height","mipLevel","_url","_callee3$","_context3","_objectSpread","lod","getMipLevels","push","size","Math","floor","log2","max"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@loaders.gl/textures/src/lib/texture-api/load-image.ts"],"sourcesContent":["import {assert} from '@loaders.gl/loader-utils';\nimport {ImageLoader, getImageSize} from '@loaders.gl/images';\nimport type {GetUrl, UrlOptions} from './texture-api-types';\nimport {generateUrl} from './generate-url';\nimport {deepLoad, shallowLoad} from './deep-load';\n\nexport async function loadImageTexture(getUrl: string | GetUrl, options = {}): Promise<any> {\n  const imageUrls = await getImageUrls(getUrl, options);\n  return await deepLoad(imageUrls, ImageLoader.parse, options);\n}\n\nexport async function getImageUrls(\n  getUrl: string | GetUrl,\n  options: any,\n  urlOptions: UrlOptions = {}\n): Promise<any> {\n  const mipLevels = (options && options.image && options.image.mipLevels) || 0;\n  return mipLevels !== 0\n    ? await getMipmappedImageUrls(getUrl, mipLevels, options, urlOptions)\n    : generateUrl(getUrl, options, urlOptions);\n}\n\nasync function getMipmappedImageUrls(\n  getUrl: string | GetUrl,\n  mipLevels: number | 'auto',\n  options: any,\n  urlOptions: UrlOptions\n): Promise<string[]> {\n  const urls: string[] = [];\n\n  // If no mip levels supplied, we need to load the level 0 image and calculate based on size\n  if (mipLevels === 'auto') {\n    const url = generateUrl(getUrl, options, {...urlOptions, lod: 0});\n    const image = await shallowLoad(url, ImageLoader.parse, options);\n\n    const {width, height} = getImageSize(image);\n    mipLevels = getMipLevels({width, height});\n\n    // TODO - push image and make `deepLoad` pass through non-url values, avoid loading twice?\n    urls.push(url);\n  }\n\n  // We now know how many mipLevels we need, remaining image urls can now be constructed\n  assert(mipLevels > 0);\n\n  for (let mipLevel = urls.length; mipLevel < mipLevels; ++mipLevel) {\n    const url = generateUrl(getUrl, options, {...urlOptions, lod: mipLevel});\n    urls.push(url);\n  }\n\n  return urls;\n}\n\n// Calculates number of mipmaps based on texture size (log2)\nexport function getMipLevels(size: {width: number; height: number}): number {\n  return 1 + Math.floor(Math.log2(Math.max(size.width, size.height)));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}