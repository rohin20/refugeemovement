{"ast":null,"code":"import _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { deepEqual } from '../utils/deep-equal';\nvar LayerExtension = /*#__PURE__*/function () {\n  function LayerExtension(opts) {\n    _classCallCheck(this, LayerExtension);\n    _defineProperty(this, \"opts\", void 0);\n    if (opts) {\n      this.opts = opts;\n    }\n  }\n  _createClass(LayerExtension, [{\n    key: \"equals\",\n    value: function equals(extension) {\n      if (this === extension) {\n        return true;\n      }\n      return this.constructor === extension.constructor && deepEqual(this.opts, extension.opts);\n    }\n  }, {\n    key: \"getShaders\",\n    value: function getShaders(extension) {\n      return null;\n    }\n  }, {\n    key: \"getSubLayerProps\",\n    value: function getSubLayerProps(extension) {\n      var defaultProps = extension.constructor.defaultProps;\n      var newProps = {\n        updateTriggers: {}\n      };\n      for (var key in defaultProps) {\n        if (key in this.props) {\n          var propDef = defaultProps[key];\n          var propValue = this.props[key];\n          newProps[key] = propValue;\n          if (propDef && propDef.type === 'accessor') {\n            newProps.updateTriggers[key] = this.props.updateTriggers[key];\n            if (typeof propValue === 'function') {\n              newProps[key] = this.getSubLayerAccessor(propValue);\n            }\n          }\n        }\n      }\n      return newProps;\n    }\n  }, {\n    key: \"initializeState\",\n    value: function initializeState(context, extension) {}\n  }, {\n    key: \"updateState\",\n    value: function updateState(params, extension) {}\n  }, {\n    key: \"draw\",\n    value: function draw(params, extension) {}\n  }, {\n    key: \"finalizeState\",\n    value: function finalizeState(context, extension) {}\n  }]);\n  return LayerExtension;\n}();\nexport { LayerExtension as default };\n_defineProperty(LayerExtension, \"defaultProps\", {});","map":{"version":3,"names":["deepEqual","LayerExtension","opts","_classCallCheck","_defineProperty","_createClass","key","value","equals","extension","constructor","getShaders","getSubLayerProps","defaultProps","newProps","updateTriggers","props","propDef","propValue","type","getSubLayerAccessor","initializeState","context","updateState","params","draw","finalizeState","default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/core/src/lib/layer-extension.ts"],"sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport {deepEqual} from '../utils/deep-equal';\nimport type Layer from './layer';\nimport type CompositeLayer from './composite-layer';\nimport type {UpdateParameters} from './layer';\nimport type {LayerContext} from './layer-manager';\n\nexport default abstract class LayerExtension<OptionsT = undefined> {\n  /**\n   * Note that defaultProps of a LayerExtension does not behave like defaultProps of a Layer:\n      - The default values are not automatically merged with user-supplied props when the layer is constructed\n      - The types are not used during props diff\n   * Currently they are only used in getSubLayerProps\n   * TODO: find a more consistent solution\n   */\n  static defaultProps: any = {};\n  opts!: OptionsT;\n\n  constructor(opts?: OptionsT) {\n    if (opts) {\n      this.opts = opts;\n    }\n  }\n\n  /** Returns true if two extensions are equivalent */\n  equals(extension: LayerExtension<OptionsT>): boolean {\n    if (this === extension) {\n      return true;\n    }\n\n    return this.constructor === extension.constructor && deepEqual(this.opts, extension.opts);\n  }\n\n  /** Only called if attached to a primitive layer */\n  getShaders(this: Layer, extension: this): any {\n    return null;\n  }\n\n  /** Only called if attached to a CompositeLayer */\n  getSubLayerProps(this: CompositeLayer, extension: this): any {\n    const {defaultProps} = extension.constructor as typeof LayerExtension;\n    const newProps = {\n      updateTriggers: {}\n    };\n\n    /* eslint-disable max-depth */\n    for (const key in defaultProps) {\n      if (key in this.props) {\n        const propDef = defaultProps[key];\n        const propValue = this.props[key];\n        newProps[key] = propValue;\n        if (propDef && propDef.type === 'accessor') {\n          newProps.updateTriggers[key] = this.props.updateTriggers[key];\n          if (typeof propValue === 'function') {\n            newProps[key] = this.getSubLayerAccessor(propValue);\n          }\n        }\n      }\n    }\n    /* eslint-enable max-depth */\n    return newProps;\n  }\n\n  /* eslint-disable @typescript-eslint/no-empty-function */\n  initializeState(this: Layer, context: LayerContext, extension: this): void {}\n\n  updateState(this: Layer, params: UpdateParameters<Layer>, extension: this): void {}\n\n  draw(this: Layer, params: any, extension: this): void {}\n\n  finalizeState(this: Layer, context: LayerContext, extension: this): void {}\n}\n"],"mappings":";;;AAmBA,SAAQA,SAAR,QAAwB,qBAAxB;AAAA,IAM8BC,cAAf;EAWb,SAAAA,eAAYC,IAAD,EAAkB;IAAAC,eAAA,OAAAF,cAAA;IAAAG,eAAA;IAC3B,IAAIF,IAAJ,EAAU;MACR,KAAKA,IAAL,GAAYA,IAAZ;IACD;EACF;EAAAG,YAAA,CAAAJ,cAAA;IAAAK,GAAA;IAAAC,KAAA,EAGD,SAAAC,OAAOC,SAAD,EAA+C;MACnD,IAAI,SAASA,SAAb,EAAwB;QACtB,OAAO,IAAP;MACD;MAED,OAAO,KAAKC,WAAL,KAAqBD,SAAS,CAACC,WAA/B,IAA8CV,SAAS,CAAC,KAAKE,IAAN,EAAYO,SAAS,CAACP,IAAtB,CAA9D;IACD;EAAA;IAAAI,GAAA;IAAAC,KAAA,EAGD,SAAAI,WAAwBF,SAAd,EAAoC;MAC5C,OAAO,IAAP;IACD;EAAA;IAAAH,GAAA;IAAAC,KAAA,EAGD,SAAAK,iBAAuCH,SAAvB,EAA6C;MAC3D,IAAOI,YAAA,GAAgBJ,SAAS,CAACC,WAAjC,CAAOG,YAAA;MACP,IAAMC,QAAQ,GAAG;QACfC,cAAc,EAAE;MADD,CAAjB;MAKA,KAAK,IAAMT,GAAX,IAAkBO,YAAlB,EAAgC;QAC9B,IAAIP,GAAG,IAAI,KAAKU,KAAhB,EAAuB;UACrB,IAAMC,OAAO,GAAGJ,YAAY,CAACP,GAAD,CAA5B;UACA,IAAMY,SAAS,GAAG,KAAKF,KAAL,CAAWV,GAAX,CAAlB;UACAQ,QAAQ,CAACR,GAAD,CAAR,GAAgBY,SAAhB;UACA,IAAID,OAAO,IAAIA,OAAO,CAACE,IAAR,KAAiB,UAAhC,EAA4C;YAC1CL,QAAQ,CAACC,cAAT,CAAwBT,GAAxB,IAA+B,KAAKU,KAAL,CAAWD,cAAX,CAA0BT,GAA1B,CAA/B;YACA,IAAI,OAAOY,SAAP,KAAqB,UAAzB,EAAqC;cACnCJ,QAAQ,CAACR,GAAD,CAAR,GAAgB,KAAKc,mBAAL,CAAyBF,SAAzB,CAAhB;YACD;UACF;QACF;MACF;MAED,OAAOJ,QAAP;IACD;EAAA;IAAAR,GAAA;IAAAC,KAAA,EAGD,SAAAc,gBAA6BC,OAAd,EAAqCb,SAArC,EAA4D,CAAE;EAAA;IAAAH,GAAA;IAAAC,KAAA,EAE7E,SAAAgB,YAAyBC,MAAd,EAA+Cf,SAA/C,EAAsE,CAAE;EAAA;IAAAH,GAAA;IAAAC,KAAA,EAEnF,SAAAkB,KAAkBD,MAAd,EAA2Bf,SAA3B,EAAkD,CAAE;EAAA;IAAAH,GAAA;IAAAC,KAAA,EAExD,SAAAmB,cAA2BJ,OAAd,EAAqCb,SAArC,EAA4D,CAAE;EAAA;EAAA,OAAAR,cAAA;AAAA;AAAA,SA/D/CA,cAAf,IAAA0B,OAAA;gBAAe1B,c,kBAQD,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}