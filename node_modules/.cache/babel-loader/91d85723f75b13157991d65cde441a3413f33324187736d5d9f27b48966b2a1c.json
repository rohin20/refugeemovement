{"ast":null,"code":"// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n'use strict';\n\nvar CONSTANT = require('./constant');\nvar Utils = require('./utils');\nvar DATA_TYPES = CONSTANT.DATA_TYPES;\nvar VALIDATOR_MAP = {};\n\n// geometry\nVALIDATOR_MAP[DATA_TYPES.GEOMETRY] = Utils.isGeographic;\nVALIDATOR_MAP[DATA_TYPES.GEOMETRY_FROM_STRING] = Utils.buildRegexCheck('isStringGeometry');\nVALIDATOR_MAP[DATA_TYPES.PAIR_GEOMETRY_FROM_STRING] = Utils.buildRegexCheck('isPairwisePointGeometry');\n\n// basic boolean: true/false, 0/1\nVALIDATOR_MAP[DATA_TYPES.BOOLEAN] = Utils.isBoolean;\nVALIDATOR_MAP[DATA_TYPES.ARRAY] = Utils.isArray;\nVALIDATOR_MAP[DATA_TYPES.DATE_OBJECT] = Utils.isDateObject;\nVALIDATOR_MAP[DATA_TYPES.OBJECT] = Utils.isObject;\n\n// prefix/postfix rules: '$30.00', '10.05%'\nVALIDATOR_MAP[DATA_TYPES.CURRENCY] = Utils.buildRegexCheck('isCurrency');\nVALIDATOR_MAP[DATA_TYPES.PERCENT] = Utils.buildRegexCheck('isPercentage');\n\n// times\nVALIDATOR_MAP[DATA_TYPES.DATETIME] = Utils.buildRegexCheck('isDateTime');\nVALIDATOR_MAP[DATA_TYPES.DATE] = Utils.buildRegexCheck('isDate');\nVALIDATOR_MAP[DATA_TYPES.TIME] = Utils.buildRegexCheck('isTime');\n// VALIDATOR_MAP[DATA_TYPES.DATETIME] = Utils.whichFormatDateTime;\n//\n// VALIDATOR_MAP[DATA_TYPES.DATE] = Utils.whichFormatDate;\n// VALIDATOR_MAP[DATA_TYPES.TIME] = Utils.whichFormatTime;\n\n// numbers:\n// 1, 2, 3, +40, 15,121\nvar intRegexCheck = Utils.buildRegexCheck('isInt');\nfunction isInt(value) {\n  if (intRegexCheck(value)) {\n    var asNum = parseInt(value.toString().replace(/(\\+|,)/g, ''), 10);\n    return asNum > Number.MIN_SAFE_INTEGER && asNum < Number.MAX_SAFE_INTEGER;\n  }\n  return false;\n}\n;\nVALIDATOR_MAP[DATA_TYPES.INT] = isInt;\n\n// 1.1, 2.2, 3.3\nvar floatRegexCheck = Utils.buildRegexCheck('isFloat');\nfunction isFloat(value) {\n  return floatRegexCheck(value) || isInt(value);\n}\nVALIDATOR_MAP[DATA_TYPES.FLOAT] = isFloat;\n\n// 1, 2.2, 3.456789e+0\nVALIDATOR_MAP[DATA_TYPES.NUMBER] = function isNumeric(row) {\n  return !isNaN(row) || isInt(row) || isFloat(row);\n};\n\n// strings: '94101-10', 'San Francisco', 'Name'\nVALIDATOR_MAP[DATA_TYPES.ZIPCODE] = Utils.buildRegexCheck('isZipCode');\nVALIDATOR_MAP[DATA_TYPES.STRING] = Utils.isString;\nmodule.exports = VALIDATOR_MAP;","map":{"version":3,"names":["CONSTANT","require","Utils","DATA_TYPES","VALIDATOR_MAP","GEOMETRY","isGeographic","GEOMETRY_FROM_STRING","buildRegexCheck","PAIR_GEOMETRY_FROM_STRING","BOOLEAN","isBoolean","ARRAY","isArray","DATE_OBJECT","isDateObject","OBJECT","isObject","CURRENCY","PERCENT","DATETIME","DATE","TIME","intRegexCheck","isInt","value","asNum","parseInt","toString","replace","Number","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","INT","floatRegexCheck","isFloat","FLOAT","NUMBER","isNumeric","row","isNaN","ZIPCODE","STRING","isString","module","exports"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/type-analyzer/src/validator-map.js"],"sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n'use strict';\n\nvar CONSTANT = require('./constant');\nvar Utils = require('./utils');\n\nvar DATA_TYPES = CONSTANT.DATA_TYPES;\nvar VALIDATOR_MAP = {};\n\n// geometry\nVALIDATOR_MAP[DATA_TYPES.GEOMETRY] = Utils.isGeographic;\nVALIDATOR_MAP[DATA_TYPES.GEOMETRY_FROM_STRING] =\n  Utils.buildRegexCheck('isStringGeometry');\nVALIDATOR_MAP[DATA_TYPES.PAIR_GEOMETRY_FROM_STRING] =\n  Utils.buildRegexCheck('isPairwisePointGeometry');\n\n// basic boolean: true/false, 0/1\nVALIDATOR_MAP[DATA_TYPES.BOOLEAN] = Utils.isBoolean;\nVALIDATOR_MAP[DATA_TYPES.ARRAY] = Utils.isArray;\nVALIDATOR_MAP[DATA_TYPES.DATE_OBJECT] = Utils.isDateObject;\nVALIDATOR_MAP[DATA_TYPES.OBJECT] = Utils.isObject;\n\n// prefix/postfix rules: '$30.00', '10.05%'\nVALIDATOR_MAP[DATA_TYPES.CURRENCY] = Utils.buildRegexCheck('isCurrency');\nVALIDATOR_MAP[DATA_TYPES.PERCENT] = Utils.buildRegexCheck('isPercentage');\n\n// times\nVALIDATOR_MAP[DATA_TYPES.DATETIME] = Utils.buildRegexCheck('isDateTime');\n\nVALIDATOR_MAP[DATA_TYPES.DATE] = Utils.buildRegexCheck('isDate');\nVALIDATOR_MAP[DATA_TYPES.TIME] = Utils.buildRegexCheck('isTime');\n// VALIDATOR_MAP[DATA_TYPES.DATETIME] = Utils.whichFormatDateTime;\n//\n// VALIDATOR_MAP[DATA_TYPES.DATE] = Utils.whichFormatDate;\n// VALIDATOR_MAP[DATA_TYPES.TIME] = Utils.whichFormatTime;\n\n// numbers:\n// 1, 2, 3, +40, 15,121\nconst intRegexCheck = Utils.buildRegexCheck('isInt');\nfunction isInt(value) {\n  if (intRegexCheck(value)) {\n    var asNum = parseInt(value.toString().replace(/(\\+|,)/g, ''), 10);\n    return asNum > Number.MIN_SAFE_INTEGER && asNum < Number.MAX_SAFE_INTEGER;\n  }\n\n  return false;\n};\nVALIDATOR_MAP[DATA_TYPES.INT] = isInt;\n\n// 1.1, 2.2, 3.3\nconst floatRegexCheck = Utils.buildRegexCheck('isFloat');\nfunction isFloat(value) {\n  return floatRegexCheck(value) || isInt(value);\n}\nVALIDATOR_MAP[DATA_TYPES.FLOAT] = isFloat;\n\n// 1, 2.2, 3.456789e+0\nVALIDATOR_MAP[DATA_TYPES.NUMBER] = function isNumeric(row) {\n  return !isNaN(row) || isInt(row) || isFloat(row);\n};\n\n// strings: '94101-10', 'San Francisco', 'Name'\nVALIDATOR_MAP[DATA_TYPES.ZIPCODE] = Utils.buildRegexCheck('isZipCode');\nVALIDATOR_MAP[DATA_TYPES.STRING] = Utils.isString;\n\nmodule.exports = VALIDATOR_MAP;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}