{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findClosestPointOnLineSegment = findClosestPointOnLineSegment;\nexports.isNumeric = isNumeric;\nexports.parseElemDataAttributes = parseElemDataAttributes;\nfunction inBounds(p1, p2, p) {\n  var bounds = [Math.min(p1[0], p2[0]), Math.max(p1[0], p2[0]), Math.min(p1[1], p2[1]), Math.max(p1[1], p2[1])];\n  return p[0] >= bounds[0] && p[0] <= bounds[1] && p[1] >= bounds[2] && p[1] <= bounds[3];\n}\nfunction findClosestPointOnLineSegment(p1, p2, p) {\n  // line\n  var k = (p2[1] - p1[1]) / (p2[0] - p1[0]);\n  var b = p1[1] - k * p1[0]; // vertical line\n\n  if (!isFinite(k)) {\n    var q = [p1[0], p[1]];\n    return inBounds(p1, p2, q) ? q : null;\n  } // p is on line [p1, p2]\n\n  if (p[0] * k + b - p[1] === 0) {\n    return inBounds(p1, p2, p) ? p : null;\n  }\n  var qx = (k * p[1] + p[0] - k * b) / (k * k + 1);\n  var qy = k * qx + b;\n  return inBounds(p1, p2, [qx, qy]) ? [qx, qy] : null;\n}\nfunction isNumeric(n) {\n  return !Array.isArray(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction parseElemDataAttributes(elem) {\n  var data = elem && elem.dataset;\n  if (!data) {\n    return null;\n  }\n  var featureIndex = data.featureIndex;\n  var vertexIndex = data.vertexIndex;\n  return {\n    type: data.type,\n    operation: data.operation,\n    featureIndex: isNumeric(featureIndex) ? Number(featureIndex) : undefined,\n    vertexIndex: isNumeric(vertexIndex) ? Number(vertexIndex) : undefined\n  };\n}","map":{"version":3,"names":["inBounds","p1","p2","p","bounds","Math","min","max","findClosestPointOnLineSegment","k","b","isFinite","q","qx","qy","isNumeric","n","Array","isArray","isNaN","parseFloat","parseElemDataAttributes","elem","data","dataset","featureIndex","vertexIndex","type","operation","Number","undefined"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/react-map-gl-draw/src/utils.js"],"sourcesContent":["// @flow\n\nfunction inBounds(p1: number[], p2: number[], p: number[]) {\n  const bounds = [\n    Math.min(p1[0], p2[0]),\n    Math.max(p1[0], p2[0]),\n    Math.min(p1[1], p2[1]),\n    Math.max(p1[1], p2[1])\n  ];\n\n  return p[0] >= bounds[0] && p[0] <= bounds[1] && p[1] >= bounds[2] && p[1] <= bounds[3];\n}\n\nexport function findClosestPointOnLineSegment(p1: number[], p2: number[], p: number[]) {\n  // line\n  const k = (p2[1] - p1[1]) / (p2[0] - p1[0]);\n  const b = p1[1] - k * p1[0];\n\n  // vertical line\n  if (!isFinite(k)) {\n    const q = [p1[0], p[1]];\n    return inBounds(p1, p2, q) ? q : null;\n  }\n\n  // p is on line [p1, p2]\n  if (p[0] * k + b - p[1] === 0) {\n    return inBounds(p1, p2, p) ? p : null;\n  }\n\n  const qx = (k * p[1] + p[0] - k * b) / (k * k + 1);\n  const qy = k * qx + b;\n\n  return inBounds(p1, p2, [qx, qy]) ? [qx, qy] : null;\n}\n\nexport function isNumeric(n: any) {\n  return !Array.isArray(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\n\nexport function parseElemDataAttributes(elem: HTMLElement) {\n  const data = elem && elem.dataset;\n  if (!data) {\n    return null;\n  }\n\n  const featureIndex = data.featureIndex;\n  const vertexIndex = data.vertexIndex;\n\n  return {\n    type: data.type,\n    operation: data.operation,\n    featureIndex: isNumeric(featureIndex) ? Number(featureIndex) : undefined,\n    vertexIndex: isNumeric(vertexIndex) ? Number(vertexIndex) : undefined\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}