{"ast":null,"code":"function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nimport { normalizeLoader } from '../loader-utils/normalize-loader';\nimport { getGlobalLoaderState } from '../loader-utils/option-utils';\nvar getGlobalLoaderRegistry = function getGlobalLoaderRegistry() {\n  var state = getGlobalLoaderState();\n  state.loaderRegistry = state.loaderRegistry || [];\n  return state.loaderRegistry;\n};\nexport function registerLoaders(loaders) {\n  var loaderRegistry = getGlobalLoaderRegistry();\n  loaders = Array.isArray(loaders) ? loaders : [loaders];\n  var _iterator = _createForOfIteratorHelper(loaders),\n    _step;\n  try {\n    var _loop = function _loop() {\n      var loader = _step.value;\n      var normalizedLoader = normalizeLoader(loader);\n      if (!loaderRegistry.find(function (registeredLoader) {\n        return normalizedLoader === registeredLoader;\n      })) {\n        loaderRegistry.unshift(normalizedLoader);\n      }\n    };\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      _loop();\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\nexport function getRegisteredLoaders() {\n  return getGlobalLoaderRegistry();\n}\nexport function _unregisterLoaders() {\n  var state = getGlobalLoaderState();\n  state.loaderRegistry = [];\n}","map":{"version":3,"names":["normalizeLoader","getGlobalLoaderState","getGlobalLoaderRegistry","state","loaderRegistry","registerLoaders","loaders","Array","isArray","_iterator","_createForOfIteratorHelper","_step","_loop","loader","value","normalizedLoader","find","registeredLoader","unshift","s","n","done","err","e","f","getRegisteredLoaders","_unregisterLoaders"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/kepler.gl/node_modules/@loaders.gl/core/src/lib/api/register-loaders.js"],"sourcesContent":["import {normalizeLoader} from '../loader-utils/normalize-loader';\nimport {getGlobalLoaderState} from '../loader-utils/option-utils';\n\n// Store global registered loaders on the global object to increase chances of cross loaders-version interoperability\n// This use case is not reliable but can help when testing new versions of loaders.gl with existing frameworks\nconst getGlobalLoaderRegistry = () => {\n  const state = getGlobalLoaderState();\n  state.loaderRegistry = state.loaderRegistry || [];\n  return state.loaderRegistry;\n};\n\nexport function registerLoaders(loaders) {\n  const loaderRegistry = getGlobalLoaderRegistry();\n\n  loaders = Array.isArray(loaders) ? loaders : [loaders];\n\n  for (const loader of loaders) {\n    const normalizedLoader = normalizeLoader(loader);\n    if (!loaderRegistry.find(registeredLoader => normalizedLoader === registeredLoader)) {\n      // add to the beginning of the loaderRegistry, so the last registeredLoader get picked\n      loaderRegistry.unshift(normalizedLoader);\n    }\n  }\n}\n\nexport function getRegisteredLoaders() {\n  return getGlobalLoaderRegistry();\n}\n\n// For testing\nexport function _unregisterLoaders() {\n  const state = getGlobalLoaderState();\n  state.loaderRegistry = [];\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAQA,eAAR,QAA8B,kCAA9B;AACA,SAAQC,oBAAR,QAAmC,8BAAnC;AAIA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0BA,CAAA,EAAM;EACpC,IAAMC,KAAK,GAAGF,oBAAoB,EAAlC;EACAE,KAAK,CAACC,cAAN,GAAuBD,KAAK,CAACC,cAAN,IAAwB,EAA/C;EACA,OAAOD,KAAK,CAACC,cAAb;AACD,CAJD;AAMA,OAAO,SAASC,eAATA,CAAyBC,OAAzB,EAAkC;EACvC,IAAMF,cAAc,GAAGF,uBAAuB,EAA9C;EAEAI,OAAO,GAAGC,KAAK,CAACC,OAAN,CAAcF,OAAd,IAAyBA,OAAzB,GAAmC,CAACA,OAAD,CAA7C;EAHuC,IAAAG,SAAA,GAAAC,0BAAA,CAKlBJ,OALkB;IAAAK,KAAA;EAAA;IAAA,IAAAC,KAAA,YAAAA,MAAA;MAAA,IAK5BC,MAL4B,GAAAF,KAAA,CAAAG,KAAA;MAMrC,IAAMC,gBAAgB,GAAGf,eAAe,CAACa,MAAD,CAAxC;MACA,IAAI,CAACT,cAAc,CAACY,IAAf,CAAoB,UAAAC,gBAAgB;QAAA,OAAIF,gBAAgB,KAAKE,gBAAzB;MAAA,CAApC,CAAL,EAAqF;QAEnFb,cAAc,CAACc,OAAf,CAAuBH,gBAAvB;MACD;IAVoC;IAKvC,KAAAN,SAAA,CAAAU,CAAA,MAAAR,KAAA,GAAAF,SAAA,CAAAW,CAAA,IAAAC,IAAA,GAA8B;MAAAT,KAAA;IAM7B;EAXsC,SAAAU,GAAA;IAAAb,SAAA,CAAAc,CAAA,CAAAD,GAAA;EAAA;IAAAb,SAAA,CAAAe,CAAA;EAAA;AAYxC;AAED,OAAO,SAASC,oBAATA,CAAA,EAAgC;EACrC,OAAOvB,uBAAuB,EAA9B;AACD;AAGD,OAAO,SAASwB,kBAATA,CAAA,EAA8B;EACnC,IAAMvB,KAAK,GAAGF,oBAAoB,EAAlC;EACAE,KAAK,CAACC,cAAN,GAAuB,EAAvB;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}