{"ast":null,"code":"/*\n * Copyright 2015-2016 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n\n'use strict';\n\n/**\n * Attempt to invoke a function capturing the resulting value as a Promise\n *\n * If the method throws, the caught value used to reject the Promise.\n *\n * @param {function} work function to invoke\n * @returns {Promise} Promise for the output of the work function\n */\nfunction attempt(work) {\n  try {\n    return Promise.resolve(work());\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\nmodule.exports = attempt;","map":{"version":3,"names":["attempt","work","Promise","resolve","e","reject","module","exports"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/rest/util/attempt.js"],"sourcesContent":["/*\n * Copyright 2015-2016 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n\n'use strict';\n\n/**\n * Attempt to invoke a function capturing the resulting value as a Promise\n *\n * If the method throws, the caught value used to reject the Promise.\n *\n * @param {function} work function to invoke\n * @returns {Promise} Promise for the output of the work function\n */\nfunction attempt(work) {\n\ttry {\n\t\treturn Promise.resolve(work());\n\t}\n\tcatch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\nmodule.exports = attempt;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,OAAOA,CAACC,IAAI,EAAE;EACtB,IAAI;IACH,OAAOC,OAAO,CAACC,OAAO,CAACF,IAAI,EAAE,CAAC;EAC/B,CAAC,CACD,OAAOG,CAAC,EAAE;IACT,OAAOF,OAAO,CAACG,MAAM,CAACD,CAAC,CAAC;EACzB;AACD;AAEAE,MAAM,CAACC,OAAO,GAAGP,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}