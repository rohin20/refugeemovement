{"ast":null,"code":"import _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport Resource from './resource';\nvar ResourceManager = /*#__PURE__*/function () {\n  function ResourceManager(_ref) {\n    var gl = _ref.gl,\n      protocol = _ref.protocol;\n    _classCallCheck(this, ResourceManager);\n    _defineProperty(this, \"protocol\", void 0);\n    _defineProperty(this, \"_context\", void 0);\n    _defineProperty(this, \"_resources\", void 0);\n    _defineProperty(this, \"_consumers\", void 0);\n    _defineProperty(this, \"_pruneRequest\", void 0);\n    this.protocol = protocol || 'resource://';\n    this._context = {\n      gl: gl,\n      resourceManager: this\n    };\n    this._resources = {};\n    this._consumers = {};\n    this._pruneRequest = null;\n  }\n  _createClass(ResourceManager, [{\n    key: \"contains\",\n    value: function contains(resourceId) {\n      if (resourceId.startsWith(this.protocol)) {\n        return true;\n      }\n      return resourceId in this._resources;\n    }\n  }, {\n    key: \"add\",\n    value: function add(_ref2) {\n      var resourceId = _ref2.resourceId,\n        data = _ref2.data,\n        _ref2$forceUpdate = _ref2.forceUpdate,\n        forceUpdate = _ref2$forceUpdate === void 0 ? false : _ref2$forceUpdate,\n        _ref2$persistent = _ref2.persistent,\n        persistent = _ref2$persistent === void 0 ? true : _ref2$persistent;\n      var res = this._resources[resourceId];\n      if (res) {\n        res.setData(data, forceUpdate);\n      } else {\n        res = new Resource(resourceId, data, this._context);\n        this._resources[resourceId] = res;\n      }\n      res.persistent = persistent;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(resourceId) {\n      var res = this._resources[resourceId];\n      if (res) {\n        res.delete();\n        delete this._resources[resourceId];\n      }\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe(_ref3) {\n      var consumerId = _ref3.consumerId;\n      var consumer = this._consumers[consumerId];\n      if (consumer) {\n        for (var requestId in consumer) {\n          var request = consumer[requestId];\n          var resource = this._resources[request.resourceId];\n          if (resource) {\n            resource.unsubscribe(request);\n          }\n        }\n        delete this._consumers[consumerId];\n        this.prune();\n      }\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(_ref4) {\n      var resourceId = _ref4.resourceId,\n        onChange = _ref4.onChange,\n        consumerId = _ref4.consumerId,\n        _ref4$requestId = _ref4.requestId,\n        requestId = _ref4$requestId === void 0 ? 'default' : _ref4$requestId;\n      var resources = this._resources,\n        protocol = this.protocol;\n      if (resourceId.startsWith(protocol)) {\n        resourceId = resourceId.replace(protocol, '');\n        if (!resources[resourceId]) {\n          this.add({\n            resourceId: resourceId,\n            data: null,\n            persistent: false\n          });\n        }\n      }\n      var res = resources[resourceId];\n      this._track(consumerId, requestId, res, onChange);\n      if (res) {\n        return res.getData();\n      }\n      return undefined;\n    }\n  }, {\n    key: \"prune\",\n    value: function prune() {\n      var _this = this;\n      if (!this._pruneRequest) {\n        this._pruneRequest = setTimeout(function () {\n          return _this._prune();\n        }, 0);\n      }\n    }\n  }, {\n    key: \"finalize\",\n    value: function finalize() {\n      for (var key in this._resources) {\n        this._resources[key].delete();\n      }\n    }\n  }, {\n    key: \"_track\",\n    value: function _track(consumerId, requestId, resource, onChange) {\n      var consumers = this._consumers;\n      var consumer = consumers[consumerId] = consumers[consumerId] || {};\n      var request = consumer[requestId] || {};\n      var oldResource = request.resourceId && this._resources[request.resourceId];\n      if (oldResource) {\n        oldResource.unsubscribe(request);\n        this.prune();\n      }\n      if (resource) {\n        consumer[requestId] = request;\n        request.onChange = onChange;\n        request.resourceId = resource.id;\n        resource.subscribe(request);\n      }\n    }\n  }, {\n    key: \"_prune\",\n    value: function _prune() {\n      this._pruneRequest = null;\n      for (var _i = 0, _Object$keys = Object.keys(this._resources); _i < _Object$keys.length; _i++) {\n        var key = _Object$keys[_i];\n        var res = this._resources[key];\n        if (!res.persistent && !res.inUse()) {\n          res.delete();\n          delete this._resources[key];\n        }\n      }\n    }\n  }]);\n  return ResourceManager;\n}();\nexport { ResourceManager as default };","map":{"version":3,"names":["Resource","ResourceManager","_ref","gl","protocol","_classCallCheck","_defineProperty","_context","resourceManager","_resources","_consumers","_pruneRequest","_createClass","key","value","contains","resourceId","startsWith","add","_ref2","data","_ref2$forceUpdate","forceUpdate","_ref2$persistent","persistent","res","setData","remove","delete","unsubscribe","_ref3","consumerId","consumer","requestId","request","resource","prune","subscribe","_ref4","onChange","_ref4$requestId","resources","replace","_track","getData","undefined","_this","setTimeout","_prune","finalize","consumers","oldResource","id","_i","_Object$keys","Object","keys","length","inUse","default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/core/src/lib/resource/resource-manager.ts"],"sourcesContent":["/* global setTimeout */\nimport Resource from './resource';\nimport type {ResourceSubscriber} from './resource';\n\nexport type ResourceManagerContext = {\n  gl: WebGLRenderingContext;\n  resourceManager: ResourceManager;\n};\n\nexport default class ResourceManager {\n  protocol: string;\n\n  private _context: ResourceManagerContext;\n  private _resources: Record<string, Resource>;\n  private _consumers: Record<\n    string,\n    Record<\n      string,\n      ResourceSubscriber & {\n        resourceId: string;\n      }\n    >\n  >;\n  private _pruneRequest: number | null;\n\n  constructor({gl, protocol}) {\n    this.protocol = protocol || 'resource://';\n\n    this._context = {\n      gl,\n      resourceManager: this\n    };\n    this._resources = {};\n    this._consumers = {};\n\n    this._pruneRequest = null;\n  }\n\n  contains(resourceId: string): boolean {\n    if (resourceId.startsWith(this.protocol)) {\n      return true;\n    }\n    return resourceId in this._resources;\n  }\n\n  add({\n    resourceId,\n    data,\n    forceUpdate = false,\n    persistent = true\n  }: {\n    resourceId: string;\n    data: any;\n    forceUpdate?: boolean;\n    persistent?: boolean;\n  }) {\n    let res = this._resources[resourceId];\n\n    if (res) {\n      res.setData(data, forceUpdate);\n    } else {\n      res = new Resource(resourceId, data, this._context);\n      this._resources[resourceId] = res;\n    }\n    // persistent resources can only be removed by calling `remove`\n    // non-persistent resources may be released when there are no more consumers\n    res.persistent = persistent;\n  }\n\n  remove(resourceId: string): void {\n    const res = this._resources[resourceId];\n\n    if (res) {\n      res.delete();\n      delete this._resources[resourceId];\n    }\n  }\n\n  unsubscribe({consumerId}: {consumerId: string}): void {\n    const consumer = this._consumers[consumerId];\n    if (consumer) {\n      for (const requestId in consumer) {\n        const request = consumer[requestId];\n        const resource = this._resources[request.resourceId];\n        if (resource) {\n          resource.unsubscribe(request);\n        }\n      }\n      delete this._consumers[consumerId];\n      this.prune();\n    }\n  }\n\n  subscribe<T>({\n    resourceId,\n    onChange,\n    consumerId,\n    requestId = 'default'\n  }: {\n    resourceId: string;\n    onChange: (data: T | Promise<T>) => void;\n    consumerId: string;\n    requestId: string;\n  }): T | Promise<T> | undefined {\n    const {_resources: resources, protocol} = this;\n    if (resourceId.startsWith(protocol)) {\n      resourceId = resourceId.replace(protocol, '');\n      if (!resources[resourceId]) {\n        // Add placeholder. When this resource becomes available, the consumer will be notified.\n        this.add({resourceId, data: null, persistent: false});\n      }\n    }\n    const res: Resource<T> = resources[resourceId];\n    this._track(consumerId, requestId, res, onChange);\n    if (res) {\n      return res.getData();\n    }\n\n    return undefined;\n  }\n\n  prune(): void {\n    if (!this._pruneRequest) {\n      // prune() may be called multiple times in the same animation frame.\n      // Batch multiple requests together\n      // @ts-ignore setTimeout returns NodeJS.Timeout in node\n      this._pruneRequest = setTimeout(() => this._prune(), 0);\n    }\n  }\n\n  finalize(): void {\n    for (const key in this._resources) {\n      this._resources[key].delete();\n    }\n  }\n\n  private _track(\n    consumerId: string,\n    requestId: string,\n    resource: Resource,\n    onChange: (data: any) => void\n  ) {\n    const consumers = this._consumers;\n    const consumer = (consumers[consumerId] = consumers[consumerId] || {});\n    const request = consumer[requestId] || {};\n\n    const oldResource = request.resourceId && this._resources[request.resourceId];\n    if (oldResource) {\n      oldResource.unsubscribe(request);\n      this.prune();\n    }\n    if (resource) {\n      consumer[requestId] = request;\n      request.onChange = onChange;\n      request.resourceId = resource.id;\n      resource.subscribe(request);\n    }\n  }\n\n  private _prune(): void {\n    this._pruneRequest = null;\n\n    for (const key of Object.keys(this._resources)) {\n      const res = this._resources[key];\n      if (!res.persistent && !res.inUse()) {\n        res.delete();\n        delete this._resources[key];\n      }\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}