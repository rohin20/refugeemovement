{"ast":null,"code":"import { assert } from '@loaders.gl/loader-utils';\nvar DEFAULT_OPTIONS = {\n  dataType: 'arraybuffer',\n  nothrow: true\n};\nvar isDataURL = function isDataURL(url) {\n  return url.startsWith('data:');\n};\nexport function readFileSyncBrowser(uri, options) {\n  options = getReadFileOptions(options);\n  if (isDataURL(uri)) {}\n  if (!options.nothrow) {\n    assert(false);\n  }\n  return null;\n}\nfunction getReadFileOptions() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  options = Object.assign({}, DEFAULT_OPTIONS, options);\n  options.responseType = options.responseType || options.dataType;\n  return options;\n}","map":{"version":3,"names":["assert","DEFAULT_OPTIONS","dataType","nothrow","isDataURL","url","startsWith","readFileSyncBrowser","uri","options","getReadFileOptions","arguments","length","undefined","Object","assign","responseType"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/kepler.gl/node_modules/@loaders.gl/core/src/lib/fetch/read-file.browser.js"],"sourcesContent":["// TODO - this file is not tested\nimport {assert} from '@loaders.gl/loader-utils';\n\nconst DEFAULT_OPTIONS = {\n  dataType: 'arraybuffer',\n  // TODO - this was mostly set to true to make test cases work\n  nothrow: true\n};\n\nconst isDataURL = url => url.startsWith('data:');\n\n// In a few cases (data URIs, files under Node) \"files\" can be read synchronously\nexport function readFileSyncBrowser(uri, options) {\n  options = getReadFileOptions(options);\n\n  if (isDataURL(uri)) {\n    // TODO - removed until decodeDataUri does not depend on Node.js Buffer\n    //   return decodeDataUri(uri);\n  }\n\n  if (!options.nothrow) {\n    // throw new Error('Cant load URI synchronously');\n    assert(false);\n  }\n\n  return null;\n}\n\n// HELPER FUNCTIONS\n\nfunction getReadFileOptions(options = {}) {\n  options = Object.assign({}, DEFAULT_OPTIONS, options);\n  options.responseType = options.responseType || options.dataType;\n  return options;\n}\n"],"mappings":"AACA,SAAQA,MAAR,QAAqB,0BAArB;AAEA,IAAMC,eAAe,GAAG;EACtBC,QAAQ,EAAE,aADY;EAGtBC,OAAO,EAAE;AAHa,CAAxB;AAMA,IAAMC,SAAS,GAAG,SAAZA,SAAYA,CAAAC,GAAG;EAAA,OAAIA,GAAG,CAACC,UAAJ,CAAe,OAAf,CAAJ;AAAA,CAArB;AAGA,OAAO,SAASC,mBAATA,CAA6BC,GAA7B,EAAkCC,OAAlC,EAA2C;EAChDA,OAAO,GAAGC,kBAAkB,CAACD,OAAD,CAA5B;EAEA,IAAIL,SAAS,CAACI,GAAD,CAAb,EAAoB,CAGnB;EAED,IAAI,CAACC,OAAO,CAACN,OAAb,EAAsB;IAEpBH,MAAM,CAAC,KAAD,CAAN;EACD;EAED,OAAO,IAAP;AACD;AAID,SAASU,kBAATA,CAAA,EAA0C;EAAA,IAAdD,OAAc,GAAAE,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAJ,EAAI;EACxCF,OAAO,GAAGK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBd,eAAlB,EAAmCQ,OAAnC,CAAV;EACAA,OAAO,CAACO,YAAR,GAAuBP,OAAO,CAACO,YAAR,IAAwBP,OAAO,CAACP,QAAvD;EACA,OAAOO,OAAP;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}