{"ast":null,"code":"import _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport Stat from './stat';\nvar Stats = /*#__PURE__*/function () {\n  function Stats(options) {\n    _classCallCheck(this, Stats);\n    _defineProperty(this, \"id\", void 0);\n    _defineProperty(this, \"stats\", {});\n    this.id = options.id;\n    this.stats = {};\n    this._initializeStats(options.stats);\n    Object.seal(this);\n  }\n  _createClass(Stats, [{\n    key: \"get\",\n    value: function get(name) {\n      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'count';\n      return this._getOrCreate({\n        name: name,\n        type: type\n      });\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      return Object.keys(this.stats).length;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      for (var key in this.stats) {\n        this.stats[key].reset();\n      }\n      return this;\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(fn) {\n      for (var key in this.stats) {\n        fn(this.stats[key]);\n      }\n    }\n  }, {\n    key: \"getTable\",\n    value: function getTable() {\n      var table = {};\n      this.forEach(function (stat) {\n        table[stat.name] = {\n          time: stat.time || 0,\n          count: stat.count || 0,\n          average: stat.getAverageTime() || 0,\n          hz: stat.getHz() || 0\n        };\n      });\n      return table;\n    }\n  }, {\n    key: \"_initializeStats\",\n    value: function _initializeStats() {\n      var _this = this;\n      var stats = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      stats.forEach(function (stat) {\n        return _this._getOrCreate(stat);\n      });\n    }\n  }, {\n    key: \"_getOrCreate\",\n    value: function _getOrCreate(stat) {\n      if (!stat || !stat.name) {\n        return null;\n      }\n      var name = stat.name,\n        type = stat.type;\n      if (!this.stats[name]) {\n        if (stat instanceof Stat) {\n          this.stats[name] = stat;\n        } else {\n          this.stats[name] = new Stat(name, type);\n        }\n      }\n      return this.stats[name];\n    }\n  }]);\n  return Stats;\n}();\nexport { Stats as default };","map":{"version":3,"names":["Stat","Stats","options","_classCallCheck","_defineProperty","id","stats","_initializeStats","Object","seal","_createClass","key","value","get","name","type","arguments","length","undefined","_getOrCreate","keys","reset","forEach","fn","getTable","table","stat","time","count","average","getAverageTime","hz","getHz","_this","default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@probe.gl/stats/src/lib/stats.ts"],"sourcesContent":["import Stat from './stat';\n\n/** A \"bag\" of `Stat` objects, can be visualized using `StatsWidget` */\nexport default class Stats {\n  readonly id: string;\n  readonly stats: Record<string, Stat> = {};\n\n  constructor(options: {id: string; stats?: Stats | Stat[] | {name: string; type?: string}[]}) {\n    this.id = options.id;\n    this.stats = {};\n\n    this._initializeStats(options.stats);\n\n    Object.seal(this);\n  }\n\n  /** Acquire a stat. Create if it doesn't exist. */\n  get(name: string, type: string = 'count'): Stat {\n    return this._getOrCreate({name, type});\n  }\n\n  get size(): number {\n    return Object.keys(this.stats).length;\n  }\n\n  /** Reset all stats */\n  reset(): this {\n    for (const key in this.stats) {\n      this.stats[key].reset();\n    }\n\n    return this;\n  }\n\n  forEach(fn: (stat: Stat) => void): void {\n    for (const key in this.stats) {\n      fn(this.stats[key]);\n    }\n  }\n\n  getTable(): Record<\n    string,\n    {\n      time: number;\n      count: number;\n      average: number;\n      hz: number;\n    }\n    > {\n    const table = {};\n    this.forEach(stat => {\n      table[stat.name] = {\n        time: stat.time || 0,\n        count: stat.count || 0,\n        average: stat.getAverageTime() || 0,\n        hz: stat.getHz() || 0\n      };\n    });\n\n    return table;\n  }\n\n  _initializeStats(stats: Stats | Stat[] | {name: string; type?: string}[] = []): void {\n    stats.forEach(stat => this._getOrCreate(stat));\n  }\n\n  _getOrCreate(stat): Stat {\n    if (!stat || !stat.name) {\n      return null;\n    }\n\n    const {name, type} = stat;\n    if (!this.stats[name]) {\n      if (stat instanceof Stat) {\n        this.stats[name] = stat;\n      } else {\n        this.stats[name] = new Stat(name, type);\n      }\n    }\n    return this.stats[name];\n  }\n}\n"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,QAAjB;AAAA,IAGqBC,KAAN;EAIb,SAAAA,MAAYC,OAAD,EAAkF;IAAAC,eAAA,OAAAF,KAAA;IAAAG,eAAA;IAAAA,eAAA,gBAFtD,EAEsD;IAC3F,KAAKC,EAAL,GAAUH,OAAO,CAACG,EAAlB;IACA,KAAKC,KAAL,GAAa,EAAb;IAEA,KAAKC,gBAAL,CAAsBL,OAAO,CAACI,KAA9B;IAEAE,MAAM,CAACC,IAAP,CAAY,IAAZ;EACD;EAAAC,YAAA,CAAAT,KAAA;IAAAU,GAAA;IAAAC,KAAA,EAGD,SAAAC,IAAIC,IAAD,EAA6C;MAAA,IAA9BC,IAA8B,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAf,OAAe;MAC9C,OAAO,KAAKG,YAAL,CAAkB;QAACL,IAAD,EAACA,IAAD;QAAOC,IAAA,EAAAA;MAAP,CAAlB,CAAP;IACD;EAAA;IAAAJ,GAAA;IAAAE,GAAA,EAEO,SAAAA,IAAA,EAAW;MACjB,OAAOL,MAAM,CAACY,IAAP,CAAY,KAAKd,KAAjB,EAAwBW,MAA/B;IACD;EAAA;IAAAN,GAAA;IAAAC,KAAA,EAGD,SAAAS,MAAA,EAAc;MACZ,KAAK,IAAMV,GAAX,IAAkB,KAAKL,KAAvB,EAA8B;QAC5B,KAAKA,KAAL,CAAWK,GAAX,EAAgBU,KAAhB;MACD;MAED,OAAO,IAAP;IACD;EAAA;IAAAV,GAAA;IAAAC,KAAA,EAED,SAAAU,QAAQC,EAAD,EAAiC;MACtC,KAAK,IAAMZ,GAAX,IAAkB,KAAKL,KAAvB,EAA8B;QAC5BiB,EAAE,CAAC,KAAKjB,KAAL,CAAWK,GAAX,CAAD,CAAF;MACD;IACF;EAAA;IAAAA,GAAA;IAAAC,KAAA,EAED,SAAAY,SAAA,EAQI;MACF,IAAMC,KAAK,GAAG,EAAd;MACA,KAAKH,OAAL,CAAa,UAAAI,IAAI,EAAI;QACnBD,KAAK,CAACC,IAAI,CAACZ,IAAN,CAAL,GAAmB;UACjBa,IAAI,EAAED,IAAI,CAACC,IAAL,IAAa,CADF;UAEjBC,KAAK,EAAEF,IAAI,CAACE,KAAL,IAAc,CAFJ;UAGjBC,OAAO,EAAEH,IAAI,CAACI,cAAL,MAAyB,CAHjB;UAIjBC,EAAE,EAAEL,IAAI,CAACM,KAAL,MAAgB;QAJH,CAAnB;MAMD,CAPD;MASA,OAAOP,KAAP;IACD;EAAA;IAAAd,GAAA;IAAAC,KAAA,EAED,SAAAL,iBAAA,EAAqF;MAAA,IAAA0B,KAAA;MAAA,IAApE3B,KAAoE,GAAAU,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAV,EAAU;MACnFV,KAAK,CAACgB,OAAN,CAAc,UAAAI,IAAI;QAAA,OAAIO,KAAA,CAAKd,YAAL,CAAkBO,IAAlB,CAAtB;MAAA;IACD;EAAA;IAAAf,GAAA;IAAAC,KAAA,EAED,SAAAO,aAAaO,IAAD,EAAa;MACvB,IAAI,CAACA,IAAD,IAAS,CAACA,IAAI,CAACZ,IAAnB,EAAyB;QACvB,OAAO,IAAP;MACD;MAED,IAAOA,IAAD,GAAeY,IAArB,CAAOZ,IAAD;QAAOC,IAAA,GAAQW,IAArB,CAAaX,IAAA;MACb,IAAI,CAAC,KAAKT,KAAL,CAAWQ,IAAX,CAAL,EAAuB;QACrB,IAAIY,IAAI,YAAY1B,IAApB,EAA0B;UACxB,KAAKM,KAAL,CAAWQ,IAAX,IAAmBY,IAAnB;QACD,CAFD,MAEO;UACL,KAAKpB,KAAL,CAAWQ,IAAX,IAAmB,IAAId,IAAJ,CAASc,IAAT,EAAeC,IAAf,CAAnB;QACD;MACF;MACD,OAAO,KAAKT,KAAL,CAAWQ,IAAX,CAAP;IACD;EAAA;EAAA,OAAAb,KAAA;AAAA;AAAA,SA7EkBA,KAAN,IAAAiC,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}