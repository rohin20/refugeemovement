{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { isWebGL2 } from '@luma.gl/gltools';\nimport { Buffer, TransformFeedback } from '@luma.gl/webgl';\nimport { assert } from '@luma.gl/webgl';\nvar BufferTransform = /*#__PURE__*/function () {\n  function BufferTransform(gl) {\n    _classCallCheck(this, BufferTransform);\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.gl = gl;\n    this.currentIndex = 0;\n    this.feedbackMap = {};\n    this.varyings = null;\n    this.bindings = [];\n    this.resources = {};\n    this._initialize(props);\n    Object.seal(this);\n  }\n  _createClass(BufferTransform, [{\n    key: \"setupResources\",\n    value: function setupResources(opts) {\n      var _iterator = _createForOfIteratorHelper(this.bindings),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var binding = _step.value;\n          this._setupTransformFeedback(binding, opts);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"updateModelProps\",\n    value: function updateModelProps() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var varyings = this.varyings;\n      if (varyings.length > 0) {\n        props = Object.assign({}, props, {\n          varyings: varyings\n        });\n      }\n      return props;\n    }\n  }, {\n    key: \"getDrawOptions\",\n    value: function getDrawOptions() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var binding = this.bindings[this.currentIndex];\n      var sourceBuffers = binding.sourceBuffers,\n        transformFeedback = binding.transformFeedback;\n      var attributes = Object.assign({}, sourceBuffers, opts.attributes);\n      return {\n        attributes: attributes,\n        transformFeedback: transformFeedback\n      };\n    }\n  }, {\n    key: \"swap\",\n    value: function swap() {\n      if (this.feedbackMap) {\n        this.currentIndex = this._getNextIndex();\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this._setupBuffers(opts);\n    }\n  }, {\n    key: \"getBuffer\",\n    value: function getBuffer(varyingName) {\n      var feedbackBuffers = this.bindings[this.currentIndex].feedbackBuffers;\n      var bufferOrParams = varyingName ? feedbackBuffers[varyingName] : null;\n      if (!bufferOrParams) {\n        return null;\n      }\n      return bufferOrParams instanceof Buffer ? bufferOrParams : bufferOrParams.buffer;\n    }\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var varyingName = options.varyingName;\n      var buffer = this.getBuffer(varyingName);\n      if (buffer) {\n        return buffer.getData();\n      }\n      return null;\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      for (var name in this.resources) {\n        this.resources[name].delete();\n      }\n    }\n  }, {\n    key: \"_initialize\",\n    value: function _initialize() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this._setupBuffers(props);\n      this.varyings = props.varyings || Object.keys(this.bindings[this.currentIndex].feedbackBuffers);\n      if (this.varyings.length > 0) {\n        assert(isWebGL2(this.gl));\n      }\n    }\n  }, {\n    key: \"_getFeedbackBuffers\",\n    value: function _getFeedbackBuffers(props) {\n      var _props$sourceBuffers = props.sourceBuffers,\n        sourceBuffers = _props$sourceBuffers === void 0 ? {} : _props$sourceBuffers;\n      var feedbackBuffers = {};\n      if (this.bindings[this.currentIndex]) {\n        Object.assign(feedbackBuffers, this.bindings[this.currentIndex].feedbackBuffers);\n      }\n      if (this.feedbackMap) {\n        for (var sourceName in this.feedbackMap) {\n          var feedbackName = this.feedbackMap[sourceName];\n          if (sourceName in sourceBuffers) {\n            feedbackBuffers[feedbackName] = sourceName;\n          }\n        }\n      }\n      Object.assign(feedbackBuffers, props.feedbackBuffers);\n      for (var bufferName in feedbackBuffers) {\n        var bufferOrRef = feedbackBuffers[bufferName];\n        if (typeof bufferOrRef === 'string') {\n          var sourceBuffer = sourceBuffers[bufferOrRef];\n          var byteLength = sourceBuffer.byteLength,\n            usage = sourceBuffer.usage,\n            accessor = sourceBuffer.accessor;\n          feedbackBuffers[bufferName] = this._createNewBuffer(bufferName, {\n            byteLength: byteLength,\n            usage: usage,\n            accessor: accessor\n          });\n        }\n      }\n      return feedbackBuffers;\n    }\n  }, {\n    key: \"_setupBuffers\",\n    value: function _setupBuffers() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _props$sourceBuffers2 = props.sourceBuffers,\n        sourceBuffers = _props$sourceBuffers2 === void 0 ? null : _props$sourceBuffers2;\n      Object.assign(this.feedbackMap, props.feedbackMap);\n      var feedbackBuffers = this._getFeedbackBuffers(props);\n      this._updateBindings({\n        sourceBuffers: sourceBuffers,\n        feedbackBuffers: feedbackBuffers\n      });\n    }\n  }, {\n    key: \"_setupTransformFeedback\",\n    value: function _setupTransformFeedback(binding, _ref) {\n      var model = _ref.model;\n      var program = model.program;\n      binding.transformFeedback = new TransformFeedback(this.gl, {\n        program: program,\n        buffers: binding.feedbackBuffers\n      });\n    }\n  }, {\n    key: \"_updateBindings\",\n    value: function _updateBindings(opts) {\n      this.bindings[this.currentIndex] = this._updateBinding(this.bindings[this.currentIndex], opts);\n      if (this.feedbackMap) {\n        var _this$_swapBuffers = this._swapBuffers(this.bindings[this.currentIndex]),\n          sourceBuffers = _this$_swapBuffers.sourceBuffers,\n          feedbackBuffers = _this$_swapBuffers.feedbackBuffers;\n        var nextIndex = this._getNextIndex();\n        this.bindings[nextIndex] = this._updateBinding(this.bindings[nextIndex], {\n          sourceBuffers: sourceBuffers,\n          feedbackBuffers: feedbackBuffers\n        });\n      }\n    }\n  }, {\n    key: \"_updateBinding\",\n    value: function _updateBinding(binding, opts) {\n      if (!binding) {\n        return {\n          sourceBuffers: Object.assign({}, opts.sourceBuffers),\n          feedbackBuffers: Object.assign({}, opts.feedbackBuffers)\n        };\n      }\n      Object.assign(binding.sourceBuffers, opts.sourceBuffers);\n      Object.assign(binding.feedbackBuffers, opts.feedbackBuffers);\n      if (binding.transformFeedback) {\n        binding.transformFeedback.setBuffers(binding.feedbackBuffers);\n      }\n      return binding;\n    }\n  }, {\n    key: \"_swapBuffers\",\n    value: function _swapBuffers(opts) {\n      if (!this.feedbackMap) {\n        return null;\n      }\n      var sourceBuffers = Object.assign({}, opts.sourceBuffers);\n      var feedbackBuffers = Object.assign({}, opts.feedbackBuffers);\n      for (var srcName in this.feedbackMap) {\n        var dstName = this.feedbackMap[srcName];\n        sourceBuffers[srcName] = opts.feedbackBuffers[dstName];\n        feedbackBuffers[dstName] = opts.sourceBuffers[srcName];\n        assert(feedbackBuffers[dstName] instanceof Buffer);\n      }\n      return {\n        sourceBuffers: sourceBuffers,\n        feedbackBuffers: feedbackBuffers\n      };\n    }\n  }, {\n    key: \"_createNewBuffer\",\n    value: function _createNewBuffer(name, opts) {\n      var buffer = new Buffer(this.gl, opts);\n      if (this.resources[name]) {\n        this.resources[name].delete();\n      }\n      this.resources[name] = buffer;\n      return buffer;\n    }\n  }, {\n    key: \"_getNextIndex\",\n    value: function _getNextIndex() {\n      return (this.currentIndex + 1) % 2;\n    }\n  }]);\n  return BufferTransform;\n}();\nexport { BufferTransform as default };","map":{"version":3,"names":["isWebGL2","Buffer","TransformFeedback","assert","BufferTransform","gl","_classCallCheck","props","arguments","length","undefined","currentIndex","feedbackMap","varyings","bindings","resources","_initialize","Object","seal","_createClass","key","value","setupResources","opts","_iterator","_createForOfIteratorHelper","_step","s","n","done","binding","_setupTransformFeedback","err","e","f","updateModelProps","assign","getDrawOptions","sourceBuffers","transformFeedback","attributes","swap","_getNextIndex","update","_setupBuffers","getBuffer","varyingName","feedbackBuffers","bufferOrParams","buffer","getData","options","_delete","name","delete","keys","_getFeedbackBuffers","_props$sourceBuffers","sourceName","feedbackName","bufferName","bufferOrRef","sourceBuffer","byteLength","usage","accessor","_createNewBuffer","_props$sourceBuffers2","_updateBindings","_ref","model","program","buffers","_updateBinding","_this$_swapBuffers","_swapBuffers","nextIndex","setBuffers","srcName","dstName","default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@luma.gl/engine/src/transform/buffer-transform.js"],"sourcesContent":["import {isWebGL2} from '@luma.gl/gltools';\nimport {Buffer, TransformFeedback} from '@luma.gl/webgl';\nimport {assert} from '@luma.gl/webgl';\n\nexport default class BufferTransform {\n  constructor(gl, props = {}) {\n    this.gl = gl;\n    this.currentIndex = 0;\n    this.feedbackMap = {};\n    this.varyings = null; // varyings array\n    this.bindings = []; // each element is an object : {sourceBuffers, feedbackBuffers, transformFeedback}\n\n    this.resources = {}; // resources to be deleted\n\n    this._initialize(props);\n    Object.seal(this);\n  }\n\n  setupResources(opts) {\n    for (const binding of this.bindings) {\n      this._setupTransformFeedback(binding, opts);\n    }\n  }\n\n  updateModelProps(props = {}) {\n    const {varyings} = this;\n    if (varyings.length > 0) {\n      props = Object.assign({}, props, {varyings});\n    }\n    return props;\n  }\n\n  getDrawOptions(opts = {}) {\n    const binding = this.bindings[this.currentIndex];\n    const {sourceBuffers, transformFeedback} = binding;\n    const attributes = Object.assign({}, sourceBuffers, opts.attributes);\n\n    return {attributes, transformFeedback};\n  }\n\n  swap() {\n    if (this.feedbackMap) {\n      this.currentIndex = this._getNextIndex();\n      return true;\n    }\n    return false;\n  }\n\n  // update source and/or feedbackBuffers\n  update(opts = {}) {\n    this._setupBuffers(opts);\n  }\n\n  // returns current feedbackBuffer of given name\n  getBuffer(varyingName) {\n    const {feedbackBuffers} = this.bindings[this.currentIndex];\n    const bufferOrParams = varyingName ? feedbackBuffers[varyingName] : null;\n    if (!bufferOrParams) {\n      return null;\n    }\n    return bufferOrParams instanceof Buffer ? bufferOrParams : bufferOrParams.buffer;\n  }\n\n  getData(options = {}) {\n    const {varyingName} = options;\n    const buffer = this.getBuffer(varyingName);\n    if (buffer) {\n      return buffer.getData();\n    }\n    return null;\n  }\n\n  // Delete owned resources.\n  delete() {\n    for (const name in this.resources) {\n      this.resources[name].delete();\n    }\n  }\n\n  // Private\n\n  _initialize(props = {}) {\n    this._setupBuffers(props);\n    this.varyings = props.varyings || Object.keys(this.bindings[this.currentIndex].feedbackBuffers);\n    if (this.varyings.length > 0) {\n      // if writting to buffers make sure it is WebGL2\n      assert(isWebGL2(this.gl));\n    }\n  }\n\n  // auto create feedback buffers if requested\n  _getFeedbackBuffers(props) {\n    const {sourceBuffers = {}} = props;\n    const feedbackBuffers = {};\n    if (this.bindings[this.currentIndex]) {\n      // this gurantees a partial feedback buffer set doesn't update\n      // previously set buffers during auto creation mode.\n      Object.assign(feedbackBuffers, this.bindings[this.currentIndex].feedbackBuffers);\n    }\n    if (this.feedbackMap) {\n      // feedbackMap is defined as sourceBuffer as key and feedbackBuffer name as object\n      for (const sourceName in this.feedbackMap) {\n        const feedbackName = this.feedbackMap[sourceName];\n        if (sourceName in sourceBuffers) {\n          feedbackBuffers[feedbackName] = sourceName;\n        }\n      }\n    }\n    Object.assign(feedbackBuffers, props.feedbackBuffers);\n    for (const bufferName in feedbackBuffers) {\n      const bufferOrRef = feedbackBuffers[bufferName];\n      if (typeof bufferOrRef === 'string') {\n        // Create new buffer with same layout and settings as source buffer\n        const sourceBuffer = sourceBuffers[bufferOrRef];\n        const {byteLength, usage, accessor} = sourceBuffer;\n        feedbackBuffers[bufferName] = this._createNewBuffer(bufferName, {\n          byteLength,\n          usage,\n          accessor\n        });\n      }\n    }\n\n    return feedbackBuffers;\n  }\n\n  _setupBuffers(props = {}) {\n    const {sourceBuffers = null} = props;\n    Object.assign(this.feedbackMap, props.feedbackMap);\n    const feedbackBuffers = this._getFeedbackBuffers(props);\n    this._updateBindings({sourceBuffers, feedbackBuffers});\n  }\n\n  _setupTransformFeedback(binding, {model}) {\n    const {program} = model;\n    binding.transformFeedback = new TransformFeedback(this.gl, {\n      program,\n      buffers: binding.feedbackBuffers\n    });\n  }\n\n  _updateBindings(opts) {\n    this.bindings[this.currentIndex] = this._updateBinding(this.bindings[this.currentIndex], opts);\n    if (this.feedbackMap) {\n      const {sourceBuffers, feedbackBuffers} = this._swapBuffers(this.bindings[this.currentIndex]);\n      const nextIndex = this._getNextIndex();\n      this.bindings[nextIndex] = this._updateBinding(this.bindings[nextIndex], {\n        sourceBuffers,\n        feedbackBuffers\n      });\n    }\n  }\n\n  _updateBinding(binding, opts) {\n    if (!binding) {\n      return {\n        sourceBuffers: Object.assign({}, opts.sourceBuffers),\n        feedbackBuffers: Object.assign({}, opts.feedbackBuffers)\n      };\n    }\n    Object.assign(binding.sourceBuffers, opts.sourceBuffers);\n    Object.assign(binding.feedbackBuffers, opts.feedbackBuffers);\n    if (binding.transformFeedback) {\n      binding.transformFeedback.setBuffers(binding.feedbackBuffers);\n    }\n    return binding;\n  }\n\n  _swapBuffers(opts) {\n    if (!this.feedbackMap) {\n      return null;\n    }\n    const sourceBuffers = Object.assign({}, opts.sourceBuffers);\n    const feedbackBuffers = Object.assign({}, opts.feedbackBuffers);\n    for (const srcName in this.feedbackMap) {\n      const dstName = this.feedbackMap[srcName];\n      sourceBuffers[srcName] = opts.feedbackBuffers[dstName];\n      feedbackBuffers[dstName] = opts.sourceBuffers[srcName];\n\n      // make sure the new destination buffer is a Buffer object\n      assert(feedbackBuffers[dstName] instanceof Buffer);\n    }\n    return {sourceBuffers, feedbackBuffers};\n  }\n\n  // Create a buffer and add to list of buffers to be deleted.\n  _createNewBuffer(name, opts) {\n    const buffer = new Buffer(this.gl, opts);\n    if (this.resources[name]) {\n      this.resources[name].delete();\n    }\n    this.resources[name] = buffer;\n    return buffer;\n  }\n\n  _getNextIndex() {\n    return (this.currentIndex + 1) % 2;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}