{"ast":null,"code":"import _construct from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/construct.js\";\nimport _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { getTypedArrayFromGLType } from '../webgl-utils/typed-array-utils';\nimport { assert } from '../utils/assert';\nimport { checkProps } from '../utils/check-props';\nvar DEFAULT_ACCESSOR_VALUES = {\n  offset: 0,\n  stride: 0,\n  type: 5126,\n  size: 1,\n  divisor: 0,\n  normalized: false,\n  integer: false\n};\nvar PROP_CHECKS = {\n  deprecatedProps: {\n    instanced: 'divisor',\n    isInstanced: 'divisor'\n  }\n};\nvar Accessor = /*#__PURE__*/function () {\n  function Accessor() {\n    var _this = this;\n    _classCallCheck(this, Accessor);\n    for (var _len2 = arguments.length, accessors = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      accessors[_key2] = arguments[_key2];\n    }\n    accessors.forEach(function (accessor) {\n      return _this._assign(accessor);\n    });\n    Object.freeze(this);\n  }\n  _createClass(Accessor, [{\n    key: \"toString\",\n    value: function toString() {\n      return JSON.stringify(this);\n    }\n  }, {\n    key: \"BYTES_PER_ELEMENT\",\n    get: function get() {\n      return Accessor.getBytesPerElement(this);\n    }\n  }, {\n    key: \"BYTES_PER_VERTEX\",\n    get: function get() {\n      return Accessor.getBytesPerVertex(this);\n    }\n  }, {\n    key: \"_assign\",\n    value: function _assign() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      props = checkProps('Accessor', props, PROP_CHECKS);\n      if (props.type !== undefined) {\n        this.type = props.type;\n        if (props.type === 5124 || props.type === 5125) {\n          this.integer = true;\n        }\n      }\n      if (props.size !== undefined) {\n        this.size = props.size;\n      }\n      if (props.offset !== undefined) {\n        this.offset = props.offset;\n      }\n      if (props.stride !== undefined) {\n        this.stride = props.stride;\n      }\n      if (props.normalized !== undefined) {\n        this.normalized = props.normalized;\n      }\n      if (props.integer !== undefined) {\n        this.integer = props.integer;\n      }\n      if (props.divisor !== undefined) {\n        this.divisor = props.divisor;\n      }\n      if (props.buffer !== undefined) {\n        this.buffer = props.buffer;\n      }\n      if (props.index !== undefined) {\n        if (typeof props.index === 'boolean') {\n          this.index = props.index ? 1 : 0;\n        } else {\n          this.index = props.index;\n        }\n      }\n      if (props.instanced !== undefined) {\n        this.divisor = props.instanced ? 1 : 0;\n      }\n      if (props.isInstanced !== undefined) {\n        this.divisor = props.isInstanced ? 1 : 0;\n      }\n      return this;\n    }\n  }], [{\n    key: \"getBytesPerElement\",\n    value: function getBytesPerElement(accessor) {\n      var ArrayType = getTypedArrayFromGLType(accessor.type || 5126);\n      return ArrayType.BYTES_PER_ELEMENT;\n    }\n  }, {\n    key: \"getBytesPerVertex\",\n    value: function getBytesPerVertex(accessor) {\n      assert(accessor.size);\n      var ArrayType = getTypedArrayFromGLType(accessor.type || 5126);\n      return ArrayType.BYTES_PER_ELEMENT * accessor.size;\n    }\n  }, {\n    key: \"resolve\",\n    value: function resolve() {\n      for (var _len = arguments.length, accessors = new Array(_len), _key = 0; _key < _len; _key++) {\n        accessors[_key] = arguments[_key];\n      }\n      return _construct(Accessor, [DEFAULT_ACCESSOR_VALUES].concat(accessors));\n    }\n  }]);\n  return Accessor;\n}();\nexport { Accessor as default };\nexport { DEFAULT_ACCESSOR_VALUES };","map":{"version":3,"names":["getTypedArrayFromGLType","assert","checkProps","DEFAULT_ACCESSOR_VALUES","offset","stride","type","size","divisor","normalized","integer","PROP_CHECKS","deprecatedProps","instanced","isInstanced","Accessor","_this","_classCallCheck","_len2","arguments","length","accessors","Array","_key2","forEach","accessor","_assign","Object","freeze","_createClass","key","value","toString","JSON","stringify","get","getBytesPerElement","getBytesPerVertex","props","undefined","buffer","index","ArrayType","BYTES_PER_ELEMENT","resolve","_len","_key","_construct","concat","default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@luma.gl/webgl/src/classes/accessor.js"],"sourcesContent":["import GL from '@luma.gl/constants';\nimport {getTypedArrayFromGLType} from '../webgl-utils/typed-array-utils';\nimport {assert} from '../utils/assert';\nimport {checkProps} from '../utils/check-props';\n\nconst DEFAULT_ACCESSOR_VALUES = {\n  offset: 0,\n  stride: 0,\n  type: GL.FLOAT,\n  size: 1,\n  divisor: 0,\n  normalized: false,\n  integer: false\n};\n\nconst PROP_CHECKS = {\n  deprecatedProps: {\n    instanced: 'divisor',\n    isInstanced: 'divisor'\n  }\n};\n\nexport default class Accessor {\n  static getBytesPerElement(accessor) {\n    // TODO: using `FLOAT` when type is not specified,\n    // ensure this assumption is valid or force API to specify type.\n    const ArrayType = getTypedArrayFromGLType(accessor.type || GL.FLOAT);\n    return ArrayType.BYTES_PER_ELEMENT;\n  }\n\n  static getBytesPerVertex(accessor) {\n    assert(accessor.size);\n    // TODO: using `FLOAT` when type is not specified,\n    // ensure this assumption is valid or force API to specify type.\n    const ArrayType = getTypedArrayFromGLType(accessor.type || GL.FLOAT);\n    return ArrayType.BYTES_PER_ELEMENT * accessor.size;\n  }\n\n  // Combines (merges) a list of accessors. On top of default values\n  // Usually [programAccessor, bufferAccessor, appAccessor]\n  // All props will be set in the returned object.\n  // TODO check for conflicts between values in the supplied accessors\n  static resolve(...accessors) {\n    return new Accessor(...[DEFAULT_ACCESSOR_VALUES, ...accessors]); // Default values\n  }\n\n  constructor(...accessors) {\n    accessors.forEach(accessor => this._assign(accessor)); // Merge in sequence\n    Object.freeze(this);\n  }\n\n  toString() {\n    return JSON.stringify(this);\n  }\n\n  // ACCESSORS\n\n  // TODO - remove>\n  get BYTES_PER_ELEMENT() {\n    return Accessor.getBytesPerElement(this);\n  }\n\n  get BYTES_PER_VERTEX() {\n    return Accessor.getBytesPerVertex(this);\n  }\n\n  // PRIVATE\n\n  // eslint-disable-next-line complexity, max-statements\n  _assign(props = {}) {\n    props = checkProps('Accessor', props, PROP_CHECKS);\n\n    if (props.type !== undefined) {\n      this.type = props.type;\n\n      // Auto-deduce integer type?\n      if (props.type === GL.INT || props.type === GL.UNSIGNED_INT) {\n        this.integer = true;\n      }\n    }\n    if (props.size !== undefined) {\n      this.size = props.size;\n    }\n    if (props.offset !== undefined) {\n      this.offset = props.offset;\n    }\n    if (props.stride !== undefined) {\n      this.stride = props.stride;\n    }\n    if (props.normalized !== undefined) {\n      this.normalized = props.normalized;\n    }\n    if (props.integer !== undefined) {\n      this.integer = props.integer;\n    }\n\n    // INSTANCE DIVISOR\n    if (props.divisor !== undefined) {\n      this.divisor = props.divisor;\n    }\n\n    // Buffer is optional\n    if (props.buffer !== undefined) {\n      this.buffer = props.buffer;\n    }\n\n    // The binding index (for binding e.g. Transform feedbacks and Uniform buffers)\n    // TODO - should this be part of accessor?\n    if (props.index !== undefined) {\n      if (typeof props.index === 'boolean') {\n        this.index = props.index ? 1 : 0;\n      } else {\n        this.index = props.index;\n      }\n    }\n\n    // DEPRECATED\n    if (props.instanced !== undefined) {\n      this.divisor = props.instanced ? 1 : 0;\n    }\n    if (props.isInstanced !== undefined) {\n      this.divisor = props.isInstanced ? 1 : 0;\n    }\n\n    return this;\n  }\n}\n\n// TEST EXPORTS\nexport {DEFAULT_ACCESSOR_VALUES};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}