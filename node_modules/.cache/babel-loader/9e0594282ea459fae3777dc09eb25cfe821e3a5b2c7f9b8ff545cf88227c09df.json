{"ast":null,"code":"import { extractGeometryInfo } from './extract-geometry-info';\nimport { geojsonToFlatGeojson } from './geojson-to-flat-geojson';\nimport { flatGeojsonToBinary } from './flat-geojson-to-binary';\nexport function geojsonToBinary(features) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    fixRingWinding: true\n  };\n  var geometryInfo = extractGeometryInfo(features);\n  var coordLength = geometryInfo.coordLength;\n  var fixRingWinding = options.fixRingWinding;\n  var flatFeatures = geojsonToFlatGeojson(features, {\n    coordLength: coordLength,\n    fixRingWinding: fixRingWinding\n  });\n  return flatGeojsonToBinary(flatFeatures, geometryInfo, {\n    numericPropKeys: options.numericPropKeys,\n    PositionDataType: options.PositionDataType || Float32Array\n  });\n}","map":{"version":3,"names":["extractGeometryInfo","geojsonToFlatGeojson","flatGeojsonToBinary","geojsonToBinary","features","options","arguments","length","undefined","fixRingWinding","geometryInfo","coordLength","flatFeatures","numericPropKeys","PositionDataType","Float32Array"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@loaders.gl/gis/src/lib/geojson-to-binary.ts"],"sourcesContent":["import type {Feature} from '@loaders.gl/schema';\nimport type {BinaryFeatures} from '@loaders.gl/schema';\n\nimport {extractGeometryInfo} from './extract-geometry-info';\nimport {geojsonToFlatGeojson} from './geojson-to-flat-geojson';\nimport {flatGeojsonToBinary} from './flat-geojson-to-binary';\n\n/**\n * Options for `geojsonToBinary`\n */\nexport type GeojsonToBinaryOptions = {\n  fixRingWinding: boolean;\n  numericPropKeys?: string[];\n  PositionDataType?: Float32ArrayConstructor | Float64ArrayConstructor;\n};\n\n/**\n * Convert GeoJSON features to flat binary arrays\n *\n * @param features\n * @param options\n * @returns features in binary format, grouped by geometry type\n */\nexport function geojsonToBinary(\n  features: Feature[],\n  options: GeojsonToBinaryOptions = {fixRingWinding: true}\n): BinaryFeatures {\n  const geometryInfo = extractGeometryInfo(features);\n  const coordLength = geometryInfo.coordLength;\n  const {fixRingWinding} = options;\n  const flatFeatures = geojsonToFlatGeojson(features, {coordLength, fixRingWinding});\n  return flatGeojsonToBinary(flatFeatures, geometryInfo, {\n    numericPropKeys: options.numericPropKeys,\n    PositionDataType: options.PositionDataType || Float32Array\n  });\n}\n"],"mappings":"AAGA,SAAQA,mBAAmB,QAAO,yBAAyB;AAC3D,SAAQC,oBAAoB,QAAO,2BAA2B;AAC9D,SAAQC,mBAAmB,QAAO,0BAA0B;AAkB5D,OAAO,SAASC,eAAeA,CAC7BC,QAAmB,EAEH;EAAA,IADhBC,OAA+B,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG;IAACG,cAAc,EAAE;EAAI,CAAC;EAExD,IAAMC,YAAY,GAAGV,mBAAmB,CAACI,QAAQ,CAAC;EAClD,IAAMO,WAAW,GAAGD,YAAY,CAACC,WAAW;EAC5C,IAAOF,cAAA,GAAkBJ,OAAO,CAAzBI,cAAA;EACP,IAAMG,YAAY,GAAGX,oBAAoB,CAACG,QAAQ,EAAE;IAACO,WAAW,EAAXA,WAAW;IAAEF,cAAA,EAAAA;EAAc,CAAC,CAAC;EAClF,OAAOP,mBAAmB,CAACU,YAAY,EAAEF,YAAY,EAAE;IACrDG,eAAe,EAAER,OAAO,CAACQ,eAAe;IACxCC,gBAAgB,EAAET,OAAO,CAACS,gBAAgB,IAAIC;EAChD,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}