{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createForOfIteratorHelper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Tile3DSubtreeLoader } from '../../tile-3d-subtree-loader';\nimport { load } from '@loaders.gl/core';\nimport { LOD_METRIC_TYPE, TILE_REFINEMENT, TILE_TYPE } from '@loaders.gl/tiles';\nimport { parseImplicitTiles, replaceContentUrlTemplate } from './helpers/parse-3d-implicit-tiles';\nfunction getTileType(tile) {\n  if (!tile.contentUrl) {\n    return TILE_TYPE.EMPTY;\n  }\n  var contentUrl = tile.contentUrl;\n  var fileExtension = contentUrl.split('.').pop();\n  switch (fileExtension) {\n    case 'pnts':\n      return TILE_TYPE.POINTCLOUD;\n    case 'i3dm':\n    case 'b3dm':\n    case 'glb':\n    case 'gltf':\n      return TILE_TYPE.SCENEGRAPH;\n    default:\n      return fileExtension;\n  }\n}\nfunction getRefine(refine) {\n  switch (refine) {\n    case 'REPLACE':\n    case 'replace':\n      return TILE_REFINEMENT.REPLACE;\n    case 'ADD':\n    case 'add':\n      return TILE_REFINEMENT.ADD;\n    default:\n      return refine;\n  }\n}\nfunction resolveUri(uri, basePath) {\n  var urlSchemeRegex = /^[a-z][0-9a-z+.-]*:/i;\n  if (urlSchemeRegex.test(basePath)) {\n    var url = new URL(uri, \"\".concat(basePath, \"/\"));\n    return decodeURI(url.toString());\n  } else if (uri.startsWith('/')) {\n    return uri;\n  }\n  return \"\".concat(basePath, \"/\").concat(uri);\n}\nexport function normalizeTileData(tile, options) {\n  if (!tile) {\n    return null;\n  }\n  if (tile.content) {\n    var contentUri = tile.content.uri || tile.content.url;\n    tile.contentUrl = resolveUri(contentUri, options.basePath);\n  }\n  tile.id = tile.contentUrl;\n  tile.lodMetricType = LOD_METRIC_TYPE.GEOMETRIC_ERROR;\n  tile.lodMetricValue = tile.geometricError;\n  tile.transformMatrix = tile.transform;\n  tile.type = getTileType(tile);\n  tile.refine = getRefine(tile.refine);\n  return tile;\n}\nexport function normalizeTileHeaders(_x, _x2) {\n  return _normalizeTileHeaders.apply(this, arguments);\n}\nfunction _normalizeTileHeaders() {\n  _normalizeTileHeaders = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(tileset, options) {\n    var basePath, root, rootImplicitTilingExtension, stack, tile, children, _iterator, _step, childHeader, childImplicitTilingExtension;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          basePath = tileset.basePath;\n          rootImplicitTilingExtension = getImplicitTilingExtensionData(tileset === null || tileset === void 0 ? void 0 : tileset.root);\n          if (!(rootImplicitTilingExtension && tileset.root)) {\n            _context.next = 8;\n            break;\n          }\n          _context.next = 5;\n          return normalizeImplicitTileHeaders(tileset.root, tileset, rootImplicitTilingExtension, options);\n        case 5:\n          root = _context.sent;\n          _context.next = 9;\n          break;\n        case 8:\n          root = normalizeTileData(tileset.root, tileset);\n        case 9:\n          stack = [];\n          stack.push(root);\n        case 11:\n          if (!(stack.length > 0)) {\n            _context.next = 40;\n            break;\n          }\n          tile = stack.pop() || {};\n          children = tile.children || [];\n          _iterator = _createForOfIteratorHelper(children);\n          _context.prev = 15;\n          _iterator.s();\n        case 17:\n          if ((_step = _iterator.n()).done) {\n            _context.next = 30;\n            break;\n          }\n          childHeader = _step.value;\n          childImplicitTilingExtension = getImplicitTilingExtensionData(childHeader);\n          if (!childImplicitTilingExtension) {\n            _context.next = 26;\n            break;\n          }\n          _context.next = 23;\n          return normalizeImplicitTileHeaders(childHeader, tileset, childImplicitTilingExtension, options);\n        case 23:\n          childHeader = _context.sent;\n          _context.next = 27;\n          break;\n        case 26:\n          normalizeTileData(childHeader, {\n            basePath: basePath\n          });\n        case 27:\n          stack.push(childHeader);\n        case 28:\n          _context.next = 17;\n          break;\n        case 30:\n          _context.next = 35;\n          break;\n        case 32:\n          _context.prev = 32;\n          _context.t0 = _context[\"catch\"](15);\n          _iterator.e(_context.t0);\n        case 35:\n          _context.prev = 35;\n          _iterator.f();\n          return _context.finish(35);\n        case 38:\n          _context.next = 11;\n          break;\n        case 40:\n          return _context.abrupt(\"return\", root);\n        case 41:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[15, 32, 35, 38]]);\n  }));\n  return _normalizeTileHeaders.apply(this, arguments);\n}\nexport function normalizeImplicitTileHeaders(_x3, _x4, _x5, _x6) {\n  return _normalizeImplicitTileHeaders.apply(this, arguments);\n}\nfunction _normalizeImplicitTileHeaders() {\n  _normalizeImplicitTileHeaders = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(tile, tileset, implicitTilingExtension, options) {\n    var _tileset$root, basePath, subdivisionScheme, maximumLevel, subtreeLevels, subtreesUriTemplate, replacedUrlTemplate, subtreeUrl, subtree, contentUrlTemplate, refine, rootLodMetricValue, rootBoundingVolume, implicitOptions;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          basePath = tileset.basePath;\n          subdivisionScheme = implicitTilingExtension.subdivisionScheme, maximumLevel = implicitTilingExtension.maximumLevel, subtreeLevels = implicitTilingExtension.subtreeLevels, subtreesUriTemplate = implicitTilingExtension.subtrees.uri;\n          replacedUrlTemplate = replaceContentUrlTemplate(subtreesUriTemplate, 0, 0, 0, 0);\n          subtreeUrl = resolveUri(replacedUrlTemplate, basePath);\n          _context2.next = 6;\n          return load(subtreeUrl, Tile3DSubtreeLoader, options);\n        case 6:\n          subtree = _context2.sent;\n          contentUrlTemplate = resolveUri(tile.content.uri, basePath);\n          refine = tileset === null || tileset === void 0 ? void 0 : (_tileset$root = tileset.root) === null || _tileset$root === void 0 ? void 0 : _tileset$root.refine;\n          rootLodMetricValue = tile.geometricError;\n          rootBoundingVolume = tile.boundingVolume;\n          implicitOptions = {\n            contentUrlTemplate: contentUrlTemplate,\n            subtreesUriTemplate: subtreesUriTemplate,\n            subdivisionScheme: subdivisionScheme,\n            subtreeLevels: subtreeLevels,\n            maximumLevel: maximumLevel,\n            refine: refine,\n            basePath: basePath,\n            lodMetricType: LOD_METRIC_TYPE.GEOMETRIC_ERROR,\n            rootLodMetricValue: rootLodMetricValue,\n            rootBoundingVolume: rootBoundingVolume,\n            getTileType: getTileType,\n            getRefine: getRefine\n          };\n          _context2.next = 14;\n          return normalizeImplicitTileData(tile, subtree, implicitOptions);\n        case 14:\n          return _context2.abrupt(\"return\", _context2.sent);\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _normalizeImplicitTileHeaders.apply(this, arguments);\n}\nexport function normalizeImplicitTileData(_x7, _x8, _x9) {\n  return _normalizeImplicitTileData.apply(this, arguments);\n}\nfunction _normalizeImplicitTileData() {\n  _normalizeImplicitTileData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(tile, rootSubtree, options) {\n    var _yield$parseImplicitT, children, contentUrl;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          if (tile) {\n            _context3.next = 2;\n            break;\n          }\n          return _context3.abrupt(\"return\", null);\n        case 2:\n          tile.lodMetricType = LOD_METRIC_TYPE.GEOMETRIC_ERROR;\n          tile.lodMetricValue = tile.geometricError;\n          tile.transformMatrix = tile.transform;\n          _context3.next = 7;\n          return parseImplicitTiles({\n            subtree: rootSubtree,\n            options: options\n          });\n        case 7:\n          _yield$parseImplicitT = _context3.sent;\n          children = _yield$parseImplicitT.children;\n          contentUrl = _yield$parseImplicitT.contentUrl;\n          if (contentUrl) {\n            tile.contentUrl = contentUrl;\n            tile.content = {\n              uri: contentUrl.replace(\"\".concat(options.basePath, \"/\"), '')\n            };\n          }\n          tile.refine = getRefine(tile.refine);\n          tile.type = getTileType(tile);\n          tile.children = children;\n          tile.id = tile.contentUrl;\n          return _context3.abrupt(\"return\", tile);\n        case 16:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return _normalizeImplicitTileData.apply(this, arguments);\n}\nfunction getImplicitTilingExtensionData(tile) {\n  var _tile$extensions;\n  return (tile === null || tile === void 0 ? void 0 : (_tile$extensions = tile.extensions) === null || _tile$extensions === void 0 ? void 0 : _tile$extensions['3DTILES_implicit_tiling']) || (tile === null || tile === void 0 ? void 0 : tile.implicitTiling);\n}","map":{"version":3,"names":["Tile3DSubtreeLoader","load","LOD_METRIC_TYPE","TILE_REFINEMENT","TILE_TYPE","parseImplicitTiles","replaceContentUrlTemplate","getTileType","tile","contentUrl","EMPTY","fileExtension","split","pop","POINTCLOUD","SCENEGRAPH","getRefine","refine","REPLACE","ADD","resolveUri","uri","basePath","urlSchemeRegex","test","url","URL","concat","decodeURI","toString","startsWith","normalizeTileData","options","content","contentUri","id","lodMetricType","GEOMETRIC_ERROR","lodMetricValue","geometricError","transformMatrix","transform","type","normalizeTileHeaders","_x","_x2","_normalizeTileHeaders","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","tileset","root","rootImplicitTilingExtension","stack","children","_iterator","_step","childHeader","childImplicitTilingExtension","wrap","_callee$","_context","prev","next","getImplicitTilingExtensionData","normalizeImplicitTileHeaders","sent","push","length","_createForOfIteratorHelper","s","n","done","value","t0","e","f","finish","abrupt","stop","_x3","_x4","_x5","_x6","_normalizeImplicitTileHeaders","_callee2","implicitTilingExtension","_tileset$root","subdivisionScheme","maximumLevel","subtreeLevels","subtreesUriTemplate","replacedUrlTemplate","subtreeUrl","subtree","contentUrlTemplate","rootLodMetricValue","rootBoundingVolume","implicitOptions","_callee2$","_context2","subtrees","boundingVolume","normalizeImplicitTileData","_x7","_x8","_x9","_normalizeImplicitTileData","_callee3","rootSubtree","_yield$parseImplicitT","_callee3$","_context3","replace","_tile$extensions","extensions","implicitTiling"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/geo-layers/node_modules/@loaders.gl/3d-tiles/src/lib/parsers/parse-3d-tile-header.ts"],"sourcesContent":["import type {LoaderOptions} from '@loaders.gl/loader-utils';\nimport {Tile3DSubtreeLoader} from '../../tile-3d-subtree-loader';\nimport {load} from '@loaders.gl/core';\nimport {Tileset3D, LOD_METRIC_TYPE, TILE_REFINEMENT, TILE_TYPE, Tile3D} from '@loaders.gl/tiles';\nimport {ImplicitTilingExtension, Subtree} from '../../types';\nimport {parseImplicitTiles, replaceContentUrlTemplate} from './helpers/parse-3d-implicit-tiles';\n\nfunction getTileType(tile) {\n  if (!tile.contentUrl) {\n    return TILE_TYPE.EMPTY;\n  }\n\n  const contentUrl = tile.contentUrl;\n  const fileExtension = contentUrl.split('.').pop();\n  switch (fileExtension) {\n    case 'pnts':\n      return TILE_TYPE.POINTCLOUD;\n    case 'i3dm':\n    case 'b3dm':\n    case 'glb':\n    case 'gltf':\n      return TILE_TYPE.SCENEGRAPH;\n    default:\n      return fileExtension;\n  }\n}\n\nfunction getRefine(refine) {\n  switch (refine) {\n    case 'REPLACE':\n    case 'replace':\n      return TILE_REFINEMENT.REPLACE;\n    case 'ADD':\n    case 'add':\n      return TILE_REFINEMENT.ADD;\n    default:\n      return refine;\n  }\n}\n\nfunction resolveUri(uri, basePath) {\n  // url scheme per RFC3986\n  const urlSchemeRegex = /^[a-z][0-9a-z+.-]*:/i;\n\n  if (urlSchemeRegex.test(basePath)) {\n    const url = new URL(uri, `${basePath}/`);\n    return decodeURI(url.toString());\n  } else if (uri.startsWith('/')) {\n    return uri;\n  }\n\n  return `${basePath}/${uri}`;\n}\n\nexport function normalizeTileData(tile, options) {\n  if (!tile) {\n    return null;\n  }\n  if (tile.content) {\n    const contentUri = tile.content.uri || tile.content.url;\n    tile.contentUrl = resolveUri(contentUri, options.basePath);\n  }\n  tile.id = tile.contentUrl;\n  tile.lodMetricType = LOD_METRIC_TYPE.GEOMETRIC_ERROR;\n  tile.lodMetricValue = tile.geometricError;\n  tile.transformMatrix = tile.transform;\n  tile.type = getTileType(tile);\n  tile.refine = getRefine(tile.refine);\n\n  return tile;\n}\n\n// normalize tile headers\nexport async function normalizeTileHeaders(\n  tileset: Tileset3D,\n  options: LoaderOptions\n): Promise<Tileset3D> {\n  const basePath = tileset.basePath;\n  let root: Tileset3D;\n\n  const rootImplicitTilingExtension = getImplicitTilingExtensionData(tileset?.root);\n  if (rootImplicitTilingExtension && tileset.root) {\n    root = await normalizeImplicitTileHeaders(\n      tileset.root,\n      tileset,\n      rootImplicitTilingExtension,\n      options\n    );\n  } else {\n    root = normalizeTileData(tileset.root, tileset);\n  }\n\n  const stack: any[] = [];\n  stack.push(root);\n\n  while (stack.length > 0) {\n    const tile = stack.pop() || {};\n    const children = tile.children || [];\n    for (let childHeader of children) {\n      const childImplicitTilingExtension = getImplicitTilingExtensionData(childHeader);\n      if (childImplicitTilingExtension) {\n        childHeader = await normalizeImplicitTileHeaders(\n          childHeader,\n          tileset,\n          childImplicitTilingExtension,\n          options\n        );\n      } else {\n        normalizeTileData(childHeader, {basePath});\n      }\n\n      stack.push(childHeader);\n    }\n  }\n\n  return root;\n}\n\n/**\n * Do normalisation of implicit tile headers\n * TODO Check if Tile3D class can be a return type here.\n * @param tileset\n */\nexport async function normalizeImplicitTileHeaders(\n  tile: Tile3D,\n  tileset: Tileset3D,\n  implicitTilingExtension: ImplicitTilingExtension,\n  options: LoaderOptions\n) {\n  const basePath = tileset.basePath;\n  const {\n    subdivisionScheme,\n    maximumLevel,\n    subtreeLevels,\n    subtrees: {uri: subtreesUriTemplate}\n  } = implicitTilingExtension;\n  const replacedUrlTemplate = replaceContentUrlTemplate(subtreesUriTemplate, 0, 0, 0, 0);\n  const subtreeUrl = resolveUri(replacedUrlTemplate, basePath);\n  const subtree = await load(subtreeUrl, Tile3DSubtreeLoader, options);\n  const contentUrlTemplate = resolveUri(tile.content.uri, basePath);\n  const refine = tileset?.root?.refine;\n  // @ts-ignore\n  const rootLodMetricValue = tile.geometricError;\n  const rootBoundingVolume = tile.boundingVolume;\n\n  const implicitOptions = {\n    contentUrlTemplate,\n    subtreesUriTemplate,\n    subdivisionScheme,\n    subtreeLevels,\n    maximumLevel,\n    refine,\n    basePath,\n    lodMetricType: LOD_METRIC_TYPE.GEOMETRIC_ERROR,\n    rootLodMetricValue,\n    rootBoundingVolume,\n    getTileType,\n    getRefine\n  };\n\n  return await normalizeImplicitTileData(tile, subtree, implicitOptions);\n}\n\n/**\n * Do implicit data normalisation to create hierarchical tile structure\n * @param tile\n * @param rootSubtree\n * @param options\n * @returns\n */\nexport async function normalizeImplicitTileData(tile, rootSubtree: Subtree, options: any) {\n  if (!tile) {\n    return null;\n  }\n\n  tile.lodMetricType = LOD_METRIC_TYPE.GEOMETRIC_ERROR;\n  tile.lodMetricValue = tile.geometricError;\n  tile.transformMatrix = tile.transform;\n\n  const {children, contentUrl} = await parseImplicitTiles({subtree: rootSubtree, options});\n\n  if (contentUrl) {\n    tile.contentUrl = contentUrl;\n    tile.content = {uri: contentUrl.replace(`${options.basePath}/`, '')};\n  }\n\n  tile.refine = getRefine(tile.refine);\n  tile.type = getTileType(tile);\n  tile.children = children;\n  tile.id = tile.contentUrl;\n\n  return tile;\n}\n\n/**\n * Implicit Tiling data can be in 3DTILES_implicit_tiling for 3DTiles v.Next or directly in implicitTiling object for 3DTiles v1.1.\n * Spec 3DTiles v.Next - https://github.com/CesiumGS/3d-tiles/tree/main/extensions/3DTILES_implicit_tiling\n * Spec 3DTiles v.1.1 - https://github.com/CesiumGS/3d-tiles/tree/draft-1.1/specification/ImplicitTiling\n * @param tile\n * @returns\n */\nfunction getImplicitTilingExtensionData(tile: Tile3D | null): ImplicitTilingExtension {\n  return tile?.extensions?.['3DTILES_implicit_tiling'] || tile?.implicitTiling;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}