{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { TILE3D_TYPE } from '../constants';\nimport { getMagicString } from './helpers/parse-utils';\nimport { parsePointCloud3DTile } from './parse-3d-tile-point-cloud';\nimport { parseBatchedModel3DTile } from './parse-3d-tile-batched-model';\nimport { parseInstancedModel3DTile } from './parse-3d-tile-instanced-model';\nimport { parseComposite3DTile } from './parse-3d-tile-composite';\nimport { parseGltf3DTile } from './parse-3d-tile-gltf';\nexport function parse3DTile(_x) {\n  return _parse3DTile.apply(this, arguments);\n}\nfunction _parse3DTile() {\n  _parse3DTile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(arrayBuffer) {\n    var byteOffset,\n      options,\n      context,\n      tile,\n      _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          byteOffset = _args.length > 1 && _args[1] !== undefined ? _args[1] : 0;\n          options = _args.length > 2 ? _args[2] : undefined;\n          context = _args.length > 3 ? _args[3] : undefined;\n          tile = _args.length > 4 && _args[4] !== undefined ? _args[4] : {};\n          tile.byteOffset = byteOffset;\n          tile.type = getMagicString(arrayBuffer, byteOffset);\n          _context.t0 = tile.type;\n          _context.next = _context.t0 === TILE3D_TYPE.COMPOSITE ? 9 : _context.t0 === TILE3D_TYPE.BATCHED_3D_MODEL ? 12 : _context.t0 === TILE3D_TYPE.GLTF ? 15 : _context.t0 === TILE3D_TYPE.INSTANCED_3D_MODEL ? 18 : _context.t0 === TILE3D_TYPE.POINT_CLOUD ? 21 : 24;\n          break;\n        case 9:\n          _context.next = 11;\n          return parseComposite3DTile(tile, arrayBuffer, byteOffset, options, context, parse3DTile);\n        case 11:\n          return _context.abrupt(\"return\", _context.sent);\n        case 12:\n          _context.next = 14;\n          return parseBatchedModel3DTile(tile, arrayBuffer, byteOffset, options, context);\n        case 14:\n          return _context.abrupt(\"return\", _context.sent);\n        case 15:\n          _context.next = 17;\n          return parseGltf3DTile(tile, arrayBuffer, options, context);\n        case 17:\n          return _context.abrupt(\"return\", _context.sent);\n        case 18:\n          _context.next = 20;\n          return parseInstancedModel3DTile(tile, arrayBuffer, byteOffset, options, context);\n        case 20:\n          return _context.abrupt(\"return\", _context.sent);\n        case 21:\n          _context.next = 23;\n          return parsePointCloud3DTile(tile, arrayBuffer, byteOffset, options, context);\n        case 23:\n          return _context.abrupt(\"return\", _context.sent);\n        case 24:\n          throw new Error(\"3DTileLoader: unknown type \".concat(tile.type));\n        case 25:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _parse3DTile.apply(this, arguments);\n}","map":{"version":3,"names":["TILE3D_TYPE","getMagicString","parsePointCloud3DTile","parseBatchedModel3DTile","parseInstancedModel3DTile","parseComposite3DTile","parseGltf3DTile","parse3DTile","_x","_parse3DTile","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","arrayBuffer","byteOffset","options","context","tile","_args","wrap","_callee$","_context","prev","next","length","undefined","type","t0","COMPOSITE","BATCHED_3D_MODEL","GLTF","INSTANCED_3D_MODEL","POINT_CLOUD","abrupt","sent","Error","concat","stop"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/geo-layers/node_modules/@loaders.gl/3d-tiles/src/lib/parsers/parse-3d-tile.ts"],"sourcesContent":["// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {TILE3D_TYPE} from '../constants';\nimport {getMagicString} from './helpers/parse-utils';\n\nimport {parsePointCloud3DTile} from './parse-3d-tile-point-cloud';\nimport {parseBatchedModel3DTile} from './parse-3d-tile-batched-model';\nimport {parseInstancedModel3DTile} from './parse-3d-tile-instanced-model';\nimport {parseComposite3DTile} from './parse-3d-tile-composite';\nimport {parseGltf3DTile} from './parse-3d-tile-gltf';\n\n// Extracts\nexport async function parse3DTile(arrayBuffer, byteOffset = 0, options, context, tile = {}) {\n  // @ts-expect-error\n  tile.byteOffset = byteOffset;\n  // @ts-expect-error\n  tile.type = getMagicString(arrayBuffer, byteOffset);\n\n  // @ts-expect-error\n  switch (tile.type) {\n    case TILE3D_TYPE.COMPOSITE:\n      // Note: We pass this function as argument so that embedded tiles can be parsed recursively\n      return await parseComposite3DTile(\n        tile,\n        arrayBuffer,\n        byteOffset,\n        options,\n        context,\n        parse3DTile\n      );\n\n    case TILE3D_TYPE.BATCHED_3D_MODEL:\n      return await parseBatchedModel3DTile(tile, arrayBuffer, byteOffset, options, context);\n\n    case TILE3D_TYPE.GLTF:\n      return await parseGltf3DTile(tile, arrayBuffer, options, context);\n\n    case TILE3D_TYPE.INSTANCED_3D_MODEL:\n      return await parseInstancedModel3DTile(tile, arrayBuffer, byteOffset, options, context);\n\n    case TILE3D_TYPE.POINT_CLOUD:\n      return await parsePointCloud3DTile(tile, arrayBuffer, byteOffset, options, context);\n\n    default:\n      // @ts-expect-error\n      throw new Error(`3DTileLoader: unknown type ${tile.type}`); // eslint-disable-line\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}