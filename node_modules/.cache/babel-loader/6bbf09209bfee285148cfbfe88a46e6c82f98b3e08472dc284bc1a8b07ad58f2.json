{"ast":null,"code":"/*\n * Copyright 2013-2016 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n\n'use strict';\n\nvar attempt = require('./attempt');\n\n/**\n * Create a promise whose work is started only when a handler is registered.\n *\n * The work function will be invoked at most once. Thrown values will result\n * in promise rejection.\n *\n * @param {Function} work function whose ouput is used to resolve the\n *   returned promise.\n * @returns {Promise} a lazy promise\n */\nfunction lazyPromise(work) {\n  var started, resolver, promise, then;\n  started = false;\n  promise = new Promise(function (resolve, reject) {\n    resolver = {\n      resolve: resolve,\n      reject: reject\n    };\n  });\n  then = promise.then;\n  promise.then = function () {\n    if (!started) {\n      started = true;\n      attempt(work).then(resolver.resolve, resolver.reject);\n    }\n    return then.apply(promise, arguments);\n  };\n  return promise;\n}\nmodule.exports = lazyPromise;","map":{"version":3,"names":["attempt","require","lazyPromise","work","started","resolver","promise","then","Promise","resolve","reject","apply","arguments","module","exports"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/rest/util/lazyPromise.js"],"sourcesContent":["/*\n * Copyright 2013-2016 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n\n'use strict';\n\nvar attempt = require('./attempt');\n\n/**\n * Create a promise whose work is started only when a handler is registered.\n *\n * The work function will be invoked at most once. Thrown values will result\n * in promise rejection.\n *\n * @param {Function} work function whose ouput is used to resolve the\n *   returned promise.\n * @returns {Promise} a lazy promise\n */\nfunction lazyPromise(work) {\n\tvar started, resolver, promise, then;\n\n\tstarted = false;\n\n\tpromise = new Promise(function (resolve, reject) {\n\t\tresolver = {\n\t\t\tresolve: resolve,\n\t\t\treject: reject\n\t\t};\n\t});\n\tthen = promise.then;\n\n\tpromise.then = function () {\n\t\tif (!started) {\n\t\t\tstarted = true;\n\t\t\tattempt(work).then(resolver.resolve, resolver.reject);\n\t\t}\n\t\treturn then.apply(promise, arguments);\n\t};\n\n\treturn promise;\n}\n\nmodule.exports = lazyPromise;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,OAAO,GAAGC,OAAO,CAAC,WAAW,CAAC;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,WAAWA,CAACC,IAAI,EAAE;EAC1B,IAAIC,OAAO,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,IAAI;EAEpCH,OAAO,GAAG,KAAK;EAEfE,OAAO,GAAG,IAAIE,OAAO,CAAC,UAAUC,OAAO,EAAEC,MAAM,EAAE;IAChDL,QAAQ,GAAG;MACVI,OAAO,EAAEA,OAAO;MAChBC,MAAM,EAAEA;IACT,CAAC;EACF,CAAC,CAAC;EACFH,IAAI,GAAGD,OAAO,CAACC,IAAI;EAEnBD,OAAO,CAACC,IAAI,GAAG,YAAY;IAC1B,IAAI,CAACH,OAAO,EAAE;MACbA,OAAO,GAAG,IAAI;MACdJ,OAAO,CAACG,IAAI,CAAC,CAACI,IAAI,CAACF,QAAQ,CAACI,OAAO,EAAEJ,QAAQ,CAACK,MAAM,CAAC;IACtD;IACA,OAAOH,IAAI,CAACI,KAAK,CAACL,OAAO,EAAEM,SAAS,CAAC;EACtC,CAAC;EAED,OAAON,OAAO;AACf;AAEAO,MAAM,CAACC,OAAO,GAAGZ,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}