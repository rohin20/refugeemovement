{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { getWorkerURL } from './get-worker-url';\nimport { getTransferList } from './get-transfer-list';\nvar count = 0;\nfunction defaultOnMessage(_ref) {\n  var data = _ref.data,\n    resolve = _ref.resolve;\n  resolve(data);\n}\nvar WorkerThread = function () {\n  function WorkerThread(_ref2) {\n    var source = _ref2.source,\n      _ref2$name = _ref2.name,\n      name = _ref2$name === void 0 ? \"web-worker-\".concat(count++) : _ref2$name,\n      onMessage = _ref2.onMessage;\n    _classCallCheck(this, WorkerThread);\n    var url = getWorkerURL(source, name);\n    this.worker = new Worker(url, {\n      name: name\n    });\n    this.name = name;\n    this.onMessage = onMessage || defaultOnMessage;\n  }\n  _createClass(WorkerThread, [{\n    key: \"process\",\n    value: function () {\n      var _process = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(data) {\n        var _this = this;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  _this.worker.onmessage = function (event) {\n                    _this.onMessage({\n                      worker: _this.worker,\n                      data: event.data,\n                      resolve: resolve,\n                      reject: reject\n                    });\n                  };\n                  _this.worker.onerror = function (error) {\n                    var message = \"\".concat(_this.name, \": WorkerThread.process() failed\");\n                    if (error.message) {\n                      message += \" \".concat(error.message, \" \").concat(error.filename, \":\").concat(error.lineno, \":\").concat(error.colno);\n                    }\n                    var betterError = new Error(message);\n                    console.error(error);\n                    reject(betterError);\n                  };\n                  var transferList = getTransferList(data);\n                  _this.worker.postMessage(data, transferList);\n                }));\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      function process(_x) {\n        return _process.apply(this, arguments);\n      }\n      return process;\n    }()\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.worker.terminate();\n      this.worker = null;\n    }\n  }]);\n  return WorkerThread;\n}();\nexport { WorkerThread as default };","map":{"version":3,"names":["getWorkerURL","getTransferList","count","defaultOnMessage","_ref","data","resolve","WorkerThread","_ref2","source","_ref2$name","name","concat","onMessage","_classCallCheck","url","worker","Worker","Promise","reject","_this","onmessage","event","onerror","error","message","filename","lineno","colno","betterError","Error","console","transferList","postMessage","terminate"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/kepler.gl/node_modules/@loaders.gl/loader-utils/src/lib/worker-utils/worker-thread.js"],"sourcesContent":["/* global Worker */\nimport {getWorkerURL} from './get-worker-url';\nimport {getTransferList} from './get-transfer-list';\n\nlet count = 0;\n\n// By default resolves to the first message the worker sends back\nfunction defaultOnMessage({data, resolve}) {\n  resolve(data);\n}\n\nexport default class WorkerThread {\n  constructor({source, name = `web-worker-${count++}`, onMessage}) {\n    const url = getWorkerURL(source, name);\n    this.worker = new Worker(url, {name});\n    this.name = name;\n    this.onMessage = onMessage || defaultOnMessage;\n  }\n\n  /**\n   * Process binary data in a worker\n   */\n  async process(data) {\n    return new Promise((resolve, reject) => {\n      this.worker.onmessage = event => {\n        this.onMessage({worker: this.worker, data: event.data, resolve, reject});\n      };\n      this.worker.onerror = error => {\n        // Note Error object does not have the expected fields if loading failed completely\n        // https://developer.mozilla.org/en-US/docs/Web/API/Worker#Event_handlers\n        // https://developer.mozilla.org/en-US/docs/Web/API/ErrorEvent\n        let message = `${this.name}: WorkerThread.process() failed`;\n        if (error.message) {\n          message += ` ${error.message} ${error.filename}:${error.lineno}:${error.colno}`;\n        }\n        const betterError = new Error(message);\n        console.error(error); // eslint-disable-line\n        reject(betterError);\n      };\n      const transferList = getTransferList(data);\n      this.worker.postMessage(data, transferList);\n    });\n  }\n\n  destroy() {\n    this.worker.terminate();\n    // @ts-ignore\n    this.worker = null;\n  }\n}\n"],"mappings":";;;;AACA,SAAQA,YAAR,QAA2B,kBAA3B;AACA,SAAQC,eAAR,QAA8B,qBAA9B;AAEA,IAAIC,KAAK,GAAG,CAAZ;AAGA,SAASC,gBAATA,CAAAC,IAAA,EAA2C;EAAA,IAAhBC,IAAgB,GAAAD,IAAA,CAAhBC,IAAgB;IAAVC,OAAU,GAAAF,IAAA,CAAVE,OAAU;EACzCA,OAAO,CAACD,IAAD,CAAP;AACD;IAEoBE,Y;EACnB,SAAAA,aAAAC,KAAA,EAAiE;IAAA,IAApDC,MAAoD,GAAAD,KAAA,CAApDC,MAAoD;MAAAC,UAAA,GAAAF,KAAA,CAA5CG,IAA4C;MAA5CA,IAA4C,GAAAD,UAAA,4BAAAE,MAAA,CAAvBV,KAAK,EAAkB,IAAAQ,UAAA;MAAZG,SAAY,GAAAL,KAAA,CAAZK,SAAY;IAAAC,eAAA,OAAAP,YAAA;IAC/D,IAAMQ,GAAG,GAAGf,YAAY,CAACS,MAAD,EAASE,IAAT,CAAxB;IACA,KAAKK,MAAL,GAAc,IAAIC,MAAJ,CAAWF,GAAX,EAAgB;MAACJ,IAAI,EAAJA;IAAD,CAAhB,CAAd;IACA,KAAKA,IAAL,GAAYA,IAAZ;IACA,KAAKE,SAAL,GAAiBA,SAAS,IAAIV,gBAA9B;EACD;;;;iFAKaE,I;;;;;;iDACL,IAAIa,OAAJ,CAAY,UAACZ,OAAD,EAAUa,MAAV,EAAqB;kBACtCC,KAAI,CAACJ,MAAL,CAAYK,SAAZ,GAAwB,UAAAC,KAAK,EAAI;oBAC/BF,KAAI,CAACP,SAAL,CAAe;sBAACG,MAAM,EAAEI,KAAI,CAACJ,MAAd;sBAAsBX,IAAI,EAAEiB,KAAK,CAACjB,IAAlC;sBAAwCC,OAAO,EAAPA,OAAxC;sBAAiDa,MAAM,EAANA;oBAAjD,CAAf;kBACD,CAFD;kBAGAC,KAAI,CAACJ,MAAL,CAAYO,OAAZ,GAAsB,UAAAC,KAAK,EAAI;oBAI7B,IAAIC,OAAO,MAAAb,MAAA,CAAMQ,KAAI,CAACT,IAAX,oCAAX;oBACA,IAAIa,KAAK,CAACC,OAAV,EAAmB;sBACjBA,OAAO,QAAAb,MAAA,CAAQY,KAAK,CAACC,OAAd,OAAAb,MAAA,CAAyBY,KAAK,CAACE,QAA/B,OAAAd,MAAA,CAA2CY,KAAK,CAACG,MAAjD,OAAAf,MAAA,CAA2DY,KAAK,CAACI,KAAjE,CAAP;oBACD;oBACD,IAAMC,WAAW,GAAG,IAAIC,KAAJ,CAAUL,OAAV,CAApB;oBACAM,OAAO,CAACP,KAAR,CAAcA,KAAd;oBACAL,MAAM,CAACU,WAAD,CAAN;kBACD,CAXD;kBAYA,IAAMG,YAAY,GAAG/B,eAAe,CAACI,IAAD,CAApC;kBACAe,KAAI,CAACJ,MAAL,CAAYiB,WAAZ,CAAwB5B,IAAxB,EAA8B2B,YAA9B;gBACD,CAlBM,C;;;;;;;;;;;;;;;8BAqBC;MACR,KAAKhB,MAAL,CAAYkB,SAAZ;MAEA,KAAKlB,MAAL,GAAc,IAAd;IACD;;;;SArCkBT,Y"},"metadata":{},"sourceType":"module","externalDependencies":[]}