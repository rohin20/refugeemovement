{"ast":null,"code":"import _objectSpread from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { MAGIC_ARRAY } from '../constants';\nimport { encode3DTileHeader, encode3DTileByteLength } from './helpers/encode-3d-tile-header';\nexport function encodeComposite3DTile(tile, dataView, byteOffset, options, encode3DTile) {\n  tile = _objectSpread({\n    magic: MAGIC_ARRAY.COMPOSITE,\n    tiles: []\n  }, tile);\n  var byteOffsetStart = byteOffset;\n  byteOffset += encode3DTileHeader(tile, dataView, byteOffset);\n  if (dataView) {\n    dataView.setUint32(byteOffset, tile.tiles.length, true);\n  }\n  byteOffset += 4;\n  for (var i = 0; i < tile.tiles.length; ++i) {\n    byteOffset += encode3DTile(tile.tiles[i], dataView, byteOffset, options);\n  }\n  encode3DTileByteLength(dataView, byteOffsetStart, byteOffset - byteOffsetStart);\n  return byteOffset;\n}","map":{"version":3,"names":["MAGIC_ARRAY","encode3DTileHeader","encode3DTileByteLength","encodeComposite3DTile","tile","dataView","byteOffset","options","encode3DTile","_objectSpread","magic","COMPOSITE","tiles","byteOffsetStart","setUint32","length","i"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/geo-layers/node_modules/@loaders.gl/3d-tiles/src/lib/encoders/encode-3d-tile-composite.ts"],"sourcesContent":["// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {MAGIC_ARRAY} from '../constants';\nimport {encode3DTileHeader, encode3DTileByteLength} from './helpers/encode-3d-tile-header';\n\nexport function encodeComposite3DTile(tile, dataView, byteOffset, options, encode3DTile) {\n  // Add default magic for this tile type\n  tile = {magic: MAGIC_ARRAY.COMPOSITE, tiles: [], ...tile};\n\n  const byteOffsetStart = byteOffset;\n\n  byteOffset += encode3DTileHeader(tile, dataView, byteOffset);\n\n  if (dataView) {\n    dataView.setUint32(byteOffset, tile.tiles.length, true); // tilesLength\n  }\n  byteOffset += 4;\n\n  for (let i = 0; i < tile.tiles.length; ++i) {\n    byteOffset += encode3DTile(tile.tiles[i], dataView, byteOffset, options);\n  }\n\n  // Go \"back\" and rewrite the tile's `byteLength` now that we know the value\n  encode3DTileByteLength(dataView, byteOffsetStart, byteOffset - byteOffsetStart);\n\n  return byteOffset;\n}\n"],"mappings":";AAGA,SAAQA,WAAW,QAAO,cAAc;AACxC,SAAQC,kBAAkB,EAAEC,sBAAsB,QAAO,iCAAiC;AAE1F,OAAO,SAASC,qBAAqBA,CAACC,IAAI,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,OAAO,EAAEC,YAAY,EAAE;EAEvFJ,IAAI,GAAAK,aAAA;IAAIC,KAAK,EAAEV,WAAW,CAACW,SAAS;IAAEC,KAAK,EAAE;EAAE,GAAKR,IAAA,CAAK;EAEzD,IAAMS,eAAe,GAAGP,UAAU;EAElCA,UAAU,IAAIL,kBAAkB,CAACG,IAAI,EAAEC,QAAQ,EAAEC,UAAU,CAAC;EAE5D,IAAID,QAAQ,EAAE;IACZA,QAAQ,CAACS,SAAS,CAACR,UAAU,EAAEF,IAAI,CAACQ,KAAK,CAACG,MAAM,EAAE,IAAI,CAAC;EACzD;EACAT,UAAU,IAAI,CAAC;EAEf,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,IAAI,CAACQ,KAAK,CAACG,MAAM,EAAE,EAAEC,CAAC,EAAE;IAC1CV,UAAU,IAAIE,YAAY,CAACJ,IAAI,CAACQ,KAAK,CAACI,CAAC,CAAC,EAAEX,QAAQ,EAAEC,UAAU,EAAEC,OAAO,CAAC;EAC1E;EAGAL,sBAAsB,CAACG,QAAQ,EAAEQ,eAAe,EAAEP,UAAU,GAAGO,eAAe,CAAC;EAE/E,OAAOP,UAAU;AACnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}