{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\nvar _templateObject;\nvar Wrapper = _styledComponents[\"default\"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  display: inline-block;\\n  color: \", \";\\n  font-size: 12px;\\n  text-decoration: underline;\\n\\n  :hover {\\n    cursor: pointer;\\n    font-weight: 500;\\n  }\\n\"])), function (props) {\n  return props.theme.textColorLT;\n});\nvar inputStyle = {\n  display: 'none'\n};\n\n/*\nInspired by https://github.com/okonet/react-dropzone/blob/master/src/index.js\n*/\n\n/** @type {typeof import('./upload-button').UploadButton} */\nvar UploadButton = function UploadButton(_ref) {\n  var onUpload = _ref.onUpload,\n    children = _ref.children;\n  var _fileInput = (0, _react.useRef)(null);\n  var _onClick = (0, _react.useCallback)(function () {\n    if (_fileInput.current) {\n      // @ts-ignore create ref with useRef<HTMLInputElement>\n      _fileInput.current.value = null; // @ts-ignore create ref with useRef<HTMLInputElement>\n\n      _fileInput.current.click();\n    }\n  }, [_fileInput]);\n  var _onChange = (0, _react.useCallback)(function (event) {\n    var files = event.target.files;\n    if (!files) {\n      return;\n    }\n    onUpload(files, event);\n  }, [onUpload]);\n  return /*#__PURE__*/_react[\"default\"].createElement(Wrapper, {\n    className: \"upload-button\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"input\", {\n    type: \"file\",\n    ref: _fileInput,\n    style: inputStyle,\n    onChange: _onChange,\n    className: \"upload-button-input\"\n  }), /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n    className: \"file-upload__upload-button-span\",\n    onClick: _onClick\n  }, children));\n};\nvar _default = UploadButton;\nexports[\"default\"] = _default;","map":{"version":3,"names":["_interopRequireWildcard","require","value","exports","_taggedTemplateLiteral2","_interopRequireDefault","_react","Wrapper","_styledComponents","div","_templateObject","props","theme","textColorLT","inputStyle","display","UploadButton","_ref","children","_onClick","useCallback","_fileInput","current","click","_onChange","event","files","target"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/components/src/common/file-uploader/upload-button.tsx"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {useCallback, useRef} from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: inline-block;\n  color: ${props => props.theme.textColorLT};\n  font-size: 12px;\n  text-decoration: underline;\n\n  :hover {\n    cursor: pointer;\n    font-weight: 500;\n  }\n`;\nconst inputStyle = {display: 'none'};\n\ninterface UploadButtonProps {\n  onUpload: (files: FileList, event: any) => void;\n}\n\n/*\nInspired by https://github.com/okonet/react-dropzone/blob/master/src/index.js\n*/\n/** @type {typeof import('./upload-button').UploadButton} */\nconst UploadButton: React.FC<UploadButtonProps> = ({onUpload, children}) => {\n  const _fileInput = useRef(null);\n\n  const _onClick = useCallback(() => {\n    if (_fileInput.current) {\n      // @ts-ignore create ref with useRef<HTMLInputElement>\n      _fileInput.current.value = null;\n      // @ts-ignore create ref with useRef<HTMLInputElement>\n      _fileInput.current.click();\n    }\n  }, [_fileInput]);\n\n  const _onChange = useCallback(\n    event => {\n      const {\n        target: {files}\n      } = event;\n\n      if (!files) {\n        return;\n      }\n\n      onUpload(files, event);\n    },\n    [onUpload]\n  );\n\n  return (\n    <Wrapper className=\"upload-button\">\n      <input\n        type=\"file\"\n        ref={_fileInput}\n        style={inputStyle}\n        onChange={_onChange}\n        className=\"upload-button-input\"\n      />\n      <span className=\"file-upload__upload-button-span\" onClick={_onClick}>\n        {children}\n      </span>\n    </Wrapper>\n  );\n};\n\nexport default UploadButton;\n"],"mappings":";;;;;;;;;;;;;AAoBA;;AACA;;;;;AAIgB,YAAI;;;AASA,IAAAA,uBAAS,GAAAC,OAAA;;EAM7BC,KAAA;AACA;AACAC,OAAA;AACA,IAAAC,uBAAA,GAAAC,sBAAA,CAAAJ,OAAA;AAC4E,IAAAK,MAAxB,GAAAN,uBAAwB,CAAAC,OAAA;;;AAIxE,IAAAM,OAAI,GAAAC,iBAAoB,YAAAC,GAAA,CAAAC,eAAA,KAAAA,eAAA,OAAAN,uBAAA,8LAAAO,KAAA;EACtB,OAAAA,KAAA,CAAAC,KAAA,CAAAC,WAAA;AACA;AAEA,IAAAC,UAAA,GAAW;EACZC,OAAA;AACF;;AAED;AACW;;;AAML;AACD,IAAAC,YAAA,YAAAA,aAAAC,IAAA;;IAEDC,QAAS,GAAAD,IAAO,CAAAC,QAAhB;;EAMO,IAAAC,QAAS,GAAC,IAAAb,MAAA,CAAAc,WAAA;IAAnB,IAAAC,UACE,CAAAC,OAAA;MACE;MACAD,UAAK,CAAAC,OAFP,CAAApB,KAAA;;MAIEmB,UAAU,CAAAC,OAJZ,CAAAC,KAAA;IAKE;EALF,GADF,CAAAF,UAAA;EAQoD,IAAAG,SAAS,OAAAlB,MAAA,CAAAc,WAAA,YAAAK,KAAA;IAA3D,IACGC,KADH,GATJD,KAAA,CAAAE,MAAA,CAAAD,KAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}