{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar _constants = require(\"@kepler.gl/constants\");\nvar _icons = require(\"../common/icons\");\nvar _styledComponents = require(\"../common/styled-components\");\nvar _toolbarItem = _interopRequireDefault(require(\"../common/toolbar-item\"));\nvar _mapControlTooltip = _interopRequireDefault(require(\"./map-control-tooltip\"));\nvar _mapControlToolbar = _interopRequireDefault(require(\"./map-control-toolbar\"));\nMapDrawPanelFactory.deps = [_mapControlTooltip[\"default\"], _mapControlToolbar[\"default\"]];\nfunction MapDrawPanelFactory(MapControlTooltip, MapControlToolbar) {\n  var defaultActionIcons = {\n    visible: _icons.EyeSeen,\n    hidden: _icons.EyeUnseen,\n    polygon: _icons.DrawPolygon,\n    cursor: _icons.CursorClick,\n    innerPolygon: _icons.Polygon,\n    rectangle: _icons.Rectangle\n  };\n  /** @type {import('./map-draw-panel').MapDrawPanelComponent} */\n\n  var MapDrawPanel = /*#__PURE__*/_react[\"default\"].memo(function (_ref) {\n    var _mapControls$mapDraw, _mapControls$mapDraw2;\n    var editor = _ref.editor,\n      mapControls = _ref.mapControls,\n      onToggleMapControl = _ref.onToggleMapControl,\n      onSetEditorMode = _ref.onSetEditorMode,\n      onToggleEditorVisibility = _ref.onToggleEditorVisibility,\n      _ref$actionIcons = _ref.actionIcons,\n      actionIcons = _ref$actionIcons === void 0 ? defaultActionIcons : _ref$actionIcons;\n    var isActive = mapControls === null || mapControls === void 0 ? void 0 : (_mapControls$mapDraw = mapControls.mapDraw) === null || _mapControls$mapDraw === void 0 ? void 0 : _mapControls$mapDraw.active;\n    var onToggleMenuPanel = (0, _react.useCallback)(function () {\n      return onToggleMapControl('mapDraw');\n    }, [onToggleMapControl]);\n    if (!(mapControls !== null && mapControls !== void 0 && (_mapControls$mapDraw2 = mapControls.mapDraw) !== null && _mapControls$mapDraw2 !== void 0 && _mapControls$mapDraw2.show)) {\n      return null;\n    }\n    return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n      className: \"map-draw-controls\",\n      style: {\n        position: 'relative'\n      }\n    }, isActive ? /*#__PURE__*/_react[\"default\"].createElement(MapControlToolbar, {\n      show: isActive\n    }, /*#__PURE__*/_react[\"default\"].createElement(_toolbarItem[\"default\"], {\n      className: \"edit-feature\",\n      onClick: function onClick() {\n        return onSetEditorMode(_constants.EDITOR_MODES.EDIT);\n      },\n      label: \"toolbar.select\",\n      icon: actionIcons.cursor,\n      active: editor.mode === _constants.EDITOR_MODES.EDIT\n    }), /*#__PURE__*/_react[\"default\"].createElement(_toolbarItem[\"default\"], {\n      className: \"draw-feature\",\n      onClick: function onClick() {\n        return onSetEditorMode(_constants.EDITOR_MODES.DRAW_POLYGON);\n      },\n      label: \"toolbar.polygon\",\n      icon: actionIcons.innerPolygon,\n      active: editor.mode === _constants.EDITOR_MODES.DRAW_POLYGON\n    }), /*#__PURE__*/_react[\"default\"].createElement(_toolbarItem[\"default\"], {\n      className: \"draw-rectangle\",\n      onClick: function onClick() {\n        return onSetEditorMode(_constants.EDITOR_MODES.DRAW_RECTANGLE);\n      },\n      label: \"toolbar.rectangle\",\n      icon: actionIcons.rectangle,\n      active: editor.mode === _constants.EDITOR_MODES.DRAW_RECTANGLE\n    }), /*#__PURE__*/_react[\"default\"].createElement(_toolbarItem[\"default\"], {\n      className: \"toggle-features\",\n      onClick: onToggleEditorVisibility,\n      label: editor.visible ? 'toolbar.hide' : 'toolbar.show',\n      icon: editor.visible ? actionIcons.visible : actionIcons.hidden\n    })) : null, /*#__PURE__*/_react[\"default\"].createElement(MapControlTooltip, {\n      id: \"map-draw\",\n      message: \"tooltip.DrawOnMap\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(_styledComponents.MapControlButton, {\n      className: (0, _classnames[\"default\"])('map-control-button', 'map-draw', {\n        isActive: isActive\n      }),\n      onClick: function onClick(e) {\n        e.preventDefault();\n        onToggleMenuPanel();\n      },\n      active: isActive\n    }, /*#__PURE__*/_react[\"default\"].createElement(actionIcons.polygon, {\n      height: \"22px\"\n    }))));\n  });\n  MapDrawPanel.displayName = 'MapDrawPanel';\n  return MapDrawPanel;\n}\nvar _default = MapDrawPanelFactory;\nexports[\"default\"] = _default;","map":{"version":3,"names":["value","exports","_react","_interopRequireWildcard","require","_classnames","_interopRequireDefault","_constants","_icons","_styledComponents","_toolbarItem","_mapControlTooltip","_mapControlToolbar","MapDrawPanelFactory","deps","defaultActionIcons","visible","EyeSeen","hidden","EyeUnseen","polygon","DrawPolygon","cursor","CursorClick","innerPolygon","Polygon","rectangle","Rectangle","_mapControls$mapDraw","_mapControls$mapDraw2","mapControls","_ref","onToggleMapControl","onSetEditorMode","onToggleEditorVisibility","_ref$actionIcons","actionIcons","isActive","mapDraw","active","onToggleMenuPanel","useCallback","className","style","position","createElement","MapControlToolbar","show","onClick","EDITOR_MODES","EDIT","label","icon","editor","mode","DRAW_POLYGON","DRAW_RECTANGLE","MapControlTooltip","id","message","MapControlButton","e","preventDefault","height","MapDrawPanel","_default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/components/src/map/map-draw-panel.tsx"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {useCallback} from 'react';\nimport classnames from 'classnames';\n\nimport {EDITOR_MODES} from '@kepler.gl/constants';\nimport {CursorClick, DrawPolygon, EyeSeen, EyeUnseen, Polygon, Rectangle} from '../common/icons';\nimport {MapControlButton} from '../common/styled-components';\nimport ToolbarItem from '../common/toolbar-item';\nimport MapControlTooltipFactory from './map-control-tooltip';\nimport MapControlToolbarFactory from './map-control-toolbar';\nimport {Editor, MapControls} from '@kepler.gl/types';\nimport {BaseProps} from '../common/icons';\n\nMapDrawPanelFactory.deps = [MapControlTooltipFactory, MapControlToolbarFactory];\n\nexport type MapDrawPanelProps = {\n  editor: Editor;\n  mapControls: MapControls;\n  onToggleMapControl: (control: string) => void;\n  onSetEditorMode: (mode: string) => void;\n  onToggleEditorVisibility: () => void;\n  actionIcons: {[id: string]: React.ComponentType<Partial<BaseProps>>};\n};\n\nfunction MapDrawPanelFactory(MapControlTooltip, MapControlToolbar) {\n  const defaultActionIcons = {\n    visible: EyeSeen,\n    hidden: EyeUnseen,\n    polygon: DrawPolygon,\n    cursor: CursorClick,\n    innerPolygon: Polygon,\n    rectangle: Rectangle\n  };\n  /** @type {import('./map-draw-panel').MapDrawPanelComponent} */\n  const MapDrawPanel: React.FC<MapDrawPanelProps> = React.memo(\n    ({\n      editor,\n      mapControls,\n      onToggleMapControl,\n      onSetEditorMode,\n      onToggleEditorVisibility,\n      actionIcons = defaultActionIcons\n    }) => {\n      const isActive = mapControls?.mapDraw?.active;\n      const onToggleMenuPanel = useCallback(() => onToggleMapControl('mapDraw'), [\n        onToggleMapControl\n      ]);\n      if (!mapControls?.mapDraw?.show) {\n        return null;\n      }\n      return (\n        <div className=\"map-draw-controls\" style={{position: 'relative'}}>\n          {isActive ? (\n            <MapControlToolbar show={isActive}>\n              <ToolbarItem\n                className=\"edit-feature\"\n                onClick={() => onSetEditorMode(EDITOR_MODES.EDIT)}\n                label=\"toolbar.select\"\n                icon={actionIcons.cursor}\n                active={editor.mode === EDITOR_MODES.EDIT}\n              />\n              <ToolbarItem\n                className=\"draw-feature\"\n                onClick={() => onSetEditorMode(EDITOR_MODES.DRAW_POLYGON)}\n                label=\"toolbar.polygon\"\n                icon={actionIcons.innerPolygon}\n                active={editor.mode === EDITOR_MODES.DRAW_POLYGON}\n              />\n              <ToolbarItem\n                className=\"draw-rectangle\"\n                onClick={() => onSetEditorMode(EDITOR_MODES.DRAW_RECTANGLE)}\n                label=\"toolbar.rectangle\"\n                icon={actionIcons.rectangle}\n                active={editor.mode === EDITOR_MODES.DRAW_RECTANGLE}\n              />\n              <ToolbarItem\n                className=\"toggle-features\"\n                onClick={onToggleEditorVisibility}\n                label={editor.visible ? 'toolbar.hide' : 'toolbar.show'}\n                icon={editor.visible ? actionIcons.visible : actionIcons.hidden}\n              />\n            </MapControlToolbar>\n          ) : null}\n          <MapControlTooltip id=\"map-draw\" message=\"tooltip.DrawOnMap\">\n            <MapControlButton\n              className={classnames('map-control-button', 'map-draw', {isActive})}\n              onClick={e => {\n                e.preventDefault();\n                onToggleMenuPanel();\n              }}\n              active={isActive}\n            >\n              <actionIcons.polygon height=\"22px\" />\n            </MapControlButton>\n          </MapControlTooltip>\n        </div>\n      );\n    }\n  );\n\n  MapDrawPanel.displayName = 'MapDrawPanel';\n  return MapDrawPanel;\n}\n\nexport default MapDrawPanelFactory;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}