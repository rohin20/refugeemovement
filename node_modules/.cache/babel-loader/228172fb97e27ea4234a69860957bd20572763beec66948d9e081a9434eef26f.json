{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.editShader = editShader;\nvar _window = require(\"global/window\"); /*\n                                        * Amendment to default layer vertex shader\n                                        * @param {string} vs\n                                        * @param {string} type\n                                        * @param {string} originalText\n                                        * @param {string} testToReplace\n                                        * @return {string} output shader\n                                        *\n                                        */\nfunction editShader(vs, type, originalText, testToReplace) {\n  if (!vs.includes(originalText)) {\n    // Here we call Console.error when we fail to edit deck.gl shader\n    // This should be caught by layer test\n    _window.console.error(\"Cannot edit \".concat(type, \" layer shader\"));\n    return vs;\n  }\n  return vs.replace(originalText, testToReplace);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","editShader","_window","require","vs","type","originalText","testToReplace","includes","console","error","concat","replace"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/deckgl-layers/src/layer-utils/shader-utils.ts"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {console as Console} from 'global/window';\n\n/*\n * Amendment to default layer vertex shader\n * @param {string} vs\n * @param {string} type\n * @param {string} originalText\n * @param {string} testToReplace\n * @return {string} output shader\n *\n */\nexport function editShader(vs: string, type: string, originalText: string, testToReplace: string) {\n  if (!vs.includes(originalText)) {\n    // Here we call Console.error when we fail to edit deck.gl shader\n    // This should be caught by layer test\n    Console.error(`Cannot edit ${type} layer shader`);\n    return vs;\n  }\n\n  return vs.replace(originalText, testToReplace);\n}\n"],"mappings":";;;;;;;AAoBA;;AApBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEAA,MAAA,CAAAC,cAAA,CAAAC,OAAA;EACAC,KAAA;AACA;AACAD,OAAA,CAAAE,UAAA,GAAAA,UAAA;AAEA,IAAAC,OAAA,GAAAC,OAAA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAAF,WAAAG,EAAA,EAAAC,IAAA,EAAAC,YAAA,EAAAC,aAAA;EACA,KAAAH,EAAA,CAAAI,QAAA,CAAAF,YAAA;IACO;IACL;IACEJ,OAAA,CAAAO,OAAA,CAAAC,KAAA,gBAAAC,MAAA,CAAAN,IAAA;IAEA,OAAAD,EAAA;;EAED,OAAAA,EAAA,CAAAQ,OAAA,CAAAN,YAAA,EAAAC,aAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}