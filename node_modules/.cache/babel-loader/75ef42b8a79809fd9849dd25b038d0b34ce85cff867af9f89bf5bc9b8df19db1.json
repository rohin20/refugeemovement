{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _itemSelector = _interopRequireDefault(require(\"../common/item-selector/item-selector\"));\nvar _constants = require(\"@kepler.gl/constants\");\nvar _components = require(\"./components\");\nvar layerFilter = function layerFilter(layer) {\n  return layer.type === _constants.LAYER_TYPES.point;\n};\nvar isAlreadySelected = function isAlreadySelected(selectedLayers, layerId) {\n  return selectedLayers.findIndex(function (l) {\n    return l.id === layerId;\n  }) === -1;\n};\nfunction PolygonFilterFactory() {\n  var PolygonFilter = /*#__PURE__*/_react[\"default\"].memo(function (_ref) {\n    var filter = _ref.filter,\n      layers = _ref.layers,\n      setLayers = _ref.setLayers;\n    var setNewLayers = (0, _react.useCallback)(function (newLayers) {\n      return setLayers(newLayers.map(function (l) {\n        return l.id;\n      }));\n    }, [setLayers]);\n    var selectedLayers = (0, _react.useMemo)(function () {\n      return layers.filter(function (l) {\n        var _filter$layerId;\n        return (_filter$layerId = filter.layerId) === null || _filter$layerId === void 0 ? void 0 : _filter$layerId.includes(l.id);\n      });\n    }, [filter, layers]);\n    var availableLayers = (0, _react.useMemo)(function () {\n      // remove already added layers and filter out non point layers\n      return layers.filter(function (layer) {\n        return layerFilter(layer) && isAlreadySelected(selectedLayers, layer.id);\n      });\n    }, [layers, selectedLayers]);\n    return /*#__PURE__*/_react[\"default\"].createElement(\"div\", null, /*#__PURE__*/_react[\"default\"].createElement(_components.StyledFilterPanel, {\n      htmlFor: \"filter-\".concat(filter.id)\n    }, \"Layers:\"), /*#__PURE__*/_react[\"default\"].createElement(_itemSelector[\"default\"], {\n      options: availableLayers,\n      selectedItems: selectedLayers,\n      onChange: setNewLayers,\n      searchable: false,\n      multiSelect: true,\n      getOptionValue: function getOptionValue(l) {\n        return l.id;\n      },\n      displayOption: function displayOption(l) {\n        return l.config.label;\n      }\n    }));\n  });\n  PolygonFilter.displayName = 'PolygonFilter';\n  return PolygonFilter;\n}\nvar _default = PolygonFilterFactory;\nexports[\"default\"] = _default;","map":{"version":3,"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","_react","_itemSelector","_constants","_components","layerFilter","layer","type","LAYER_TYPES","point","selectedLayers","findIndex","l","id","layerId","PolygonFilter","memo","_ref","filter","layers","setLayers","setNewLayers","useCallback","newLayers","map","useMemo","_filter$layerId","availableLayers","isAlreadySelected","createElement","StyledFilterPanel","htmlFor","concat","options","selectedItems","onChange","searchable","multiSelect","getOptionValue","displayOption","config","label","_default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/components/src/filters/polygon-filter.tsx"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {useMemo, useCallback} from 'react';\nimport ItemSelector from '../common/item-selector/item-selector';\nimport {Layer} from '@kepler.gl/layers';\nimport {LAYER_TYPES} from '@kepler.gl/constants';\nimport {PolygonFilterProps} from './types';\nimport {StyledFilterPanel} from './components';\n\nconst layerFilter = (layer: Layer) => layer.type === LAYER_TYPES.point;\nconst isAlreadySelected = (selectedLayers: Layer[], layerId: string) =>\n  selectedLayers.findIndex(l => l.id === layerId) === -1;\n\nfunction PolygonFilterFactory() {\n  const PolygonFilter: React.FC<PolygonFilterProps> = React.memo(({filter, layers, setLayers}) => {\n    const setNewLayers = useCallback(\n      newLayers => {\n        return setLayers(newLayers.map((l: Layer) => l.id));\n      },\n      [setLayers]\n    );\n\n    const selectedLayers = useMemo(() => layers.filter(l => filter.layerId?.includes(l.id)), [\n      filter,\n      layers\n    ]);\n\n    const availableLayers = useMemo(() => {\n      // remove already added layers and filter out non point layers\n      return layers.filter(\n        layer => layerFilter(layer) && isAlreadySelected(selectedLayers, layer.id)\n      );\n    }, [layers, selectedLayers]);\n\n    return (\n      <div>\n        <StyledFilterPanel htmlFor={`filter-${filter.id}`}>Layers:</StyledFilterPanel>\n        <ItemSelector\n          options={availableLayers}\n          selectedItems={selectedLayers}\n          onChange={setNewLayers}\n          searchable={false}\n          multiSelect={true}\n          getOptionValue={(l: Layer) => l.id}\n          displayOption={(l: Layer) => l.config.label}\n        />\n      </div>\n    );\n  });\n\n  PolygonFilter.displayName = 'PolygonFilter';\n\n  return PolygonFilter;\n}\n\nexport default PolygonFilterFactory;\n"],"mappings":";;;;;;;;;;;AAoBA;;AACA;;AAEA;;AAEA;;;AAxBA;;AAEA,IAAAA,sBAAA,GAAAC,OAAA;AAEA,IAAAC,uBAAA,GAAAD,OAAA;AAEAE,MAAA,CAAAC,cAAA,CAAAC,OAAA;EACAC,KAAA;AACA;AACAD,OAAA;AAEA,IAAAE,MAAA,GAAAL,uBAAA,CAAAD,OAAA;AAEA,IAAAO,aAAA,GAAAR,sBAAA,CAAAC,OAAA;AAEA,IAAAQ,UAAA,GAAAR,OAAA;AAEA,IAAAS,WAAA,GAAAT,OAAA;AAAA,IAAAU,WAAA,YAAAA,YAAAC,KAAA;EASA,OAAMA,KAAA,CAAWC,IAAG,KAAAJ,UAAd,CAAAK,WAAc,CAAAC,KAAA;AAAA;;EACpB,OAAMC,cAAiB,CAAGC,SAApB,WAAAC,CAAA;IAAoB,OACxBA,CAAA,CAAAC,EAAA,KAAAC,OAAe;EAAW,SAAI;AAAJ;;EAE5B,IAAAC,aAAS,gBAAuBd,MAAA,YAAAe,IAAA,WAAAC,IAAA;IAC9B,IAAMC,MAAA,GAAAD,IAA2C,CAAAC,MAAA;MAAgBC,MAA+B,GAAAF,IAAA,CAA/BE,MAA+B;MAAvBC,SAAuB,GAAAH,IAAvB,CAAAG,SAAuB;IAAA,IAAfC,YAAe,KAAf,EAAApB,MAAA,CAAeqB,WAAA,YAAAC,SAAA;MAC9F,OAAMH,SAAY,CAAGG,SAAA,CAAAC,GAAA,WACnBZ,CAAA;QACE,OAAOA,CAAA,CAAAC,EAAA;MAAwB;IAAA,GAAd,CAADO,SAAhB;IACD,IACAV,cAJH,OAAAT,MAAA,CAAAwB,OAAA;MAOA,OAAMN,MAAA,CAAAD,MAAiB,WAAAN,CAAA;QAAQ,IAAAc,eAAoB;;MAAC;IAAA,GAAf,CAANR,MAAA,EAAAC,MAAA;IAAA,IAC7BQ,eADqB,GAAvB,IAAA1B,MAAA,CAAAwB,OAAA;MAKA;MACE,OAAAN,MAAA,CAAAD,MAAA,WAAAZ,KAAA;QACA,OAAOD,WAAA,CACLC,KAAA,KAAAsB,iBAAK,CAAAlB,cAAA,EAAAJ,KAAA,CAAAO,EAAA;MAAA;IAAA,GADA,CAAPM,MAAA,EAAAT,cAAA;IAGD,OAAG,aAAQT,MAAT,CALqB,SAAxB,EAAA4B,aAAA,2BAAA5B,MAAA,YAAA4B,aAAA,CAAAzB,WAAA,CAAA0B,iBAAA;MAOAC,OAAA,WACE,CAAAC,MAAA,CAAAd,MAAA,CAAAL,EAAA;IACqB,YAAO,gBAAYZ,MAAM,CAAC,SAAnB,EAAA4B,aAAA,CAAA3B,aAAA;MAA1B+B,OAAA,EAAAN,eADF;MAGIO,aAAS,EAAAxB,cADX;MAEEyB,QAAA,EAAAd,YAAe;MACfe,UAAU;MACVC,WAAU,EAAE,IAJd;MAKEC,cAAa,WALfA,eAAA1B,CAAA;QAME,OAAAA,CAAA,CAAAC,EAAA;MAAgB;MAAA0B,aANlB,WAAAA,cAAA3B,CAAA;QAOE,OAAAA,CAAA,CAAA4B,MAAe,CAAAC,KAAA;MAAA;IAAA;EAPjB;;EAaN,OAAA1B,aAAc;AAEd;;iBAGa,IAAA2B,QAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}