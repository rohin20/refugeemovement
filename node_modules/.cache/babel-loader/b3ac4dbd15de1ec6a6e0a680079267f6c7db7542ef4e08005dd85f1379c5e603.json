{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = ModalContainerFactory;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _styledComponents = require(\"styled-components\");\nvar _reselect = require(\"reselect\");\nvar _lodash = _interopRequireDefault(require(\"lodash.get\"));\nvar _document = _interopRequireDefault(require(\"global/document\"));\nvar _modalDialog = _interopRequireDefault(require(\"./modals/modal-dialog\"));\nvar _utils = require(\"@kepler.gl/utils\");\nvar _reducers = require(\"@kepler.gl/reducers\");\nvar _deleteDataModal = _interopRequireDefault(require(\"./modals/delete-data-modal\"));\nvar _overwriteMapModal = _interopRequireDefault(require(\"./modals/overwrite-map-modal\"));\nvar _dataTableModal = _interopRequireDefault(require(\"./modals/data-table-modal\"));\nvar _loadDataModal = _interopRequireDefault(require(\"./modals/load-data-modal\"));\nvar _exportImageModal = _interopRequireDefault(require(\"./modals/export-image-modal\"));\nvar _exportDataModal = _interopRequireDefault(require(\"./modals/export-data-modal\"));\nvar _exportMapModal = _interopRequireDefault(require(\"./modals/export-map-modal/export-map-modal\"));\nvar _addMapStyleModal = _interopRequireDefault(require(\"./modals/add-map-style-modal\"));\nvar _saveMapModal = _interopRequireDefault(require(\"./modals/save-map-modal\"));\nvar _shareMapModal = _interopRequireDefault(require(\"./modals/share-map-modal\"));\nvar _styles = require(\"@kepler.gl/styles\");\nvar _constants = require(\"@kepler.gl/constants\");\nvar _reactDom = require(\"react-dom\");\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8;\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar DataTableModalStyle = (0, _styledComponents.css)(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  top: 70px;\\n  padding: 32px 0 0 0;\\n  width: 90vw;\\n  max-width: 90vw;\\n\\n  \", \" \", \";\\n\"])), _styles.media.portable(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n    padding: 0;\\n  \"]))), _styles.media.palm(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n    padding: 0;\\n    margin: 0 auto;\\n  \"]))));\nvar smallModalCss = (0, _styledComponents.css)(_templateObject4 || (_templateObject4 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  width: 40%;\\n  padding: 40px 40px 32px 40px;\\n\"])));\nvar LoadDataModalStyle = (0, _styledComponents.css)(_templateObject5 || (_templateObject5 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  top: 60px;\\n\"])));\nvar DefaultStyle = (0, _styledComponents.css)(_templateObject6 || (_templateObject6 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  max-width: 960px;\\n\"])));\nModalContainerFactory.deps = [_deleteDataModal[\"default\"], _overwriteMapModal[\"default\"], _dataTableModal[\"default\"], _loadDataModal[\"default\"], _exportImageModal[\"default\"], _exportDataModal[\"default\"], _exportMapModal[\"default\"], _addMapStyleModal[\"default\"], _modalDialog[\"default\"], _saveMapModal[\"default\"], _shareMapModal[\"default\"]];\nfunction ModalContainerFactory(DeleteDatasetModal, OverWriteMapModal, DataTableModal, LoadDataModal, ExportImageModal, ExportDataModal, ExportMapModal, AddMapStyleModal, ModalDialog, SaveMapModal, ShareMapModal) {\n  /** @augments React.Component<ModalContainerProps> */\n  var ModalContainer = /*#__PURE__*/function (_Component) {\n    (0, _inherits2[\"default\"])(ModalContainer, _Component);\n    var _super = _createSuper(ModalContainer);\n    function ModalContainer() {\n      var _this;\n      (0, _classCallCheck2[\"default\"])(this, ModalContainer);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _super.call.apply(_super, [this].concat(args));\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"componentDidMount\", function () {\n        _document[\"default\"].addEventListener('keyup', _this._onKeyUp);\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"cloudProviders\", function (props) {\n        return props.cloudProviders;\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"providerWithStorage\", (0, _reselect.createSelector)(_this.cloudProviders, function (cloudProviders) {\n        return cloudProviders.filter(function (p) {\n          return p.hasPrivateStorage();\n        });\n      }));\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"providerWithShare\", (0, _reselect.createSelector)(_this.cloudProviders, function (cloudProviders) {\n        return cloudProviders.filter(function (p) {\n          return p.hasSharingUrl();\n        });\n      }));\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onKeyUp\", function (event) {\n        var keyCode = event.keyCode;\n        if (keyCode === _constants.KeyEvent.DOM_VK_ESCAPE) {\n          _this._closeModal();\n        }\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_closeModal\", function () {\n        _this.props.uiStateActions.toggleModal(null);\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_deleteDataset\", function (key) {\n        _this.props.visStateActions.removeDataset(key);\n        _this._closeModal();\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onAddCustomMapStyle\", function () {\n        _this.props.mapStyleActions.addCustomMapStyle();\n        _this._closeModal();\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onFileUpload\", function (fileList) {\n        _this.props.visStateActions.loadFiles(fileList);\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onExportImage\", function () {\n        if (!_this.props.uiState.exportImage.processing) {\n          // @ts-ignore TODO: fix exportImage method\n          exportImage(_this.props.uiState.exportImage, \"\".concat(_this.props.appName, \".png\"));\n          _this.props.uiStateActions.cleanupExportImage();\n          _this._closeModal();\n        }\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onExportData\", function () {\n        (0, _reducers.exportData)(_this.props, _this.props.uiState.exportData);\n        _this._closeModal();\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onExportMap\", function () {\n        var uiState = _this.props.uiState;\n        var format = uiState.exportMap.format;\n        (format === _constants.EXPORT_MAP_FORMATS.HTML ? _utils.exportHtml : _utils.exportJson)(_this.props, _this.props.uiState.exportMap[format] || {});\n        _this._closeModal();\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_exportFileToCloud\", function (_ref) {\n        var provider = _ref.provider,\n          isPublic = _ref.isPublic,\n          overwrite = _ref.overwrite,\n          closeModal = _ref.closeModal;\n        var toSave = (0, _utils.exportMap)(_this.props);\n        _this.props.providerActions.exportFileToCloud({\n          // @ts-ignore\n          mapData: toSave,\n          provider: provider,\n          options: {\n            isPublic: isPublic,\n            overwrite: overwrite\n          },\n          closeModal: closeModal,\n          onSuccess: _this.props.onExportToCloudSuccess,\n          onError: _this.props.onExportToCloudError\n        });\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onSaveMap\", function () {\n        var overwrite = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        var currentProvider = _this.props.providerState.currentProvider; // @ts-ignore\n\n        var provider = _this.props.cloudProviders.find(function (p) {\n          return p.name === currentProvider;\n        });\n        _this._exportFileToCloud({\n          provider: provider,\n          isPublic: false,\n          overwrite: overwrite,\n          closeModal: true\n        });\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onOverwriteMap\", function () {\n        _this._onSaveMap(true);\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onShareMapUrl\", function (provider) {\n        _this._exportFileToCloud({\n          provider: provider,\n          isPublic: true,\n          overwrite: false,\n          closeModal: false\n        });\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onCloseSaveMap\", function () {\n        _this.props.providerActions.resetProviderStatus();\n        _this._closeModal();\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onLoadCloudMap\", function (payload) {\n        _this.props.providerActions.loadCloudMap(_objectSpread(_objectSpread({}, payload), {}, {\n          onSuccess: _this.props.onLoadCloudMapSuccess,\n          onError: _this.props.onLoadCloudMapError\n        }));\n      });\n      return _this;\n    }\n    (0, _createClass2[\"default\"])(ModalContainer, [{\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        _document[\"default\"].removeEventListener('keyup', this._onKeyUp);\n      }\n    }, {\n      key: \"render\",\n      value: /* eslint-disable complexity */\n      function render() {\n        var _this2 = this;\n        var _this$props = this.props,\n          containerW = _this$props.containerW,\n          containerH = _this$props.containerH,\n          mapStyle = _this$props.mapStyle,\n          mapState = _this$props.mapState,\n          uiState = _this$props.uiState,\n          visState = _this$props.visState,\n          rootNode = _this$props.rootNode,\n          visStateActions = _this$props.visStateActions,\n          uiStateActions = _this$props.uiStateActions,\n          providerState = _this$props.providerState;\n        var currentModal = uiState.currentModal,\n          datasetKeyToRemove = uiState.datasetKeyToRemove;\n        var datasets = visState.datasets,\n          layers = visState.layers,\n          editingDataset = visState.editingDataset;\n        var template = null;\n        var modalProps = {}; // TODO - currentModal is a string\n        // @ts-ignore\n\n        if (currentModal && currentModal.id && currentModal.template) {\n          // if currentMdoal template is already provided\n          // TODO: need to check whether template is valid\n          // @ts-ignore\n          template = /*#__PURE__*/_react[\"default\"].createElement(currentModal.template, null); // @ts-ignore\n\n          modalProps = currentModal.modalProps;\n        } else {\n          switch (currentModal) {\n            case _constants.DATA_TABLE_ID:\n              var width = containerW * 0.9;\n              template = /*#__PURE__*/_react[\"default\"].createElement(DataTableModal, {\n                datasets: datasets,\n                dataId: editingDataset,\n                showDatasetTable: visStateActions.showDatasetTable,\n                sortTableColumn: visStateActions.sortTableColumn,\n                pinTableColumn: visStateActions.pinTableColumn,\n                copyTableColumn: visStateActions.copyTableColumn\n              }); // TODO: we need to make this width consistent with the css rule defined modal.js:32 max-width: 70vw\n              // @ts-ignore // TODO fix this after add types to Theme\n\n              modalProps.cssStyle = (0, _styledComponents.css)(_templateObject7 || (_templateObject7 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n              \", \";\\n              \", \";\\n            \"])), DataTableModalStyle, _styles.media.palm(_templateObject8 || (_templateObject8 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n                width: \", \"px;\\n              \"])), width));\n              break;\n            case _constants.DELETE_DATA_ID:\n              // validate options\n              if (datasetKeyToRemove && datasets && datasets[datasetKeyToRemove]) {\n                template = /*#__PURE__*/_react[\"default\"].createElement(DeleteDatasetModal, {\n                  dataset: datasets[datasetKeyToRemove],\n                  layers: layers\n                });\n                modalProps = {\n                  title: 'modal.title.deleteDataset',\n                  cssStyle: smallModalCss,\n                  footer: true,\n                  onConfirm: function onConfirm() {\n                    return _this2._deleteDataset(datasetKeyToRemove);\n                  },\n                  onCancel: this._closeModal,\n                  confirmButton: {\n                    negative: true,\n                    large: true,\n                    children: 'modal.button.delete'\n                  }\n                };\n              }\n              break;\n            // in case we add a new case after this one\n\n            case _constants.ADD_DATA_ID:\n              template = /*#__PURE__*/_react[\"default\"].createElement(LoadDataModal, (0, _extends2[\"default\"])({}, providerState, {\n                onClose: this._closeModal,\n                onFileUpload: this._onFileUpload,\n                onLoadCloudMap: this._onLoadCloudMap,\n                cloudProviders: this.providerWithStorage(this.props),\n                onSetCloudProvider: this.props.providerActions.setCloudProvider,\n                getSavedMaps: this.props.providerActions.getSavedMaps,\n                loadFiles: uiState.loadFiles,\n                fileLoading: visState.fileLoading,\n                fileLoadingProgress: visState.fileLoadingProgress,\n                fileFormatNames: (0, _reducers.getFileFormatNames)(this.props.visState),\n                fileExtensions: (0, _reducers.getFileExtensions)(this.props.visState)\n              }));\n              modalProps = {\n                title: 'modal.title.addDataToMap',\n                cssStyle: LoadDataModalStyle,\n                footer: false,\n                onConfirm: this._closeModal\n              };\n              break;\n            case _constants.EXPORT_IMAGE_ID:\n              template = /*#__PURE__*/_react[\"default\"].createElement(ExportImageModal, {\n                exportImage: uiState.exportImage,\n                mapW: containerW,\n                mapH: containerH,\n                onUpdateImageSetting: uiStateActions.setExportImageSetting,\n                cleanupExportImage: uiStateActions.cleanupExportImage\n              });\n              modalProps = {\n                title: 'modal.title.exportImage',\n                cssStyle: '',\n                footer: true,\n                onCancel: this._closeModal,\n                onConfirm: this._onExportImage,\n                confirmButton: {\n                  large: true,\n                  disabled: uiState.exportImage.processing,\n                  children: 'modal.button.download'\n                }\n              };\n              break;\n            case _constants.EXPORT_DATA_ID:\n              template = /*#__PURE__*/_react[\"default\"].createElement(ExportDataModal, (0, _extends2[\"default\"])({}, uiState.exportData, {\n                supportedDataTypes: _constants.EXPORT_DATA_TYPE_OPTIONS,\n                datasets: datasets,\n                applyCPUFilter: this.props.visStateActions.applyCPUFilter,\n                onChangeExportDataType: uiStateActions.setExportDataType,\n                onChangeExportSelectedDataset: uiStateActions.setExportSelectedDataset,\n                onChangeExportFiltered: uiStateActions.setExportFiltered\n              }));\n              modalProps = {\n                title: 'modal.title.exportData',\n                cssStyle: '',\n                footer: true,\n                onCancel: this._closeModal,\n                onConfirm: this._onExportData,\n                confirmButton: {\n                  large: true,\n                  children: 'modal.button.export'\n                }\n              };\n              break;\n            case _constants.EXPORT_MAP_ID:\n              var keplerGlConfig = visState.schema.getConfigToSave({\n                mapStyle: mapStyle,\n                visState: visState,\n                mapState: mapState,\n                uiState: uiState\n              });\n              template = /*#__PURE__*/_react[\"default\"].createElement(ExportMapModal, {\n                config: keplerGlConfig,\n                options: uiState.exportMap,\n                onChangeExportMapFormat: uiStateActions.setExportMapFormat,\n                onEditUserMapboxAccessToken: uiStateActions.setUserMapboxAccessToken,\n                onChangeExportMapHTMLMode: uiStateActions.setExportHTMLMapMode\n              });\n              modalProps = {\n                title: 'modal.title.exportMap',\n                cssStyle: '',\n                footer: true,\n                onCancel: this._closeModal,\n                onConfirm: this._onExportMap,\n                confirmButton: {\n                  large: true,\n                  children: 'modal.button.export'\n                }\n              };\n              break;\n            case _constants.ADD_MAP_STYLE_ID:\n              template = /*#__PURE__*/_react[\"default\"].createElement(AddMapStyleModal, {\n                mapboxApiAccessToken: this.props.mapboxApiAccessToken,\n                mapboxApiUrl: this.props.mapboxApiUrl,\n                mapState: this.props.mapState,\n                inputStyle: mapStyle.inputStyle,\n                inputMapStyle: this.props.mapStyleActions.inputMapStyle,\n                loadCustomMapStyle: this.props.mapStyleActions.loadCustomMapStyle\n              });\n              modalProps = {\n                title: 'modal.title.addCustomMapboxStyle',\n                cssStyle: '',\n                footer: true,\n                onCancel: this._closeModal,\n                onConfirm: this._onAddCustomMapStyle,\n                confirmButton: {\n                  large: true,\n                  disabled: !mapStyle.inputStyle.style,\n                  children: 'modal.button.addStyle'\n                }\n              };\n              break;\n            case _constants.SAVE_MAP_ID:\n              template = /*#__PURE__*/_react[\"default\"].createElement(SaveMapModal, (0, _extends2[\"default\"])({}, providerState, {\n                exportImage: uiState.exportImage,\n                mapInfo: visState.mapInfo,\n                onSetMapInfo: visStateActions.setMapInfo,\n                cloudProviders: this.providerWithStorage(this.props),\n                onSetCloudProvider: this.props.providerActions.setCloudProvider,\n                cleanupExportImage: uiStateActions.cleanupExportImage,\n                onUpdateImageSetting: uiStateActions.setExportImageSetting\n              }));\n              modalProps = {\n                title: 'modal.title.saveMap',\n                cssStyle: '',\n                footer: true,\n                onCancel: this._closeModal,\n                onConfirm: function onConfirm() {\n                  return _this2._onSaveMap(false);\n                },\n                confirmButton: {\n                  large: true,\n                  disabled: uiState.exportImage.processing || !(0, _utils.isValidMapInfo)(visState.mapInfo) || !providerState.currentProvider,\n                  children: 'modal.button.save'\n                }\n              };\n              break;\n            case _constants.OVERWRITE_MAP_ID:\n              template = /*#__PURE__*/_react[\"default\"].createElement(OverWriteMapModal, (0, _extends2[\"default\"])({}, providerState, {\n                cloudProviders: this.props.cloudProviders,\n                title: (0, _lodash[\"default\"])(visState, ['mapInfo', 'title']),\n                onUpdateImageSetting: uiStateActions.setExportImageSetting,\n                cleanupExportImage: uiStateActions.cleanupExportImage\n              }));\n              modalProps = {\n                title: 'Overwrite Existing File?',\n                cssStyle: smallModalCss,\n                footer: true,\n                onConfirm: this._onOverwriteMap,\n                onCancel: this._closeModal,\n                confirmButton: {\n                  large: true,\n                  children: 'Yes',\n                  disabled: uiState.exportImage.processing || !(0, _utils.isValidMapInfo)(visState.mapInfo) || !providerState.currentProvider\n                }\n              };\n              break;\n            case _constants.SHARE_MAP_ID:\n              template = /*#__PURE__*/_react[\"default\"].createElement(ShareMapModal, (0, _extends2[\"default\"])({}, providerState, {\n                isReady: !uiState.exportImage.processing,\n                cloudProviders: this.providerWithShare(this.props),\n                onExport: this._onShareMapUrl,\n                onSetCloudProvider: this.props.providerActions.setCloudProvider,\n                cleanupExportImage: uiStateActions.cleanupExportImage,\n                onUpdateImageSetting: uiStateActions.setExportImageSetting\n              }));\n              modalProps = {\n                title: 'modal.title.shareURL',\n                cssStyle: '',\n                onCancel: this._onCloseSaveMap\n              };\n              break;\n            default:\n              break;\n          }\n        }\n        return rootNode ? /*#__PURE__*/_react[\"default\"].createElement(ModalDialog, (0, _extends2[\"default\"])({\n          parentSelector: function parentSelector() {\n            return (0, _reactDom.findDOMNode)(rootNode);\n          },\n          isOpen: Boolean(currentModal),\n          onCancel: this._closeModal\n        }, modalProps, {\n          cssStyle: DefaultStyle.concat(modalProps.cssStyle)\n        }), template) : null;\n      }\n      /* eslint-enable complexity */\n    }]);\n\n    return ModalContainer;\n  }(_react.Component);\n  return ModalContainer;\n}","map":{"version":3,"names":["exports","ModalContainerFactory","_extends2","_interopRequireDefault","require","_classCallCheck2","_createClass2","_assertThisInitialized2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_defineProperty2","_taggedTemplateLiteral2","_react","_interopRequireWildcard","_styledComponents","_reselect","_lodash","_document","_modalDialog","_utils","_reducers","_deleteDataModal","_overwriteMapModal","_dataTableModal","_saveMapModal","_shareMapModal","_styles","_constants","_reactDom","_objectSpread","target","i","arguments","length","source","ownKeys","Object","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","getOwnPropertyDescriptor","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","DataTableModalStyle","css","_templateObject","media","portable","_templateObject2","palm","_templateObject3","LoadDataModalStyle","_templateObject5","DefaultStyle","_templateObject6","deps","_loadDataModal","_exportImageModal","_exportDataModal","_exportMapModal","_addMapStyleModal","DeleteDatasetModal","OverWriteMapModal","DataTableModal","LoadDataModal","ExportImageModal","ExportDataModal","ExportMapModal","AddMapStyleModal","ModalDialog","SaveMapModal","ShareMapModal","ModalContainer","_Component","_super","_this","_len","args","Array","_key","concat","addEventListener","_onKeyUp","props","cloudProviders","createSelector","filter","p","event","keyCode","KeyEvent","DOM_VK_ESCAPE","_closeModal","uiStateActions","toggleModal","visStateActions","removeDataset","mapStyleActions","addCustomMapStyle","fileList","loadFiles","uiState","exportImage","processing","appName","cleanupExportImage","exportData","format","exportMap","EXPORT_MAP_FORMATS","HTML","exportHtml","exportJson","_ref","provider","isPublic","closeModal","toSave","mapData","options","overwrite","onSuccess","onExportToCloudSuccess","onError","onExportToCloudError","undefined","currentProvider","providerState","find","name","_onSaveMap","providerActions","resetProviderStatus","loadCloudMap","payload","onLoadCloudMapSuccess","onLoadCloudMapError","value","componentWillUnmount","removeEventListener","render","_this2","_this$props","containerW","containerH","mapStyle","mapState","visState","rootNode","currentModal","datasetKeyToRemove","datasets","layers","editingDataset","template","modalProps","createElement","DATA_TABLE_ID","width","dataId","showDatasetTable","sortTableColumn","pinTableColumn","copyTableColumn","cssStyle","_templateObject7","_templateObject8","DELETE_DATA_ID","dataset","title","smallModalCss","footer","onConfirm","_deleteDataset","onCancel","confirmButton","negative","large","children","ADD_DATA_ID","onClose","onFileUpload","_onFileUpload","onLoadCloudMap","_onLoadCloudMap","providerWithStorage","onSetCloudProvider","setCloudProvider","getSavedMaps","fileLoading","fileLoadingProgress","fileFormatNames","getFileFormatNames","fileExtensions","getFileExtensions","EXPORT_IMAGE_ID","mapW","mapH","onUpdateImageSetting","setExportImageSetting","_onExportImage","disabled","EXPORT_DATA_ID","supportedDataTypes","EXPORT_DATA_TYPE_OPTIONS","applyCPUFilter","onChangeExportDataType","setExportDataType","onChangeExportSelectedDataset","setExportSelectedDataset","onChangeExportFiltered","setExportFiltered","_onExportData","EXPORT_MAP_ID","keplerGlConfig","schema","getConfigToSave","config","onChangeExportMapFormat","setExportMapFormat","onEditUserMapboxAccessToken","setUserMapboxAccessToken","onChangeExportMapHTMLMode","setExportHTMLMapMode","_onExportMap","ADD_MAP_STYLE_ID","mapboxApiUrl","inputStyle","inputMapStyle","loadCustomMapStyle","_onAddCustomMapStyle","style","SAVE_MAP_ID","mapInfo","onSetMapInfo","setMapInfo","isValidMapInfo","_onOverwriteMap","isReady","providerWithShare","onExport","_onShareMapUrl"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/components/src/modal-container.tsx"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {Component} from 'react';\nimport {css} from 'styled-components';\nimport {createSelector} from 'reselect';\nimport get from 'lodash.get';\nimport document from 'global/document';\n\nimport ModalDialogFactory from './modals/modal-dialog';\nimport {exportHtml, isValidMapInfo, exportMap, exportJson} from '@kepler.gl/utils';\nimport {\n  exportData,\n  getFileFormatNames,\n  getFileExtensions,\n  MapStyle,\n  ProviderState\n} from '@kepler.gl/reducers';\n\n// modals\nimport DeleteDatasetModalFactory from './modals/delete-data-modal';\nimport OverWriteMapModalFactory from './modals/overwrite-map-modal';\nimport DataTableModalFactory from './modals/data-table-modal';\nimport LoadDataModalFactory from './modals/load-data-modal';\nimport ExportImageModalFactory from './modals/export-image-modal';\nimport ExportDataModalFactory from './modals/export-data-modal';\nimport ExportMapModalFactory from './modals/export-map-modal/export-map-modal';\nimport AddMapStyleModalFactory from './modals/add-map-style-modal';\nimport SaveMapModalFactory from './modals/save-map-modal';\nimport ShareMapModalFactory from './modals/share-map-modal';\n\n// Breakpoints\nimport {media} from '@kepler.gl/styles';\n\n// Template\nimport {\n  EXPORT_DATA_TYPE_OPTIONS,\n  EXPORT_MAP_FORMATS,\n  KeyEvent,\n  ADD_DATA_ID,\n  DATA_TABLE_ID,\n  DELETE_DATA_ID,\n  EXPORT_DATA_ID,\n  EXPORT_IMAGE_ID,\n  EXPORT_MAP_ID,\n  ADD_MAP_STYLE_ID,\n  SAVE_MAP_ID,\n  SHARE_MAP_ID,\n  OVERWRITE_MAP_ID\n} from '@kepler.gl/constants';\n\nimport {MapState, UiState, OnSuccessCallBack, OnErrorCallBack} from '@kepler.gl/types';\n\nimport {\n  VisStateActions,\n  UIStateActions,\n  MapStyleActions,\n  ProviderActions\n} from '@kepler.gl/actions';\nimport {ModalDialogProps} from './common/modal';\nimport {Provider} from '@kepler.gl/cloud-providers';\nimport {findDOMNode} from 'react-dom';\nimport {VisState} from '@kepler.gl/schemas';\n\nconst DataTableModalStyle = css`\n  top: 70px;\n  padding: 32px 0 0 0;\n  width: 90vw;\n  max-width: 90vw;\n\n  ${media.portable`\n    padding: 0;\n  `} ${media.palm`\n    padding: 0;\n    margin: 0 auto;\n  `};\n`;\nconst smallModalCss = css`\n  width: 40%;\n  padding: 40px 40px 32px 40px;\n`;\n\nconst LoadDataModalStyle = css`\n  top: 60px;\n`;\n\nconst DefaultStyle = css`\n  max-width: 960px;\n`;\n\nexport type ModalContainerProps = {\n  appName: string;\n  rootNode: React.ReactInstance | null | undefined;\n  containerW: number;\n  containerH: number;\n  mapboxApiAccessToken: string;\n  mapboxApiUrl?: string;\n  mapState: MapState;\n  mapStyle: MapStyle;\n  uiState: UiState;\n  visState: VisState;\n  providerState: ProviderState;\n  visStateActions: typeof VisStateActions;\n  uiStateActions: typeof UIStateActions;\n  mapStyleActions: typeof MapStyleActions;\n  providerActions: typeof ProviderActions;\n  onSaveToStorage?: () => void;\n  cloudProviders: Provider[];\n  onLoadCloudMapSuccess?: OnSuccessCallBack;\n  onLoadCloudMapError?: OnErrorCallBack;\n  onExportToCloudSuccess?: OnSuccessCallBack;\n  onExportToCloudError?: OnErrorCallBack;\n};\n\nModalContainerFactory.deps = [\n  DeleteDatasetModalFactory,\n  OverWriteMapModalFactory,\n  DataTableModalFactory,\n  LoadDataModalFactory,\n  ExportImageModalFactory,\n  ExportDataModalFactory,\n  ExportMapModalFactory,\n  AddMapStyleModalFactory,\n  ModalDialogFactory,\n  SaveMapModalFactory,\n  ShareMapModalFactory\n];\n\nexport default function ModalContainerFactory(\n  DeleteDatasetModal: ReturnType<typeof DeleteDatasetModalFactory>,\n  OverWriteMapModal: ReturnType<typeof OverWriteMapModalFactory>,\n  DataTableModal: ReturnType<typeof DataTableModalFactory>,\n  LoadDataModal: ReturnType<typeof LoadDataModalFactory>,\n  ExportImageModal: ReturnType<typeof ExportImageModalFactory>,\n  ExportDataModal: ReturnType<typeof ExportDataModalFactory>,\n  ExportMapModal: ReturnType<typeof ExportMapModalFactory>,\n  AddMapStyleModal: ReturnType<typeof AddMapStyleModalFactory>,\n  ModalDialog: ReturnType<typeof ModalDialogFactory>,\n  SaveMapModal: ReturnType<typeof SaveMapModalFactory>,\n  ShareMapModal: ReturnType<typeof ShareMapModalFactory>\n): React.ElementType<ModalContainerProps> {\n  /** @augments React.Component<ModalContainerProps> */\n  class ModalContainer extends Component<ModalContainerProps> {\n    // TODO - remove when prop types are fully exported\n    componentDidMount = () => {\n      document.addEventListener('keyup', this._onKeyUp);\n    };\n    componentWillUnmount() {\n      document.removeEventListener('keyup', this._onKeyUp);\n    }\n\n    cloudProviders = (props: ModalContainerProps) => props.cloudProviders;\n    providerWithStorage = createSelector(this.cloudProviders, cloudProviders =>\n      cloudProviders.filter(p => p.hasPrivateStorage())\n    );\n    providerWithShare = createSelector(this.cloudProviders, cloudProviders =>\n      cloudProviders.filter(p => p.hasSharingUrl())\n    );\n\n    _onKeyUp = event => {\n      const keyCode = event.keyCode;\n      if (keyCode === KeyEvent.DOM_VK_ESCAPE) {\n        this._closeModal();\n      }\n    };\n\n    _closeModal = () => {\n      this.props.uiStateActions.toggleModal(null);\n    };\n\n    _deleteDataset = key => {\n      this.props.visStateActions.removeDataset(key);\n      this._closeModal();\n    };\n\n    _onAddCustomMapStyle = () => {\n      this.props.mapStyleActions.addCustomMapStyle();\n      this._closeModal();\n    };\n\n    _onFileUpload = fileList => {\n      this.props.visStateActions.loadFiles(fileList);\n    };\n\n    _onExportImage = () => {\n      if (!this.props.uiState.exportImage.processing) {\n        // @ts-ignore TODO: fix exportImage method\n        exportImage(this.props.uiState.exportImage, `${this.props.appName}.png`);\n        this.props.uiStateActions.cleanupExportImage();\n        this._closeModal();\n      }\n    };\n\n    _onExportData = () => {\n      exportData(this.props, this.props.uiState.exportData);\n      this._closeModal();\n    };\n\n    _onExportMap = () => {\n      const {uiState} = this.props;\n      const {format} = uiState.exportMap;\n      (format === EXPORT_MAP_FORMATS.HTML ? exportHtml : exportJson)(\n        this.props,\n        this.props.uiState.exportMap[format] || {}\n      );\n      this._closeModal();\n    };\n\n    _exportFileToCloud = ({provider, isPublic, overwrite, closeModal}) => {\n      const toSave = exportMap(this.props);\n\n      this.props.providerActions.exportFileToCloud({\n        // @ts-ignore\n        mapData: toSave,\n        provider,\n        options: {\n          isPublic,\n          overwrite\n        },\n        closeModal,\n        onSuccess: this.props.onExportToCloudSuccess,\n        onError: this.props.onExportToCloudError\n      });\n    };\n\n    _onSaveMap = (overwrite = false) => {\n      const {currentProvider} = this.props.providerState;\n      // @ts-ignore\n      const provider = this.props.cloudProviders.find(p => p.name === currentProvider);\n      this._exportFileToCloud({\n        provider,\n        isPublic: false,\n        overwrite,\n        closeModal: true\n      });\n    };\n\n    _onOverwriteMap = () => {\n      this._onSaveMap(true);\n    };\n\n    _onShareMapUrl = provider => {\n      this._exportFileToCloud({provider, isPublic: true, overwrite: false, closeModal: false});\n    };\n\n    _onCloseSaveMap = () => {\n      this.props.providerActions.resetProviderStatus();\n      this._closeModal();\n    };\n\n    _onLoadCloudMap = payload => {\n      this.props.providerActions.loadCloudMap({\n        ...payload,\n        onSuccess: this.props.onLoadCloudMapSuccess,\n        onError: this.props.onLoadCloudMapError\n      });\n    };\n\n    /* eslint-disable complexity */\n    render() {\n      const {\n        containerW,\n        containerH,\n        mapStyle,\n        mapState,\n        uiState,\n        visState,\n        rootNode,\n        visStateActions,\n        uiStateActions,\n        providerState\n      } = this.props;\n      const {currentModal, datasetKeyToRemove} = uiState;\n      const {datasets, layers, editingDataset} = visState;\n\n      let template: JSX.Element | null = null;\n      let modalProps: Partial<ModalDialogProps> = {};\n\n      // TODO - currentModal is a string\n      // @ts-ignore\n      if (currentModal && currentModal.id && currentModal.template) {\n        // if currentMdoal template is already provided\n        // TODO: need to check whether template is valid\n        // @ts-ignore\n        template = <currentModal.template />;\n        // @ts-ignore\n        modalProps = currentModal.modalProps;\n      } else {\n        switch (currentModal) {\n          case DATA_TABLE_ID:\n            const width = containerW * 0.9;\n            template = (\n              <DataTableModal\n                datasets={datasets}\n                dataId={editingDataset}\n                showDatasetTable={visStateActions.showDatasetTable}\n                sortTableColumn={visStateActions.sortTableColumn}\n                pinTableColumn={visStateActions.pinTableColumn}\n                copyTableColumn={visStateActions.copyTableColumn}\n              />\n            );\n\n            // TODO: we need to make this width consistent with the css rule defined modal.js:32 max-width: 70vw\n            // @ts-ignore // TODO fix this after add types to Theme\n            modalProps.cssStyle = css`\n              ${DataTableModalStyle};\n              ${media.palm`\n                width: ${width}px;\n              `};\n            `;\n            break;\n          case DELETE_DATA_ID:\n            // validate options\n            if (datasetKeyToRemove && datasets && datasets[datasetKeyToRemove]) {\n              template = (\n                <DeleteDatasetModal dataset={datasets[datasetKeyToRemove]} layers={layers} />\n              );\n              modalProps = {\n                title: 'modal.title.deleteDataset',\n                cssStyle: smallModalCss,\n                footer: true,\n                onConfirm: () => this._deleteDataset(datasetKeyToRemove),\n                onCancel: this._closeModal,\n                confirmButton: {\n                  negative: true,\n                  large: true,\n                  children: 'modal.button.delete'\n                }\n              };\n            }\n            break; // in case we add a new case after this one\n          case ADD_DATA_ID:\n            template = (\n              <LoadDataModal\n                {...providerState}\n                onClose={this._closeModal}\n                onFileUpload={this._onFileUpload}\n                onLoadCloudMap={this._onLoadCloudMap}\n                cloudProviders={this.providerWithStorage(this.props)}\n                onSetCloudProvider={this.props.providerActions.setCloudProvider}\n                getSavedMaps={this.props.providerActions.getSavedMaps}\n                loadFiles={uiState.loadFiles}\n                fileLoading={visState.fileLoading}\n                fileLoadingProgress={visState.fileLoadingProgress}\n                fileFormatNames={getFileFormatNames(this.props.visState)}\n                fileExtensions={getFileExtensions(this.props.visState)}\n              />\n            );\n            modalProps = {\n              title: 'modal.title.addDataToMap',\n              cssStyle: LoadDataModalStyle,\n              footer: false,\n              onConfirm: this._closeModal\n            };\n            break;\n          case EXPORT_IMAGE_ID:\n            template = (\n              <ExportImageModal\n                exportImage={uiState.exportImage}\n                mapW={containerW}\n                mapH={containerH}\n                onUpdateImageSetting={uiStateActions.setExportImageSetting}\n                cleanupExportImage={uiStateActions.cleanupExportImage}\n              />\n            );\n            modalProps = {\n              title: 'modal.title.exportImage',\n              cssStyle: '',\n              footer: true,\n              onCancel: this._closeModal,\n              onConfirm: this._onExportImage,\n              confirmButton: {\n                large: true,\n                disabled: uiState.exportImage.processing,\n                children: 'modal.button.download'\n              }\n            };\n            break;\n          case EXPORT_DATA_ID:\n            template = (\n              <ExportDataModal\n                {...uiState.exportData}\n                supportedDataTypes={EXPORT_DATA_TYPE_OPTIONS}\n                datasets={datasets}\n                applyCPUFilter={this.props.visStateActions.applyCPUFilter}\n                onChangeExportDataType={uiStateActions.setExportDataType}\n                onChangeExportSelectedDataset={uiStateActions.setExportSelectedDataset}\n                onChangeExportFiltered={uiStateActions.setExportFiltered}\n              />\n            );\n            modalProps = {\n              title: 'modal.title.exportData',\n              cssStyle: '',\n              footer: true,\n              onCancel: this._closeModal,\n              onConfirm: this._onExportData,\n              confirmButton: {\n                large: true,\n                children: 'modal.button.export'\n              }\n            };\n            break;\n          case EXPORT_MAP_ID:\n            const keplerGlConfig = visState.schema.getConfigToSave({\n              mapStyle,\n              visState,\n              mapState,\n              uiState\n            });\n            template = (\n              <ExportMapModal\n                config={keplerGlConfig}\n                options={uiState.exportMap}\n                onChangeExportMapFormat={uiStateActions.setExportMapFormat}\n                onEditUserMapboxAccessToken={uiStateActions.setUserMapboxAccessToken}\n                onChangeExportMapHTMLMode={uiStateActions.setExportHTMLMapMode}\n              />\n            );\n            modalProps = {\n              title: 'modal.title.exportMap',\n              cssStyle: '',\n              footer: true,\n              onCancel: this._closeModal,\n              onConfirm: this._onExportMap,\n              confirmButton: {\n                large: true,\n                children: 'modal.button.export'\n              }\n            };\n            break;\n          case ADD_MAP_STYLE_ID:\n            template = (\n              <AddMapStyleModal\n                mapboxApiAccessToken={this.props.mapboxApiAccessToken}\n                mapboxApiUrl={this.props.mapboxApiUrl}\n                mapState={this.props.mapState}\n                inputStyle={mapStyle.inputStyle}\n                inputMapStyle={this.props.mapStyleActions.inputMapStyle}\n                loadCustomMapStyle={this.props.mapStyleActions.loadCustomMapStyle}\n              />\n            );\n            modalProps = {\n              title: 'modal.title.addCustomMapboxStyle',\n              cssStyle: '',\n              footer: true,\n              onCancel: this._closeModal,\n              onConfirm: this._onAddCustomMapStyle,\n              confirmButton: {\n                large: true,\n                disabled: !mapStyle.inputStyle.style,\n                children: 'modal.button.addStyle'\n              }\n            };\n            break;\n          case SAVE_MAP_ID:\n            template = (\n              <SaveMapModal\n                {...providerState}\n                exportImage={uiState.exportImage}\n                mapInfo={visState.mapInfo}\n                onSetMapInfo={visStateActions.setMapInfo}\n                cloudProviders={this.providerWithStorage(this.props)}\n                onSetCloudProvider={this.props.providerActions.setCloudProvider}\n                cleanupExportImage={uiStateActions.cleanupExportImage}\n                onUpdateImageSetting={uiStateActions.setExportImageSetting}\n              />\n            );\n            modalProps = {\n              title: 'modal.title.saveMap',\n              cssStyle: '',\n              footer: true,\n              onCancel: this._closeModal,\n              onConfirm: () => this._onSaveMap(false),\n              confirmButton: {\n                large: true,\n                disabled:\n                  uiState.exportImage.processing ||\n                  !isValidMapInfo(visState.mapInfo) ||\n                  !providerState.currentProvider,\n                children: 'modal.button.save'\n              }\n            };\n            break;\n          case OVERWRITE_MAP_ID:\n            template = (\n              <OverWriteMapModal\n                {...providerState}\n                cloudProviders={this.props.cloudProviders}\n                title={get(visState, ['mapInfo', 'title'])}\n                onUpdateImageSetting={uiStateActions.setExportImageSetting}\n                cleanupExportImage={uiStateActions.cleanupExportImage}\n              />\n            );\n            modalProps = {\n              title: 'Overwrite Existing File?',\n              cssStyle: smallModalCss,\n              footer: true,\n              onConfirm: this._onOverwriteMap,\n              onCancel: this._closeModal,\n              confirmButton: {\n                large: true,\n                children: 'Yes',\n                disabled:\n                  uiState.exportImage.processing ||\n                  !isValidMapInfo(visState.mapInfo) ||\n                  !providerState.currentProvider\n              }\n            };\n            break;\n          case SHARE_MAP_ID:\n            template = (\n              <ShareMapModal\n                {...providerState}\n                isReady={!uiState.exportImage.processing}\n                cloudProviders={this.providerWithShare(this.props)}\n                onExport={this._onShareMapUrl}\n                onSetCloudProvider={this.props.providerActions.setCloudProvider}\n                cleanupExportImage={uiStateActions.cleanupExportImage}\n                onUpdateImageSetting={uiStateActions.setExportImageSetting}\n              />\n            );\n            modalProps = {\n              title: 'modal.title.shareURL',\n              cssStyle: '',\n              onCancel: this._onCloseSaveMap\n            };\n            break;\n          default:\n            break;\n        }\n      }\n\n      return rootNode ? (\n        <ModalDialog\n          parentSelector={() => findDOMNode(rootNode) as HTMLElement}\n          isOpen={Boolean(currentModal)}\n          onCancel={this._closeModal}\n          {...modalProps}\n          cssStyle={DefaultStyle.concat(modalProps.cssStyle)}\n        >\n          {template}\n        </ModalDialog>\n      ) : null;\n    }\n    /* eslint-enable complexity */\n  }\n\n  return ModalContainer;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}