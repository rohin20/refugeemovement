{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _exportNames = {\n  KeplerGlLayers: true,\n  LayerClasses: true,\n  Layer: true,\n  OVERLAY_TYPE_CONST: true,\n  LAYER_ID_LENGTH: true,\n  colorMaker: true,\n  layerColors: true,\n  pointToPolygonGeo: true,\n  defaultElevation: true,\n  defaultLineWidth: true,\n  defaultRadius: true,\n  MAX_ZOOM_LEVEL: true,\n  h3DefaultElevation: true,\n  tripDefaultLineWidth: true,\n  containValidTime: true,\n  parseTripGeoJsonTimestamp: true,\n  s2DefaultElevation: true,\n  getS2Center: true,\n  AggregationLayer: true,\n  Table: true\n};\nObject.defineProperty(exports, \"Layer\", {\n  enumerable: true,\n  get: function get() {\n    return _baseLayer[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"OVERLAY_TYPE_CONST\", {\n  enumerable: true,\n  get: function get() {\n    return _baseLayer.OVERLAY_TYPE_CONST;\n  }\n});\nObject.defineProperty(exports, \"LAYER_ID_LENGTH\", {\n  enumerable: true,\n  get: function get() {\n    return _baseLayer.LAYER_ID_LENGTH;\n  }\n});\nObject.defineProperty(exports, \"colorMaker\", {\n  enumerable: true,\n  get: function get() {\n    return _baseLayer.colorMaker;\n  }\n});\nObject.defineProperty(exports, \"layerColors\", {\n  enumerable: true,\n  get: function get() {\n    return _baseLayer.layerColors;\n  }\n});\nObject.defineProperty(exports, \"pointToPolygonGeo\", {\n  enumerable: true,\n  get: function get() {\n    return _gridUtils.pointToPolygonGeo;\n  }\n});\nObject.defineProperty(exports, \"defaultElevation\", {\n  enumerable: true,\n  get: function get() {\n    return _geojsonLayer.defaultElevation;\n  }\n});\nObject.defineProperty(exports, \"defaultLineWidth\", {\n  enumerable: true,\n  get: function get() {\n    return _geojsonLayer.defaultLineWidth;\n  }\n});\nObject.defineProperty(exports, \"defaultRadius\", {\n  enumerable: true,\n  get: function get() {\n    return _geojsonLayer.defaultRadius;\n  }\n});\nObject.defineProperty(exports, \"MAX_ZOOM_LEVEL\", {\n  enumerable: true,\n  get: function get() {\n    return _heatmapLayer.MAX_ZOOM_LEVEL;\n  }\n});\nObject.defineProperty(exports, \"h3DefaultElevation\", {\n  enumerable: true,\n  get: function get() {\n    return _h3HexagonLayer.defaultElevation;\n  }\n});\nObject.defineProperty(exports, \"tripDefaultLineWidth\", {\n  enumerable: true,\n  get: function get() {\n    return _tripLayer.defaultLineWidth;\n  }\n});\nObject.defineProperty(exports, \"containValidTime\", {\n  enumerable: true,\n  get: function get() {\n    return _tripUtils.containValidTime;\n  }\n});\nObject.defineProperty(exports, \"parseTripGeoJsonTimestamp\", {\n  enumerable: true,\n  get: function get() {\n    return _tripUtils.parseTripGeoJsonTimestamp;\n  }\n});\nObject.defineProperty(exports, \"s2DefaultElevation\", {\n  enumerable: true,\n  get: function get() {\n    return _s2GeometryLayer.defaultElevation;\n  }\n});\nObject.defineProperty(exports, \"getS2Center\", {\n  enumerable: true,\n  get: function get() {\n    return _s2Utils.getS2Center;\n  }\n});\nObject.defineProperty(exports, \"AggregationLayer\", {\n  enumerable: true,\n  get: function get() {\n    return _aggregationLayer[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"Table\", {\n  enumerable: true,\n  get: function get() {\n    return _table[\"default\"];\n  }\n});\nexports.LayerClasses = exports.KeplerGlLayers = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _baseLayer = _interopRequireWildcard(require(\"./base-layer\"));\nObject.keys(_baseLayer).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _baseLayer[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _baseLayer[key];\n    }\n  });\n});\nvar _pointLayer = _interopRequireDefault(require(\"./point-layer/point-layer\"));\nvar _arcLayer = _interopRequireDefault(require(\"./arc-layer/arc-layer\"));\nvar _lineLayer = _interopRequireDefault(require(\"./line-layer/line-layer\"));\nvar _gridLayer = _interopRequireDefault(require(\"./grid-layer/grid-layer\"));\nvar _gridUtils = require(\"./grid-layer/grid-utils\");\nvar _hexagonLayer = _interopRequireDefault(require(\"./hexagon-layer/hexagon-layer\"));\nvar _geojsonLayer = _interopRequireWildcard(require(\"./geojson-layer/geojson-layer\"));\nvar _clusterLayer = _interopRequireDefault(require(\"./cluster-layer/cluster-layer\"));\nvar _iconLayer = _interopRequireDefault(require(\"./icon-layer/icon-layer\"));\nvar _heatmapLayer = _interopRequireWildcard(require(\"./heatmap-layer/heatmap-layer\"));\nvar _h3HexagonLayer = _interopRequireWildcard(require(\"./h3-hexagon-layer/h3-hexagon-layer\"));\nvar _scenegraphLayer = _interopRequireDefault(require(\"./scenegraph-layer/scenegraph-layer\"));\nvar _tripLayer = _interopRequireWildcard(require(\"./trip-layer/trip-layer\"));\nvar _tripUtils = require(\"./trip-layer/trip-utils\");\nvar _s2GeometryLayer = _interopRequireWildcard(require(\"./s2-geometry-layer/s2-geometry-layer\"));\nvar _s2Utils = require(\"./s2-geometry-layer/s2-utils\");\nvar _aggregationLayer = _interopRequireDefault(require(\"./aggregation-layer\"));\nvar _constants = require(\"@kepler.gl/constants\");\nvar _mapboxUtils = require(\"./mapbox-utils\");\nObject.keys(_mapboxUtils).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _mapboxUtils[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _mapboxUtils[key];\n    }\n  });\n});\nvar _h3HexagonLayer2 = require(\"./h3-hexagon-layer\");\nObject.keys(_h3HexagonLayer2).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _h3HexagonLayer2[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _h3HexagonLayer2[key];\n    }\n  });\n});\nvar _table = _interopRequireDefault(require(\"./table\"));\nvar _LayerClasses;\n\n// individual layers\nvar KeplerGlLayers = {\n  PointLayer: _pointLayer[\"default\"],\n  ArcLayer: _arcLayer[\"default\"],\n  LineLayer: _lineLayer[\"default\"],\n  GridLayer: _gridLayer[\"default\"],\n  HexagonLayer: _hexagonLayer[\"default\"],\n  GeojsonLayer: _geojsonLayer[\"default\"],\n  ClusterLayer: _clusterLayer[\"default\"],\n  IconLayer: _iconLayer[\"default\"],\n  HeatmapLayer: _heatmapLayer[\"default\"],\n  H3Layer: _h3HexagonLayer[\"default\"],\n  ScenegraphLayer: _scenegraphLayer[\"default\"],\n  TripLayer: _tripLayer[\"default\"],\n  S2GeometryLayer: _s2GeometryLayer[\"default\"]\n};\nexports.KeplerGlLayers = KeplerGlLayers;\nvar LayerClasses = (_LayerClasses = {}, (0, _defineProperty2[\"default\"])(_LayerClasses, _constants.LAYER_TYPES.point, _pointLayer[\"default\"]), (0, _defineProperty2[\"default\"])(_LayerClasses, _constants.LAYER_TYPES.arc, _arcLayer[\"default\"]), (0, _defineProperty2[\"default\"])(_LayerClasses, _constants.LAYER_TYPES.line, _lineLayer[\"default\"]), (0, _defineProperty2[\"default\"])(_LayerClasses, _constants.LAYER_TYPES.grid, _gridLayer[\"default\"]), (0, _defineProperty2[\"default\"])(_LayerClasses, _constants.LAYER_TYPES.hexagon, _hexagonLayer[\"default\"]), (0, _defineProperty2[\"default\"])(_LayerClasses, _constants.LAYER_TYPES.geojson, _geojsonLayer[\"default\"]), (0, _defineProperty2[\"default\"])(_LayerClasses, _constants.LAYER_TYPES.cluster, _clusterLayer[\"default\"]), (0, _defineProperty2[\"default\"])(_LayerClasses, _constants.LAYER_TYPES.icon, _iconLayer[\"default\"]), (0, _defineProperty2[\"default\"])(_LayerClasses, _constants.LAYER_TYPES.heatmap, _heatmapLayer[\"default\"]), (0, _defineProperty2[\"default\"])(_LayerClasses, _constants.LAYER_TYPES.hexagonId, _h3HexagonLayer[\"default\"]), (0, _defineProperty2[\"default\"])(_LayerClasses, _constants.LAYER_TYPES['3D'], _scenegraphLayer[\"default\"]), (0, _defineProperty2[\"default\"])(_LayerClasses, _constants.LAYER_TYPES.trip, _tripLayer[\"default\"]), (0, _defineProperty2[\"default\"])(_LayerClasses, _constants.LAYER_TYPES.s2, _s2GeometryLayer[\"default\"]), _LayerClasses);\nexports.LayerClasses = LayerClasses;","map":{"version":3,"names":["get","Object","defineProperty","exports","enumerable","_aggregationLayer","LayerClasses","KeplerGlLayers","_defineProperty2","_interopRequireDefault","require","_baseLayer","_interopRequireWildcard","keys","forEach","key","prototype","hasOwnProperty","call","_exportNames","_pointLayer","_arcLayer","_lineLayer","_gridLayer","_gridUtils","_hexagonLayer","_geojsonLayer","_clusterLayer","_iconLayer","_heatmapLayer","_h3HexagonLayer","_scenegraphLayer","_tripLayer","_tripUtils","_s2GeometryLayer","_s2Utils","_constants","_mapboxUtils","_h3HexagonLayer2"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/layers/src/index.ts"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport {\n  default as Layer,\n  OVERLAY_TYPE_CONST,\n  LAYER_ID_LENGTH,\n  colorMaker,\n  layerColors\n} from './base-layer';\nimport {default as PointLayer} from './point-layer/point-layer';\nimport {default as ArcLayer} from './arc-layer/arc-layer';\nimport {default as LineLayer} from './line-layer/line-layer';\nimport {default as GridLayer} from './grid-layer/grid-layer';\nexport {pointToPolygonGeo} from './grid-layer/grid-utils';\nimport {default as HexagonLayer} from './hexagon-layer/hexagon-layer';\nimport {default as GeojsonLayer} from './geojson-layer/geojson-layer';\nexport {defaultElevation, defaultLineWidth, defaultRadius} from './geojson-layer/geojson-layer';\nimport {default as ClusterLayer} from './cluster-layer/cluster-layer';\nimport {default as IconLayer} from './icon-layer/icon-layer';\nimport {default as HeatmapLayer} from './heatmap-layer/heatmap-layer';\nexport {MAX_ZOOM_LEVEL} from './heatmap-layer/heatmap-layer';\nimport {default as H3Layer} from './h3-hexagon-layer/h3-hexagon-layer';\nexport {defaultElevation as h3DefaultElevation} from './h3-hexagon-layer/h3-hexagon-layer';\nimport {default as ScenegraphLayer} from './scenegraph-layer/scenegraph-layer';\nimport {default as TripLayer} from './trip-layer/trip-layer';\nexport {defaultLineWidth as tripDefaultLineWidth} from './trip-layer/trip-layer';\nexport {containValidTime, parseTripGeoJsonTimestamp} from './trip-layer/trip-utils';\nimport {default as S2GeometryLayer} from './s2-geometry-layer/s2-geometry-layer';\nexport {defaultElevation as s2DefaultElevation} from './s2-geometry-layer/s2-geometry-layer';\nexport {getS2Center} from './s2-geometry-layer/s2-utils';\nexport {default as AggregationLayer} from './aggregation-layer';\nimport {LAYER_TYPES} from '@kepler.gl/constants';\n// base layer\n// eslint-disable-next-line prettier/prettier\nexport type {\n  LayerBaseConfig,\n  LayerColumns,\n  LayerColumn,\n  VisualChannelDomain,\n  VisualChannel,\n  VisualChannelDescription,\n  ColumnPairs,\n  FindDefaultLayerPropsReturnValue\n} from './base-layer';\nexport * from './base-layer';\n\n// individual layers\nexport const KeplerGlLayers = {\n  PointLayer,\n  ArcLayer,\n  LineLayer,\n  GridLayer,\n  HexagonLayer,\n  GeojsonLayer,\n  ClusterLayer,\n  IconLayer,\n  HeatmapLayer,\n  H3Layer,\n  ScenegraphLayer,\n  TripLayer,\n  S2GeometryLayer\n};\n\nexport type LayerClassesType = typeof LayerClasses;\nexport const LayerClasses = {\n  [LAYER_TYPES.point]: PointLayer,\n  [LAYER_TYPES.arc]: ArcLayer,\n  [LAYER_TYPES.line]: LineLayer,\n  [LAYER_TYPES.grid]: GridLayer,\n  [LAYER_TYPES.hexagon]: HexagonLayer,\n  [LAYER_TYPES.geojson]: GeojsonLayer,\n  [LAYER_TYPES.cluster]: ClusterLayer,\n  [LAYER_TYPES.icon]: IconLayer,\n  [LAYER_TYPES.heatmap]: HeatmapLayer,\n  [LAYER_TYPES.hexagonId]: H3Layer,\n  [LAYER_TYPES['3D']]: ScenegraphLayer,\n  [LAYER_TYPES.trip]: TripLayer,\n  [LAYER_TYPES.s2]: S2GeometryLayer\n};\n\nexport type OVERLAY_TYPE = {[key: string]: string};\n\nexport * from './mapbox-utils';\nexport * from './h3-hexagon-layer';\nexport {default as Table} from './table';\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}