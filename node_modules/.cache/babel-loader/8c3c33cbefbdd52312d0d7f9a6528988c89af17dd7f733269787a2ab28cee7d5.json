{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.gridVisConfigs = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _layers = require(\"@deck.gl/layers\");\nvar _deckglLayers = require(\"@kepler.gl/deckgl-layers\");\nvar _aggregationLayer = _interopRequireDefault(require(\"../aggregation-layer\"));\nvar _gridUtils = require(\"./grid-utils\");\nvar _gridLayerIcon = _interopRequireDefault(require(\"./grid-layer-icon\"));\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar gridVisConfigs = {\n  opacity: 'opacity',\n  worldUnitSize: 'worldUnitSize',\n  colorRange: 'colorRange',\n  coverage: 'coverage',\n  sizeRange: 'elevationRange',\n  percentile: 'percentile',\n  elevationPercentile: 'elevationPercentile',\n  elevationScale: 'elevationScale',\n  enableElevationZoomFactor: 'enableElevationZoomFactor',\n  colorAggregation: 'colorAggregation',\n  sizeAggregation: 'sizeAggregation',\n  enable3d: 'enable3d'\n};\nexports.gridVisConfigs = gridVisConfigs;\nvar GridLayer = /*#__PURE__*/function (_AggregationLayer) {\n  (0, _inherits2[\"default\"])(GridLayer, _AggregationLayer);\n  var _super = _createSuper(GridLayer);\n  function GridLayer(props) {\n    var _this;\n    (0, _classCallCheck2[\"default\"])(this, GridLayer);\n    _this = _super.call(this, props);\n    _this.registerVisConfig(gridVisConfigs);\n    _this.visConfigSettings.worldUnitSize.label = 'columns.grid.worldUnitSize';\n    return _this;\n  }\n  (0, _createClass2[\"default\"])(GridLayer, [{\n    key: \"type\",\n    get: function get() {\n      return 'grid';\n    }\n  }, {\n    key: \"layerIcon\",\n    get: function get() {\n      return _gridLayerIcon[\"default\"];\n    }\n  }, {\n    key: \"renderLayer\",\n    value: function renderLayer(opts) {\n      var data = opts.data,\n        objectHovered = opts.objectHovered,\n        mapState = opts.mapState;\n      var zoomFactor = this.getZoomFactor(mapState);\n      var visConfig = this.config.visConfig;\n      var cellSize = visConfig.worldUnitSize * 1000;\n      var hoveredObject = this.hasHoveredObject(objectHovered);\n      return [new _deckglLayers.EnhancedGridLayer(_objectSpread(_objectSpread(_objectSpread({}, this.getDefaultAggregationLayerProp(opts)), data), {}, {\n        wrapLongitude: false,\n        cellSize: cellSize\n      }))].concat((0, _toConsumableArray2[\"default\"])(hoveredObject && !visConfig.enable3d ? [new _layers.GeoJsonLayer(_objectSpread(_objectSpread({}, this.getDefaultHoverLayerProps()), {}, {\n        wrapLongitude: false,\n        data: [(0, _gridUtils.pointToPolygonGeo)({\n          object: hoveredObject,\n          cellSize: cellSize,\n          coverage: visConfig.coverage,\n          mapState: mapState\n        })],\n        getLineColor: this.config.highlightColor,\n        lineWidthScale: 8 * zoomFactor\n      }))] : []));\n    }\n  }]);\n  return GridLayer;\n}(_aggregationLayer[\"default\"]);\nexports[\"default\"] = GridLayer;","map":{"version":3,"names":["value","exports","gridVisConfigs","_defineProperty2","_interopRequireDefault","require","_toConsumableArray2","_getPrototypeOf2","_layers","_deckglLayers","_aggregationLayer","_gridUtils","_gridLayerIcon","ownKeys","enable3d","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_createSuper","opacity","worldUnitSize","coverage","sizeRange","elevationPercentile","enableElevationZoomFactor","colorAggregation","sizeAggregation","GridLayer","_AggregationLayer","_inherits2","props","_this","_super","call","registerVisConfig","visConfigSettings","label","_createClass2","key","get","renderLayer","opts","data","objectHovered","visConfig","config"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/layers/src/grid-layer/grid-layer.ts"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {GeoJsonLayer} from '@deck.gl/layers';\nimport {EnhancedGridLayer} from '@kepler.gl/deckgl-layers';\nimport AggregationLayer, {AggregationLayerConfig} from '../aggregation-layer';\nimport {pointToPolygonGeo} from './grid-utils';\nimport GridLayerIcon from './grid-layer-icon';\nimport {\n  VisConfigBoolean,\n  VisConfigColorRange,\n  VisConfigNumber,\n  VisConfigRange,\n  VisConfigSelection,\n  Merge\n} from '@kepler.gl/types';\nimport {AggregationTypes, ColorRange} from '@kepler.gl/constants';\n\nexport type GridLayerVisConfigSettings = {\n  opacity: VisConfigNumber;\n  worldUnitSize: VisConfigNumber;\n  colorRange: VisConfigColorRange;\n  coverage: VisConfigNumber;\n  sizeRange: VisConfigRange;\n  percentile: VisConfigRange;\n  elevationPercentile: VisConfigRange;\n  elevationScale: VisConfigNumber;\n  enableElevationZoomFactor: VisConfigBoolean;\n  colorAggregation: VisConfigSelection;\n  sizeAggregation: VisConfigSelection;\n  enable3d: VisConfigBoolean;\n};\n\nexport type GridLayerVisConfig = {\n  opacity: number;\n  worldUnitSize: number;\n  colorRange: ColorRange;\n  coverage: number;\n  sizeRange: [number, number];\n  percentile: [number, number];\n  elevationPercentile: [number, number];\n  elevationScale: number;\n  enableElevationZoomFactor: boolean;\n  colorAggregation: AggregationTypes;\n  sizeAggregation: AggregationTypes;\n  enable3d: boolean;\n};\n\nexport type GridLayerConfig = Merge<AggregationLayerConfig, {visConfig: GridLayerVisConfig}>;\n\nexport const gridVisConfigs: {\n  opacity: 'opacity';\n  worldUnitSize: 'worldUnitSize';\n  colorRange: 'colorRange';\n  coverage: 'coverage';\n  sizeRange: 'elevationRange';\n  percentile: 'percentile';\n  elevationPercentile: 'elevationPercentile';\n  elevationScale: 'elevationScale';\n  enableElevationZoomFactor: 'enableElevationZoomFactor';\n  colorAggregation: 'colorAggregation';\n  sizeAggregation: 'sizeAggregation';\n  enable3d: 'enable3d';\n} = {\n  opacity: 'opacity',\n  worldUnitSize: 'worldUnitSize',\n  colorRange: 'colorRange',\n  coverage: 'coverage',\n  sizeRange: 'elevationRange',\n  percentile: 'percentile',\n  elevationPercentile: 'elevationPercentile',\n  elevationScale: 'elevationScale',\n  enableElevationZoomFactor: 'enableElevationZoomFactor',\n  colorAggregation: 'colorAggregation',\n  sizeAggregation: 'sizeAggregation',\n  enable3d: 'enable3d'\n};\n\nexport default class GridLayer extends AggregationLayer {\n  declare visConfigSettings: GridLayerVisConfigSettings;\n  declare config: GridLayerConfig;\n\n  constructor(props) {\n    super(props);\n\n    this.registerVisConfig(gridVisConfigs);\n    this.visConfigSettings.worldUnitSize.label = 'columns.grid.worldUnitSize';\n  }\n\n  get type(): 'grid' {\n    return 'grid';\n  }\n\n  get layerIcon() {\n    return GridLayerIcon;\n  }\n\n  renderLayer(opts) {\n    const {data, objectHovered, mapState} = opts;\n\n    const zoomFactor = this.getZoomFactor(mapState);\n    const {visConfig} = this.config;\n    const cellSize = visConfig.worldUnitSize * 1000;\n    const hoveredObject = this.hasHoveredObject(objectHovered);\n\n    return [\n      new EnhancedGridLayer({\n        ...this.getDefaultAggregationLayerProp(opts),\n        ...data,\n        wrapLongitude: false,\n        cellSize\n      }),\n\n      // render an outline of each cell if not extruded\n      ...(hoveredObject && !visConfig.enable3d\n        ? [\n            new GeoJsonLayer({\n              ...this.getDefaultHoverLayerProps(),\n              wrapLongitude: false,\n              data: [\n                pointToPolygonGeo({\n                  object: hoveredObject,\n                  cellSize,\n                  coverage: visConfig.coverage,\n                  mapState\n                })\n              ],\n              getLineColor: this.config.highlightColor,\n              lineWidthScale: 8 * zoomFactor\n            })\n          ]\n        : [])\n    ];\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;EAqBAA,KAAA;;AACAC,OAAA,cAAAA,OAAA,CAAAC,cAAA;AACA,IAAAC,gBAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,mBAAA,GAAAF,sBAAA,CAAAC,OAAA;;;;;AA2CO,IAAME,gBAaZ,GAAGH,sBAAA,CAAAC,OAAA;AAEF,IAAAG,OAAA,GAAAH,OAAe,kBAFb;AAIF,IAAAI,aAAU,GAAAJ,OAJR;AAMF,IAAAK,iBAAY,GAAAN,sBANV,CAAAC,OAAA;AAQF,IAAAM,UAAA,GAAcN,OAAE,eARd;AAUF,IAAAO,cAAgB,GAAER,sBAVhB,CAAAC,OAAA;AAYF,SAAAQ,OAAUC,CAAAC,MAAA,EAAAC,cAAA;EAAA,IAAAC,IAAA,GAAAC,MAAA,CAAAD,IAAA,CAAAF,MAAA;EAAA,IAAAG,MAAA,CAAAC,qBAAA;IAAA,IAAAC,OAAA,GAAAF,MAAA,CAAAC,qBAAA,CAAAJ,MAAA;IAAA,IAAAC,cAAA,EAAAI,OAAA,GAAAA,OAAA,CAAAC,MAAA,WAAAC,GAAA;MAAA,OAAAJ,MAAA,CAAAK,wBAAA,CAAAR,MAAA,EAAAO,GAAA,EAAAE,UAAA;IAAA;IAAAP,IAAA,CAAAQ,IAAA,CAAAC,KAAA,CAAAT,IAAA,EAAAG,OAAA;EAAA;EAAA,OAAAH,IAAA;AAAA;;;;;;;;;;;;;;;;;;SAGSU,Y;;;;;;;;;;;;;;;;;;;;;;;;;;EAInBC,OAAA;EAAmBC,aAAA;;EAAAC,QAAA;EACjBC,SAAA;;EAEAC,mBAAK,uBAAL;;EACAC,yBAAA,EAAuB,2BAAsB;EAJ5BC,gBAAA;EAKlBC,eAAA;;;;AAGC,IAAAC,SAAO,gBAAP,UAAAC,iBAAA;EACD,IAAAC,UAAA,aAAAF,SAAA,EAAAC,iBAAA;;EAGC,SAAAD,SAAOA,CAAAG,KAAA;IACR,IAAAC,KAAA;;YAEDC,MAAA,CAAAC,IAAA,OAAAH,KAAY,CAAZ;IAAkBC,KAAA,CACHG,iBAA2B,CAAAzC,cAA3B;IAEbsC,KAAA,CAAMI,iBAAa,CAAKf,aAAL,CAAmBgB,KAAA,GAAnB,4BAAnB;IAHgB,OAITL,KAAA;EACP;EAGA,IAAAM,aACM,aAAAV,SAAA;IAGFW,GAAA;IACAC,GAAA,WAAAA,IAAA;MAJF,OADF;IAaU;EACA;IAEID,GAAA,aAAQ;IACRC,GAAA,WAAQA,GAARA,CAAA;MACA,OAAApC,cAAU,UAAU,CAHJ;IAIhB;EAJgB;IAOpBmC,GAAA,eAAc;IACd/C,KAAA,WAAAiD,WAAoBA,CAAAC,IAAA;MAZtB,IAFFC,IAiBA,GA1BND,IAAA,CAAAC,IAAA;QA4BDC,aAAA,GAAAF,IAAA,CAAAE,aAAA;;;MAvDoC,IAAAC,SAAA,QAAAC,M"},"metadata":{},"sourceType":"script","externalDependencies":[]}