{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RowDataContainer = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _dataRow = require(\"./data-row\");\nvar _marked = /*#__PURE__*/_regenerator[\"default\"].mark(rowsIterator),\n  _marked2 = /*#__PURE__*/_regenerator[\"default\"].mark(columnIterator);\n\n/**\n * @param dataContainer\n * @param sharedRow\n */\nfunction rowsIterator(dataContainer, sharedRow) {\n  var numRows, rowIndex;\n  return _regenerator[\"default\"].wrap(function rowsIterator$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          numRows = dataContainer.numRows();\n          rowIndex = 0;\n        case 2:\n          if (!(rowIndex < numRows)) {\n            _context.next = 8;\n            break;\n          }\n          _context.next = 5;\n          return dataContainer.row(rowIndex, sharedRow);\n        case 5:\n          ++rowIndex;\n          _context.next = 2;\n          break;\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n/**\n * @param dataContainer\n * @param columnIndex\n */\n\nfunction columnIterator(dataContainer, columnIndex) {\n  var numRows, rowIndex;\n  return _regenerator[\"default\"].wrap(function columnIterator$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          numRows = dataContainer.numRows();\n          rowIndex = 0;\n        case 2:\n          if (!(rowIndex < numRows)) {\n            _context2.next = 8;\n            break;\n          }\n          _context2.next = 5;\n          return dataContainer.valueAt(rowIndex, columnIndex);\n        case 5:\n          ++rowIndex;\n          _context2.next = 2;\n          break;\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n/**\n * A data container where all data is stored internally as a 2D array.\n */\n\nvar RowDataContainer = /*#__PURE__*/function () {\n  function RowDataContainer(data) {\n    var _data$rows$;\n    (0, _classCallCheck2[\"default\"])(this, RowDataContainer);\n    (0, _defineProperty2[\"default\"])(this, \"_rows\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_numColumns\", void 0);\n    if (!data.rows) {\n      throw Error('RowDataContainer: no rows provided');\n    }\n    if (!Array.isArray(data.rows)) {\n      throw Error(\"RowDataContainer: rows object isn't an array\");\n    }\n    this._rows = data.rows;\n    this._numColumns = ((_data$rows$ = data.rows[0]) === null || _data$rows$ === void 0 ? void 0 : _data$rows$.length) || 0;\n  }\n  (0, _createClass2[\"default\"])(RowDataContainer, [{\n    key: \"numRows\",\n    value: function numRows() {\n      return this._rows.length;\n    }\n  }, {\n    key: \"numColumns\",\n    value: function numColumns() {\n      return this._numColumns;\n    }\n  }, {\n    key: \"valueAt\",\n    value: function valueAt(rowIndex, columnIndex) {\n      if (this._rows[rowIndex] === null) {\n        return null;\n      }\n      return this._rows[rowIndex][columnIndex];\n    }\n  }, {\n    key: \"row\",\n    value: function row(rowIndex, sharedRow) {\n      var tSharedRow = _dataRow.DataRow.createSharedRow(sharedRow);\n      if (tSharedRow) {\n        tSharedRow.setSource(this, rowIndex);\n        return tSharedRow;\n      }\n      return new _dataRow.DataRow(this, rowIndex);\n    }\n  }, {\n    key: \"rowAsArray\",\n    value: function rowAsArray(rowIndex) {\n      return this._rows[rowIndex];\n    }\n  }, {\n    key: \"rows\",\n    value: function rows(sharedRow) {\n      var tSharedRow = _dataRow.DataRow.createSharedRow(sharedRow);\n      return rowsIterator(this, tSharedRow);\n    }\n  }, {\n    key: \"column\",\n    value: function column(columnIndex) {\n      return columnIterator(this, columnIndex);\n    }\n  }, {\n    key: \"flattenData\",\n    value: function flattenData() {\n      return this._rows;\n    }\n  }, {\n    key: \"getPlainIndex\",\n    value: function getPlainIndex() {\n      return this._rows.map(function (_, i) {\n        return i;\n      });\n    }\n  }, {\n    key: \"map\",\n    value: function map(func, sharedRow) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var tSharedRow = _dataRow.DataRow.createSharedRow(sharedRow);\n      var _options$start = options.start,\n        start = _options$start === void 0 ? 0 : _options$start,\n        _options$end = options.end,\n        end = _options$end === void 0 ? this.numRows() : _options$end;\n      var endRow = Math.min(this.numRows(), end);\n      var out = [];\n      for (var rowIndex = start; rowIndex < endRow; ++rowIndex) {\n        var _row = this.row(rowIndex, tSharedRow);\n        out.push(func(_row, rowIndex));\n      }\n      return out;\n    }\n  }, {\n    key: \"mapIndex\",\n    value: function mapIndex(func) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var _options$start2 = options.start,\n        start = _options$start2 === void 0 ? 0 : _options$start2,\n        _options$end2 = options.end,\n        end = _options$end2 === void 0 ? this.numRows() : _options$end2;\n      var endRow = Math.min(this.numRows(), end);\n      var out = [];\n      for (var rowIndex = start; rowIndex < endRow; ++rowIndex) {\n        out.push(func({\n          index: rowIndex\n        }, this));\n      }\n      return out;\n    }\n  }, {\n    key: \"find\",\n    value: function find(func, sharedRow) {\n      var tSharedRow = _dataRow.DataRow.createSharedRow(sharedRow);\n      for (var rowIndex = 0; rowIndex < this._rows.length; ++rowIndex) {\n        var _row2 = this.row(rowIndex, tSharedRow);\n        if (func(_row2, rowIndex)) {\n          return _row2;\n        }\n      }\n      return undefined;\n    }\n  }, {\n    key: \"reduce\",\n    value: function reduce(func, initialValue, sharedRow) {\n      var tSharedRow = _dataRow.DataRow.createSharedRow(sharedRow);\n      for (var rowIndex = 0; rowIndex < this._rows.length; ++rowIndex) {\n        var _row3 = this.row(rowIndex, tSharedRow);\n        initialValue = func(initialValue, _row3, rowIndex);\n      }\n      return initialValue;\n    }\n  }]);\n  return RowDataContainer;\n}();\nexports.RowDataContainer = RowDataContainer;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","RowDataContainer","_classCallCheck2","_createClass2","_defineProperty2","_regenerator","_dataRow","_marked","mark","rowsIterator","dataContainer","sharedRow","numRows","rowIndex","_context","prev","next","row","stop","columnIterator","columnIndex","_context2","valueAt","_marked2","data","rows","Error","isArray","_numColumns","_data$rows$","length","key","numColumns","_rows","tSharedRow","DataRow","createSharedRow","setSource","column","flattenData","getPlainIndex","i","_options$start","options","start","_options$end","end","endRow","Math","min","_row","out","push","func","mapIndex","_options$start2","_options$end2","index","_row2"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/utils/src/row-data-container.ts"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {DataRow, SharedRowOptions} from './data-row';\nimport {Field} from '@kepler.gl/types';\nimport {DataContainerInterface, RangeOptions} from './data-container-interface';\n\ntype RowDataContainerInput = {\n  rows: any[][];\n  fields?: Field[];\n};\n\n/**\n * @param dataContainer\n * @param sharedRow\n */\nfunction* rowsIterator(dataContainer: DataContainerInterface, sharedRow: SharedRowOptions) {\n  const numRows = dataContainer.numRows();\n  for (let rowIndex = 0; rowIndex < numRows; ++rowIndex) {\n    yield dataContainer.row(rowIndex, sharedRow);\n  }\n}\n\n/**\n * @param dataContainer\n * @param columnIndex\n */\nfunction* columnIterator(dataContainer: DataContainerInterface, columnIndex: number) {\n  const numRows = dataContainer.numRows();\n  for (let rowIndex = 0; rowIndex < numRows; ++rowIndex) {\n    yield dataContainer.valueAt(rowIndex, columnIndex);\n  }\n}\n\n/**\n * A data container where all data is stored internally as a 2D array.\n */\nexport class RowDataContainer implements DataContainerInterface {\n  _rows: any[][];\n  _numColumns: number;\n\n  constructor(data: RowDataContainerInput) {\n    if (!data.rows) {\n      throw Error('RowDataContainer: no rows provided');\n    }\n\n    if (!Array.isArray(data.rows)) {\n      throw Error(\"RowDataContainer: rows object isn't an array\");\n    }\n\n    this._rows = data.rows;\n    this._numColumns = data.rows[0]?.length || 0;\n  }\n\n  numRows(): number {\n    return this._rows.length;\n  }\n\n  numColumns(): number {\n    return this._numColumns;\n  }\n\n  valueAt(rowIndex: number, columnIndex: number): any {\n    if (this._rows[rowIndex] === null) {\n      return null;\n    }\n    return this._rows[rowIndex][columnIndex];\n  }\n\n  row(rowIndex: number, sharedRow?: SharedRowOptions): DataRow {\n    const tSharedRow = DataRow.createSharedRow(sharedRow);\n    if (tSharedRow) {\n      tSharedRow.setSource(this, rowIndex);\n      return tSharedRow;\n    }\n\n    return new DataRow(this, rowIndex);\n  }\n\n  rowAsArray(rowIndex: number): any[] {\n    return this._rows[rowIndex];\n  }\n\n  rows(sharedRow: SharedRowOptions) {\n    const tSharedRow = DataRow.createSharedRow(sharedRow);\n    return rowsIterator(this, tSharedRow);\n  }\n\n  column(columnIndex: number) {\n    return columnIterator(this, columnIndex);\n  }\n\n  flattenData(): any[][] {\n    return this._rows;\n  }\n\n  getPlainIndex(): number[] {\n    return this._rows.map((_, i) => i);\n  }\n\n  map<T>(\n    func: (row: DataRow, index: number) => T,\n    sharedRow?: SharedRowOptions,\n    options: RangeOptions = {}\n  ): T[] {\n    const tSharedRow = DataRow.createSharedRow(sharedRow);\n\n    const {start = 0, end = this.numRows()} = options;\n    const endRow = Math.min(this.numRows(), end);\n\n    const out: T[] = [];\n    for (let rowIndex = start; rowIndex < endRow; ++rowIndex) {\n      const row = this.row(rowIndex, tSharedRow);\n      out.push(func(row, rowIndex));\n    }\n    return out;\n  }\n\n  mapIndex<T>(\n    func: ({index: number}, dc: DataContainerInterface) => T,\n    options: RangeOptions = {}\n  ): T[] {\n    const {start = 0, end = this.numRows()} = options;\n    const endRow = Math.min(this.numRows(), end);\n\n    const out: T[] = [];\n    for (let rowIndex = start; rowIndex < endRow; ++rowIndex) {\n      out.push(func({index: rowIndex}, this));\n    }\n    return out;\n  }\n\n  find(\n    func: (row: DataRow, index: number) => boolean,\n    sharedRow?: SharedRowOptions\n  ): DataRow | undefined {\n    const tSharedRow = DataRow.createSharedRow(sharedRow);\n\n    for (let rowIndex = 0; rowIndex < this._rows.length; ++rowIndex) {\n      const row = this.row(rowIndex, tSharedRow);\n      if (func(row, rowIndex)) {\n        return row;\n      }\n    }\n    return undefined;\n  }\n\n  reduce<T>(\n    func: (acc: T, row: DataRow, index: number) => T,\n    initialValue: T,\n    sharedRow?: SharedRowOptions\n  ): T {\n    const tSharedRow = DataRow.createSharedRow(sharedRow);\n\n    for (let rowIndex = 0; rowIndex < this._rows.length; ++rowIndex) {\n      const row = this.row(rowIndex, tSharedRow);\n      initialValue = func(initialValue, row, rowIndex);\n    }\n    return initialValue;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}