{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.diffUpdateTriggers = diffUpdateTriggers;\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\")); /* eslint-disable guard-for-in */\n\n/**\n *\n * @param {Object} updateTriggers {getPosition: {column}, getData: {filteredIndex}}\n * @param {Object} oldUpdateTriggers\n * @returns {boolean|object} `false` if nothing changed, or `triggerChanged` as an object\n */\nfunction diffUpdateTriggers(updateTriggers) {\n  var oldUpdateTriggers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var triggerChanged = {};\n  var reason = false;\n  for (var triggerName in updateTriggers) {\n    var newTriggers = updateTriggers[triggerName] || {};\n    var oldTriggers = oldUpdateTriggers[triggerName] || {};\n    var diffReason = compareUpdateTrigger(newTriggers, oldTriggers, triggerName);\n    if (diffReason) {\n      triggerChanged[triggerName] = true;\n      reason = triggerChanged;\n    }\n  }\n  return reason;\n}\nfunction compareUpdateTrigger(newTriggers, oldTriggers, triggerName) {\n  if ((0, _typeof2[\"default\"])(oldTriggers) !== 'object') {\n    return oldTriggers === newTriggers ? null : \"\".concat(triggerName, \" changed shallowly\");\n  }\n  for (var _key in oldTriggers) {\n    if (!(_key in newTriggers)) {\n      return \"\".concat(triggerName, \".\").concat(_key, \" deleted\");\n    } // shallow compare\n\n    if (oldTriggers[_key] !== newTriggers[_key]) {\n      return \"\".concat(triggerName, \".\").concat(_key, \" changed shallowly\");\n    }\n  }\n  for (var _key2 in newTriggers) {\n    if (!(_key2 in oldTriggers)) {\n      return \"\".concat(triggerName, \".\").concat(_key2, \" added\");\n    }\n  }\n  return null;\n}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","diffUpdateTriggers","_typeof2","updateTriggers","oldUpdateTriggers","arguments","length","undefined","triggerChanged","reason","triggerName","oldTriggers","diffReason","compareUpdateTrigger","newTriggers","concat","_key","_key2"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/layers/src/layer-update.ts"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint-disable guard-for-in */\n\n/**\n *\n * @param {Object} updateTriggers {getPosition: {column}, getData: {filteredIndex}}\n * @param {Object} oldUpdateTriggers\n * @returns {boolean|object} `false` if nothing changed, or `triggerChanged` as an object\n */\nexport function diffUpdateTriggers(updateTriggers, oldUpdateTriggers = {}) {\n  const triggerChanged: {[key: string]: true} = {};\n  let reason: boolean | {[key: string]: true} = false;\n\n  for (const triggerName in updateTriggers) {\n    const newTriggers = updateTriggers[triggerName] || {};\n    const oldTriggers = oldUpdateTriggers[triggerName] || {};\n    const diffReason = compareUpdateTrigger(newTriggers, oldTriggers, triggerName);\n\n    if (diffReason) {\n      triggerChanged[triggerName] = true;\n      reason = triggerChanged;\n    }\n  }\n\n  return reason;\n}\n\nfunction compareUpdateTrigger(newTriggers, oldTriggers, triggerName) {\n  if (typeof oldTriggers !== 'object') {\n    return oldTriggers === newTriggers ? null : `${triggerName} changed shallowly`;\n  }\n\n  for (const key in oldTriggers) {\n    if (!(key in newTriggers)) {\n      return `${triggerName}.${key} deleted`;\n    }\n\n    // shallow compare\n    if (oldTriggers[key] !== newTriggers[key]) {\n      return `${triggerName}.${key} changed shallowly`;\n    }\n  }\n\n  for (const key in newTriggers) {\n    if (!(key in oldTriggers)) {\n      return `${triggerName}.${key} added`;\n    }\n  }\n\n  return null;\n}\n"],"mappings":";;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAAA,sBAAA,GAAAC,OAAA;AAEAC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EACAC,KAAA;AACA;AACAD,OAAA,CAAAE,kBAAA,GAAAA,kBAAA;AAEA,IAAAC,QAAA,GAAAP,sBAAA,CAAAC,OAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAAK,mBAAAE,cAAA;EACA,IAAAC,iBAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA;EACO,IAAAG,cAAS;EAA2D,IAAxBC,MAAA;EAEjD,KAAI,IAAAC,WAAJ,IAAAP,cAAA;;IAEA,IAAKQ,WAAM,GAAXP,iBAA0B,CAA1BM,WAA0C;IACxC,IAAME,UAAA,GAAWC,oBAAkB,CAAAC,WAAgB,EAAnDH,WAAA,EAAAD,WAAA;IAEA,IAAME,UAAU;;MAEhBH,MAAI,GAAAD,cAAY;IACd;EACA;EAEH,OAAAC,MAAA;;AAGF,SAAAI,qBAAAC,WAAA,EAAAH,WAAA,EAAAD,WAAA;;IAED,OAASC,WAAA,KAAAG,WAAqB,GAA9B,IAA2C,MAAAC,MAAa,CAAAL,WAAa;EACnE;EAEC,SAAAM,IAAA,IAAAL,WAAA;;MAED,OAAW,EAAX,CAAAI,MAAkB,CAAAL,WAAa,OAAAK,MAAA,CAAAC,IAAA;IAC7B;;;;IAKA;EACE;EAEH,SAAAC,KAAA,IAAAH,WAAA;;MAED,OAAW,GAAXC,MAAkB,CAAAL,WAAa,OAAAK,MAAA,CAAAE,KAAA;IAC7B;EACE;EAEH"},"metadata":{},"sourceType":"script","externalDependencies":[]}