{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = PlotContainerFactory;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reselect = require(\"reselect\");\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\nvar _reactMapGl = require(\"react-map-gl\");\nvar _lodash = _interopRequireDefault(require(\"lodash.debounce\"));\nvar _utils = require(\"@kepler.gl/utils\");\nvar _reducers = require(\"@kepler.gl/reducers\");\nvar _mapContainer = _interopRequireDefault(require(\"./map-container\"));\nvar _mapsLayout = _interopRequireDefault(require(\"./maps-layout\"));\nvar _constants = require(\"@kepler.gl/constants\");\nvar _templateObject, _templateObject2;\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar CLASS_FILTER = ['mapboxgl-control-container', 'attrition-link', 'attrition-logo'];\nvar DOM_FILTER_FUNC = function DOM_FILTER_FUNC(node) {\n  return !CLASS_FILTER.includes(node.className);\n};\nvar OUT_OF_SCREEN_POSITION = -9999;\nPlotContainerFactory.deps = [_mapContainer[\"default\"], _mapsLayout[\"default\"]]; // Remove mapbox logo in exported map, because it contains non-ascii characters\n\nvar StyledPlotContainer = _styledComponents[\"default\"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  .mapboxgl-ctrl-bottom-left,\\n  .mapboxgl-ctrl-bottom-right,\\n  .mapbox-attribution-container {\\n    display: none;\\n  }\\n\\n  position: absolute;\\n  top: \", \"px;\\n  left: \", \"px;\\n\"])), OUT_OF_SCREEN_POSITION, OUT_OF_SCREEN_POSITION);\nvar StyledMapContainer = _styledComponents[\"default\"].div(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  width: \", \"px;\\n  height: \", \"px;\\n  display: flex;\\n\"])), function (props) {\n  return props.width;\n}, function (props) {\n  return props.height;\n});\nfunction PlotContainerFactory(MapContainer, MapsLayout) {\n  var PlotContainer = /*#__PURE__*/function (_Component) {\n    (0, _inherits2[\"default\"])(PlotContainer, _Component);\n    var _super = _createSuper(PlotContainer);\n    function PlotContainer(_props) {\n      var _this;\n      (0, _classCallCheck2[\"default\"])(this, PlotContainer);\n      _this = _super.call(this, _props);\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"plottingAreaRef\", /*#__PURE__*/(0, _react.createRef)());\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"mapStyleSelector\", function (props) {\n        return props.mapFields.mapStyle;\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"mapScaleSelector\", function (props) {\n        var imageSize = props.exportImageSetting.imageSize;\n        var mapState = props.mapFields.mapState;\n        if (imageSize.scale) {\n          return imageSize.scale;\n        }\n        var scale = (0, _utils.getScaleFromImageSize)(imageSize.imageW, imageSize.imageH, mapState.width * (mapState.isSplit ? 2 : 1), mapState.height);\n        return scale > 0 ? scale : 1;\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"scaledMapStyleSelector\", (0, _reselect.createSelector)(_this.mapStyleSelector, _this.mapScaleSelector, function (mapStyle, scale) {\n        return _objectSpread(_objectSpread({}, mapStyle), {}, {\n          bottomMapStyle: (0, _utils.scaleMapStyleByResolution)(mapStyle.bottomMapStyle, scale),\n          topMapStyle: (0, _utils.scaleMapStyleByResolution)(mapStyle.topMapStyle, scale)\n        });\n      }));\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onMapRender\", function (map) {\n        if (map.isStyleLoaded()) {\n          _this._retrieveNewScreenshot();\n        }\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_retrieveNewScreenshot\", function () {\n        if (_this.plottingAreaRef.current) {\n          (0, _utils.convertToPng)(_this.plottingAreaRef.current, {\n            filter: DOM_FILTER_FUNC\n          }).then(_this.props.setExportImageDataUri)[\"catch\"](function (err) {\n            _this.props.setExportImageError(err);\n            if (_this.props.enableErrorNotification) {\n              _this.props.addNotification((0, _utils.exportImageError)({\n                err: err\n              }));\n            }\n          });\n        }\n      });\n      _this._onMapRender = (0, _lodash[\"default\"])(_this._onMapRender, 500);\n      _this._retrieveNewScreenshot = (0, _lodash[\"default\"])(_this._retrieveNewScreenshot, 500);\n      return _this;\n    }\n    (0, _createClass2[\"default\"])(PlotContainer, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this.props.setExportImageSetting({\n          processing: true\n        });\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        var _this2 = this;\n\n        // re-fetch the new screenshot only when ratio legend or resolution changes\n        var checks = ['ratio', 'resolution', 'legend'];\n        var shouldRetrieveScreenshot = checks.some(function (item) {\n          return _this2.props.exportImageSetting[item] !== prevProps.exportImageSetting[item];\n        });\n        if (shouldRetrieveScreenshot) {\n          this.props.setExportImageSetting({\n            processing: true\n          });\n          this._retrieveNewScreenshot();\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n          exportImageSetting = _this$props.exportImageSetting,\n          mapFields = _this$props.mapFields,\n          _this$props$splitMaps = _this$props.splitMaps,\n          splitMaps = _this$props$splitMaps === void 0 ? [] : _this$props$splitMaps;\n        var mapState = mapFields.mapState,\n          visState = mapFields.visState;\n        var layers = visState.layers,\n          layerData = visState.layerData;\n        var imageSize = exportImageSetting.imageSize,\n          legend = exportImageSetting.legend;\n        var isSplit = splitMaps && splitMaps.length > 1;\n        var size = {\n          width: (imageSize === null || imageSize === void 0 ? void 0 : imageSize.imageW) || 1,\n          height: (imageSize === null || imageSize === void 0 ? void 0 : imageSize.imageH) || 1\n        };\n        var width = size.width / (isSplit ? 2 : 1);\n        var height = size.height;\n        var scale = this.mapScaleSelector(this.props);\n        var newMapState = _objectSpread(_objectSpread({}, mapState), {}, {\n          width: width,\n          height: height,\n          zoom: mapState.zoom + (Math.log2(scale) || 0)\n        }); // center and all layer bounds\n\n        if (exportImageSetting.center) {\n          var renderedLayers = layers.filter(function (layer, idx) {\n            return layer.id !== _constants.GEOCODER_LAYER_ID && layer.shouldRenderLayer(layerData[idx]);\n          });\n          var bounds = (0, _reducers.findMapBounds)(renderedLayers);\n          var centerAndZoom = (0, _utils.getCenterAndZoomFromBounds)(bounds, {\n            width: width,\n            height: height\n          });\n          if (centerAndZoom) {\n            var zoom = Number.isFinite(centerAndZoom.zoom) ? centerAndZoom.zoom : mapState.zoom;\n            newMapState.longitude = centerAndZoom.center[0];\n            newMapState.latitude = centerAndZoom.center[1];\n            newMapState.zoom = zoom + Number(Math.log2(scale) || 0);\n          }\n        }\n        var mapProps = _objectSpread(_objectSpread({}, mapFields), {}, {\n          mapStyle: this.scaledMapStyleSelector(this.props),\n          // override viewport based on export settings\n          mapState: newMapState,\n          mapControls: {\n            // override map legend visibility\n            mapLegend: {\n              show: legend,\n              active: true\n            }\n          },\n          MapComponent: _reactMapGl.StaticMap,\n          onMapRender: this._onMapRender,\n          isExport: true,\n          deckGlProps: _objectSpread(_objectSpread({}, mapFields.deckGlProps), {}, {\n            glOptions: {\n              preserveDrawingBuffer: true,\n              useDevicePixels: false\n            }\n          })\n        });\n        var mapContainers = !isSplit ? /*#__PURE__*/_react[\"default\"].createElement(MapContainer, (0, _extends2[\"default\"])({\n          index: 0,\n          primary: true\n        }, mapProps)) : /*#__PURE__*/_react[\"default\"].createElement(MapsLayout, {\n          className: \"plot-container-maps\"\n        }, splitMaps.map(function (settings, index) {\n          return /*#__PURE__*/_react[\"default\"].createElement(MapContainer, (0, _extends2[\"default\"])({\n            key: index,\n            index: index,\n            primary: index === 1\n          }, mapProps));\n        }));\n        return /*#__PURE__*/_react[\"default\"].createElement(StyledPlotContainer, {\n          className: \"export-map-instance\"\n        }, /*#__PURE__*/_react[\"default\"].createElement(StyledMapContainer, {\n          ref: this.plottingAreaRef,\n          width: size.width,\n          height: size.height\n        }, mapContainers));\n      }\n    }]);\n    return PlotContainer;\n  }(_react.Component);\n  return PlotContainer;\n}","map":{"version":3,"names":["exports","PlotContainerFactory","_extends2","_interopRequireDefault","require","_classCallCheck2","_createClass2","_assertThisInitialized2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_defineProperty2","_taggedTemplateLiteral2","_utils","_reducers","_mapContainer","_mapsLayout","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","props","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_isNativeReflectConstruct","PlotContainer","Reflect","construct","sham","Proxy","Boolean","prototype","valueOf","call","e","CLASS_FILTER","includes","node","className","OUT_OF_SCREEN_POSITION","deps","StyledPlotContainer","_styledComponents","div","_templateObject","StyledMapContainer","_templateObject2","width","height","MapContainer","MapsLayout","_Component","_super","_createSuper","_props","_this","_react","createRef","mapFields","mapStyle","imageSize","exportImageSetting","mapState","scale","_reselect","createSelector","mapStyleSelector","mapScaleSelector","bottomMapStyle","scaleMapStyleByResolution","topMapStyle","map","isStyleLoaded","_retrieveNewScreenshot","plottingAreaRef","current","convertToPng","DOM_FILTER_FUNC","then","setExportImageDataUri","err","setExportImageError","enableErrorNotification","addNotification","exportImageError","_onMapRender","_lodash","setExportImageSetting","processing","value","componentDidUpdate","prevProps","_this2","checks","shouldRetrieveScreenshot","some","item","_this$props","_this$props$splitMaps","splitMaps","layers","visState","layerData","legend","isSplit","size","imageW","imageH","newMapState","zoom","Math","log2","center","renderedLayers","layer","idx","id","_constants","GEOCODER_LAYER_ID","shouldRenderLayer","bounds","findMapBounds","centerAndZoom","getCenterAndZoomFromBounds","Number","isFinite","longitude","latitude","mapProps","mapControls","mapLegend","show","active","MapComponent","_reactMapGl","StaticMap","onMapRender","isExport","deckGlProps","glOptions","preserveDrawingBuffer","useDevicePixels","mapContainers","createElement","index","primary","settings"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/components/src/plot-container.tsx"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// libraries\nimport React, {Component, createRef} from 'react';\nimport {createSelector} from 'reselect';\nimport styled from 'styled-components';\nimport {StaticMap} from 'react-map-gl';\nimport debounce from 'lodash.debounce';\nimport {\n  exportImageError,\n  scaleMapStyleByResolution,\n  getCenterAndZoomFromBounds,\n  convertToPng,\n  getScaleFromImageSize\n} from '@kepler.gl/utils';\nimport {findMapBounds} from '@kepler.gl/reducers';\nimport MapContainerFactory from './map-container';\nimport MapsLayoutFactory from './maps-layout';\n\nimport {GEOCODER_LAYER_ID, ExportImage} from '@kepler.gl/constants';\nimport {SplitMap} from '@kepler.gl/types';\nimport {\n  setExportImageDataUri,\n  setExportImageError,\n  setExportImageSetting\n} from '@kepler.gl/actions';\nimport {mapFieldsSelector} from './kepler-gl';\n\nconst CLASS_FILTER = ['mapboxgl-control-container', 'attrition-link', 'attrition-logo'];\nconst DOM_FILTER_FUNC = node => !CLASS_FILTER.includes(node.className);\nconst OUT_OF_SCREEN_POSITION = -9999;\n\nPlotContainerFactory.deps = [MapContainerFactory, MapsLayoutFactory];\n\n// Remove mapbox logo in exported map, because it contains non-ascii characters\nconst StyledPlotContainer = styled.div`\n  .mapboxgl-ctrl-bottom-left,\n  .mapboxgl-ctrl-bottom-right,\n  .mapbox-attribution-container {\n    display: none;\n  }\n\n  position: absolute;\n  top: ${OUT_OF_SCREEN_POSITION}px;\n  left: ${OUT_OF_SCREEN_POSITION}px;\n`;\n\ninterface StyledMapContainerProps {\n  width?: number;\n  height?: number;\n}\n\nconst StyledMapContainer = styled.div<StyledMapContainerProps>`\n  width: ${props => props.width}px;\n  height: ${props => props.height}px;\n  display: flex;\n`;\n\ninterface PlotContainerProps {\n  width?: number;\n  height?: number;\n  exportImageSetting: ExportImage;\n  addNotification: Function;\n  mapFields: ReturnType<typeof mapFieldsSelector>;\n  setExportImageSetting: typeof setExportImageSetting;\n  setExportImageDataUri: typeof setExportImageDataUri;\n  setExportImageError: typeof setExportImageError;\n  splitMaps?: SplitMap[];\n  enableErrorNotification?: boolean;\n}\n\nexport default function PlotContainerFactory(\n  MapContainer: ReturnType<typeof MapContainerFactory>,\n  MapsLayout: ReturnType<typeof MapsLayoutFactory>\n): React.ComponentType<PlotContainerProps> {\n  class PlotContainer extends Component<PlotContainerProps> {\n    constructor(props) {\n      super(props);\n      this._onMapRender = debounce(this._onMapRender, 500);\n      this._retrieveNewScreenshot = debounce(this._retrieveNewScreenshot, 500);\n    }\n\n    componentDidMount() {\n      this.props.setExportImageSetting({processing: true});\n    }\n\n    componentDidUpdate(prevProps) {\n      // re-fetch the new screenshot only when ratio legend or resolution changes\n      const checks = ['ratio', 'resolution', 'legend'];\n      const shouldRetrieveScreenshot = checks.some(\n        item => this.props.exportImageSetting[item] !== prevProps.exportImageSetting[item]\n      );\n      if (shouldRetrieveScreenshot) {\n        this.props.setExportImageSetting({processing: true});\n        this._retrieveNewScreenshot();\n      }\n    }\n\n    plottingAreaRef = createRef<HTMLDivElement>();\n\n    mapStyleSelector = props => props.mapFields.mapStyle;\n    mapScaleSelector = props => {\n      const {imageSize} = props.exportImageSetting;\n      const {mapState} = props.mapFields;\n      if (imageSize.scale) {\n        return imageSize.scale;\n      }\n\n      const scale = getScaleFromImageSize(\n        imageSize.imageW,\n        imageSize.imageH,\n        mapState.width * (mapState.isSplit ? 2 : 1),\n        mapState.height\n      );\n\n      return scale > 0 ? scale : 1;\n    };\n\n    scaledMapStyleSelector = createSelector(\n      this.mapStyleSelector,\n      this.mapScaleSelector,\n      (mapStyle, scale) => ({\n        ...mapStyle,\n        bottomMapStyle: scaleMapStyleByResolution(mapStyle.bottomMapStyle, scale),\n        topMapStyle: scaleMapStyleByResolution(mapStyle.topMapStyle, scale)\n      })\n    );\n\n    _onMapRender = map => {\n      if (map.isStyleLoaded()) {\n        this._retrieveNewScreenshot();\n      }\n    };\n\n    _retrieveNewScreenshot = () => {\n      if (this.plottingAreaRef.current) {\n        convertToPng(this.plottingAreaRef.current, {filter: DOM_FILTER_FUNC})\n          .then(this.props.setExportImageDataUri)\n          .catch(err => {\n            this.props.setExportImageError(err);\n            if (this.props.enableErrorNotification) {\n              this.props.addNotification(exportImageError({err}));\n            }\n          });\n      }\n    };\n\n    render() {\n      const {exportImageSetting, mapFields, splitMaps = []} = this.props;\n      const {mapState, visState} = mapFields;\n      const {layers, layerData} = visState;\n      const {imageSize, legend} = exportImageSetting;\n\n      const isSplit = splitMaps && splitMaps.length > 1;\n\n      const size = {\n        width: imageSize?.imageW || 1,\n        height: imageSize?.imageH || 1\n      };\n      const width = size.width / (isSplit ? 2 : 1);\n      const height = size.height;\n      const scale = this.mapScaleSelector(this.props);\n      const newMapState = {\n        ...mapState,\n        width,\n        height,\n        zoom: mapState.zoom + (Math.log2(scale) || 0)\n      };\n\n      // center and all layer bounds\n      if (exportImageSetting.center) {\n        const renderedLayers = layers.filter(\n          (layer, idx) => layer.id !== GEOCODER_LAYER_ID && layer.shouldRenderLayer(layerData[idx])\n        );\n        const bounds = findMapBounds(renderedLayers);\n        const centerAndZoom = getCenterAndZoomFromBounds(bounds, {width, height});\n        if (centerAndZoom) {\n          const zoom = Number.isFinite(centerAndZoom.zoom) ? centerAndZoom.zoom : mapState.zoom;\n\n          newMapState.longitude = centerAndZoom.center[0];\n          newMapState.latitude = centerAndZoom.center[1];\n          newMapState.zoom = zoom + Number(Math.log2(scale) || 0);\n        }\n      }\n\n      const mapProps = {\n        ...mapFields,\n        mapStyle: this.scaledMapStyleSelector(this.props),\n\n        // override viewport based on export settings\n        mapState: newMapState,\n        mapControls: {\n          // override map legend visibility\n          mapLegend: {\n            show: legend,\n            active: true\n          }\n        },\n        MapComponent: StaticMap,\n        onMapRender: this._onMapRender,\n        isExport: true,\n        deckGlProps: {\n          ...mapFields.deckGlProps,\n          glOptions: {\n            preserveDrawingBuffer: true,\n            useDevicePixels: false\n          }\n        }\n      };\n\n      const mapContainers = !isSplit ? (\n        <MapContainer index={0} primary={true} {...mapProps} />\n      ) : (\n        <MapsLayout className=\"plot-container-maps\">\n          {splitMaps.map((settings, index) => (\n            <MapContainer key={index} index={index} primary={index === 1} {...mapProps} />\n          ))}\n        </MapsLayout>\n      );\n      return (\n        <StyledPlotContainer className=\"export-map-instance\">\n          <StyledMapContainer ref={this.plottingAreaRef} width={size.width} height={size.height}>\n            {mapContainers}\n          </StyledMapContainer>\n        </StyledPlotContainer>\n      );\n    }\n  }\n  return PlotContainer;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}