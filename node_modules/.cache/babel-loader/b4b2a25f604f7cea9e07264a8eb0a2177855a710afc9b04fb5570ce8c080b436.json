{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { getBlobOrSVGDataUrl } from './svg-utils';\nexport default function parseToImage(_x, _x2, _x3) {\n  return _parseToImage.apply(this, arguments);\n}\nfunction _parseToImage() {\n  _parseToImage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(arrayBuffer, options, url) {\n    var blobOrDataUrl, URL, objectUrl;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          blobOrDataUrl = getBlobOrSVGDataUrl(arrayBuffer, url);\n          URL = self.URL || self.webkitURL;\n          objectUrl = typeof blobOrDataUrl !== 'string' && URL.createObjectURL(blobOrDataUrl);\n          _context.prev = 3;\n          _context.next = 6;\n          return loadToImage(objectUrl || blobOrDataUrl, options);\n        case 6:\n          return _context.abrupt(\"return\", _context.sent);\n        case 7:\n          _context.prev = 7;\n          if (objectUrl) {\n            URL.revokeObjectURL(objectUrl);\n          }\n          return _context.finish(7);\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[3,, 7, 10]]);\n  }));\n  return _parseToImage.apply(this, arguments);\n}\nexport function loadToImage(_x4, _x5) {\n  return _loadToImage.apply(this, arguments);\n}\nfunction _loadToImage() {\n  _loadToImage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(url, options) {\n    var image;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          image = new Image();\n          image.src = url;\n          if (!(options.image && options.image.decode && image.decode)) {\n            _context2.next = 6;\n            break;\n          }\n          _context2.next = 5;\n          return image.decode();\n        case 5:\n          return _context2.abrupt(\"return\", image);\n        case 6:\n          _context2.next = 8;\n          return new Promise(function (resolve, reject) {\n            try {\n              image.onload = function () {\n                return resolve(image);\n              };\n              image.onerror = function (err) {\n                return reject(new Error(\"Could not load image \".concat(url, \": \").concat(err)));\n              };\n            } catch (error) {\n              reject(error);\n            }\n          });\n        case 8:\n          return _context2.abrupt(\"return\", _context2.sent);\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _loadToImage.apply(this, arguments);\n}","map":{"version":3,"names":["getBlobOrSVGDataUrl","parseToImage","_x","_x2","_x3","_parseToImage","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","arrayBuffer","options","url","blobOrDataUrl","URL","objectUrl","wrap","_callee$","_context","prev","next","self","webkitURL","createObjectURL","loadToImage","abrupt","sent","revokeObjectURL","finish","stop","_x4","_x5","_loadToImage","_callee2","image","_callee2$","_context2","Image","src","decode","Promise","resolve","reject","onload","onerror","err","Error","concat","error"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@loaders.gl/images/src/lib/parsers/parse-to-image.ts"],"sourcesContent":["import type {ImageLoaderOptions} from '../../image-loader';\nimport {getBlobOrSVGDataUrl} from './svg-utils';\n\n// Parses html image from array buffer\nexport default async function parseToImage(\n  arrayBuffer: ArrayBuffer,\n  options: ImageLoaderOptions,\n  url?: string\n): Promise<HTMLImageElement> {\n  // Note: image parsing requires conversion to Blob (for createObjectURL).\n  // Potentially inefficient for not using `response.blob()` (and for File / Blob inputs)...\n  // But presumably not worth adding 'blob' flag to loader objects?\n\n  const blobOrDataUrl = getBlobOrSVGDataUrl(arrayBuffer, url);\n  const URL = self.URL || self.webkitURL;\n  const objectUrl = typeof blobOrDataUrl !== 'string' && URL.createObjectURL(blobOrDataUrl);\n  try {\n    return await loadToImage(objectUrl || blobOrDataUrl, options);\n  } finally {\n    if (objectUrl) {\n      URL.revokeObjectURL(objectUrl);\n    }\n  }\n}\n\nexport async function loadToImage(url, options): Promise<HTMLImageElement> {\n  const image = new Image();\n  image.src = url;\n\n  // The `image.onload()` callback does not guarantee that the image has been decoded\n  // so a main thread \"freeze\" can be incurred when using the image for the first time.\n  // `Image.decode()` returns a promise that completes when image is decoded.\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/decode\n  // Note: When calling `img.decode()`, we do not need to wait for `img.onload()`\n  // Note: `HTMLImageElement.decode()` is not available in Edge and IE11\n  if (options.image && options.image.decode && image.decode) {\n    await image.decode();\n    return image;\n  }\n\n  // Create a promise that tracks onload/onerror callbacks\n  return await new Promise((resolve, reject) => {\n    try {\n      image.onload = () => resolve(image);\n      image.onerror = (err) => reject(new Error(`Could not load image ${url}: ${err}`));\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}