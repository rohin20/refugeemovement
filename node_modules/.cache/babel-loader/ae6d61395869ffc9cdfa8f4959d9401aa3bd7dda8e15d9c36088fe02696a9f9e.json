{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _awaitAsyncGenerator from \"@babel/runtime/helpers/esm/awaitAsyncGenerator\";\nimport _wrapAsyncGenerator from \"@babel/runtime/helpers/esm/wrapAsyncGenerator\";\nvar DEFAULT_CHUNK_SIZE = 1024 * 1024;\nexport function makeBlobIterator(_x) {\n  return _makeBlobIterator.apply(this, arguments);\n}\nfunction _makeBlobIterator() {\n  _makeBlobIterator = _wrapAsyncGenerator(_regeneratorRuntime.mark(function _callee(file) {\n    var options,\n      chunkSize,\n      offset,\n      end,\n      chunk,\n      _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            chunkSize = options.chunkSize || DEFAULT_CHUNK_SIZE;\n            offset = 0;\n          case 3:\n            if (!(offset < file.size)) {\n              _context.next = 13;\n              break;\n            }\n            end = offset + chunkSize;\n            _context.next = 7;\n            return _awaitAsyncGenerator(readFileSlice(file, offset, end));\n          case 7:\n            chunk = _context.sent;\n            offset = end;\n            _context.next = 11;\n            return chunk;\n          case 11:\n            _context.next = 3;\n            break;\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _makeBlobIterator.apply(this, arguments);\n}\nexport function readFileSlice(_x2, _x3, _x4) {\n  return _readFileSlice.apply(this, arguments);\n}\nfunction _readFileSlice() {\n  _readFileSlice = _asyncToGenerator(_regeneratorRuntime.mark(function _callee2(file, offset, end) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return new Promise(function (resolve, reject) {\n              var slice = file.slice(offset, end);\n              var fileReader = new FileReader();\n              fileReader.onload = function (event) {\n                return resolve(event.target && event.target.result);\n              };\n              fileReader.onerror = function (error) {\n                return reject(error);\n              };\n              fileReader.readAsArrayBuffer(slice);\n            });\n          case 2:\n            return _context2.abrupt(\"return\", _context2.sent);\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _readFileSlice.apply(this, arguments);\n}","map":{"version":3,"names":["DEFAULT_CHUNK_SIZE","makeBlobIterator","_x","_makeBlobIterator","apply","arguments","_callee","file","options","chunkSize","offset","end","chunk","_args","_regeneratorRuntime","wrap","_callee$","_context","prev","next","length","undefined","size","_awaitAsyncGenerator","readFileSlice","sent","stop","_x2","_x3","_x4","_readFileSlice","_callee2","_callee2$","_context2","Promise","resolve","reject","slice","fileReader","FileReader","onload","event","target","result","onerror","error","readAsArrayBuffer","abrupt"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/kepler.gl/node_modules/@loaders.gl/core/src/iterator-utils/make-iterator/blob-iterator.js"],"sourcesContent":["/* global FileReader */\n\nconst DEFAULT_CHUNK_SIZE = 1024 * 1024; // 1MB â€” biggest value that keeps UI responsive\n\nexport async function* makeBlobIterator(file, options = {}) {\n  const chunkSize = options.chunkSize || DEFAULT_CHUNK_SIZE;\n\n  let offset = 0;\n  while (offset < file.size) {\n    const end = offset + chunkSize;\n\n    const chunk = await readFileSlice(file, offset, end);\n\n    offset = end;\n    yield chunk;\n  }\n}\n\nexport async function readFileSlice(file, offset, end) {\n  return await new Promise((resolve, reject) => {\n    // The trick when reading File objects is to read successive \"slices\" of the File\n    // Per spec https://w3c.github.io/FileAPI/, slicing a File should only update the start and end fields\n    // Actually reading from file should happen in `readAsArrayBuffer` (and as far we can tell it does)\n    const slice = file.slice(offset, end);\n\n    const fileReader = new FileReader();\n    fileReader.onload = event => resolve(event.target && event.target.result);\n    fileReader.onerror = error => reject(error);\n    fileReader.readAsArrayBuffer(slice);\n  });\n}\n"],"mappings":";;;;AAEA,IAAMA,kBAAkB,GAAG,OAAO,IAAlC;AAEA,gBAAuBC,gBAAvBA,CAAAC,EAAA;EAAA,OAAAC,iBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;;mEAAO,SAAAC,QAAiCC,IAAjC;IAAA,IAAAC,OAAA;MAAAC,SAAA;MAAAC,MAAA;MAAAC,GAAA;MAAAC,KAAA;MAAAC,KAAA,GAAAR,SAAA;IAAA,OAAAS,mBAAA,CAAAC,IAAA,UAAAC,SAAAC,QAAA;MAAA;QAAA,QAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAuCX,OAAvC,GAAAK,KAAA,CAAAO,MAAA,QAAAP,KAAA,QAAAQ,SAAA,GAAAR,KAAA,MAAiD,EAAjD;YACCJ,SADD,GACaD,OAAO,CAACC,SAAR,IAAqBT,kBADlC;YAGDU,MAHC,GAGQ,CAHR;UAAA;YAAA,MAIEA,MAAM,GAAGH,IAAI,CAACe,IAJhB;cAAAL,QAAA,CAAAE,IAAA;cAAA;YAAA;YAKGR,GALH,GAKSD,MAAM,GAAGD,SALlB;YAAAQ,QAAA,CAAAE,IAAA;YAAA,OAAAI,oBAAA,CAOiBC,aAAa,CAACjB,IAAD,EAAOG,MAAP,EAAeC,GAAf,CAP9B;UAAA;YAOGC,KAPH,GAAAK,QAAA,CAAAQ,IAAA;YASHf,MAAM,GAAGC,GAAT;YATGM,QAAA,CAAAE,IAAA;YAUH,OAAMP,KAAN;UAVG;YAAAK,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA;YAAA,OAAAF,QAAA,CAAAS,IAAA;QAAA;MAAA;IAAA,GAAApB,OAAA;EAAA,C;;;AAcP,gBAAsBkB,aAAtBA,CAAAG,GAAA,EAAAC,GAAA,EAAAC,GAAA;EAAA,OAAAC,cAAA,CAAA1B,KAAA,OAAAC,SAAA;AAAA;;8DAAO,SAAA0B,SAA6BxB,IAA7B,EAAmCG,MAAnC,EAA2CC,GAA3C;IAAA,OAAAG,mBAAA,CAAAC,IAAA,UAAAiB,UAAAC,SAAA;MAAA;QAAA,QAAAA,SAAA,CAAAf,IAAA,GAAAe,SAAA,CAAAd,IAAA;UAAA;YAAAc,SAAA,CAAAd,IAAA;YAAA,OACQ,IAAIe,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;cAI5C,IAAMC,KAAK,GAAG9B,IAAI,CAAC8B,KAAL,CAAW3B,MAAX,EAAmBC,GAAnB,CAAd;cAEA,IAAM2B,UAAU,GAAG,IAAIC,UAAJ,EAAnB;cACAD,UAAU,CAACE,MAAX,GAAoB,UAAAC,KAAK;gBAAA,OAAIN,OAAO,CAACM,KAAK,CAACC,MAAN,IAAgBD,KAAK,CAACC,MAAN,CAAaC,MAA9B,CAAX;cAAA,CAAzB;cACAL,UAAU,CAACM,OAAX,GAAqB,UAAAC,KAAK;gBAAA,OAAIT,MAAM,CAACS,KAAD,CAAV;cAAA,CAA1B;cACAP,UAAU,CAACQ,iBAAX,CAA6BT,KAA7B;YACD,CAVY,CADR;UAAA;YAAA,OAAAJ,SAAA,CAAAc,MAAA,WAAAd,SAAA,CAAAR,IAAA;UAAA;UAAA;YAAA,OAAAQ,SAAA,CAAAP,IAAA;QAAA;MAAA;IAAA,GAAAK,QAAA;EAAA,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}