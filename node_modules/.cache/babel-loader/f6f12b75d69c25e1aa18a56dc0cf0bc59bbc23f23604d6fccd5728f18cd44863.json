{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\nvar _chickletedInput = require(\"../../../common/item-selector/chickleted-input\");\nvar _icons = require(\"../../../common/icons\");\nvar _dropdownList = _interopRequireDefault(require(\"../../../common/item-selector/dropdown-list\"));\nvar _localization = require(\"@kepler.gl/localization\");\nvar _reactOnclickoutside = _interopRequireDefault(require(\"react-onclickoutside\"));\nvar _constants = require(\"@kepler.gl/constants\");\nvar _utils = require(\"@kepler.gl/utils\");\nvar _tippyTooltip = _interopRequireDefault(require(\"../../../common/tippy-tooltip\"));\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nvar TIME_DISPLAY = '2020-05-11 14:00';\nvar getValue = function getValue(fmt) {\n  return fmt[_constants.TOOLTIP_KEY];\n};\nvar addDTimeLabel = function addDTimeLabel(formats) {\n  return formats.map(function (f) {\n    return _objectSpread(_objectSpread({}, f), {}, {\n      label: f.type === _constants.TOOLTIP_FORMAT_TYPES.DATE_TIME || f.type === _constants.TOOLTIP_FORMAT_TYPES.DATE ? (0, _utils.getFormatter)(getValue(f))(TIME_DISPLAY) : f.label\n    });\n  });\n};\nfunction getFormatLabels(fields, fieldName) {\n  var fieldType = fields.find(function (f) {\n    return f.name === fieldName;\n  }).type;\n  var tooltipTypes = fieldType && _constants.FIELD_OPTS[fieldType].format.tooltip || [];\n  var formatLabels = Object.values(_constants.TOOLTIP_FORMATS).filter(function (t) {\n    return tooltipTypes.includes(t.type);\n  });\n  return addDTimeLabel(formatLabels);\n}\nvar ChickletAddonWrapper = _styledComponents[\"default\"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  position: relative;\\n\"])));\nvar ChickletAddon = _styledComponents[\"default\"].div(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  margin-right: 4px;\\n\"])));\nvar StyledPopover = _styledComponents[\"default\"].div(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  margin-left: -64px;\\n  position: absolute;\\n  top: 20px;\\n  width: 140px;\\n  z-index: 101;\\n\"])));\nvar hashStyles = {\n  SHOW: 'SHOW',\n  ACTIVE: 'ACTIVE'\n};\nvar IconDiv = _styledComponents[\"default\"].div.attrs({\n  className: 'tooltip-chicklet__icon'\n})(_templateObject4 || (_templateObject4 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  color: \", \";\\n\"])), function (props) {\n  return props.status === hashStyles.SHOW ? props.theme.subtextColorActive : props.status === hashStyles.ACTIVE ? props.theme.activeColor : props.theme.textColor;\n});\nfunction getFormatTooltip(formatLabels, format) {\n  if (!format) {\n    return null;\n  }\n  var formatLabel = formatLabels.find(function (fl) {\n    return getValue(fl) === format;\n  });\n  if (formatLabel) {\n    return formatLabel.label;\n  }\n  return (0, _typeof2[\"default\"])(format) === 'object' ? JSON.stringify(format, null, 2) : String(format);\n}\nfunction TooltipChickletFactory(dataId, config, onChange, fields) {\n  var TooltipChicklet = /*#__PURE__*/function (_Component) {\n    (0, _inherits2[\"default\"])(TooltipChicklet, _Component);\n    var _super = _createSuper(TooltipChicklet);\n    function TooltipChicklet() {\n      var _this;\n      (0, _classCallCheck2[\"default\"])(this, TooltipChicklet);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _super.call.apply(_super, [this].concat(args));\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"state\", {\n        show: false\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"node\", void 0);\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"handleClickOutside\", function (e) {\n        if (_this.node.contains(e.target)) {\n          return;\n        }\n      });\n      return _this;\n    }\n    (0, _createClass2[\"default\"])(TooltipChicklet, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside, false);\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside, false);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n        var _this$props = this.props,\n          disabled = _this$props.disabled,\n          item = _this$props.item,\n          displayOption = _this$props.displayOption,\n          remove = _this$props.remove;\n        var show = this.state.show;\n        var tooltipField = config.fieldsToShow[dataId].find(function (fieldToShow) {\n          return fieldToShow.name === item.name;\n        });\n        if (!tooltipField) {\n          return null;\n        }\n        var formatLabels = getFormatLabels(fields, tooltipField.name);\n        var hasFormat = Boolean(tooltipField.format);\n        var selectionIndex = formatLabels.findIndex(function (fl) {\n          return getValue(fl) === tooltipField.format;\n        });\n        var hashStyle = show ? hashStyles.SHOW : hasFormat ? hashStyles.ACTIVE : null;\n        return /*#__PURE__*/_react[\"default\"].createElement(_chickletedInput.ChickletButton, {\n          ref: function ref(node) {\n            return _this2.node = node;\n          }\n        }, /*#__PURE__*/_react[\"default\"].createElement(_chickletedInput.ChickletTag, null, displayOption(item)), formatLabels.length > 1 && /*#__PURE__*/_react[\"default\"].createElement(ChickletAddonWrapper, null, /*#__PURE__*/_react[\"default\"].createElement(_tippyTooltip[\"default\"], {\n          placement: \"top\",\n          render: function render() {\n            return /*#__PURE__*/_react[\"default\"].createElement(\"span\", null, hasFormat ? getFormatTooltip(formatLabels, tooltipField.format) : /*#__PURE__*/_react[\"default\"].createElement(_localization.FormattedMessage, {\n              id: 'fieldSelector.formatting'\n            }));\n          }\n        }, /*#__PURE__*/_react[\"default\"].createElement(ChickletAddon, null, /*#__PURE__*/_react[\"default\"].createElement(IconDiv, {\n          status: hashStyle\n        }, /*#__PURE__*/_react[\"default\"].createElement(_icons.Hash, {\n          height: \"8px\",\n          onClick: function onClick(e) {\n            e.stopPropagation();\n            _this2.setState({\n              show: Boolean(!show)\n            });\n          }\n        })))), show && /*#__PURE__*/_react[\"default\"].createElement(StyledPopover, null, /*#__PURE__*/_react[\"default\"].createElement(_dropdownList[\"default\"], {\n          options: formatLabels,\n          selectionIndex: selectionIndex,\n          displayOption: function displayOption(_ref) {\n            var label = _ref.label;\n            return label;\n          },\n          onOptionSelected: function onOptionSelected(result, e) {\n            e.stopPropagation();\n            _this2.setState({\n              show: false\n            });\n            var oldFieldsToShow = config.fieldsToShow[dataId];\n            var fieldsToShow = oldFieldsToShow.map(function (fieldToShow) {\n              return fieldToShow.name === tooltipField.name ? {\n                name: tooltipField.name,\n                format: getValue(result)\n              } : fieldToShow;\n            });\n            var newConfig = _objectSpread(_objectSpread({}, config), {}, {\n              fieldsToShow: _objectSpread(_objectSpread({}, config.fieldsToShow), {}, (0, _defineProperty2[\"default\"])({}, dataId, fieldsToShow))\n            });\n            onChange(newConfig);\n          }\n        }))), /*#__PURE__*/_react[\"default\"].createElement(_icons.Delete, {\n          onClick: disabled ? null : remove\n        }));\n      }\n    }]);\n    return TooltipChicklet;\n  }(_react.Component);\n  return (0, _reactOnclickoutside[\"default\"])(TooltipChicklet);\n}\nvar _default = TooltipChickletFactory;\nexports[\"default\"] = _default;","map":{"version":3,"names":["exports","_classCallCheck2","_interopRequireDefault","require","_createClass2","_assertThisInitialized2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_typeof2","_taggedTemplateLiteral2","_defineProperty2","_localization","_reactOnclickoutside","_constants","_utils","_tippyTooltip","_templateObject","_templateObject2","_templateObject3","_templateObject4","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","_objectSpread","target","i","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","TIME_DISPLAY","getValue","fmt","TOOLTIP_KEY","formats","map","f","label","type","TOOLTIP_FORMAT_TYPES","DATE_TIME","DATE","getFormatter","getFormatLabels","fields","fieldName","name","tooltipTypes","fieldType","FIELD_OPTS","format","tooltip","formatLabels","values","TOOLTIP_FORMATS","t","includes","addDTimeLabel","ChickletAddonWrapper","_styledComponents","div","ChickletAddon","StyledPopover","hashStyles","SHOW","ACTIVE","IconDiv","attrs","props","status","theme","subtextColorActive","activeColor","textColor","getFormatTooltip","formatLabel","find","fl","JSON","stringify","String","TooltipChickletFactory","dataId","config","onChange","TooltipChicklet","_Component","_super","_len","args","Array","_key","_this","concat","show","node","contains","value","componentDidMount","document","addEventListener","handleClickOutside","componentWillUnmount","render","_this2","_this$props","disabled","item","displayOption","remove","state","tooltipField","fieldsToShow","fieldToShow","hasFormat","selectionIndex","findIndex","hashStyle","_react","createElement","_chickletedInput","ChickletButton","ref","ChickletTag","placement","FormattedMessage","id","_icons","Hash","height","stopPropagation","setState","_dropdownList","_ref","onOptionSelected","oldFieldsToShow"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/components/src/side-panel/interaction-panel/tooltip-config/tooltip-chicklet.tsx"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {Component, ComponentType} from 'react';\nimport styled from 'styled-components';\nimport {ChickletButton, ChickletTag} from '../../../common/item-selector/chickleted-input';\nimport {Hash, Delete} from '../../../common/icons';\nimport DropdownList from '../../../common/item-selector/dropdown-list';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport onClickOutside from 'react-onclickoutside';\nimport {\n  FIELD_OPTS,\n  TOOLTIP_FORMATS,\n  TOOLTIP_FORMAT_TYPES,\n  TOOLTIP_KEY\n} from '@kepler.gl/constants';\nimport {getFormatter} from '@kepler.gl/utils';\nimport TippyTooltip from '../../../common/tippy-tooltip';\n\ninterface TooltipChickletProps {\n  disabled: boolean;\n  item: {name: string};\n  displayOption: Function;\n  remove: any;\n}\n\ntype TooltipConfig = {\n  fieldsToShow: {\n    [key: string]: {name: string; format: string | null}[];\n  };\n  compareMode: boolean;\n  compareType: string[];\n};\n\ntype TooltipFields = {\n  format?: string;\n  id?: string;\n  name?: string;\n  fieldIdx?: number;\n  type?: number;\n};\n\ntype TimeLabelFormat = {\n  id: string;\n  format: string | null;\n  type: string;\n  label: string;\n};\n\ntype IconDivProps = {\n  status: string | null;\n};\n\nconst TIME_DISPLAY = '2020-05-11 14:00';\nconst getValue = fmt => fmt[TOOLTIP_KEY];\n\nconst addDTimeLabel = (formats: TimeLabelFormat[]) =>\n  formats.map(f => ({\n    ...f,\n    label:\n      f.type === TOOLTIP_FORMAT_TYPES.DATE_TIME || f.type === TOOLTIP_FORMAT_TYPES.DATE\n        ? getFormatter(getValue(f))(TIME_DISPLAY)\n        : f.label\n  }));\n\nfunction getFormatLabels(fields: any, fieldName: string) {\n  const fieldType = fields.find((f: TooltipFields) => f.name === fieldName).type;\n  const tooltipTypes = (fieldType && FIELD_OPTS[fieldType].format.tooltip) || [];\n  const formatLabels: TimeLabelFormat[] = Object.values(TOOLTIP_FORMATS).filter(t =>\n    tooltipTypes.includes(t.type)\n  );\n  return addDTimeLabel(formatLabels);\n}\n\nconst ChickletAddonWrapper = styled.div`\n  position: relative;\n`;\n\nconst ChickletAddon = styled.div`\n  margin-right: 4px;\n`;\n\nconst StyledPopover = styled.div`\n  margin-left: -64px;\n  position: absolute;\n  top: 20px;\n  width: 140px;\n  z-index: 101;\n`;\n\nconst hashStyles = {\n  SHOW: 'SHOW',\n  ACTIVE: 'ACTIVE'\n};\n\nconst IconDiv = styled.div.attrs({\n  className: 'tooltip-chicklet__icon'\n})<IconDivProps>`\n  color: ${props =>\n    props.status === hashStyles.SHOW\n      ? props.theme.subtextColorActive\n      : props.status === hashStyles.ACTIVE\n      ? props.theme.activeColor\n      : props.theme.textColor};\n`;\n\nfunction getFormatTooltip(formatLabels: TimeLabelFormat[], format: string | null) {\n  if (!format) {\n    return null;\n  }\n  const formatLabel = formatLabels.find(fl => getValue(fl) === format);\n  if (formatLabel) {\n    return formatLabel.label;\n  }\n  return typeof format === 'object' ? JSON.stringify(format, null, 2) : String(format);\n}\n\nfunction TooltipChickletFactory(\n  dataId: string,\n  config: TooltipConfig,\n  onChange: (cfg: TooltipConfig) => void,\n  fields: TooltipFields[]\n): ComponentType<TooltipChickletProps> {\n  class TooltipChicklet extends Component<TooltipChickletProps> {\n    state = {\n      show: false\n    };\n    private node!: HTMLDivElement;\n\n    componentDidMount() {\n      document.addEventListener('mousedown', this.handleClickOutside, false);\n    }\n\n    componentWillUnmount() {\n      document.removeEventListener('mousedown', this.handleClickOutside, false);\n    }\n\n    handleClickOutside = (e: any) => {\n      if (this.node.contains(e.target)) {\n        return;\n      }\n    };\n\n    render() {\n      const {disabled, item, displayOption, remove} = this.props;\n      const {show} = this.state;\n      const tooltipField = config.fieldsToShow[dataId].find(\n        fieldToShow => fieldToShow.name === item.name\n      );\n      if (!tooltipField) {\n        return null;\n      }\n      const formatLabels = getFormatLabels(fields, tooltipField.name);\n      const hasFormat = Boolean(tooltipField.format);\n      const selectionIndex = formatLabels.findIndex(fl => getValue(fl) === tooltipField.format);\n      const hashStyle = show ? hashStyles.SHOW : hasFormat ? hashStyles.ACTIVE : null;\n\n      return (\n        <ChickletButton ref={(node: HTMLDivElement) => (this.node = node)}>\n          <ChickletTag>{displayOption(item)}</ChickletTag>\n          {formatLabels.length > 1 && (\n            <ChickletAddonWrapper>\n              <TippyTooltip\n                placement=\"top\"\n                render={() => (\n                  <span>\n                    {hasFormat ? (\n                      getFormatTooltip(formatLabels, tooltipField.format)\n                    ) : (\n                      <FormattedMessage id={'fieldSelector.formatting'} />\n                    )}\n                  </span>\n                )}\n              >\n                <ChickletAddon>\n                  <IconDiv status={hashStyle}>\n                    <Hash\n                      height=\"8px\"\n                      onClick={e => {\n                        e.stopPropagation();\n                        this.setState({show: Boolean(!show)});\n                      }}\n                    />\n                  </IconDiv>\n                </ChickletAddon>\n              </TippyTooltip>\n              {show && (\n                <StyledPopover>\n                  <DropdownList\n                    options={formatLabels}\n                    selectionIndex={selectionIndex}\n                    displayOption={({label}) => label}\n                    onOptionSelected={(result, e) => {\n                      e.stopPropagation();\n                      this.setState({\n                        show: false\n                      });\n\n                      const oldFieldsToShow = config.fieldsToShow[dataId];\n                      const fieldsToShow = oldFieldsToShow.map(fieldToShow => {\n                        return fieldToShow.name === tooltipField.name\n                          ? {\n                              name: tooltipField.name,\n                              format: getValue(result)\n                            }\n                          : fieldToShow;\n                      });\n                      const newConfig = {\n                        ...config,\n                        fieldsToShow: {\n                          ...config.fieldsToShow,\n                          [dataId]: fieldsToShow\n                        }\n                      };\n                      onChange(newConfig);\n                    }}\n                  />\n                </StyledPopover>\n              )}\n            </ChickletAddonWrapper>\n          )}\n          <Delete onClick={disabled ? null : remove} />\n        </ChickletButton>\n      );\n    }\n  }\n  return onClickOutside(TooltipChicklet);\n}\n\nexport default TooltipChickletFactory;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}