{"ast":null,"code":"import _objectSpread from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Layer, project32, picking, log } from '@deck.gl/core';\nimport { isWebGL2 } from '@luma.gl/core';\nimport { pbr } from '@luma.gl/shadertools';\nimport { ScenegraphNode, createGLTFObjects } from '@luma.gl/experimental';\nimport { GLTFLoader } from '@loaders.gl/gltf';\nimport { waitForGLTFAssets } from './gltf-utils';\nimport { MATRIX_ATTRIBUTES, shouldComposeModelMatrix } from '../utils/matrix';\nimport vs from './scenegraph-layer-vertex.glsl';\nimport fs from './scenegraph-layer-fragment.glsl';\nvar DEFAULT_COLOR = [255, 255, 255, 255];\nvar defaultProps = {\n  scenegraph: {\n    type: 'object',\n    value: null,\n    async: true\n  },\n  getScene: function getScene(gltf) {\n    if (gltf && gltf.scenes) {\n      return typeof gltf.scene === 'object' ? gltf.scene : gltf.scenes[gltf.scene || 0];\n    }\n    return gltf;\n  },\n  getAnimator: function getAnimator(scenegraph) {\n    return scenegraph && scenegraph.animator;\n  },\n  _animations: null,\n  sizeScale: {\n    type: 'number',\n    value: 1,\n    min: 0\n  },\n  sizeMinPixels: {\n    type: 'number',\n    min: 0,\n    value: 0\n  },\n  sizeMaxPixels: {\n    type: 'number',\n    min: 0,\n    value: Number.MAX_SAFE_INTEGER\n  },\n  getPosition: {\n    type: 'accessor',\n    value: function value(x) {\n      return x.position;\n    }\n  },\n  getColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  _lighting: 'flat',\n  _imageBasedLightingEnvironment: null,\n  getOrientation: {\n    type: 'accessor',\n    value: [0, 0, 0]\n  },\n  getScale: {\n    type: 'accessor',\n    value: [1, 1, 1]\n  },\n  getTranslation: {\n    type: 'accessor',\n    value: [0, 0, 0]\n  },\n  getTransformMatrix: {\n    type: 'accessor',\n    value: []\n  },\n  loaders: [GLTFLoader]\n};\nvar ScenegraphLayer = /*#__PURE__*/function (_Layer) {\n  _inherits(ScenegraphLayer, _Layer);\n  var _super = _createSuper(ScenegraphLayer);\n  function ScenegraphLayer() {\n    var _this;\n    _classCallCheck(this, ScenegraphLayer);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"state\", void 0);\n    return _this;\n  }\n  _createClass(ScenegraphLayer, [{\n    key: \"getShaders\",\n    value: function getShaders() {\n      var modules = [project32, picking];\n      if (this.props._lighting === 'pbr') {\n        modules.push(pbr);\n      }\n      return {\n        vs: vs,\n        fs: fs,\n        modules: modules\n      };\n    }\n  }, {\n    key: \"initializeState\",\n    value: function initializeState() {\n      var attributeManager = this.getAttributeManager();\n      attributeManager.addInstanced({\n        instancePositions: {\n          size: 3,\n          type: 5130,\n          fp64: this.use64bitPositions(),\n          accessor: 'getPosition',\n          transition: true\n        },\n        instanceColors: {\n          type: 5121,\n          size: this.props.colorFormat.length,\n          accessor: 'getColor',\n          normalized: true,\n          defaultValue: DEFAULT_COLOR,\n          transition: true\n        },\n        instanceModelMatrix: MATRIX_ATTRIBUTES\n      });\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(params) {\n      _get(_getPrototypeOf(ScenegraphLayer.prototype), \"updateState\", this).call(this, params);\n      var props = params.props,\n        oldProps = params.oldProps;\n      if (props.scenegraph !== oldProps.scenegraph) {\n        this._updateScenegraph();\n      } else if (props._animations !== oldProps._animations) {\n        this._applyAnimationsProp(this.state.scenegraph, this.state.animator, props._animations);\n      }\n    }\n  }, {\n    key: \"finalizeState\",\n    value: function finalizeState(context) {\n      _get(_getPrototypeOf(ScenegraphLayer.prototype), \"finalizeState\", this).call(this, context);\n      this._deleteScenegraph();\n    }\n  }, {\n    key: \"_updateScenegraph\",\n    value: function _updateScenegraph() {\n      var _this2 = this;\n      var props = this.props;\n      var gl = this.context.gl;\n      var scenegraphData = null;\n      if (props.scenegraph instanceof ScenegraphNode) {\n        scenegraphData = {\n          scenes: [props.scenegraph]\n        };\n      } else if (props.scenegraph && !props.scenegraph.gltf) {\n        var gltf = props.scenegraph;\n        var gltfObjects = createGLTFObjects(gl, gltf, this._getModelOptions());\n        scenegraphData = _objectSpread({\n          gltf: gltf\n        }, gltfObjects);\n        waitForGLTFAssets(gltfObjects).then(function () {\n          return _this2.setNeedsRedraw();\n        });\n      } else if (props.scenegraph) {\n        log.deprecated('ScenegraphLayer.props.scenegraph', 'Use GLTFLoader instead of GLTFScenegraphLoader')();\n        scenegraphData = props.scenegraph;\n      }\n      var options = {\n        layer: this,\n        gl: gl\n      };\n      var scenegraph = props.getScene(scenegraphData, options);\n      var animator = props.getAnimator(scenegraphData, options);\n      if (scenegraph instanceof ScenegraphNode) {\n        this._deleteScenegraph();\n        this._applyAllAttributes(scenegraph);\n        this._applyAnimationsProp(scenegraph, animator, props._animations);\n        this.setState({\n          scenegraph: scenegraph,\n          animator: animator\n        });\n      } else if (scenegraph !== null) {\n        log.warn('invalid scenegraph:', scenegraph)();\n      }\n    }\n  }, {\n    key: \"_applyAllAttributes\",\n    value: function _applyAllAttributes(scenegraph) {\n      var _this3 = this;\n      if (this.state.attributesAvailable) {\n        var allAttributes = this.getAttributeManager().getAttributes();\n        scenegraph.traverse(function (model) {\n          _this3._setModelAttributes(model.model, allAttributes);\n        });\n      }\n    }\n  }, {\n    key: \"_applyAnimationsProp\",\n    value: function _applyAnimationsProp(scenegraph, animator, animationsProp) {\n      if (!scenegraph || !animator || !animationsProp) {\n        return;\n      }\n      var animations = animator.getAnimations();\n      Object.keys(animationsProp).sort().forEach(function (key) {\n        var value = animationsProp[key];\n        if (key === '*') {\n          animations.forEach(function (animation) {\n            Object.assign(animation, value);\n          });\n        } else if (Number.isFinite(Number(key))) {\n          var number = Number(key);\n          if (number >= 0 && number < animations.length) {\n            Object.assign(animations[number], value);\n          } else {\n            log.warn(\"animation \".concat(key, \" not found\"))();\n          }\n        } else {\n          var findResult = animations.find(function (_ref) {\n            var name = _ref.name;\n            return name === key;\n          });\n          if (findResult) {\n            Object.assign(findResult, value);\n          } else {\n            log.warn(\"animation \".concat(key, \" not found\"))();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"_deleteScenegraph\",\n    value: function _deleteScenegraph() {\n      var scenegraph = this.state.scenegraph;\n      if (scenegraph instanceof ScenegraphNode) {\n        scenegraph.delete();\n      }\n    }\n  }, {\n    key: \"_getModelOptions\",\n    value: function _getModelOptions() {\n      var _imageBasedLightingEnvironment = this.props._imageBasedLightingEnvironment;\n      var env = null;\n      if (_imageBasedLightingEnvironment) {\n        if (typeof _imageBasedLightingEnvironment === 'function') {\n          env = _imageBasedLightingEnvironment({\n            gl: this.context.gl,\n            layer: this\n          });\n        } else {\n          env = _imageBasedLightingEnvironment;\n        }\n      }\n      return {\n        gl: this.context.gl,\n        waitForFullLoad: true,\n        imageBasedLightingEnvironment: env,\n        modelOptions: _objectSpread({\n          isInstanced: true,\n          transpileToGLSL100: !isWebGL2(this.context.gl)\n        }, this.getShaders()),\n        useTangents: false\n      };\n    }\n  }, {\n    key: \"updateAttributes\",\n    value: function updateAttributes(changedAttributes) {\n      var _this4 = this;\n      this.setState({\n        attributesAvailable: true\n      });\n      if (!this.state.scenegraph) return;\n      this.state.scenegraph.traverse(function (model) {\n        _this4._setModelAttributes(model.model, changedAttributes);\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(_ref2) {\n      var _ref2$moduleParameter = _ref2.moduleParameters,\n        moduleParameters = _ref2$moduleParameter === void 0 ? null : _ref2$moduleParameter,\n        _ref2$parameters = _ref2.parameters,\n        parameters = _ref2$parameters === void 0 ? {} : _ref2$parameters,\n        context = _ref2.context;\n      if (!this.state.scenegraph) return;\n      if (this.props._animations && this.state.animator) {\n        this.state.animator.animate(context.timeline.getTime());\n        this.setNeedsRedraw();\n      }\n      var viewport = this.context.viewport;\n      var _this$props = this.props,\n        sizeScale = _this$props.sizeScale,\n        sizeMinPixels = _this$props.sizeMinPixels,\n        sizeMaxPixels = _this$props.sizeMaxPixels,\n        opacity = _this$props.opacity,\n        coordinateSystem = _this$props.coordinateSystem;\n      var numInstances = this.getNumInstances();\n      this.state.scenegraph.traverse(function (model, _ref3) {\n        var worldMatrix = _ref3.worldMatrix;\n        model.model.setInstanceCount(numInstances);\n        model.updateModuleSettings(moduleParameters);\n        model.draw({\n          parameters: parameters,\n          uniforms: {\n            sizeScale: sizeScale,\n            opacity: opacity,\n            sizeMinPixels: sizeMinPixels,\n            sizeMaxPixels: sizeMaxPixels,\n            composeModelMatrix: shouldComposeModelMatrix(viewport, coordinateSystem),\n            sceneModelMatrix: worldMatrix,\n            u_Camera: model.model.getUniforms().project_uCameraPosition\n          }\n        });\n      });\n    }\n  }]);\n  return ScenegraphLayer;\n}(Layer);\nexport { ScenegraphLayer as default };\n_defineProperty(ScenegraphLayer, \"defaultProps\", defaultProps);\n_defineProperty(ScenegraphLayer, \"layerName\", 'ScenegraphLayer');","map":{"version":3,"names":["Layer","project32","picking","log","isWebGL2","pbr","ScenegraphNode","createGLTFObjects","GLTFLoader","waitForGLTFAssets","MATRIX_ATTRIBUTES","shouldComposeModelMatrix","vs","fs","DEFAULT_COLOR","defaultProps","scenegraph","type","value","async","getScene","gltf","scenes","scene","getAnimator","animator","_animations","sizeScale","min","sizeMinPixels","sizeMaxPixels","Number","MAX_SAFE_INTEGER","getPosition","x","position","getColor","_lighting","_imageBasedLightingEnvironment","getOrientation","getScale","getTranslation","getTransformMatrix","loaders","ScenegraphLayer","_Layer","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","_defineProperty","_assertThisInitialized","_createClass","key","getShaders","modules","props","push","initializeState","attributeManager","getAttributeManager","addInstanced","instancePositions","size","fp64","use64bitPositions","accessor","transition","instanceColors","colorFormat","normalized","defaultValue","instanceModelMatrix","updateState","params","_get","_getPrototypeOf","prototype","oldProps","_updateScenegraph","_applyAnimationsProp","state","finalizeState","context","_deleteScenegraph","_this2","gl","scenegraphData","gltfObjects","_getModelOptions","_objectSpread","then","setNeedsRedraw","deprecated","options","layer","_applyAllAttributes","setState","warn","_this3","attributesAvailable","allAttributes","getAttributes","traverse","model","_setModelAttributes","animationsProp","animations","getAnimations","Object","keys","sort","forEach","animation","assign","isFinite","number","findResult","find","_ref","name","delete","env","waitForFullLoad","imageBasedLightingEnvironment","modelOptions","isInstanced","transpileToGLSL100","useTangents","updateAttributes","changedAttributes","_this4","draw","_ref2","_ref2$moduleParameter","moduleParameters","_ref2$parameters","parameters","animate","timeline","getTime","viewport","_this$props","opacity","coordinateSystem","numInstances","getNumInstances","_ref3","worldMatrix","setInstanceCount","updateModuleSettings","uniforms","composeModelMatrix","sceneModelMatrix","u_Camera","getUniforms","project_uCameraPosition","default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/layers/node_modules/@deck.gl/mesh-layers/src/scenegraph-layer/scenegraph-layer.ts"],"sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Layer, project32, picking, log} from '@deck.gl/core';\nimport {isWebGL2} from '@luma.gl/core';\nimport {pbr} from '@luma.gl/shadertools';\nimport {\n  ScenegraphNode,\n  GroupNode,\n  GLTFAnimator,\n  GLTFEnvironment,\n  createGLTFObjects\n} from '@luma.gl/experimental';\nimport GL from '@luma.gl/constants';\nimport {GLTFLoader} from '@loaders.gl/gltf';\nimport {waitForGLTFAssets} from './gltf-utils';\n\nimport {MATRIX_ATTRIBUTES, shouldComposeModelMatrix} from '../utils/matrix';\n\nimport vs from './scenegraph-layer-vertex.glsl';\nimport fs from './scenegraph-layer-fragment.glsl';\n\nimport type {\n  UpdateParameters,\n  LayerContext,\n  LayerProps,\n  Position,\n  Color,\n  Accessor,\n  DefaultProps\n} from '@deck.gl/core';\n\nconst DEFAULT_COLOR: [number, number, number, number] = [255, 255, 255, 255];\n\nexport type ScenegraphLayerProps<DataT = any> = _ScenegraphLayerProps<DataT> & LayerProps<DataT>;\n\ntype _ScenegraphLayerProps<DataT> = {\n  // TODO - define in luma.gl\n  /**\n   * A url for a glTF model or scenegraph loaded via a [scenegraph loader](https://loaders.gl/docs/specifications/category-scenegraph)\n   */\n  scenegraph: any;\n  /**\n   * Create a luma.gl GroupNode from the resolved scenegraph prop\n   */\n  getScene?: (\n    scenegraph: any,\n    context: {gl: WebGLRenderingContext; layer: ScenegraphLayer<DataT>}\n  ) => GroupNode;\n  /**\n   * Create a luma.gl GLTFAnimator from the resolved scenegraph prop\n   */\n  getAnimator?: (\n    scenegraph: any,\n    context: {gl: WebGLRenderingContext; layer: ScenegraphLayer<DataT>}\n  ) => GLTFAnimator;\n  /**\n   * (Experimental) animation configurations. Requires `_animate` on deck object.\n   */\n  _animations?: {\n    [name: number | string | '*']: {\n      /** If the animation is playing */\n      playing?: boolean;\n      /** Start time of the animation, default `0` */\n      startTime?: number;\n      /** Speed multiplier of the animation, default `1` */\n      speed?: number;\n    };\n  } | null;\n  /**\n   * (Experimental) lighting mode\n   * @default 'flat'\n   */\n  _lighting?: 'flat' | 'pbr';\n  /**\n   * (Experimental) lighting environment. Requires `_lighting` to be `'pbr'`.\n   */\n  _imageBasedLightingEnvironment?:\n    | null\n    | GLTFEnvironment\n    | ((context: {gl: WebGLRenderingContext; layer: ScenegraphLayer<DataT>}) => GLTFEnvironment);\n\n  /** Anchor position accessor. */\n  getPosition?: Accessor<DataT, Position>;\n  /** Color value or accessor.\n   * @default [255, 255, 255, 255]\n   */\n  getColor?: Accessor<DataT, Color>;\n  /**\n   * Orientation in [pitch, yaw, roll] in degrees.\n   * @see https://en.wikipedia.org/wiki/Euler_angles\n   * @default [0, 0, 0]\n   */\n  getOrientation?: Accessor<DataT, [number, number, number]>;\n  /**\n   * Scaling factor of the model along each axis.\n   * @default [1, 1, 1]\n   */\n  getScale?: Accessor<DataT, [number, number, number]>;\n  /**\n   * Translation from the anchor point, [x, y, z] in meters.\n   * @default [0, 0, 0]\n   */\n  getTranslation?: Accessor<DataT, [number, number, number]>;\n  /**\n   * TransformMatrix. If specified, `getOrientation`, `getScale` and `getTranslation` are ignored.\n   */\n  getTransformMatrix?: Accessor<DataT, number[]>;\n  /**\n   * Multiplier to scale each geometry by.\n   * @default 1\n   */\n  sizeScale?: number;\n  /**\n   * The minimum size in pixels for one unit of the scene.\n   * @default 0\n   */\n  sizeMinPixels?: number;\n  /**\n   * The maximum size in pixels for one unit of the scene.\n   * @default Number.MAX_SAFE_INTEGER\n   */\n  sizeMaxPixels?: number;\n};\n\nconst defaultProps: DefaultProps<ScenegraphLayerProps> = {\n  scenegraph: {type: 'object', value: null, async: true},\n  getScene: gltf => {\n    if (gltf && gltf.scenes) {\n      // gltf post processor replaces `gltf.scene` number with the scene `object`\n      return typeof gltf.scene === 'object' ? gltf.scene : gltf.scenes[gltf.scene || 0];\n    }\n    return gltf;\n  },\n  getAnimator: scenegraph => scenegraph && scenegraph.animator,\n  _animations: null,\n\n  sizeScale: {type: 'number', value: 1, min: 0},\n  sizeMinPixels: {type: 'number', min: 0, value: 0},\n  sizeMaxPixels: {type: 'number', min: 0, value: Number.MAX_SAFE_INTEGER},\n\n  getPosition: {type: 'accessor', value: x => x.position},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n\n  // flat or pbr\n  _lighting: 'flat',\n  // _lighting must be pbr for this to work\n  _imageBasedLightingEnvironment: null,\n\n  // yaw, pitch and roll are in degrees\n  // https://en.wikipedia.org/wiki/Euler_angles\n  // [pitch, yaw, roll]\n  getOrientation: {type: 'accessor', value: [0, 0, 0]},\n  getScale: {type: 'accessor', value: [1, 1, 1]},\n  getTranslation: {type: 'accessor', value: [0, 0, 0]},\n  // 4x4 matrix\n  getTransformMatrix: {type: 'accessor', value: []},\n\n  loaders: [GLTFLoader]\n};\n\n/** Render a number of instances of a complete glTF scenegraph. */\nexport default class ScenegraphLayer<DataT = any, ExtraPropsT = {}> extends Layer<\n  ExtraPropsT & Required<_ScenegraphLayerProps<DataT>>\n> {\n  static defaultProps = defaultProps;\n  static layerName = 'ScenegraphLayer';\n\n  state!: {\n    scenegraph: GroupNode;\n    animator: GLTFAnimator;\n    attributesAvailable?: boolean;\n  };\n\n  getShaders() {\n    const modules = [project32, picking];\n\n    if (this.props._lighting === 'pbr') {\n      modules.push(pbr);\n    }\n\n    return {vs, fs, modules};\n  }\n\n  initializeState() {\n    const attributeManager = this.getAttributeManager();\n    // attributeManager is always defined for primitive layers\n    attributeManager!.addInstanced({\n      instancePositions: {\n        size: 3,\n        type: GL.DOUBLE,\n        fp64: this.use64bitPositions(),\n        accessor: 'getPosition',\n        transition: true\n      },\n      instanceColors: {\n        type: GL.UNSIGNED_BYTE,\n        size: this.props.colorFormat.length,\n        accessor: 'getColor',\n        normalized: true,\n        defaultValue: DEFAULT_COLOR,\n        transition: true\n      },\n      instanceModelMatrix: MATRIX_ATTRIBUTES\n    });\n  }\n\n  updateState(params: UpdateParameters<this>) {\n    super.updateState(params);\n    const {props, oldProps} = params;\n\n    if (props.scenegraph !== oldProps.scenegraph) {\n      this._updateScenegraph();\n    } else if (props._animations !== oldProps._animations) {\n      this._applyAnimationsProp(this.state.scenegraph, this.state.animator, props._animations);\n    }\n  }\n\n  finalizeState(context: LayerContext) {\n    super.finalizeState(context);\n    this._deleteScenegraph();\n  }\n\n  private _updateScenegraph(): void {\n    const props = this.props;\n    const {gl} = this.context;\n    let scenegraphData: any = null;\n    if (props.scenegraph instanceof ScenegraphNode) {\n      // Signature 1: props.scenegraph is a proper luma.gl Scenegraph\n      scenegraphData = {scenes: [props.scenegraph]};\n    } else if (props.scenegraph && !props.scenegraph.gltf) {\n      // Converts loaders.gl gltf to luma.gl scenegraph using the undocumented @luma.gl/experimental function\n      const gltf = props.scenegraph;\n      const gltfObjects = createGLTFObjects(gl, gltf, this._getModelOptions());\n      scenegraphData = {gltf, ...gltfObjects};\n\n      waitForGLTFAssets(gltfObjects).then(() => this.setNeedsRedraw()); // eslint-disable-line @typescript-eslint/no-floating-promises\n    } else if (props.scenegraph) {\n      // DEPRECATED PATH: Assumes this data was loaded through GLTFScenegraphLoader\n      log.deprecated(\n        'ScenegraphLayer.props.scenegraph',\n        'Use GLTFLoader instead of GLTFScenegraphLoader'\n      )();\n      scenegraphData = props.scenegraph;\n    }\n\n    const options = {layer: this, gl};\n    const scenegraph = props.getScene(scenegraphData, options);\n    const animator = props.getAnimator(scenegraphData, options);\n\n    if (scenegraph instanceof ScenegraphNode) {\n      this._deleteScenegraph();\n      this._applyAllAttributes(scenegraph);\n      this._applyAnimationsProp(scenegraph, animator, props._animations);\n      this.setState({scenegraph, animator});\n    } else if (scenegraph !== null) {\n      log.warn('invalid scenegraph:', scenegraph)();\n    }\n  }\n\n  private _applyAllAttributes(scenegraph: GroupNode): void {\n    if (this.state.attributesAvailable) {\n      // attributeManager is always defined for primitive layers\n      const allAttributes = this.getAttributeManager()!.getAttributes();\n      scenegraph.traverse(model => {\n        this._setModelAttributes(model.model, allAttributes);\n      });\n    }\n  }\n\n  private _applyAnimationsProp(\n    scenegraph: GroupNode,\n    animator: GLTFAnimator,\n    animationsProp: any\n  ): void {\n    if (!scenegraph || !animator || !animationsProp) {\n      return;\n    }\n\n    const animations = animator.getAnimations();\n\n    // sort() to ensure '*' comes first so that other values can override\n    Object.keys(animationsProp)\n      .sort()\n      .forEach(key => {\n        // Key can be:\n        //  - number for index number\n        //  - name for animation name\n        //  - * to affect all animations\n        const value = animationsProp[key];\n\n        if (key === '*') {\n          animations.forEach(animation => {\n            Object.assign(animation, value);\n          });\n        } else if (Number.isFinite(Number(key))) {\n          const number = Number(key);\n          if (number >= 0 && number < animations.length) {\n            Object.assign(animations[number], value);\n          } else {\n            log.warn(`animation ${key} not found`)();\n          }\n        } else {\n          const findResult = animations.find(({name}) => name === key);\n          if (findResult) {\n            Object.assign(findResult, value);\n          } else {\n            log.warn(`animation ${key} not found`)();\n          }\n        }\n      });\n  }\n\n  private _deleteScenegraph(): void {\n    const {scenegraph} = this.state;\n    if (scenegraph instanceof ScenegraphNode) {\n      scenegraph.delete();\n    }\n  }\n\n  private _getModelOptions(): any {\n    const {_imageBasedLightingEnvironment} = this.props;\n\n    let env: GLTFEnvironment | null = null;\n    if (_imageBasedLightingEnvironment) {\n      if (typeof _imageBasedLightingEnvironment === 'function') {\n        env = _imageBasedLightingEnvironment({gl: this.context.gl, layer: this});\n      } else {\n        env = _imageBasedLightingEnvironment;\n      }\n    }\n\n    return {\n      gl: this.context.gl,\n      waitForFullLoad: true,\n      imageBasedLightingEnvironment: env,\n      modelOptions: {\n        isInstanced: true,\n        transpileToGLSL100: !isWebGL2(this.context.gl),\n        ...this.getShaders()\n      },\n      // tangents are not supported\n      useTangents: false\n    };\n  }\n\n  updateAttributes(changedAttributes) {\n    this.setState({attributesAvailable: true});\n    if (!this.state.scenegraph) return;\n\n    this.state.scenegraph.traverse(model => {\n      this._setModelAttributes(model.model, changedAttributes);\n    });\n  }\n\n  draw({moduleParameters = null, parameters = {}, context}) {\n    if (!this.state.scenegraph) return;\n\n    if (this.props._animations && this.state.animator) {\n      this.state.animator.animate(context.timeline.getTime());\n      this.setNeedsRedraw();\n    }\n\n    const {viewport} = this.context;\n    const {sizeScale, sizeMinPixels, sizeMaxPixels, opacity, coordinateSystem} = this.props;\n    const numInstances = this.getNumInstances();\n    this.state.scenegraph.traverse((model, {worldMatrix}) => {\n      model.model.setInstanceCount(numInstances);\n      model.updateModuleSettings(moduleParameters);\n      model.draw({\n        parameters,\n        uniforms: {\n          sizeScale,\n          opacity,\n          sizeMinPixels,\n          sizeMaxPixels,\n          composeModelMatrix: shouldComposeModelMatrix(viewport, coordinateSystem),\n          sceneModelMatrix: worldMatrix,\n          // Needed for PBR (TODO: find better way to get it)\n          // eslint-disable-next-line camelcase\n          u_Camera: model.model.getUniforms().project_uCameraPosition\n        }\n      });\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}