{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.StyledToggleOption = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\nvar _orderByList = _interopRequireDefault(require(\"../../common/icons/order-by-list\"));\nvar _orderByDataset = _interopRequireDefault(require(\"../../common/icons/order-by-dataset\"));\nvar _styledComponents2 = require(\"../../common/styled-components\");\nvar _localization = require(\"@kepler.gl/localization\");\nvar _templateObject, _templateObject2, _templateObject3;\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nvar PanelViewListToggleContainer = _styledComponents[\"default\"].div.attrs({\n  className: 'panel-view-list-toggle'\n})(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\"])));\nvar PanelViewListToggleWrapper = _styledComponents[\"default\"].div.attrs({\n  className: 'panel-view-list-toggle-inner'\n})(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  display: flex;\\n  justify-content: flex-end;\\n  align-content: center;\\n  gap: 10px;\\n\"])));\nvar StyledToggleOption = _styledComponents[\"default\"].div.attrs({\n  className: 'layer-panel-toggle-option'\n})(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  color: \", \";\\n  :hover {\\n    cursor: pointer;\\n    color: \", \";\\n  }\\n\"])), function (props) {\n  return props.active ? props.theme.layerPanelToggleOptionColorActive : props.theme.layerPanelToggleOptionColor;\n}, function (props) {\n  return props.theme.layerPanelToggleOptionColorActive;\n});\nexports.StyledToggleOption = StyledToggleOption;\nfunction ToggleOptionFactory() {\n  var ToggleOption = function ToggleOption(_ref) {\n    var isActive = _ref.isActive,\n      onClick = _ref.onClick,\n      option = _ref.option;\n    return /*#__PURE__*/_react[\"default\"].createElement(StyledToggleOption, {\n      \"data-tip\": true,\n      \"data-for\": \"\".concat(option.id, \"-toggle-option\"),\n      active: isActive,\n      onClick: onClick\n    }, /*#__PURE__*/_react[\"default\"].createElement(option.iconComponent, {\n      height: \"20px\"\n    }), /*#__PURE__*/_react[\"default\"].createElement(_styledComponents2.Tooltip, {\n      id: \"\".concat(option.id, \"-toggle-option\"),\n      effect: \"solid\",\n      delayShow: 500,\n      place: \"bottom\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(\"span\", null, /*#__PURE__*/_react[\"default\"].createElement(_localization.FormattedMessage, {\n      id: option.label\n    }))));\n  };\n  return ToggleOption;\n}\nvar TOGGLE_OPTIONS = [{\n  id: 'list',\n  iconComponent: _orderByList[\"default\"],\n  value: 'list',\n  label: 'List'\n}, {\n  id: 'sort-by-dataset',\n  iconComponent: _orderByDataset[\"default\"],\n  value: 'sortByDataset',\n  label: 'Sort by dataset'\n}];\nPanelViewListToggleFactory.deps = [ToggleOptionFactory];\nfunction PanelViewListToggleFactory(ToggleOption) {\n  var PanelViewListToggle = function PanelViewListToggle(props) {\n    var layerPanelListViewMode = props.layerPanelListViewMode,\n      toggleLayerPanelListView = props.toggleLayerPanelListView;\n    var toggleListView = function toggleListView(listView) {\n      return toggleLayerPanelListView(listView);\n    };\n    var options = (0, _react.useMemo)(function () {\n      return TOGGLE_OPTIONS.map(function (opt) {\n        return _objectSpread(_objectSpread({}, opt), {}, {\n          isActive: layerPanelListViewMode === opt.value\n        });\n      });\n    }, [layerPanelListViewMode]);\n    return /*#__PURE__*/_react[\"default\"].createElement(PanelViewListToggleContainer, null, /*#__PURE__*/_react[\"default\"].createElement(PanelViewListToggleWrapper, null, options.map(function (opt) {\n      return /*#__PURE__*/_react[\"default\"].createElement(ToggleOption, {\n        key: opt.id,\n        onClick: function onClick() {\n          return toggleListView(opt.value);\n        },\n        option: opt,\n        isActive: opt.isActive\n      });\n    })));\n  };\n  return PanelViewListToggle;\n}\nvar _default = PanelViewListToggleFactory;\nexports[\"default\"] = _default;","map":{"version":3,"names":["_taggedTemplateLiteral2","_interopRequireDefault","require","_react","_interopRequireWildcard","_styledComponents","_orderByList","_orderByDataset","_styledComponents2","_localization","_templateObject","_templateObject2","_templateObject3","_objectSpread","target","i","arguments","length","source","ownKeys","Object","forEach","key","_defineProperty2","getOwnPropertyDescriptors","defineProperties","defineProperty","getOwnPropertyDescriptor","PanelViewListToggleContainer","div","attrs","className","PanelViewListToggleWrapper","StyledToggleOption","props","active","theme","layerPanelToggleOptionColorActive","layerPanelToggleOptionColor","exports","ToggleOptionFactory","isActive","_ref","onClick","createElement","concat","option","id","iconComponent","height","Tooltip","effect","delayShow","place","label","TOGGLE_OPTIONS","value","PanelViewListToggleFactory","deps","ToggleOption","PanelViewListToggle","layerPanelListViewMode","toggleLayerPanelListView","toggleListView","listView","options","useMemo"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/components/src/side-panel/layer-panel/panel-view-list-toggle.tsx"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {useMemo} from 'react';\nimport styled from 'styled-components';\nimport OrderByList from '../../common/icons/order-by-list';\nimport OrderByDataset from '../../common/icons/order-by-dataset';\nimport {Tooltip} from '../../common/styled-components';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {LayerPanelListView} from '@kepler.gl/types';\n\ntype ToggleOptionProps = {\n  isActive: boolean;\n  onClick: () => void;\n  option: typeof TOGGLE_OPTIONS[0];\n};\n\ntype PanelViewListToggleProps = {\n  layerPanelListViewMode: LayerPanelListView;\n  toggleLayerPanelListView: (view: string) => void;\n};\n\nconst PanelViewListToggleContainer = styled.div.attrs({\n  className: 'panel-view-list-toggle'\n})``;\n\nconst PanelViewListToggleWrapper = styled.div.attrs({\n  className: 'panel-view-list-toggle-inner'\n})`\n  display: flex;\n  justify-content: flex-end;\n  align-content: center;\n  gap: 10px;\n`;\n\nexport const StyledToggleOption = styled.div.attrs({\n  className: 'layer-panel-toggle-option'\n})<{active: boolean}>`\n  color: ${props =>\n    props.active\n      ? props.theme.layerPanelToggleOptionColorActive\n      : props.theme.layerPanelToggleOptionColor};\n  :hover {\n    cursor: pointer;\n    color: ${props => props.theme.layerPanelToggleOptionColorActive};\n  }\n`;\n\nfunction ToggleOptionFactory() {\n  const ToggleOption: React.FC<ToggleOptionProps> = ({isActive, onClick, option}) => (\n    <StyledToggleOption\n      data-tip\n      data-for={`${option.id}-toggle-option`}\n      active={isActive}\n      onClick={onClick}\n    >\n      <option.iconComponent height=\"20px\" />\n      <Tooltip id={`${option.id}-toggle-option`} effect=\"solid\" delayShow={500} place=\"bottom\">\n        <span>\n          <FormattedMessage id={option.label} />\n        </span>\n      </Tooltip>\n    </StyledToggleOption>\n  );\n\n  return ToggleOption;\n}\n\nconst TOGGLE_OPTIONS = [\n  {\n    id: 'list',\n    iconComponent: OrderByList,\n    value: 'list',\n    label: 'List'\n  },\n  {\n    id: 'sort-by-dataset',\n    iconComponent: OrderByDataset,\n    value: 'sortByDataset',\n    label: 'Sort by dataset'\n  }\n];\n\nPanelViewListToggleFactory.deps = [ToggleOptionFactory];\n\nfunction PanelViewListToggleFactory(ToggleOption: ReturnType<typeof ToggleOptionFactory>) {\n  const PanelViewListToggle: React.FC<PanelViewListToggleProps> = props => {\n    const {layerPanelListViewMode, toggleLayerPanelListView} = props;\n\n    const toggleListView = (listView: string) => toggleLayerPanelListView(listView);\n    const options = useMemo(\n      () => TOGGLE_OPTIONS.map(opt => ({...opt, isActive: layerPanelListViewMode === opt.value})),\n      [layerPanelListViewMode]\n    );\n\n    return (\n      <PanelViewListToggleContainer>\n        <PanelViewListToggleWrapper>\n          {options.map(opt => (\n            <ToggleOption\n              key={opt.id}\n              onClick={() => toggleListView(opt.value)}\n              option={opt}\n              isActive={opt.isActive}\n            />\n          ))}\n        </PanelViewListToggleWrapper>\n      </PanelViewListToggleContainer>\n    );\n  };\n\n  return PanelViewListToggle;\n}\n\nexport default PanelViewListToggleFactory;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}