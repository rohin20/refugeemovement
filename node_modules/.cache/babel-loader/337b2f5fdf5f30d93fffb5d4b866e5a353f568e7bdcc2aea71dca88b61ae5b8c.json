{"ast":null,"code":"import _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Matrix4 } from '@math.gl/core';\nimport { Buffer, Accessor, log } from '@luma.gl/webgl';\nimport GroupNode from '../scenegraph/group-node';\nimport GLTFAnimator from './gltf-animator';\nimport createGLTFModel from './create-gltf-model';\nvar ATTRIBUTE_TYPE_TO_COMPONENTS = {\n  SCALAR: 1,\n  VEC2: 2,\n  VEC3: 3,\n  VEC4: 4,\n  MAT2: 4,\n  MAT3: 9,\n  MAT4: 16\n};\nvar DEFAULT_OPTIONS = {\n  modelOptions: {},\n  pbrDebug: false,\n  imageBasedLightingEnvironment: null,\n  lights: true,\n  useTangents: false\n};\nvar GLTFInstantiator = /*#__PURE__*/function () {\n  function GLTFInstantiator(gl) {\n    _classCallCheck(this, GLTFInstantiator);\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.gl = gl;\n    this.options = Object.assign({}, DEFAULT_OPTIONS, options);\n  }\n  _createClass(GLTFInstantiator, [{\n    key: \"instantiate\",\n    value: function instantiate(gltf) {\n      var _this = this;\n      this.gltf = gltf;\n      var scenes = (gltf.scenes || []).map(function (scene) {\n        return _this.createScene(scene);\n      });\n      return scenes;\n    }\n  }, {\n    key: \"createAnimator\",\n    value: function createAnimator() {\n      if (Array.isArray(this.gltf.animations)) {\n        return new GLTFAnimator(this.gltf);\n      }\n      return null;\n    }\n  }, {\n    key: \"createScene\",\n    value: function createScene(gltfScene) {\n      var _this2 = this;\n      var gltfNodes = gltfScene.nodes || [];\n      var nodes = gltfNodes.map(function (node) {\n        return _this2.createNode(node);\n      });\n      var scene = new GroupNode({\n        id: gltfScene.name || gltfScene.id,\n        children: nodes\n      });\n      return scene;\n    }\n  }, {\n    key: \"createNode\",\n    value: function createNode(gltfNode) {\n      var _this3 = this;\n      if (!gltfNode._node) {\n        var gltfChildren = gltfNode.children || [];\n        var children = gltfChildren.map(function (child) {\n          return _this3.createNode(child);\n        });\n        if (gltfNode.mesh) {\n          children.push(this.createMesh(gltfNode.mesh));\n        }\n        var node = new GroupNode({\n          id: gltfNode.name || gltfNode.id,\n          children: children\n        });\n        if (gltfNode.matrix) {\n          node.setMatrix(gltfNode.matrix);\n        } else {\n          node.matrix.identity();\n          if (gltfNode.translation) {\n            node.matrix.translate(gltfNode.translation);\n          }\n          if (gltfNode.rotation) {\n            var rotationMatrix = new Matrix4().fromQuaternion(gltfNode.rotation);\n            node.matrix.multiplyRight(rotationMatrix);\n          }\n          if (gltfNode.scale) {\n            node.matrix.scale(gltfNode.scale);\n          }\n        }\n        gltfNode._node = node;\n      }\n      return gltfNode._node;\n    }\n  }, {\n    key: \"createMesh\",\n    value: function createMesh(gltfMesh) {\n      var _this4 = this;\n      if (!gltfMesh._mesh) {\n        var gltfPrimitives = gltfMesh.primitives || [];\n        var primitives = gltfPrimitives.map(function (gltfPrimitive, i) {\n          return _this4.createPrimitive(gltfPrimitive, i, gltfMesh);\n        });\n        var mesh = new GroupNode({\n          id: gltfMesh.name || gltfMesh.id,\n          children: primitives\n        });\n        gltfMesh._mesh = mesh;\n      }\n      return gltfMesh._mesh;\n    }\n  }, {\n    key: \"getVertexCount\",\n    value: function getVertexCount(attributes) {\n      log.warn('getVertexCount() not found')();\n    }\n  }, {\n    key: \"createPrimitive\",\n    value: function createPrimitive(gltfPrimitive, i, gltfMesh) {\n      return createGLTFModel(this.gl, Object.assign({\n        id: gltfPrimitive.name || \"\".concat(gltfMesh.name || gltfMesh.id, \"-primitive-\").concat(i),\n        drawMode: gltfPrimitive.mode || 4,\n        vertexCount: gltfPrimitive.indices ? gltfPrimitive.indices.count : this.getVertexCount(gltfPrimitive.attributes),\n        attributes: this.createAttributes(gltfPrimitive.attributes, gltfPrimitive.indices),\n        material: gltfPrimitive.material\n      }, this.options));\n    }\n  }, {\n    key: \"createAttributes\",\n    value: function createAttributes(attributes, indices) {\n      var _this5 = this;\n      var loadedAttributes = {};\n      Object.keys(attributes).forEach(function (attrName) {\n        loadedAttributes[attrName] = _this5.createAccessor(attributes[attrName], _this5.createBuffer(attributes[attrName], _this5.gl.ARRAY_BUFFER));\n      });\n      if (indices) {\n        loadedAttributes.indices = this.createAccessor(indices, this.createBuffer(indices, this.gl.ELEMENT_ARRAY_BUFFER));\n      }\n      log.info(4, 'glTF Attributes', {\n        attributes: attributes,\n        indices: indices,\n        generated: loadedAttributes\n      })();\n      return loadedAttributes;\n    }\n  }, {\n    key: \"createBuffer\",\n    value: function createBuffer(attribute, target) {\n      if (!attribute.bufferView) {\n        attribute.bufferView = {};\n      }\n      var bufferView = attribute.bufferView;\n      if (!bufferView.lumaBuffers) {\n        bufferView.lumaBuffers = {};\n      }\n      if (!bufferView.lumaBuffers[target]) {\n        bufferView.lumaBuffers[target] = new Buffer(this.gl, {\n          id: \"from-\".concat(bufferView.id),\n          data: bufferView.data || attribute.value,\n          target: target\n        });\n      }\n      return bufferView.lumaBuffers[target];\n    }\n  }, {\n    key: \"createAccessor\",\n    value: function createAccessor(accessor, buffer) {\n      return new Accessor({\n        buffer: buffer,\n        offset: accessor.byteOffset || 0,\n        stride: accessor.bufferView.byteStride || 0,\n        type: accessor.componentType,\n        size: ATTRIBUTE_TYPE_TO_COMPONENTS[accessor.type]\n      });\n    }\n  }, {\n    key: \"createSampler\",\n    value: function createSampler(gltfSampler) {\n      return gltfSampler;\n    }\n  }, {\n    key: \"needsPOT\",\n    value: function needsPOT() {\n      return false;\n    }\n  }]);\n  return GLTFInstantiator;\n}();\nexport { GLTFInstantiator as default };","map":{"version":3,"names":["Matrix4","Buffer","Accessor","log","GroupNode","GLTFAnimator","createGLTFModel","ATTRIBUTE_TYPE_TO_COMPONENTS","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","DEFAULT_OPTIONS","modelOptions","pbrDebug","imageBasedLightingEnvironment","lights","useTangents","GLTFInstantiator","gl","_classCallCheck","options","arguments","length","undefined","Object","assign","_createClass","key","value","instantiate","gltf","_this","scenes","map","scene","createScene","createAnimator","Array","isArray","animations","gltfScene","_this2","gltfNodes","nodes","node","createNode","id","name","children","gltfNode","_this3","_node","gltfChildren","child","mesh","push","createMesh","matrix","setMatrix","identity","translation","translate","rotation","rotationMatrix","fromQuaternion","multiplyRight","scale","gltfMesh","_this4","_mesh","gltfPrimitives","primitives","gltfPrimitive","i","createPrimitive","getVertexCount","attributes","warn","concat","drawMode","mode","vertexCount","indices","count","createAttributes","material","_this5","loadedAttributes","keys","forEach","attrName","createAccessor","createBuffer","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","info","generated","attribute","target","bufferView","lumaBuffers","data","accessor","buffer","offset","byteOffset","stride","byteStride","type","componentType","size","createSampler","gltfSampler","needsPOT","default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@luma.gl/experimental/src/gltf/gltf-instantiator.js"],"sourcesContent":["import {Matrix4} from '@math.gl/core';\nimport {Buffer, Accessor, log} from '@luma.gl/webgl';\nimport GroupNode from '../scenegraph/group-node';\n\nimport GLTFAnimator from './gltf-animator';\nimport createGLTFModel from './create-gltf-model';\n\n// TODO: import {ATTRIBUTE_TYPE_TO_COMPONENTS} from '@loaders.gl/gltf';\nconst ATTRIBUTE_TYPE_TO_COMPONENTS = {\n  SCALAR: 1,\n  VEC2: 2,\n  VEC3: 3,\n  VEC4: 4,\n  MAT2: 4,\n  MAT3: 9,\n  MAT4: 16\n};\n\nconst DEFAULT_OPTIONS = {\n  modelOptions: {},\n  pbrDebug: false,\n  imageBasedLightingEnvironment: null,\n  lights: true,\n  useTangents: false\n};\n\n// GLTF instantiator for luma.gl\n// Walks the parsed and resolved glTF structure and builds a luma.gl scenegraph\nexport default class GLTFInstantiator {\n  constructor(gl, options = {}) {\n    this.gl = gl;\n    this.options = Object.assign({}, DEFAULT_OPTIONS, options);\n  }\n\n  instantiate(gltf) {\n    this.gltf = gltf;\n    const scenes = (gltf.scenes || []).map(scene => this.createScene(scene));\n    return scenes;\n  }\n\n  createAnimator() {\n    if (Array.isArray(this.gltf.animations)) {\n      return new GLTFAnimator(this.gltf);\n    }\n\n    return null;\n  }\n\n  createScene(gltfScene) {\n    const gltfNodes = gltfScene.nodes || [];\n    const nodes = gltfNodes.map(node => this.createNode(node));\n    const scene = new GroupNode({\n      id: gltfScene.name || gltfScene.id,\n      children: nodes\n    });\n    return scene;\n  }\n\n  createNode(gltfNode) {\n    if (!gltfNode._node) {\n      const gltfChildren = gltfNode.children || [];\n      const children = gltfChildren.map(child => this.createNode(child));\n\n      // Node can have children nodes and meshes at the same time\n      if (gltfNode.mesh) {\n        children.push(this.createMesh(gltfNode.mesh));\n      }\n\n      const node = new GroupNode({\n        id: gltfNode.name || gltfNode.id,\n        children\n      });\n\n      if (gltfNode.matrix) {\n        node.setMatrix(gltfNode.matrix);\n      } else {\n        node.matrix.identity();\n\n        if (gltfNode.translation) {\n          node.matrix.translate(gltfNode.translation);\n        }\n\n        if (gltfNode.rotation) {\n          const rotationMatrix = new Matrix4().fromQuaternion(gltfNode.rotation);\n          node.matrix.multiplyRight(rotationMatrix);\n        }\n\n        if (gltfNode.scale) {\n          node.matrix.scale(gltfNode.scale);\n        }\n      }\n      gltfNode._node = node;\n    }\n\n    return gltfNode._node;\n  }\n\n  createMesh(gltfMesh) {\n    // TODO: avoid changing the gltf\n    if (!gltfMesh._mesh) {\n      const gltfPrimitives = gltfMesh.primitives || [];\n      const primitives = gltfPrimitives.map((gltfPrimitive, i) =>\n        this.createPrimitive(gltfPrimitive, i, gltfMesh)\n      );\n      const mesh = new GroupNode({\n        id: gltfMesh.name || gltfMesh.id,\n        children: primitives\n      });\n      gltfMesh._mesh = mesh;\n    }\n\n    return gltfMesh._mesh;\n  }\n\n  getVertexCount(attributes) {\n    // TODO: implement this\n    log.warn('getVertexCount() not found')();\n  }\n\n  createPrimitive(gltfPrimitive, i, gltfMesh) {\n    return createGLTFModel(\n      this.gl,\n      Object.assign(\n        {\n          id: gltfPrimitive.name || `${gltfMesh.name || gltfMesh.id}-primitive-${i}`,\n          drawMode: gltfPrimitive.mode || 4,\n          vertexCount: gltfPrimitive.indices\n            ? gltfPrimitive.indices.count\n            : this.getVertexCount(gltfPrimitive.attributes),\n          attributes: this.createAttributes(gltfPrimitive.attributes, gltfPrimitive.indices),\n          material: gltfPrimitive.material\n        },\n        this.options\n      )\n    );\n  }\n\n  createAttributes(attributes, indices) {\n    const loadedAttributes = {};\n\n    Object.keys(attributes).forEach(attrName => {\n      loadedAttributes[attrName] = this.createAccessor(\n        attributes[attrName],\n        this.createBuffer(attributes[attrName], this.gl.ARRAY_BUFFER)\n      );\n    });\n\n    if (indices) {\n      loadedAttributes.indices = this.createAccessor(\n        indices,\n        this.createBuffer(indices, this.gl.ELEMENT_ARRAY_BUFFER)\n      );\n    }\n\n    log.info(4, 'glTF Attributes', {attributes, indices, generated: loadedAttributes})();\n\n    return loadedAttributes;\n  }\n\n  createBuffer(attribute, target) {\n    if (!attribute.bufferView) {\n      // Draco decoded files do not have a bufferView\n      attribute.bufferView = {};\n    }\n\n    const {bufferView} = attribute;\n    if (!bufferView.lumaBuffers) {\n      bufferView.lumaBuffers = {};\n    }\n\n    if (!bufferView.lumaBuffers[target]) {\n      bufferView.lumaBuffers[target] = new Buffer(this.gl, {\n        id: `from-${bufferView.id}`,\n        // Draco decoded files have attribute.value\n        data: bufferView.data || attribute.value,\n        target\n      });\n    }\n\n    return bufferView.lumaBuffers[target];\n  }\n\n  createAccessor(accessor, buffer) {\n    return new Accessor({\n      buffer,\n      offset: accessor.byteOffset || 0,\n      stride: accessor.bufferView.byteStride || 0,\n      type: accessor.componentType,\n      size: ATTRIBUTE_TYPE_TO_COMPONENTS[accessor.type]\n    });\n  }\n\n  // TODO - create sampler in WebGL2\n  createSampler(gltfSampler) {\n    return gltfSampler;\n  }\n\n  // Helper methods (move to GLTFLoader.resolve...?)\n\n  needsPOT() {\n    // Has a wrapping mode (either wrapS or wrapT) equal to REPEAT or MIRRORED_REPEAT, or\n    // Has a minification filter (minFilter) that uses mipmapping\n    // (NEAREST_MIPMAP_NEAREST, NEAREST_MIPMAP_LINEAR,\n    // LINEAR_MIPMAP_NEAREST, or LINEAR_MIPMAP_LINEAR).\n    return false;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}