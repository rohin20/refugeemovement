{"ast":null,"code":"import _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { LayerExtension } from '@deck.gl/core';\nvar defaultProps = {\n  clipBounds: [0, 0, 1, 1]\n};\nvar shaderFunction = \"\\nuniform vec4 clip_bounds;\\n\\nbool clip_isInBounds(vec2 position) {\\n  return position.x >= clip_bounds[0] && position.y >= clip_bounds[1] && position.x < clip_bounds[2] && position.y < clip_bounds[3];\\n}\\n\";\nvar shaderModuleVs = {\n  name: 'clip-vs',\n  vs: shaderFunction\n};\nvar injectionVs = {\n  'vs:#decl': \"\\nvarying float clip_isVisible;\\n\",\n  'vs:DECKGL_FILTER_GL_POSITION': \"\\n  clip_isVisible = float(clip_isInBounds(geometry.worldPosition.xy));\\n\",\n  'fs:#decl': \"\\nvarying float clip_isVisible;\\n\",\n  'fs:DECKGL_FILTER_COLOR': \"\\n  if (clip_isVisible < 0.5) discard;\\n\"\n};\nvar shaderModuleFs = {\n  name: 'clip-fs',\n  fs: shaderFunction\n};\nvar injectionFs = {\n  'vs:#decl': \"\\nvarying vec2 clip_commonPosition;\\n\",\n  'vs:DECKGL_FILTER_GL_POSITION': \"\\n  clip_commonPosition = geometry.position.xy;\\n\",\n  'fs:#decl': \"\\nvarying vec2 clip_commonPosition;\\n\",\n  'fs:DECKGL_FILTER_COLOR': \"\\n  if (!clip_isInBounds(clip_commonPosition)) discard;\\n\"\n};\nvar ClipExtension = /*#__PURE__*/function (_LayerExtension) {\n  _inherits(ClipExtension, _LayerExtension);\n  var _super = _createSuper(ClipExtension);\n  function ClipExtension() {\n    _classCallCheck(this, ClipExtension);\n    return _super.apply(this, arguments);\n  }\n  _createClass(ClipExtension, [{\n    key: \"getShaders\",\n    value: function getShaders() {\n      var clipByInstance = ('instancePositions' in this.getAttributeManager().attributes);\n      if ('clipByInstance' in this.props) {\n        clipByInstance = this.props.clipByInstance;\n      }\n      this.state.clipByInstance = clipByInstance;\n      return clipByInstance ? {\n        modules: [shaderModuleVs],\n        inject: injectionVs\n      } : {\n        modules: [shaderModuleFs],\n        inject: injectionFs\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(_ref) {\n      var uniforms = _ref.uniforms;\n      var _this$props$clipBound = this.props.clipBounds,\n        clipBounds = _this$props$clipBound === void 0 ? defaultProps.clipBounds : _this$props$clipBound;\n      if (this.state.clipByInstance) {\n        uniforms.clip_bounds = clipBounds;\n      } else {\n        var corner0 = this.projectPosition([clipBounds[0], clipBounds[1], 0]);\n        var corner1 = this.projectPosition([clipBounds[2], clipBounds[3], 0]);\n        uniforms.clip_bounds = [Math.min(corner0[0], corner1[0]), Math.min(corner0[1], corner1[1]), Math.max(corner0[0], corner1[0]), Math.max(corner0[1], corner1[1])];\n      }\n    }\n  }]);\n  return ClipExtension;\n}(LayerExtension);\nexport { ClipExtension as default };\n_defineProperty(ClipExtension, \"defaultProps\", defaultProps);\n_defineProperty(ClipExtension, \"extensionName\", 'ClipExtension');","map":{"version":3,"names":["LayerExtension","defaultProps","clipBounds","shaderFunction","shaderModuleVs","name","vs","injectionVs","shaderModuleFs","fs","injectionFs","ClipExtension","_LayerExtension","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","getShaders","clipByInstance","getAttributeManager","attributes","props","state","modules","inject","draw","_ref","uniforms","_this$props$clipBound","clip_bounds","corner0","projectPosition","corner1","Math","min","max","default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/extensions/src/clip/clip.ts"],"sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {LayerExtension, _ShaderModule as ShaderModule} from '@deck.gl/core';\n\nimport type {Layer} from '@deck.gl/core';\n\nconst defaultProps = {\n  clipBounds: [0, 0, 1, 1]\n};\n\nexport type ClipExtensionProps = {\n  /** Rectangular bounds to be used for clipping the rendered region, in `[left, bottom, right, top]`.\n   * @default [0, 0, 1, 1]\n   */\n  clipBounds?: [number, number, number, number];\n  /**\n   * Controls whether an object is clipped by its anchor (e.g. icon, point) or by its geometry (e.g. path, polygon).\n   * If not specified, it is automatically deduced from the layer.\n   */\n  clipByInstance?: boolean;\n};\n\nconst shaderFunction = `\nuniform vec4 clip_bounds;\n\nbool clip_isInBounds(vec2 position) {\n  return position.x >= clip_bounds[0] && position.y >= clip_bounds[1] && position.x < clip_bounds[2] && position.y < clip_bounds[3];\n}\n`;\n\n/*\n * The vertex-shader version clips geometries by their anchor position\n * e.g. ScatterplotLayer - show if the center of a circle is within bounds\n */\nconst shaderModuleVs: ShaderModule = {\n  name: 'clip-vs',\n  vs: shaderFunction\n};\n\nconst injectionVs = {\n  'vs:#decl': `\nvarying float clip_isVisible;\n`,\n  'vs:DECKGL_FILTER_GL_POSITION': `\n  clip_isVisible = float(clip_isInBounds(geometry.worldPosition.xy));\n`,\n  'fs:#decl': `\nvarying float clip_isVisible;\n`,\n  'fs:DECKGL_FILTER_COLOR': `\n  if (clip_isVisible < 0.5) discard;\n`\n};\n\n/*\n * The fragment-shader version clips pixels at the bounds\n * e.g. PolygonLayer - show the part of the polygon that intersect with the bounds\n */\nconst shaderModuleFs: ShaderModule = {\n  name: 'clip-fs',\n  fs: shaderFunction\n};\n\nconst injectionFs = {\n  'vs:#decl': `\nvarying vec2 clip_commonPosition;\n`,\n  'vs:DECKGL_FILTER_GL_POSITION': `\n  clip_commonPosition = geometry.position.xy;\n`,\n  'fs:#decl': `\nvarying vec2 clip_commonPosition;\n`,\n  'fs:DECKGL_FILTER_COLOR': `\n  if (!clip_isInBounds(clip_commonPosition)) discard;\n`\n};\n\n/** Adds support for clipping rendered layers by rectangular bounds. */\nexport default class ClipExtension extends LayerExtension {\n  static defaultProps: any = defaultProps;\n  static extensionName = 'ClipExtension';\n\n  getShaders(this: Layer<ClipExtensionProps>) {\n    // If `clipByInstance: true`, the entire object is shown/hidden based on its anchor position (done by vertex shader)\n    // Otherwise, the object is trimmed by the clip bounds (done by fragment shader)\n\n    // Default behavior: consider a layer instanced if it has attribute `instancePositions`\n    // @ts-expect-error attributeManager is always defined for primitive layers\n    let clipByInstance = 'instancePositions' in this.getAttributeManager().attributes;\n    // Users can override by setting the `clipByInstance` prop\n    if ('clipByInstance' in this.props) {\n      clipByInstance = this.props.clipByInstance as boolean;\n    }\n    this.state.clipByInstance = clipByInstance;\n\n    return clipByInstance\n      ? {\n          modules: [shaderModuleVs],\n          inject: injectionVs\n        }\n      : {\n          modules: [shaderModuleFs],\n          inject: injectionFs\n        };\n  }\n\n  /* eslint-disable camelcase */\n  draw(this: Layer<ClipExtensionProps>, {uniforms}: any): void {\n    const {clipBounds = defaultProps.clipBounds} = this.props;\n    if (this.state.clipByInstance) {\n      uniforms.clip_bounds = clipBounds;\n    } else {\n      const corner0 = this.projectPosition([clipBounds[0], clipBounds[1], 0]);\n      const corner1 = this.projectPosition([clipBounds[2], clipBounds[3], 0]);\n\n      uniforms.clip_bounds = [\n        Math.min(corner0[0], corner1[0]),\n        Math.min(corner0[1], corner1[1]),\n        Math.max(corner0[0], corner1[0]),\n        Math.max(corner0[1], corner1[1])\n      ];\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}