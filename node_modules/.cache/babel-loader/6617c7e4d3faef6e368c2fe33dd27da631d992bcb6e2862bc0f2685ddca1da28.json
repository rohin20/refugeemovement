{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { isWebGL, createGLContext, instrumentGLContext, resizeGLContext, resetParameters } from '@luma.gl/gltools';\nimport { requestAnimationFrame, cancelAnimationFrame, Query, lumaStats, Framebuffer, log, assert } from '@luma.gl/webgl';\nimport { isBrowser } from '@probe.gl/env';\nvar isPage = isBrowser() && typeof document !== 'undefined';\nvar statIdCounter = 0;\nvar AnimationLoop = /*#__PURE__*/function () {\n  function AnimationLoop() {\n    _classCallCheck(this, AnimationLoop);\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var _props$onCreateContex = props.onCreateContext,\n      onCreateContext = _props$onCreateContex === void 0 ? function (opts) {\n        return createGLContext(opts);\n      } : _props$onCreateContex,\n      _props$onAddHTML = props.onAddHTML,\n      onAddHTML = _props$onAddHTML === void 0 ? null : _props$onAddHTML,\n      _props$onInitialize = props.onInitialize,\n      onInitialize = _props$onInitialize === void 0 ? function () {} : _props$onInitialize,\n      _props$onRender = props.onRender,\n      onRender = _props$onRender === void 0 ? function () {} : _props$onRender,\n      _props$onFinalize = props.onFinalize,\n      onFinalize = _props$onFinalize === void 0 ? function () {} : _props$onFinalize,\n      onError = props.onError,\n      _props$gl = props.gl,\n      gl = _props$gl === void 0 ? null : _props$gl,\n      _props$glOptions = props.glOptions,\n      glOptions = _props$glOptions === void 0 ? {} : _props$glOptions,\n      _props$debug = props.debug,\n      debug = _props$debug === void 0 ? false : _props$debug,\n      _props$createFramebuf = props.createFramebuffer,\n      createFramebuffer = _props$createFramebuf === void 0 ? false : _props$createFramebuf,\n      _props$autoResizeView = props.autoResizeViewport,\n      autoResizeViewport = _props$autoResizeView === void 0 ? true : _props$autoResizeView,\n      _props$autoResizeDraw = props.autoResizeDrawingBuffer,\n      autoResizeDrawingBuffer = _props$autoResizeDraw === void 0 ? true : _props$autoResizeDraw,\n      _props$stats = props.stats,\n      stats = _props$stats === void 0 ? lumaStats.get(\"animation-loop-\".concat(statIdCounter++)) : _props$stats;\n    var _props$useDevicePixel = props.useDevicePixels,\n      useDevicePixels = _props$useDevicePixel === void 0 ? true : _props$useDevicePixel;\n    if ('useDevicePixelRatio' in props) {\n      log.deprecated('useDevicePixelRatio', 'useDevicePixels')();\n      useDevicePixels = props.useDevicePixelRatio;\n    }\n    this.props = {\n      onCreateContext: onCreateContext,\n      onAddHTML: onAddHTML,\n      onInitialize: onInitialize,\n      onRender: onRender,\n      onFinalize: onFinalize,\n      onError: onError,\n      gl: gl,\n      glOptions: glOptions,\n      debug: debug,\n      createFramebuffer: createFramebuffer\n    };\n    this.gl = gl;\n    this.needsRedraw = null;\n    this.timeline = null;\n    this.stats = stats;\n    this.cpuTime = this.stats.get('CPU Time');\n    this.gpuTime = this.stats.get('GPU Time');\n    this.frameRate = this.stats.get('Frame Rate');\n    this._initialized = false;\n    this._running = false;\n    this._animationFrameId = null;\n    this._nextFramePromise = null;\n    this._resolveNextFrame = null;\n    this._cpuStartTime = 0;\n    this.setProps({\n      autoResizeViewport: autoResizeViewport,\n      autoResizeDrawingBuffer: autoResizeDrawingBuffer,\n      useDevicePixels: useDevicePixels\n    });\n    this.start = this.start.bind(this);\n    this.stop = this.stop.bind(this);\n    this._pageLoadPromise = null;\n    this._onMousemove = this._onMousemove.bind(this);\n    this._onMouseleave = this._onMouseleave.bind(this);\n  }\n  _createClass(AnimationLoop, [{\n    key: \"delete\",\n    value: function _delete() {\n      this.stop();\n      this._setDisplay(null);\n    }\n  }, {\n    key: \"setNeedsRedraw\",\n    value: function setNeedsRedraw(reason) {\n      assert(typeof reason === 'string');\n      this.needsRedraw = this.needsRedraw || reason;\n      return this;\n    }\n  }, {\n    key: \"setProps\",\n    value: function setProps(props) {\n      if ('autoResizeViewport' in props) {\n        this.autoResizeViewport = props.autoResizeViewport;\n      }\n      if ('autoResizeDrawingBuffer' in props) {\n        this.autoResizeDrawingBuffer = props.autoResizeDrawingBuffer;\n      }\n      if ('useDevicePixels' in props) {\n        this.useDevicePixels = props.useDevicePixels;\n      }\n      return this;\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      var _this = this;\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (this._running) {\n        return this;\n      }\n      this._running = true;\n      var startPromise = this._getPageLoadPromise().then(function () {\n        if (!_this._running || _this._initialized) {\n          return null;\n        }\n        _this._createWebGLContext(opts);\n        _this._createFramebuffer();\n        _this._startEventHandling();\n        _this._initializeCallbackData();\n        _this._updateCallbackData();\n        _this._resizeCanvasDrawingBuffer();\n        _this._resizeViewport();\n        _this._gpuTimeQuery = Query.isSupported(_this.gl, ['timers']) ? new Query(_this.gl) : null;\n        _this._initialized = true;\n        return _this.onInitialize(_this.animationProps);\n      }).then(function (appContext) {\n        if (_this._running) {\n          _this._addCallbackData(appContext || {});\n          if (appContext !== false) {\n            _this._startLoop();\n          }\n        }\n      });\n      if (this.props.onError) {\n        startPromise.catch(this.props.onError);\n      }\n      return this;\n    }\n  }, {\n    key: \"redraw\",\n    value: function redraw() {\n      if (this.isContextLost()) {\n        return this;\n      }\n      this._beginTimers();\n      this._setupFrame();\n      this._updateCallbackData();\n      this._renderFrame(this.animationProps);\n      this._clearNeedsRedraw();\n      if (this.offScreen && this.gl.commit) {\n        this.gl.commit();\n      }\n      if (this._resolveNextFrame) {\n        this._resolveNextFrame(this);\n        this._nextFramePromise = null;\n        this._resolveNextFrame = null;\n      }\n      this._endTimers();\n      return this;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this._running) {\n        this._finalizeCallbackData();\n        this._cancelAnimationFrame(this._animationFrameId);\n        this._nextFramePromise = null;\n        this._resolveNextFrame = null;\n        this._animationFrameId = null;\n        this._running = false;\n      }\n      return this;\n    }\n  }, {\n    key: \"attachTimeline\",\n    value: function attachTimeline(timeline) {\n      this.timeline = timeline;\n      return this.timeline;\n    }\n  }, {\n    key: \"detachTimeline\",\n    value: function detachTimeline() {\n      this.timeline = null;\n    }\n  }, {\n    key: \"waitForRender\",\n    value: function waitForRender() {\n      var _this2 = this;\n      this.setNeedsRedraw('waitForRender');\n      if (!this._nextFramePromise) {\n        this._nextFramePromise = new Promise(function (resolve) {\n          _this2._resolveNextFrame = resolve;\n        });\n      }\n      return this._nextFramePromise;\n    }\n  }, {\n    key: \"toDataURL\",\n    value: function () {\n      var _toDataURL = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              this.setNeedsRedraw('toDataURL');\n              _context.next = 3;\n              return this.waitForRender();\n            case 3:\n              return _context.abrupt(\"return\", this.gl.canvas.toDataURL());\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function toDataURL() {\n        return _toDataURL.apply(this, arguments);\n      }\n      return toDataURL;\n    }()\n  }, {\n    key: \"isContextLost\",\n    value: function isContextLost() {\n      return this.gl.isContextLost();\n    }\n  }, {\n    key: \"onCreateContext\",\n    value: function onCreateContext() {\n      var _this$props;\n      return (_this$props = this.props).onCreateContext.apply(_this$props, arguments);\n    }\n  }, {\n    key: \"onInitialize\",\n    value: function onInitialize() {\n      var _this$props2;\n      return (_this$props2 = this.props).onInitialize.apply(_this$props2, arguments);\n    }\n  }, {\n    key: \"onRender\",\n    value: function onRender() {\n      var _this$props3;\n      return (_this$props3 = this.props).onRender.apply(_this$props3, arguments);\n    }\n  }, {\n    key: \"onFinalize\",\n    value: function onFinalize() {\n      var _this$props4;\n      return (_this$props4 = this.props).onFinalize.apply(_this$props4, arguments);\n    }\n  }, {\n    key: \"getHTMLControlValue\",\n    value: function getHTMLControlValue(id) {\n      var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var element = document.getElementById(id);\n      return element ? Number(element.value) : defaultValue;\n    }\n  }, {\n    key: \"setViewParameters\",\n    value: function setViewParameters() {\n      log.removed('AnimationLoop.setViewParameters', 'AnimationLoop.setProps')();\n      return this;\n    }\n  }, {\n    key: \"_startLoop\",\n    value: function _startLoop() {\n      var _this3 = this;\n      var renderFrame = function renderFrame() {\n        if (!_this3._running) {\n          return;\n        }\n        _this3.redraw();\n        _this3._animationFrameId = _this3._requestAnimationFrame(renderFrame);\n      };\n      this._cancelAnimationFrame(this._animationFrameId);\n      this._animationFrameId = this._requestAnimationFrame(renderFrame);\n    }\n  }, {\n    key: \"_getPageLoadPromise\",\n    value: function _getPageLoadPromise() {\n      if (!this._pageLoadPromise) {\n        this._pageLoadPromise = isPage ? new Promise(function (resolve, reject) {\n          if (isPage && document.readyState === 'complete') {\n            resolve(document);\n            return;\n          }\n          window.addEventListener('load', function () {\n            resolve(document);\n          });\n        }) : Promise.resolve({});\n      }\n      return this._pageLoadPromise;\n    }\n  }, {\n    key: \"_setDisplay\",\n    value: function _setDisplay(display) {\n      if (this.display) {\n        this.display.delete();\n        this.display.animationLoop = null;\n      }\n      if (display) {\n        display.animationLoop = this;\n      }\n      this.display = display;\n    }\n  }, {\n    key: \"_cancelAnimationFrame\",\n    value: function _cancelAnimationFrame(animationFrameId) {\n      if (this.display && this.display.cancelAnimationFrame) {\n        return this.display.cancelAnimationFrame(animationFrameId);\n      }\n      return cancelAnimationFrame(animationFrameId);\n    }\n  }, {\n    key: \"_requestAnimationFrame\",\n    value: function _requestAnimationFrame(renderFrameCallback) {\n      if (this._running) {\n        if (this.display && this.display.requestAnimationFrame) {\n          return this.display.requestAnimationFrame(renderFrameCallback);\n        }\n        return requestAnimationFrame(renderFrameCallback);\n      }\n      return undefined;\n    }\n  }, {\n    key: \"_renderFrame\",\n    value: function _renderFrame() {\n      if (this.display) {\n        var _this$display;\n        (_this$display = this.display)._renderFrame.apply(_this$display, arguments);\n        return;\n      }\n      this.onRender.apply(this, arguments);\n    }\n  }, {\n    key: \"_clearNeedsRedraw\",\n    value: function _clearNeedsRedraw() {\n      this.needsRedraw = null;\n    }\n  }, {\n    key: \"_setupFrame\",\n    value: function _setupFrame() {\n      this._resizeCanvasDrawingBuffer();\n      this._resizeViewport();\n      this._resizeFramebuffer();\n    }\n  }, {\n    key: \"_initializeCallbackData\",\n    value: function _initializeCallbackData() {\n      this.animationProps = {\n        gl: this.gl,\n        stop: this.stop,\n        canvas: this.gl.canvas,\n        framebuffer: this.framebuffer,\n        useDevicePixels: this.useDevicePixels,\n        needsRedraw: null,\n        startTime: Date.now(),\n        engineTime: 0,\n        tick: 0,\n        tock: 0,\n        time: 0,\n        _timeline: this.timeline,\n        _loop: this,\n        _animationLoop: this,\n        _mousePosition: null\n      };\n    }\n  }, {\n    key: \"_updateCallbackData\",\n    value: function _updateCallbackData() {\n      var _this$_getSizeAndAspe = this._getSizeAndAspect(),\n        width = _this$_getSizeAndAspe.width,\n        height = _this$_getSizeAndAspe.height,\n        aspect = _this$_getSizeAndAspe.aspect;\n      if (width !== this.animationProps.width || height !== this.animationProps.height) {\n        this.setNeedsRedraw('drawing buffer resized');\n      }\n      if (aspect !== this.animationProps.aspect) {\n        this.setNeedsRedraw('drawing buffer aspect changed');\n      }\n      this.animationProps.width = width;\n      this.animationProps.height = height;\n      this.animationProps.aspect = aspect;\n      this.animationProps.needsRedraw = this.needsRedraw;\n      this.animationProps.engineTime = Date.now() - this.animationProps.startTime;\n      if (this.timeline) {\n        this.timeline.update(this.animationProps.engineTime);\n      }\n      this.animationProps.tick = Math.floor(this.animationProps.time / 1000 * 60);\n      this.animationProps.tock++;\n      this.animationProps.time = this.timeline ? this.timeline.getTime() : this.animationProps.engineTime;\n      this.animationProps._offScreen = this.offScreen;\n    }\n  }, {\n    key: \"_finalizeCallbackData\",\n    value: function _finalizeCallbackData() {\n      this.onFinalize(this.animationProps);\n    }\n  }, {\n    key: \"_addCallbackData\",\n    value: function _addCallbackData(appContext) {\n      if (typeof appContext === 'object' && appContext !== null) {\n        this.animationProps = Object.assign({}, this.animationProps, appContext);\n      }\n    }\n  }, {\n    key: \"_createWebGLContext\",\n    value: function _createWebGLContext(opts) {\n      this.offScreen = opts.canvas && typeof OffscreenCanvas !== 'undefined' && opts.canvas instanceof OffscreenCanvas;\n      opts = Object.assign({}, opts, this.props.glOptions);\n      this.gl = this.props.gl ? instrumentGLContext(this.props.gl, opts) : this.onCreateContext(opts);\n      if (!isWebGL(this.gl)) {\n        throw new Error('AnimationLoop.onCreateContext - illegal context returned');\n      }\n      resetParameters(this.gl);\n      this._createInfoDiv();\n    }\n  }, {\n    key: \"_createInfoDiv\",\n    value: function _createInfoDiv() {\n      if (this.gl.canvas && this.props.onAddHTML) {\n        var wrapperDiv = document.createElement('div');\n        document.body.appendChild(wrapperDiv);\n        wrapperDiv.style.position = 'relative';\n        var div = document.createElement('div');\n        div.style.position = 'absolute';\n        div.style.left = '10px';\n        div.style.bottom = '10px';\n        div.style.width = '300px';\n        div.style.background = 'white';\n        wrapperDiv.appendChild(this.gl.canvas);\n        wrapperDiv.appendChild(div);\n        var html = this.props.onAddHTML(div);\n        if (html) {\n          div.innerHTML = html;\n        }\n      }\n    }\n  }, {\n    key: \"_getSizeAndAspect\",\n    value: function _getSizeAndAspect() {\n      var width = this.gl.drawingBufferWidth;\n      var height = this.gl.drawingBufferHeight;\n      var aspect = 1;\n      var canvas = this.gl.canvas;\n      if (canvas && canvas.clientHeight) {\n        aspect = canvas.clientWidth / canvas.clientHeight;\n      } else if (width > 0 && height > 0) {\n        aspect = width / height;\n      }\n      return {\n        width: width,\n        height: height,\n        aspect: aspect\n      };\n    }\n  }, {\n    key: \"_resizeViewport\",\n    value: function _resizeViewport() {\n      if (this.autoResizeViewport) {\n        this.gl.viewport(0, 0, this.gl.drawingBufferWidth, this.gl.drawingBufferHeight);\n      }\n    }\n  }, {\n    key: \"_resizeCanvasDrawingBuffer\",\n    value: function _resizeCanvasDrawingBuffer() {\n      if (this.autoResizeDrawingBuffer) {\n        resizeGLContext(this.gl, {\n          useDevicePixels: this.useDevicePixels\n        });\n      }\n    }\n  }, {\n    key: \"_createFramebuffer\",\n    value: function _createFramebuffer() {\n      if (this.props.createFramebuffer) {\n        this.framebuffer = new Framebuffer(this.gl);\n      }\n    }\n  }, {\n    key: \"_resizeFramebuffer\",\n    value: function _resizeFramebuffer() {\n      if (this.framebuffer) {\n        this.framebuffer.resize({\n          width: this.gl.drawingBufferWidth,\n          height: this.gl.drawingBufferHeight\n        });\n      }\n    }\n  }, {\n    key: \"_beginTimers\",\n    value: function _beginTimers() {\n      this.frameRate.timeEnd();\n      this.frameRate.timeStart();\n      if (this._gpuTimeQuery && this._gpuTimeQuery.isResultAvailable() && !this._gpuTimeQuery.isTimerDisjoint()) {\n        this.stats.get('GPU Time').addTime(this._gpuTimeQuery.getTimerMilliseconds());\n      }\n      if (this._gpuTimeQuery) {\n        this._gpuTimeQuery.beginTimeElapsedQuery();\n      }\n      this.cpuTime.timeStart();\n    }\n  }, {\n    key: \"_endTimers\",\n    value: function _endTimers() {\n      this.cpuTime.timeEnd();\n      if (this._gpuTimeQuery) {\n        this._gpuTimeQuery.end();\n      }\n    }\n  }, {\n    key: \"_startEventHandling\",\n    value: function _startEventHandling() {\n      var canvas = this.gl.canvas;\n      if (canvas) {\n        canvas.addEventListener('mousemove', this._onMousemove);\n        canvas.addEventListener('mouseleave', this._onMouseleave);\n      }\n    }\n  }, {\n    key: \"_onMousemove\",\n    value: function _onMousemove(e) {\n      this.animationProps._mousePosition = [e.offsetX, e.offsetY];\n    }\n  }, {\n    key: \"_onMouseleave\",\n    value: function _onMouseleave(e) {\n      this.animationProps._mousePosition = null;\n    }\n  }]);\n  return AnimationLoop;\n}();\nexport { AnimationLoop as default };","map":{"version":3,"names":["isWebGL","createGLContext","instrumentGLContext","resizeGLContext","resetParameters","requestAnimationFrame","cancelAnimationFrame","Query","lumaStats","Framebuffer","log","assert","isBrowser","isPage","document","statIdCounter","AnimationLoop","_classCallCheck","props","arguments","length","undefined","_props$onCreateContex","onCreateContext","opts","_props$onAddHTML","onAddHTML","_props$onInitialize","onInitialize","_props$onRender","onRender","_props$onFinalize","onFinalize","onError","_props$gl","gl","_props$glOptions","glOptions","_props$debug","debug","_props$createFramebuf","createFramebuffer","_props$autoResizeView","autoResizeViewport","_props$autoResizeDraw","autoResizeDrawingBuffer","_props$stats","stats","get","concat","_props$useDevicePixel","useDevicePixels","deprecated","useDevicePixelRatio","needsRedraw","timeline","cpuTime","gpuTime","frameRate","_initialized","_running","_animationFrameId","_nextFramePromise","_resolveNextFrame","_cpuStartTime","setProps","start","bind","stop","_pageLoadPromise","_onMousemove","_onMouseleave","_createClass","key","value","_delete","_setDisplay","setNeedsRedraw","reason","_this","startPromise","_getPageLoadPromise","then","_createWebGLContext","_createFramebuffer","_startEventHandling","_initializeCallbackData","_updateCallbackData","_resizeCanvasDrawingBuffer","_resizeViewport","_gpuTimeQuery","isSupported","animationProps","appContext","_addCallbackData","_startLoop","catch","redraw","isContextLost","_beginTimers","_setupFrame","_renderFrame","_clearNeedsRedraw","offScreen","commit","_endTimers","_finalizeCallbackData","_cancelAnimationFrame","attachTimeline","detachTimeline","waitForRender","_this2","Promise","resolve","_toDataURL","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","abrupt","canvas","toDataURL","apply","_this$props","_this$props2","_this$props3","_this$props4","getHTMLControlValue","id","defaultValue","element","getElementById","Number","setViewParameters","removed","_this3","renderFrame","_requestAnimationFrame","reject","readyState","window","addEventListener","display","delete","animationLoop","animationFrameId","renderFrameCallback","_this$display","_resizeFramebuffer","framebuffer","startTime","Date","now","engineTime","tick","tock","time","_timeline","_loop","_animationLoop","_mousePosition","_this$_getSizeAndAspe","_getSizeAndAspect","width","height","aspect","update","Math","floor","getTime","_offScreen","Object","assign","OffscreenCanvas","Error","_createInfoDiv","wrapperDiv","createElement","body","appendChild","style","position","div","left","bottom","background","html","innerHTML","drawingBufferWidth","drawingBufferHeight","clientHeight","clientWidth","viewport","resize","timeEnd","timeStart","isResultAvailable","isTimerDisjoint","addTime","getTimerMilliseconds","beginTimeElapsedQuery","end","e","offsetX","offsetY","default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@luma.gl/engine/src/lib/animation-loop.js"],"sourcesContent":["import {\n  isWebGL,\n  createGLContext,\n  instrumentGLContext,\n  resizeGLContext,\n  resetParameters\n} from '@luma.gl/gltools';\n\nimport {\n  requestAnimationFrame,\n  cancelAnimationFrame,\n  Query,\n  lumaStats,\n  // TODO - remove dependency on framebuffer (bundle size impact)\n  Framebuffer,\n  log,\n  assert\n} from '@luma.gl/webgl';\n\nimport {isBrowser} from '@probe.gl/env';\n\nconst isPage = isBrowser() && typeof document !== 'undefined';\n\nlet statIdCounter = 0;\n\nexport default class AnimationLoop {\n  /*\n   * @param {HTMLCanvasElement} canvas - if provided, width and height will be passed to context\n   */\n  constructor(props = {}) {\n    const {\n      onCreateContext = opts => createGLContext(opts),\n      onAddHTML = null,\n      onInitialize = () => {},\n      onRender = () => {},\n      onFinalize = () => {},\n      onError,\n\n      gl = null,\n      glOptions = {},\n      debug = false,\n\n      createFramebuffer = false,\n\n      // view parameters\n      autoResizeViewport = true,\n      autoResizeDrawingBuffer = true,\n      stats = lumaStats.get(`animation-loop-${statIdCounter++}`)\n    } = props;\n\n    let {useDevicePixels = true} = props;\n\n    if ('useDevicePixelRatio' in props) {\n      log.deprecated('useDevicePixelRatio', 'useDevicePixels')();\n      // @ts-ignore\n      useDevicePixels = props.useDevicePixelRatio;\n    }\n\n    this.props = {\n      onCreateContext,\n      onAddHTML,\n      onInitialize,\n      onRender,\n      onFinalize,\n      onError,\n\n      gl,\n      glOptions,\n      debug,\n      createFramebuffer\n    };\n\n    // state\n    this.gl = gl;\n    this.needsRedraw = null;\n    this.timeline = null;\n    this.stats = stats;\n    this.cpuTime = this.stats.get('CPU Time');\n    this.gpuTime = this.stats.get('GPU Time');\n    this.frameRate = this.stats.get('Frame Rate');\n\n    this._initialized = false;\n    this._running = false;\n    this._animationFrameId = null;\n    this._nextFramePromise = null;\n    this._resolveNextFrame = null;\n    this._cpuStartTime = 0;\n\n    this.setProps({\n      autoResizeViewport,\n      autoResizeDrawingBuffer,\n      useDevicePixels\n    });\n\n    // Bind methods\n    this.start = this.start.bind(this);\n    this.stop = this.stop.bind(this);\n\n    this._pageLoadPromise = null;\n\n    this._onMousemove = this._onMousemove.bind(this);\n    this._onMouseleave = this._onMouseleave.bind(this);\n  }\n\n  delete() {\n    this.stop();\n    this._setDisplay(null);\n  }\n\n  setNeedsRedraw(reason) {\n    assert(typeof reason === 'string');\n    this.needsRedraw = this.needsRedraw || reason;\n    return this;\n  }\n\n  setProps(props) {\n    if ('autoResizeViewport' in props) {\n      this.autoResizeViewport = props.autoResizeViewport;\n    }\n    if ('autoResizeDrawingBuffer' in props) {\n      this.autoResizeDrawingBuffer = props.autoResizeDrawingBuffer;\n    }\n    if ('useDevicePixels' in props) {\n      this.useDevicePixels = props.useDevicePixels;\n    }\n    return this;\n  }\n\n  // Starts a render loop if not already running\n  // @param {Object} context - contains frame specific info (E.g. tick, width, height, etc)\n  start(opts = {}) {\n    if (this._running) {\n      return this;\n    }\n    this._running = true;\n    // console.debug(`Starting ${this.constructor.name}`);\n    // Wait for start promise before rendering frame\n    const startPromise = this._getPageLoadPromise()\n      .then(() => {\n        if (!this._running || this._initialized) {\n          return null;\n        }\n\n        // Create the WebGL context\n        this._createWebGLContext(opts);\n        this._createFramebuffer();\n        this._startEventHandling();\n\n        // Initialize the callback data\n        this._initializeCallbackData();\n        this._updateCallbackData();\n\n        // Default viewport setup, in case onInitialize wants to render\n        this._resizeCanvasDrawingBuffer();\n        this._resizeViewport();\n\n        this._gpuTimeQuery = Query.isSupported(this.gl, ['timers']) ? new Query(this.gl) : null;\n\n        this._initialized = true;\n\n        // Note: onIntialize can return a promise (in case it needs to load resources)\n        return this.onInitialize(this.animationProps);\n      })\n      .then(appContext => {\n        if (this._running) {\n          this._addCallbackData(appContext || {});\n          if (appContext !== false) {\n            this._startLoop();\n          }\n        }\n      });\n\n    if (this.props.onError) {\n      startPromise.catch(this.props.onError);\n    }\n\n    return this;\n  }\n\n  // Redraw now\n  redraw() {\n    if (this.isContextLost()) {\n      return this;\n    }\n\n    this._beginTimers();\n\n    this._setupFrame();\n    this._updateCallbackData();\n\n    this._renderFrame(this.animationProps);\n\n    // clear needsRedraw flag\n    this._clearNeedsRedraw();\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/commit\n    // Chrome's offscreen canvas does not require gl.commit\n    if (this.offScreen && this.gl.commit) {\n      this.gl.commit();\n    }\n\n    if (this._resolveNextFrame) {\n      this._resolveNextFrame(this);\n      this._nextFramePromise = null;\n      this._resolveNextFrame = null;\n    }\n\n    this._endTimers();\n\n    return this;\n  }\n\n  // Stops a render loop if already running, finalizing\n  stop() {\n    // console.debug(`Stopping ${this.constructor.name}`);\n    if (this._running) {\n      this._finalizeCallbackData();\n      this._cancelAnimationFrame(this._animationFrameId);\n      this._nextFramePromise = null;\n      this._resolveNextFrame = null;\n      this._animationFrameId = null;\n      this._running = false;\n    }\n    return this;\n  }\n\n  attachTimeline(timeline) {\n    this.timeline = timeline;\n\n    return this.timeline;\n  }\n\n  detachTimeline() {\n    this.timeline = null;\n  }\n\n  waitForRender() {\n    this.setNeedsRedraw('waitForRender');\n\n    if (!this._nextFramePromise) {\n      this._nextFramePromise = new Promise(resolve => {\n        this._resolveNextFrame = resolve;\n      });\n    }\n    return this._nextFramePromise;\n  }\n\n  async toDataURL() {\n    this.setNeedsRedraw('toDataURL');\n\n    await this.waitForRender();\n\n    return this.gl.canvas.toDataURL();\n  }\n\n  isContextLost() {\n    return this.gl.isContextLost();\n  }\n\n  onCreateContext(...args) {\n    return this.props.onCreateContext(...args);\n  }\n\n  onInitialize(...args) {\n    return this.props.onInitialize(...args);\n  }\n\n  onRender(...args) {\n    return this.props.onRender(...args);\n  }\n\n  onFinalize(...args) {\n    return this.props.onFinalize(...args);\n  }\n\n  // DEPRECATED/REMOVED METHODS\n\n  getHTMLControlValue(id, defaultValue = 1) {\n    const element = document.getElementById(id);\n    // @ts-ignore Not all html elements have value\n    return element ? Number(element.value) : defaultValue;\n  }\n\n  // Update parameters\n  setViewParameters() {\n    log.removed('AnimationLoop.setViewParameters', 'AnimationLoop.setProps')();\n    return this;\n  }\n\n  // PRIVATE METHODS\n\n  _startLoop() {\n    const renderFrame = () => {\n      if (!this._running) {\n        return;\n      }\n      this.redraw();\n      this._animationFrameId = this._requestAnimationFrame(renderFrame);\n    };\n\n    // cancel any pending renders to ensure only one loop can ever run\n    this._cancelAnimationFrame(this._animationFrameId);\n    this._animationFrameId = this._requestAnimationFrame(renderFrame);\n  }\n\n  // PRIVATE METHODS\n\n  _getPageLoadPromise() {\n    if (!this._pageLoadPromise) {\n      this._pageLoadPromise = isPage\n        ? new Promise((resolve, reject) => {\n            if (isPage && document.readyState === 'complete') {\n              resolve(document);\n              return;\n            }\n            window.addEventListener('load', () => {\n              resolve(document);\n            });\n          })\n        : Promise.resolve({});\n    }\n    return this._pageLoadPromise;\n  }\n\n  _setDisplay(display) {\n    if (this.display) {\n      this.display.delete();\n      this.display.animationLoop = null;\n    }\n\n    // store animation loop on the display\n    if (display) {\n      display.animationLoop = this;\n    }\n\n    this.display = display;\n  }\n\n  _cancelAnimationFrame(animationFrameId) {\n    // E.g. VR display has a separate animation frame to sync with headset\n    if (this.display && this.display.cancelAnimationFrame) {\n      return this.display.cancelAnimationFrame(animationFrameId);\n    }\n\n    return cancelAnimationFrame(animationFrameId);\n  }\n\n  _requestAnimationFrame(renderFrameCallback) {\n    if (this._running) {\n      // E.g. VR display has a separate animation frame to sync with headset\n      if (this.display && this.display.requestAnimationFrame) {\n        return this.display.requestAnimationFrame(renderFrameCallback);\n      }\n\n      return requestAnimationFrame(renderFrameCallback);\n    }\n    return undefined;\n  }\n\n  // Called on each frame, can be overridden to call onRender multiple times\n  // to support e.g. stereoscopic rendering\n  _renderFrame(...args) {\n    // Allow e.g. VR display to render multiple frames.\n    if (this.display) {\n      this.display._renderFrame(...args);\n      return;\n    }\n\n    // call callback\n    this.onRender(...args);\n    // end callback\n  }\n\n  _clearNeedsRedraw() {\n    this.needsRedraw = null;\n  }\n\n  _setupFrame() {\n    this._resizeCanvasDrawingBuffer();\n    this._resizeViewport();\n    this._resizeFramebuffer();\n  }\n\n  // Initialize the  object that will be passed to app callbacks\n  _initializeCallbackData() {\n    this.animationProps = {\n      gl: this.gl,\n\n      stop: this.stop,\n      canvas: this.gl.canvas,\n      framebuffer: this.framebuffer,\n\n      // Initial values\n      useDevicePixels: this.useDevicePixels,\n      needsRedraw: null,\n\n      // Animation props\n      startTime: Date.now(),\n      engineTime: 0,\n      tick: 0,\n      tock: 0,\n\n      // Timeline time for back compatibility\n      time: 0,\n\n      // Experimental\n      _timeline: this.timeline,\n      _loop: this,\n      _animationLoop: this,\n      _mousePosition: null // Event props\n    };\n  }\n\n  // Update the context object that will be passed to app callbacks\n  _updateCallbackData() {\n    const {width, height, aspect} = this._getSizeAndAspect();\n    if (width !== this.animationProps.width || height !== this.animationProps.height) {\n      this.setNeedsRedraw('drawing buffer resized');\n    }\n    if (aspect !== this.animationProps.aspect) {\n      this.setNeedsRedraw('drawing buffer aspect changed');\n    }\n\n    this.animationProps.width = width;\n    this.animationProps.height = height;\n    this.animationProps.aspect = aspect;\n\n    this.animationProps.needsRedraw = this.needsRedraw;\n\n    // Update time properties\n    this.animationProps.engineTime = Date.now() - this.animationProps.startTime;\n\n    if (this.timeline) {\n      this.timeline.update(this.animationProps.engineTime);\n    }\n\n    this.animationProps.tick = Math.floor((this.animationProps.time / 1000) * 60);\n    this.animationProps.tock++;\n\n    // For back compatibility\n    this.animationProps.time = this.timeline\n      ? this.timeline.getTime()\n      : this.animationProps.engineTime;\n\n    // experimental\n    this.animationProps._offScreen = this.offScreen;\n  }\n\n  _finalizeCallbackData() {\n    // call callback\n    this.onFinalize(this.animationProps);\n    // end callback\n  }\n\n  // Add application's data to the app context object\n  _addCallbackData(appContext) {\n    if (typeof appContext === 'object' && appContext !== null) {\n      this.animationProps = Object.assign({}, this.animationProps, appContext);\n    }\n  }\n\n  // Either uses supplied or existing context, or calls provided callback to create one\n  _createWebGLContext(opts) {\n    this.offScreen =\n      opts.canvas &&\n      typeof OffscreenCanvas !== 'undefined' &&\n      opts.canvas instanceof OffscreenCanvas;\n\n    // Create the WebGL context if necessary\n    opts = Object.assign({}, opts, this.props.glOptions);\n    this.gl = this.props.gl ? instrumentGLContext(this.props.gl, opts) : this.onCreateContext(opts);\n\n    if (!isWebGL(this.gl)) {\n      throw new Error('AnimationLoop.onCreateContext - illegal context returned');\n    }\n\n    // Reset the WebGL context.\n    resetParameters(this.gl);\n\n    this._createInfoDiv();\n  }\n\n  _createInfoDiv() {\n    if (this.gl.canvas && this.props.onAddHTML) {\n      const wrapperDiv = document.createElement('div');\n      document.body.appendChild(wrapperDiv);\n      wrapperDiv.style.position = 'relative';\n      const div = document.createElement('div');\n      div.style.position = 'absolute';\n      div.style.left = '10px';\n      div.style.bottom = '10px';\n      div.style.width = '300px';\n      div.style.background = 'white';\n      wrapperDiv.appendChild(this.gl.canvas);\n      wrapperDiv.appendChild(div);\n      const html = this.props.onAddHTML(div);\n      if (html) {\n        div.innerHTML = html;\n      }\n    }\n  }\n\n  _getSizeAndAspect() {\n    // https://webglfundamentals.org/webgl/lessons/webgl-resizing-the-canvas.html\n    const width = this.gl.drawingBufferWidth;\n    const height = this.gl.drawingBufferHeight;\n\n    // https://webglfundamentals.org/webgl/lessons/webgl-anti-patterns.html\n    let aspect = 1;\n    const {canvas} = this.gl;\n\n    if (canvas && canvas.clientHeight) {\n      aspect = canvas.clientWidth / canvas.clientHeight;\n    } else if (width > 0 && height > 0) {\n      aspect = width / height;\n    }\n\n    return {width, height, aspect};\n  }\n\n  // Default viewport setup\n  _resizeViewport() {\n    if (this.autoResizeViewport) {\n      this.gl.viewport(0, 0, this.gl.drawingBufferWidth, this.gl.drawingBufferHeight);\n    }\n  }\n\n  // Resize the render buffer of the canvas to match canvas client size\n  // Optionally multiplying with devicePixel ratio\n  _resizeCanvasDrawingBuffer() {\n    if (this.autoResizeDrawingBuffer) {\n      resizeGLContext(this.gl, {useDevicePixels: this.useDevicePixels});\n    }\n  }\n\n  // TBD - deprecated?\n  _createFramebuffer() {\n    // Setup default framebuffer\n    if (this.props.createFramebuffer) {\n      this.framebuffer = new Framebuffer(this.gl);\n    }\n  }\n\n  _resizeFramebuffer() {\n    if (this.framebuffer) {\n      this.framebuffer.resize({\n        width: this.gl.drawingBufferWidth,\n        height: this.gl.drawingBufferHeight\n      });\n    }\n  }\n\n  _beginTimers() {\n    this.frameRate.timeEnd();\n    this.frameRate.timeStart();\n\n    // Check if timer for last frame has completed.\n    // GPU timer results are never available in the same\n    // frame they are captured.\n    if (\n      this._gpuTimeQuery &&\n      this._gpuTimeQuery.isResultAvailable() &&\n      !this._gpuTimeQuery.isTimerDisjoint()\n    ) {\n      this.stats.get('GPU Time').addTime(this._gpuTimeQuery.getTimerMilliseconds());\n    }\n\n    if (this._gpuTimeQuery) {\n      // GPU time query start\n      this._gpuTimeQuery.beginTimeElapsedQuery();\n    }\n\n    this.cpuTime.timeStart();\n  }\n\n  _endTimers() {\n    this.cpuTime.timeEnd();\n\n    if (this._gpuTimeQuery) {\n      // GPU time query end. Results will be available on next frame.\n      this._gpuTimeQuery.end();\n    }\n  }\n\n  // Event handling\n\n  _startEventHandling() {\n    const {canvas} = this.gl;\n    if (canvas) {\n      canvas.addEventListener('mousemove', this._onMousemove);\n      canvas.addEventListener('mouseleave', this._onMouseleave);\n    }\n  }\n\n  _onMousemove(e) {\n    this.animationProps._mousePosition = [e.offsetX, e.offsetY];\n  }\n  _onMouseleave(e) {\n    this.animationProps._mousePosition = null;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}