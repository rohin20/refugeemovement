{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport * as fs from '../node/fs';\nvar NodeFileSystem = /*#__PURE__*/function () {\n  function NodeFileSystem(options) {\n    _classCallCheck(this, NodeFileSystem);\n    this.fetch = options._fetch;\n  }\n  _createClass(NodeFileSystem, [{\n    key: \"readdir\",\n    value: function () {\n      var _readdir = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var dirname,\n          options,\n          _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              dirname = _args.length > 0 && _args[0] !== undefined ? _args[0] : '.';\n              options = _args.length > 1 ? _args[1] : undefined;\n              _context.next = 4;\n              return fs.readdir(dirname, options);\n            case 4:\n              return _context.abrupt(\"return\", _context.sent);\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function readdir() {\n        return _readdir.apply(this, arguments);\n      }\n      return readdir;\n    }()\n  }, {\n    key: \"stat\",\n    value: function () {\n      var _stat = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(path, options) {\n        var info;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fs.stat(path, options);\n            case 2:\n              info = _context2.sent;\n              return _context2.abrupt(\"return\", {\n                size: Number(info.size),\n                isDirectory: function isDirectory() {\n                  return false;\n                },\n                info: info\n              });\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      function stat(_x, _x2) {\n        return _stat.apply(this, arguments);\n      }\n      return stat;\n    }()\n  }, {\n    key: \"fetch\",\n    value: function () {\n      var _fetch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(path, options) {\n        var fallbackFetch;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              fallbackFetch = options.fetch || this.fetch;\n              return _context3.abrupt(\"return\", fallbackFetch(path, options));\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function fetch(_x3, _x4) {\n        return _fetch.apply(this, arguments);\n      }\n      return fetch;\n    }()\n  }, {\n    key: \"open\",\n    value: function () {\n      var _open = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(path, flags, mode) {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return fs.open(path, flags);\n            case 2:\n              return _context4.abrupt(\"return\", _context4.sent);\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }));\n      function open(_x5, _x6, _x7) {\n        return _open.apply(this, arguments);\n      }\n      return open;\n    }()\n  }, {\n    key: \"close\",\n    value: function () {\n      var _close = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(fd) {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return fs.close(fd);\n            case 2:\n              return _context5.abrupt(\"return\", _context5.sent);\n            case 3:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5);\n      }));\n      function close(_x8) {\n        return _close.apply(this, arguments);\n      }\n      return close;\n    }()\n  }, {\n    key: \"fstat\",\n    value: function () {\n      var _fstat = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(fd) {\n        var info;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return fs.fstat(fd);\n            case 2:\n              info = _context6.sent;\n              return _context6.abrupt(\"return\", info);\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6);\n      }));\n      function fstat(_x9) {\n        return _fstat.apply(this, arguments);\n      }\n      return fstat;\n    }()\n  }, {\n    key: \"read\",\n    value: function () {\n      var _read = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(fd, _ref) {\n        var _ref$buffer, buffer, _ref$offset, offset, _ref$length, length, _ref$position, position, totalBytesRead, _yield$fs$read, bytesRead;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _ref$buffer = _ref.buffer, buffer = _ref$buffer === void 0 ? null : _ref$buffer, _ref$offset = _ref.offset, offset = _ref$offset === void 0 ? 0 : _ref$offset, _ref$length = _ref.length, length = _ref$length === void 0 ? buffer.byteLength : _ref$length, _ref$position = _ref.position, position = _ref$position === void 0 ? null : _ref$position;\n              totalBytesRead = 0;\n            case 2:\n              if (!(totalBytesRead < length)) {\n                _context7.next = 10;\n                break;\n              }\n              _context7.next = 5;\n              return fs.read(fd, buffer, offset + totalBytesRead, length - totalBytesRead, position + totalBytesRead);\n            case 5:\n              _yield$fs$read = _context7.sent;\n              bytesRead = _yield$fs$read.bytesRead;\n              totalBytesRead += bytesRead;\n              _context7.next = 2;\n              break;\n            case 10:\n              return _context7.abrupt(\"return\", {\n                bytesRead: totalBytesRead,\n                buffer: buffer\n              });\n            case 11:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7);\n      }));\n      function read(_x10, _x11) {\n        return _read.apply(this, arguments);\n      }\n      return read;\n    }()\n  }]);\n  return NodeFileSystem;\n}();\nexport { NodeFileSystem as default };","map":{"version":3,"names":["fs","NodeFileSystem","options","_classCallCheck","fetch","_fetch","_createClass","key","value","_readdir","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dirname","_args","arguments","wrap","_callee$","_context","prev","next","length","undefined","readdir","abrupt","sent","stop","apply","_stat","_callee2","path","info","_callee2$","_context2","stat","size","Number","isDirectory","_x","_x2","_callee3","fallbackFetch","_callee3$","_context3","_x3","_x4","_open","_callee4","flags","mode","_callee4$","_context4","open","_x5","_x6","_x7","_close","_callee5","fd","_callee5$","_context5","close","_x8","_fstat","_callee6","_callee6$","_context6","fstat","_x9","_read","_callee7","_ref","_ref$buffer","buffer","_ref$offset","offset","_ref$length","_ref$position","position","totalBytesRead","_yield$fs$read","bytesRead","_callee7$","_context7","byteLength","read","_x10","_x11","default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@loaders.gl/loader-utils/src/lib/filesystems/node-filesystem.ts"],"sourcesContent":["import * as fs from '../node/fs';\nimport {IFileSystem, IRandomAccessReadFileSystem} from '../../types';\n// import {fetchFile} from \"../fetch/fetch-file\"\n// import {selectLoader} from \"../api/select-loader\";\n\ntype Stat = {\n  size: number;\n  isDirectory: () => boolean;\n  info?: fs.Stats;\n};\n\ntype ReadOptions = {\n  buffer?: Buffer;\n  offset?: number;\n  length?: number;\n  position?: number;\n};\n\n/**\n * FileSystem pass-through for Node.js\n * Compatible with BrowserFileSystem.\n * @param options\n */\nexport default class NodeFileSystem implements IFileSystem, IRandomAccessReadFileSystem {\n  // implements IFileSystem\n  constructor(options: {[key: string]: any}) {\n    this.fetch = options._fetch;\n  }\n\n  async readdir(dirname = '.', options?: {}): Promise<any[]> {\n    return await fs.readdir(dirname, options);\n  }\n\n  async stat(path: string, options?: {}): Promise<Stat> {\n    const info = await fs.stat(path, options);\n    return {size: Number(info.size), isDirectory: () => false, info};\n  }\n\n  async fetch(path: string, options: {[key: string]: any}) {\n    // Falls back to handle https:/http:/data: etc fetches\n    // eslint-disable-next-line\n    const fallbackFetch = options.fetch || this.fetch;\n    return fallbackFetch(path, options);\n  }\n\n  // implements IRandomAccessFileSystem\n  async open(path: string, flags: string | number, mode?: any): Promise<number> {\n    return await fs.open(path, flags);\n  }\n\n  async close(fd: number): Promise<void> {\n    return await fs.close(fd);\n  }\n\n  async fstat(fd: number): Promise<Stat> {\n    const info = await fs.fstat(fd);\n    return info;\n  }\n\n  async read(\n    fd: number,\n    // @ts-ignore Possibly null\n    {buffer = null, offset = 0, length = buffer.byteLength, position = null}: ReadOptions\n  ): Promise<{bytesRead: number; buffer: Buffer}> {\n    let totalBytesRead = 0;\n    // Read in loop until we get required number of bytes\n    while (totalBytesRead < length) {\n      const {bytesRead} = await fs.read(\n        fd,\n        buffer,\n        offset + totalBytesRead,\n        length - totalBytesRead,\n        position + totalBytesRead\n      );\n      totalBytesRead += bytesRead;\n    }\n    return {bytesRead: totalBytesRead, buffer};\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}