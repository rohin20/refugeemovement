{"ast":null,"code":"import _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport View from './view';\nimport WebMercatorViewport from '../viewports/web-mercator-viewport';\nimport MapController from '../controllers/map-controller';\nvar MapView = /*#__PURE__*/function (_View) {\n  _inherits(MapView, _View);\n  var _super = _createSuper(MapView);\n  function MapView() {\n    _classCallCheck(this, MapView);\n    return _super.apply(this, arguments);\n  }\n  _createClass(MapView, [{\n    key: \"ViewportType\",\n    get: function get() {\n      return WebMercatorViewport;\n    }\n  }, {\n    key: \"ControllerType\",\n    get: function get() {\n      return MapController;\n    }\n  }]);\n  return MapView;\n}(View);\nexport { MapView as default };\n_defineProperty(MapView, \"displayName\", 'MapView');","map":{"version":3,"names":["View","WebMercatorViewport","MapController","MapView","_View","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","get","default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/core/src/views/map-view.ts"],"sourcesContent":["import View, {CommonViewState} from './view';\nimport WebMercatorViewport from '../viewports/web-mercator-viewport';\nimport MapController from '../controllers/map-controller';\n\nimport type {NumericArray} from '../types/types';\n\nexport type MapViewState = {\n  /** Longitude of the map center */\n  longitude: number;\n  /** Latitude of the map center */\n  latitude: number;\n  /** Zoom level */\n  zoom: number;\n  /** Pitch (tilt) of the map, in degrees. `0` looks top down */\n  pitch?: number;\n  /** Bearing (rotation) of the map, in degrees. `0` is north up */\n  bearing?: number;\n  /** Min zoom, default `0` */\n  minZoom?: number;\n  /** Max zoom, default `20` */\n  maxZoom?: number;\n  /** Min pitch, default `0` */\n  minPitch?: number;\n  /** Max pitch, default `60` */\n  maxPitch?: number;\n} & CommonViewState;\n\ntype MapViewProps = {\n  /** Whether to render multiple copies of the map at low zoom levels. Default `false`. */\n  repeat?: boolean;\n  /** Scaler for the near plane, 1 unit equals to the height of the viewport. Default to `0.1`. Overwrites the `near` parameter. */\n  nearZMultiplier?: number;\n  /** Scaler for the far plane, 1 unit equals to the distance from the camera to the top edge of the screen. Default to `1.01`. Overwrites the `far` parameter. */\n  farZMultiplier?: number;\n  /** Custom projection matrix */\n  projectionMatrix?: NumericArray;\n  /** Field of view covered by the camera, in the perspective case. In degrees. If not supplied, will be calculated from `altitude`. */\n  fovy?: number;\n  /** Distance of the camera relative to viewport height. Default `1.5`. */\n  altitude?: number;\n  /** Whether to create an orthographic or perspective projection matrix. Default is `false` (perspective projection). */\n  orthographic?: boolean;\n};\n\nexport default class MapView extends View<MapViewState, MapViewProps> {\n  static displayName = 'MapView';\n\n  get ViewportType() {\n    return WebMercatorViewport;\n  }\n\n  get ControllerType() {\n    return MapController;\n  }\n}\n"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAoC,QAApC;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AAAA,IA0CqBC,OAAN,0BAAAC,KAAA;EAAAC,SAAA,CAAAF,OAAA,EAAAC,KAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,OAAA;EAAA,SAAAA,QAAA;IAAAK,eAAA,OAAAL,OAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,OAAA;IAAAS,GAAA;IAAAC,GAAA,EAGG,SAAAA,IAAA,EAAG;MACjB,OAAOZ,mBAAP;IACD;EAAA;IAAAW,GAAA;IAAAC,GAAA,EAEiB,SAAAA,IAAA,EAAG;MACnB,OAAOX,aAAP;IACD;EAAA;EAAA,OAAAC,OAAA;AAAA,EATkCH,IAAtB;AAAA,SAAMG,OAAN,IAAAW,OAAA;gBAAMX,O,iBACE,S"},"metadata":{},"sourceType":"module","externalDependencies":[]}