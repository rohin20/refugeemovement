{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hexagonToPolygonGeo = hexagonToPolygonGeo;\nvar _core = require(\"@deck.gl/core\");\nvar _console = _interopRequireDefault(require(\"global/console\"));\nfunction hexagonToPolygonGeo(object, properties, radius, mapState) {\n  var viewport = new _core.WebMercatorViewport(mapState);\n  if (!Array.isArray(object.position)) {\n    return null;\n  }\n  var screenCenter = viewport.projectFlat(object.position);\n  var _viewport$getDistance = viewport.getDistanceScales(object.position),\n    unitsPerMeter = _viewport$getDistance.unitsPerMeter;\n  if (!Array.isArray(unitsPerMeter)) {\n    _console[\"default\"].warn(\"unitsPerMeter is undefined\");\n    return null;\n  }\n  var pixRadius = radius * unitsPerMeter[0];\n  var coordinates = [];\n  for (var i = 0; i < 6; i++) {\n    var vertex = hex_corner(screenCenter, pixRadius, i);\n    coordinates.push(viewport.unprojectFlat(vertex));\n  }\n  coordinates.push(coordinates[0]);\n  return {\n    geometry: {\n      coordinates: coordinates,\n      type: 'LineString'\n    },\n    properties: properties\n  };\n}\nfunction hex_corner(center, radius, i) {\n  var angle_deg = 60 * i + 30;\n  var angle_rad = Math.PI / 180 * angle_deg;\n  return [center[0] + radius * Math.cos(angle_rad), center[1] + radius * Math.sin(angle_rad)];\n}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","hexagonToPolygonGeo","_core","_console","object","properties","radius","mapState","viewport","WebMercatorViewport","unitsPerMeter","_viewport$getDistance","warn","coordinates","vertex","hex_corner","screenCenter","pixRadius","i","push","unprojectFlat","geometry","type","angle_deg","angle_rad","Math","PI","center","cos","sin"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/layers/src/hexagon-layer/hexagon-utils.ts"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {WebMercatorViewport} from '@deck.gl/core';\nimport Console from 'global/console';\nimport {Centroid} from '@kepler.gl/utils';\n\nexport function hexagonToPolygonGeo(object, properties, radius, mapState) {\n  const viewport = new WebMercatorViewport(mapState);\n  if (!Array.isArray(object.position)) {\n    return null;\n  }\n\n  const screenCenter = viewport.projectFlat(object.position);\n  const {unitsPerMeter} = viewport.getDistanceScales(object.position);\n\n  if (!Array.isArray(unitsPerMeter)) {\n    Console.warn(`unitsPerMeter is undefined`);\n    return null;\n  }\n\n  const pixRadius = radius * unitsPerMeter[0];\n\n  const coordinates: any[] = [];\n\n  for (let i = 0; i < 6; i++) {\n    const vertex = hex_corner(screenCenter, pixRadius, i);\n    coordinates.push(viewport.unprojectFlat(vertex));\n  }\n\n  coordinates.push(coordinates[0]);\n\n  return {\n    geometry: {\n      coordinates,\n      type: 'LineString'\n    },\n    properties\n  };\n}\n\nfunction hex_corner(center: Centroid, radius: number, i: number) {\n  const angle_deg = 60 * i + 30;\n  const angle_rad = (Math.PI / 180) * angle_deg;\n\n  return [center[0] + radius * Math.cos(angle_rad), center[1] + radius * Math.sin(angle_rad)];\n}\n"],"mappings":";;;;;;;;;AAoBA;;AACA;;AArBA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAAA,sBAAA,GAAAC,OAAA;AAEAC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EACAC,KAAA;AACA;AACAD,OAAA,CAAAE,mBAAA,GAAAA,mBAAA;AAEA,IAAAC,KAAA,GAAAN,OAAA;AAEA,IAAAO,QAAA,GAAAR,sBAAA,CAAAC,OAAA;AAAA,SAAAK,oBAAAG,MAAA,EAAAC,UAAA,EAAAC,MAAA,EAAAC,QAAA;EAMO,IAAAC,QAAS,OAAAN,KAAA,CAAAO,mBAA4B,CAArCF,QAAA;;IAEL,OAAK,IAAM;EACT;;;IAHsEG,aAAA,GAAAC,qBAOvC,CAAAD,aAAkB;;IAEnDP,QAAU,CAAC,SAAQ,EAAAS,IAAA,6BAAgB;;EAEjC;;EAGF,IAAMC,WAAS,GAAG;;IAIlB,IAAKC,MAAK,GAAVC,UAAwB,CAAxBC,YAA4B,EAAAC,SAAA,EAAAC,CAAA;IAC1BL,WAAY,CAAAM,IAAG,CAAAX,QAAW,CAAAY,aAAc,CAAAN,MAAA,CAAf;EACzB;;EAGF;IAEAO,QAAO;MACLR,WAAU,EAAAA,WAAA;MACRS,IAAA;IACA;IAFQjB,UADL,EAAAA;EAKL;AALK;;EAST,IAAAkB,SAAS,KAAW,GAAAL,CAAA,GAApB,EAAsC;EACpC,IAAMM,SAAS,GAAGC,IAAA,CAAKC,EAAL,GAAS,GAA3B,GAAAH,SAAA;EACA,OAAM,CAAAI,MAAS,EAAI,IAAIrB,MAAM,GAAXmB,IAAkB,CAAAG,GAAA,CAAAJ,SAApC,GAAAG,MAAA,MAAArB,MAAA,GAAAmB,IAAA,CAAAI,GAAA,CAAAL,SAAA;AAEA"},"metadata":{},"sourceType":"script","externalDependencies":[]}