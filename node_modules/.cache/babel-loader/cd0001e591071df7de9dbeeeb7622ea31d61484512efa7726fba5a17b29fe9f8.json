{"ast":null,"code":"import _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Matrix from './base/matrix';\nimport { checkVector } from '../lib/validators';\nimport { vec2_transformMat4AsVector, vec3_transformMat4AsVector } from '../lib/gl-matrix-extras';\nimport * as mat4 from 'gl-matrix/mat4';\nimport * as vec2 from 'gl-matrix/vec2';\nimport * as vec3 from 'gl-matrix/vec3';\nimport * as vec4 from 'gl-matrix/vec4';\nvar INDICES;\n(function (INDICES) {\n  INDICES[INDICES[\"COL0ROW0\"] = 0] = \"COL0ROW0\";\n  INDICES[INDICES[\"COL0ROW1\"] = 1] = \"COL0ROW1\";\n  INDICES[INDICES[\"COL0ROW2\"] = 2] = \"COL0ROW2\";\n  INDICES[INDICES[\"COL0ROW3\"] = 3] = \"COL0ROW3\";\n  INDICES[INDICES[\"COL1ROW0\"] = 4] = \"COL1ROW0\";\n  INDICES[INDICES[\"COL1ROW1\"] = 5] = \"COL1ROW1\";\n  INDICES[INDICES[\"COL1ROW2\"] = 6] = \"COL1ROW2\";\n  INDICES[INDICES[\"COL1ROW3\"] = 7] = \"COL1ROW3\";\n  INDICES[INDICES[\"COL2ROW0\"] = 8] = \"COL2ROW0\";\n  INDICES[INDICES[\"COL2ROW1\"] = 9] = \"COL2ROW1\";\n  INDICES[INDICES[\"COL2ROW2\"] = 10] = \"COL2ROW2\";\n  INDICES[INDICES[\"COL2ROW3\"] = 11] = \"COL2ROW3\";\n  INDICES[INDICES[\"COL3ROW0\"] = 12] = \"COL3ROW0\";\n  INDICES[INDICES[\"COL3ROW1\"] = 13] = \"COL3ROW1\";\n  INDICES[INDICES[\"COL3ROW2\"] = 14] = \"COL3ROW2\";\n  INDICES[INDICES[\"COL3ROW3\"] = 15] = \"COL3ROW3\";\n})(INDICES || (INDICES = {}));\nvar DEFAULT_FOVY = 45 * Math.PI / 180;\nvar DEFAULT_ASPECT = 1;\nvar DEFAULT_NEAR = 0.1;\nvar DEFAULT_FAR = 500;\nvar IDENTITY_MATRIX = Object.freeze([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\nvar Matrix4 = /*#__PURE__*/function (_Matrix) {\n  _inherits(Matrix4, _Matrix);\n  var _super = _createSuper(Matrix4);\n  function Matrix4(array) {\n    var _this;\n    _classCallCheck(this, Matrix4);\n    _this = _super.call(this, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0);\n    if (arguments.length === 1 && Array.isArray(array)) {\n      _this.copy(array);\n    } else {\n      _this.identity();\n    }\n    return _this;\n  }\n  _createClass(Matrix4, [{\n    key: \"ELEMENTS\",\n    get: function get() {\n      return 16;\n    }\n  }, {\n    key: \"RANK\",\n    get: function get() {\n      return 4;\n    }\n  }, {\n    key: \"INDICES\",\n    get: function get() {\n      return INDICES;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(array) {\n      this[0] = array[0];\n      this[1] = array[1];\n      this[2] = array[2];\n      this[3] = array[3];\n      this[4] = array[4];\n      this[5] = array[5];\n      this[6] = array[6];\n      this[7] = array[7];\n      this[8] = array[8];\n      this[9] = array[9];\n      this[10] = array[10];\n      this[11] = array[11];\n      this[12] = array[12];\n      this[13] = array[13];\n      this[14] = array[14];\n      this[15] = array[15];\n      return this.check();\n    }\n  }, {\n    key: \"set\",\n    value: function set(m00, m10, m20, m30, m01, m11, m21, m31, m02, m12, m22, m32, m03, m13, m23, m33) {\n      this[0] = m00;\n      this[1] = m10;\n      this[2] = m20;\n      this[3] = m30;\n      this[4] = m01;\n      this[5] = m11;\n      this[6] = m21;\n      this[7] = m31;\n      this[8] = m02;\n      this[9] = m12;\n      this[10] = m22;\n      this[11] = m32;\n      this[12] = m03;\n      this[13] = m13;\n      this[14] = m23;\n      this[15] = m33;\n      return this.check();\n    }\n  }, {\n    key: \"setRowMajor\",\n    value: function setRowMajor(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n      this[0] = m00;\n      this[1] = m10;\n      this[2] = m20;\n      this[3] = m30;\n      this[4] = m01;\n      this[5] = m11;\n      this[6] = m21;\n      this[7] = m31;\n      this[8] = m02;\n      this[9] = m12;\n      this[10] = m22;\n      this[11] = m32;\n      this[12] = m03;\n      this[13] = m13;\n      this[14] = m23;\n      this[15] = m33;\n      return this.check();\n    }\n  }, {\n    key: \"toRowMajor\",\n    value: function toRowMajor(result) {\n      result[0] = this[0];\n      result[1] = this[4];\n      result[2] = this[8];\n      result[3] = this[12];\n      result[4] = this[1];\n      result[5] = this[5];\n      result[6] = this[9];\n      result[7] = this[13];\n      result[8] = this[2];\n      result[9] = this[6];\n      result[10] = this[10];\n      result[11] = this[14];\n      result[12] = this[3];\n      result[13] = this[7];\n      result[14] = this[11];\n      result[15] = this[15];\n      return result;\n    }\n  }, {\n    key: \"identity\",\n    value: function identity() {\n      return this.copy(IDENTITY_MATRIX);\n    }\n  }, {\n    key: \"fromObject\",\n    value: function fromObject(object) {\n      return this.check();\n    }\n  }, {\n    key: \"fromQuaternion\",\n    value: function fromQuaternion(quaternion) {\n      mat4.fromQuat(this, quaternion);\n      return this.check();\n    }\n  }, {\n    key: \"frustum\",\n    value: function frustum(view) {\n      var left = view.left,\n        right = view.right,\n        bottom = view.bottom,\n        top = view.top,\n        _view$near = view.near,\n        near = _view$near === void 0 ? DEFAULT_NEAR : _view$near,\n        _view$far = view.far,\n        far = _view$far === void 0 ? DEFAULT_FAR : _view$far;\n      if (far === Infinity) {\n        computeInfinitePerspectiveOffCenter(this, left, right, bottom, top, near);\n      } else {\n        mat4.frustum(this, left, right, bottom, top, near, far);\n      }\n      return this.check();\n    }\n  }, {\n    key: \"lookAt\",\n    value: function lookAt(view) {\n      var eye = view.eye,\n        _view$center = view.center,\n        center = _view$center === void 0 ? [0, 0, 0] : _view$center,\n        _view$up = view.up,\n        up = _view$up === void 0 ? [0, 1, 0] : _view$up;\n      mat4.lookAt(this, eye, center, up);\n      return this.check();\n    }\n  }, {\n    key: \"ortho\",\n    value: function ortho(view) {\n      var left = view.left,\n        right = view.right,\n        bottom = view.bottom,\n        top = view.top,\n        _view$near2 = view.near,\n        near = _view$near2 === void 0 ? DEFAULT_NEAR : _view$near2,\n        _view$far2 = view.far,\n        far = _view$far2 === void 0 ? DEFAULT_FAR : _view$far2;\n      mat4.ortho(this, left, right, bottom, top, near, far);\n      return this.check();\n    }\n  }, {\n    key: \"orthographic\",\n    value: function orthographic(view) {\n      var _view$fovy = view.fovy,\n        fovy = _view$fovy === void 0 ? DEFAULT_FOVY : _view$fovy,\n        _view$aspect = view.aspect,\n        aspect = _view$aspect === void 0 ? DEFAULT_ASPECT : _view$aspect,\n        _view$focalDistance = view.focalDistance,\n        focalDistance = _view$focalDistance === void 0 ? 1 : _view$focalDistance,\n        _view$near3 = view.near,\n        near = _view$near3 === void 0 ? DEFAULT_NEAR : _view$near3,\n        _view$far3 = view.far,\n        far = _view$far3 === void 0 ? DEFAULT_FAR : _view$far3;\n      checkRadians(fovy);\n      var halfY = fovy / 2;\n      var top = focalDistance * Math.tan(halfY);\n      var right = top * aspect;\n      return this.ortho({\n        left: -right,\n        right: right,\n        bottom: -top,\n        top: top,\n        near: near,\n        far: far\n      });\n    }\n  }, {\n    key: \"perspective\",\n    value: function perspective(view) {\n      var _view$fovy2 = view.fovy,\n        fovy = _view$fovy2 === void 0 ? 45 * Math.PI / 180 : _view$fovy2,\n        _view$aspect2 = view.aspect,\n        aspect = _view$aspect2 === void 0 ? 1 : _view$aspect2,\n        _view$near4 = view.near,\n        near = _view$near4 === void 0 ? 0.1 : _view$near4,\n        _view$far4 = view.far,\n        far = _view$far4 === void 0 ? 500 : _view$far4;\n      checkRadians(fovy);\n      mat4.perspective(this, fovy, aspect, near, far);\n      return this.check();\n    }\n  }, {\n    key: \"determinant\",\n    value: function determinant() {\n      return mat4.determinant(this);\n    }\n  }, {\n    key: \"getScale\",\n    value: function getScale() {\n      var result = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [-0, -0, -0];\n      result[0] = Math.sqrt(this[0] * this[0] + this[1] * this[1] + this[2] * this[2]);\n      result[1] = Math.sqrt(this[4] * this[4] + this[5] * this[5] + this[6] * this[6]);\n      result[2] = Math.sqrt(this[8] * this[8] + this[9] * this[9] + this[10] * this[10]);\n      return result;\n    }\n  }, {\n    key: \"getTranslation\",\n    value: function getTranslation() {\n      var result = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [-0, -0, -0];\n      result[0] = this[12];\n      result[1] = this[13];\n      result[2] = this[14];\n      return result;\n    }\n  }, {\n    key: \"getRotation\",\n    value: function getRotation(result, scaleResult) {\n      result = result || [-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0];\n      scaleResult = scaleResult || [-0, -0, -0];\n      var scale = this.getScale(scaleResult);\n      var inverseScale0 = 1 / scale[0];\n      var inverseScale1 = 1 / scale[1];\n      var inverseScale2 = 1 / scale[2];\n      result[0] = this[0] * inverseScale0;\n      result[1] = this[1] * inverseScale1;\n      result[2] = this[2] * inverseScale2;\n      result[3] = 0;\n      result[4] = this[4] * inverseScale0;\n      result[5] = this[5] * inverseScale1;\n      result[6] = this[6] * inverseScale2;\n      result[7] = 0;\n      result[8] = this[8] * inverseScale0;\n      result[9] = this[9] * inverseScale1;\n      result[10] = this[10] * inverseScale2;\n      result[11] = 0;\n      result[12] = 0;\n      result[13] = 0;\n      result[14] = 0;\n      result[15] = 1;\n      return result;\n    }\n  }, {\n    key: \"getRotationMatrix3\",\n    value: function getRotationMatrix3(result, scaleResult) {\n      result = result || [-0, -0, -0, -0, -0, -0, -0, -0, -0];\n      scaleResult = scaleResult || [-0, -0, -0];\n      var scale = this.getScale(scaleResult);\n      var inverseScale0 = 1 / scale[0];\n      var inverseScale1 = 1 / scale[1];\n      var inverseScale2 = 1 / scale[2];\n      result[0] = this[0] * inverseScale0;\n      result[1] = this[1] * inverseScale1;\n      result[2] = this[2] * inverseScale2;\n      result[3] = this[4] * inverseScale0;\n      result[4] = this[5] * inverseScale1;\n      result[5] = this[6] * inverseScale2;\n      result[6] = this[8] * inverseScale0;\n      result[7] = this[9] * inverseScale1;\n      result[8] = this[10] * inverseScale2;\n      return result;\n    }\n  }, {\n    key: \"transpose\",\n    value: function transpose() {\n      mat4.transpose(this, this);\n      return this.check();\n    }\n  }, {\n    key: \"invert\",\n    value: function invert() {\n      mat4.invert(this, this);\n      return this.check();\n    }\n  }, {\n    key: \"multiplyLeft\",\n    value: function multiplyLeft(a) {\n      mat4.multiply(this, a, this);\n      return this.check();\n    }\n  }, {\n    key: \"multiplyRight\",\n    value: function multiplyRight(a) {\n      mat4.multiply(this, this, a);\n      return this.check();\n    }\n  }, {\n    key: \"rotateX\",\n    value: function rotateX(radians) {\n      mat4.rotateX(this, this, radians);\n      return this.check();\n    }\n  }, {\n    key: \"rotateY\",\n    value: function rotateY(radians) {\n      mat4.rotateY(this, this, radians);\n      return this.check();\n    }\n  }, {\n    key: \"rotateZ\",\n    value: function rotateZ(radians) {\n      mat4.rotateZ(this, this, radians);\n      return this.check();\n    }\n  }, {\n    key: \"rotateXYZ\",\n    value: function rotateXYZ(angleXYZ) {\n      return this.rotateX(angleXYZ[0]).rotateY(angleXYZ[1]).rotateZ(angleXYZ[2]);\n    }\n  }, {\n    key: \"rotateAxis\",\n    value: function rotateAxis(radians, axis) {\n      mat4.rotate(this, this, radians, axis);\n      return this.check();\n    }\n  }, {\n    key: \"scale\",\n    value: function scale(factor) {\n      mat4.scale(this, this, Array.isArray(factor) ? factor : [factor, factor, factor]);\n      return this.check();\n    }\n  }, {\n    key: \"translate\",\n    value: function translate(vector) {\n      mat4.translate(this, this, vector);\n      return this.check();\n    }\n  }, {\n    key: \"transform\",\n    value: function transform(vector, result) {\n      if (vector.length === 4) {\n        result = vec4.transformMat4(result || [-0, -0, -0, -0], vector, this);\n        checkVector(result, 4);\n        return result;\n      }\n      return this.transformAsPoint(vector, result);\n    }\n  }, {\n    key: \"transformAsPoint\",\n    value: function transformAsPoint(vector, result) {\n      var length = vector.length;\n      var out;\n      switch (length) {\n        case 2:\n          out = vec2.transformMat4(result || [-0, -0], vector, this);\n          break;\n        case 3:\n          out = vec3.transformMat4(result || [-0, -0, -0], vector, this);\n          break;\n        default:\n          throw new Error('Illegal vector');\n      }\n      checkVector(out, vector.length);\n      return out;\n    }\n  }, {\n    key: \"transformAsVector\",\n    value: function transformAsVector(vector, result) {\n      var out;\n      switch (vector.length) {\n        case 2:\n          out = vec2_transformMat4AsVector(result || [-0, -0], vector, this);\n          break;\n        case 3:\n          out = vec3_transformMat4AsVector(result || [-0, -0, -0], vector, this);\n          break;\n        default:\n          throw new Error('Illegal vector');\n      }\n      checkVector(out, vector.length);\n      return out;\n    }\n  }, {\n    key: \"transformPoint\",\n    value: function transformPoint(vector, result) {\n      return this.transformAsPoint(vector, result);\n    }\n  }, {\n    key: \"transformVector\",\n    value: function transformVector(vector, result) {\n      return this.transformAsPoint(vector, result);\n    }\n  }, {\n    key: \"transformDirection\",\n    value: function transformDirection(vector, result) {\n      return this.transformAsVector(vector, result);\n    }\n  }, {\n    key: \"makeRotationX\",\n    value: function makeRotationX(radians) {\n      return this.identity().rotateX(radians);\n    }\n  }, {\n    key: \"makeTranslation\",\n    value: function makeTranslation(x, y, z) {\n      return this.identity().translate([x, y, z]);\n    }\n  }], [{\n    key: \"IDENTITY\",\n    get: function get() {\n      return getIdentityMatrix();\n    }\n  }, {\n    key: \"ZERO\",\n    get: function get() {\n      return getZeroMatrix();\n    }\n  }]);\n  return Matrix4;\n}(Matrix);\nexport { Matrix4 as default };\nvar ZERO;\nvar IDENTITY;\nfunction getZeroMatrix() {\n  if (!ZERO) {\n    ZERO = new Matrix4([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n    Object.freeze(ZERO);\n  }\n  return ZERO;\n}\nfunction getIdentityMatrix() {\n  if (!IDENTITY) {\n    IDENTITY = new Matrix4();\n    Object.freeze(IDENTITY);\n  }\n  return IDENTITY;\n}\nfunction checkRadians(possiblyDegrees) {\n  if (possiblyDegrees > Math.PI * 2) {\n    throw Error('expected radians');\n  }\n}\nfunction computeInfinitePerspectiveOffCenter(result, left, right, bottom, top, near) {\n  var column0Row0 = 2 * near / (right - left);\n  var column1Row1 = 2 * near / (top - bottom);\n  var column2Row0 = (right + left) / (right - left);\n  var column2Row1 = (top + bottom) / (top - bottom);\n  var column2Row2 = -1;\n  var column2Row3 = -1;\n  var column3Row2 = -2 * near;\n  result[0] = column0Row0;\n  result[1] = 0;\n  result[2] = 0;\n  result[3] = 0;\n  result[4] = 0;\n  result[5] = column1Row1;\n  result[6] = 0;\n  result[7] = 0;\n  result[8] = column2Row0;\n  result[9] = column2Row1;\n  result[10] = column2Row2;\n  result[11] = column2Row3;\n  result[12] = 0;\n  result[13] = 0;\n  result[14] = column3Row2;\n  result[15] = 0;\n  return result;\n}","map":{"version":3,"names":["Matrix","checkVector","vec2_transformMat4AsVector","vec3_transformMat4AsVector","mat4","vec2","vec3","vec4","INDICES","DEFAULT_FOVY","Math","PI","DEFAULT_ASPECT","DEFAULT_NEAR","DEFAULT_FAR","IDENTITY_MATRIX","Object","freeze","Matrix4","_Matrix","_inherits","_super","_createSuper","array","_this","_classCallCheck","call","arguments","length","Array","isArray","copy","identity","_createClass","key","get","value","check","set","m00","m10","m20","m30","m01","m11","m21","m31","m02","m12","m22","m32","m03","m13","m23","m33","setRowMajor","toRowMajor","result","fromObject","object","fromQuaternion","quaternion","fromQuat","frustum","view","left","right","bottom","top","_view$near","near","_view$far","far","Infinity","computeInfinitePerspectiveOffCenter","lookAt","eye","_view$center","center","_view$up","up","ortho","_view$near2","_view$far2","orthographic","_view$fovy","fovy","_view$aspect","aspect","_view$focalDistance","focalDistance","_view$near3","_view$far3","checkRadians","halfY","tan","perspective","_view$fovy2","_view$aspect2","_view$near4","_view$far4","determinant","getScale","undefined","sqrt","getTranslation","getRotation","scaleResult","scale","inverseScale0","inverseScale1","inverseScale2","getRotationMatrix3","transpose","invert","multiplyLeft","a","multiply","multiplyRight","rotateX","radians","rotateY","rotateZ","rotateXYZ","angleXYZ","rotateAxis","axis","rotate","factor","translate","vector","transform","transformMat4","transformAsPoint","out","Error","transformAsVector","transformPoint","transformVector","transformDirection","makeRotationX","makeTranslation","x","y","z","getIdentityMatrix","getZeroMatrix","default","ZERO","IDENTITY","possiblyDegrees","column0Row0","column1Row1","column2Row0","column2Row1","column2Row2","column2Row3","column3Row2"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@math.gl/core/src/classes/matrix4.ts"],"sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n// MIT License\nimport Matrix from './base/matrix';\nimport {NumericArray} from '@math.gl/types';\nimport {checkVector} from '../lib/validators';\n\n/* eslint-disable camelcase */\nimport {vec2_transformMat4AsVector, vec3_transformMat4AsVector} from '../lib/gl-matrix-extras';\nimport * as mat4 from 'gl-matrix/mat4';\nimport * as vec2 from 'gl-matrix/vec2';\nimport * as vec3 from 'gl-matrix/vec3';\nimport * as vec4 from 'gl-matrix/vec4';\n\nenum INDICES {\n  COL0ROW0 = 0,\n  COL0ROW1 = 1,\n  COL0ROW2 = 2,\n  COL0ROW3 = 3,\n  COL1ROW0 = 4,\n  COL1ROW1 = 5,\n  COL1ROW2 = 6,\n  COL1ROW3 = 7,\n  COL2ROW0 = 8,\n  COL2ROW1 = 9,\n  COL2ROW2 = 10,\n  COL2ROW3 = 11,\n  COL3ROW0 = 12,\n  COL3ROW1 = 13,\n  COL3ROW2 = 14,\n  COL3ROW3 = 15\n}\n\nconst DEFAULT_FOVY = (45 * Math.PI) / 180;\nconst DEFAULT_ASPECT = 1;\nconst DEFAULT_NEAR = 0.1;\nconst DEFAULT_FAR = 500;\n\nconst IDENTITY_MATRIX = Object.freeze([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\n\n/** 4x4 matrix */\nexport default class Matrix4 extends Matrix {\n  static get IDENTITY(): Readonly<Matrix4> {\n    return getIdentityMatrix();\n  }\n\n  static get ZERO(): Readonly<Matrix4> {\n    return getZeroMatrix();\n  }\n\n  get ELEMENTS(): number {\n    return 16;\n  }\n\n  get RANK(): number {\n    return 4;\n  }\n\n  get INDICES(): typeof INDICES {\n    return INDICES;\n  }\n\n  constructor(array?: Readonly<NumericArray>) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0);\n    if (arguments.length === 1 && Array.isArray(array)) {\n      this.copy(array);\n    } else {\n      this.identity();\n    }\n  }\n\n  copy(array: Readonly<NumericArray>): this {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    this[3] = array[3];\n    this[4] = array[4];\n    this[5] = array[5];\n    this[6] = array[6];\n    this[7] = array[7];\n    this[8] = array[8];\n    this[9] = array[9];\n    this[10] = array[10];\n    this[11] = array[11];\n    this[12] = array[12];\n    this[13] = array[13];\n    this[14] = array[14];\n    this[15] = array[15];\n    return this.check();\n  }\n\n  // eslint-disable-next-line max-params\n  set(\n    m00: number,\n    m10: number,\n    m20: number,\n    m30: number,\n    m01: number,\n    m11: number,\n    m21: number,\n    m31: number,\n    m02: number,\n    m12: number,\n    m22: number,\n    m32: number,\n    m03: number,\n    m13: number,\n    m23: number,\n    m33: number\n  ): this {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m30;\n    this[4] = m01;\n    this[5] = m11;\n    this[6] = m21;\n    this[7] = m31;\n    this[8] = m02;\n    this[9] = m12;\n    this[10] = m22;\n    this[11] = m32;\n    this[12] = m03;\n    this[13] = m13;\n    this[14] = m23;\n    this[15] = m33;\n    return this.check();\n  }\n\n  // accepts row major order, stores as column major\n  // eslint-disable-next-line max-params\n  setRowMajor(\n    m00: number,\n    m01: number,\n    m02: number,\n    m03: number,\n    m10: number,\n    m11: number,\n    m12: number,\n    m13: number,\n    m20: number,\n    m21: number,\n    m22: number,\n    m23: number,\n    m30: number,\n    m31: number,\n    m32: number,\n    m33: number\n  ): this {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m30;\n    this[4] = m01;\n    this[5] = m11;\n    this[6] = m21;\n    this[7] = m31;\n    this[8] = m02;\n    this[9] = m12;\n    this[10] = m22;\n    this[11] = m32;\n    this[12] = m03;\n    this[13] = m13;\n    this[14] = m23;\n    this[15] = m33;\n    return this.check();\n  }\n\n  toRowMajor(result: NumericArray): NumericArray {\n    result[0] = this[0];\n    result[1] = this[4];\n    result[2] = this[8];\n    result[3] = this[12];\n    result[4] = this[1];\n    result[5] = this[5];\n    result[6] = this[9];\n    result[7] = this[13];\n    result[8] = this[2];\n    result[9] = this[6];\n    result[10] = this[10];\n    result[11] = this[14];\n    result[12] = this[3];\n    result[13] = this[7];\n    result[14] = this[11];\n    result[15] = this[15];\n    return result;\n  }\n\n  // Constructors\n\n  /** Set to identity matrix */\n  identity(): this {\n    return this.copy(IDENTITY_MATRIX);\n  }\n\n  /**\n   *\n   * @param object\n   * @returns self\n   */\n  fromObject(object: {[key: string]: any}): this {\n    return this.check();\n  }\n\n  /**\n   * Calculates a 4x4 matrix from the given quaternion\n   * @param quaternion Quaternion to create matrix from\n   * @returns self\n   */\n  fromQuaternion(quaternion: Readonly<NumericArray>): this {\n    mat4.fromQuat(this, quaternion);\n    return this.check();\n  }\n\n  /**\n   * Generates a frustum matrix with the given bounds\n   * @param view.left - Left bound of the frustum\n   * @param view.right - Right bound of the frustum\n   * @param view.bottom - Bottom bound of the frustum\n   * @param view.top - Top bound of the frustum\n   * @param view.near - Near bound of the frustum\n   * @param view.far - Far bound of the frustum. Can be set to Infinity.\n   * @returns self\n   */\n  frustum(view: {\n    left: number;\n    right: number;\n    bottom: number;\n    top: number;\n    near: number;\n    far?: number;\n  }): this {\n    const {left, right, bottom, top, near = DEFAULT_NEAR, far = DEFAULT_FAR} = view;\n    if (far === Infinity) {\n      computeInfinitePerspectiveOffCenter(this, left, right, bottom, top, near);\n    } else {\n      mat4.frustum(this, left, right, bottom, top, near, far);\n    }\n    return this.check();\n  }\n\n  /**\n   * Generates a look-at matrix with the given eye position, focal point,\n   * and up axis\n   * @param view.eye - (vector) Position of the viewer\n   * @param view.center - (vector) Point the viewer is looking at\n   * @param view.up - (vector) Up axis\n   * @returns self\n   */\n  lookAt(view: {\n    eye: Readonly<NumericArray>;\n    center?: Readonly<NumericArray>;\n    up?: Readonly<NumericArray>;\n  }): this {\n    const {eye, center = [0, 0, 0], up = [0, 1, 0]} = view;\n    mat4.lookAt(this, eye, center, up);\n    return this.check();\n  }\n\n  /**\n   * Generates a orthogonal projection matrix with the given bounds\n   * from \"traditional\" view space parameters\n   * @param view.left - Left bound of the frustum\n   * @param view.right number  Right bound of the frustum\n   * @param view.bottom - Bottom bound of the frustum\n   * @param view.top number  Top bound of the frustum\n   * @param view.near - Near bound of the frustum\n   * @param view.far number  Far bound of the frustum\n   * @returns self\n   */\n  ortho(view: {\n    left: number;\n    right: number;\n    bottom: number;\n    top: number;\n    near?: number;\n    far?: number;\n  }): this {\n    const {left, right, bottom, top, near = DEFAULT_NEAR, far = DEFAULT_FAR} = view;\n    mat4.ortho(this, left, right, bottom, top, near, far);\n    return this.check();\n  }\n\n  /**\n   * Generates an orthogonal projection matrix with the same parameters\n   * as a perspective matrix (plus focalDistance)\n   * @param view.fovy Vertical field of view in radians\n   * @param view.aspect Aspect ratio. Typically viewport width / viewport height\n   * @param view.focalDistance Distance in the view frustum used for extent calculations\n   * @param view.near Near bound of the frustum\n   * @param view.far Far bound of the frustum\n   * @returns self\n   */\n  orthographic(view: {\n    fovy?: number;\n    aspect?: number;\n    focalDistance?: number;\n    near?: number;\n    far?: number;\n  }): this {\n    const {\n      fovy = DEFAULT_FOVY,\n      aspect = DEFAULT_ASPECT,\n      focalDistance = 1,\n      near = DEFAULT_NEAR,\n      far = DEFAULT_FAR\n    } = view;\n\n    checkRadians(fovy);\n\n    const halfY = fovy / 2;\n    const top = focalDistance * Math.tan(halfY); // focus_plane is the distance from the camera\n    const right = top * aspect;\n\n    return this.ortho({\n      left: -right,\n      right,\n      bottom: -top,\n      top,\n      near,\n      far\n    });\n  }\n\n  /**\n   * Generates a perspective projection matrix with the given bounds\n   * @param view.fovy Vertical field of view in radians\n   * @param view.aspect Aspect ratio. typically viewport width/height\n   * @param view.near Near bound of the frustum\n   * @param view.far Far bound of the frustum\n   * @returns self\n   */\n  perspective(view: {fovy: number; aspect?: number; near?: number; far?: number}): this {\n    const {fovy = (45 * Math.PI) / 180, aspect = 1, near = 0.1, far = 500} = view;\n    checkRadians(fovy);\n    mat4.perspective(this, fovy, aspect, near, far);\n    return this.check();\n  }\n\n  // Accessors\n\n  determinant(): number {\n    return mat4.determinant(this);\n  }\n\n  /**\n   * Extracts the non-uniform scale assuming the matrix is an affine transformation.\n   * The scales are the \"lengths\" of the column vectors in the upper-left 3x3 matrix.\n   * @param result\n   * @returns self\n   */\n  getScale(result: NumericArray = [-0, -0, -0]): NumericArray {\n    // explicit is faster than hypot...\n    result[0] = Math.sqrt(this[0] * this[0] + this[1] * this[1] + this[2] * this[2]);\n    result[1] = Math.sqrt(this[4] * this[4] + this[5] * this[5] + this[6] * this[6]);\n    result[2] = Math.sqrt(this[8] * this[8] + this[9] * this[9] + this[10] * this[10]);\n    // result[0] = Math.hypot(this[0], this[1], this[2]);\n    // result[1] = Math.hypot(this[4], this[5], this[6]);\n    // result[2] = Math.hypot(this[8], this[9], this[10]);\n    return result;\n  }\n\n  /**\n   * Gets the translation portion, assuming the matrix is a affine transformation matrix.\n   * @param result\n   * @returns self\n   */\n  getTranslation(result: NumericArray = [-0, -0, -0]): NumericArray {\n    result[0] = this[12];\n    result[1] = this[13];\n    result[2] = this[14];\n    return result;\n  }\n\n  /**\n   * Gets upper left 3x3 pure rotation matrix (non-scaling), assume affine transformation matrix\n   * @param result\n   * @param scaleResult\n   * @returns self\n   */\n  getRotation(result?: NumericArray, scaleResult?: NumericArray): NumericArray {\n    result = result || [-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0];\n    scaleResult = scaleResult || [-0, -0, -0];\n    const scale = this.getScale(scaleResult);\n    const inverseScale0 = 1 / scale[0];\n    const inverseScale1 = 1 / scale[1];\n    const inverseScale2 = 1 / scale[2];\n    result[0] = this[0] * inverseScale0;\n    result[1] = this[1] * inverseScale1;\n    result[2] = this[2] * inverseScale2;\n    result[3] = 0;\n    result[4] = this[4] * inverseScale0;\n    result[5] = this[5] * inverseScale1;\n    result[6] = this[6] * inverseScale2;\n    result[7] = 0;\n    result[8] = this[8] * inverseScale0;\n    result[9] = this[9] * inverseScale1;\n    result[10] = this[10] * inverseScale2;\n    result[11] = 0;\n    result[12] = 0;\n    result[13] = 0;\n    result[14] = 0;\n    result[15] = 1;\n    return result;\n  }\n\n  /**\n   *\n   * @param result\n   * @param scaleResult\n   * @returns self\n   */\n  getRotationMatrix3(result?: NumericArray, scaleResult?: NumericArray): NumericArray {\n    result = result || [-0, -0, -0, -0, -0, -0, -0, -0, -0];\n    scaleResult = scaleResult || [-0, -0, -0];\n    const scale = this.getScale(scaleResult);\n    const inverseScale0 = 1 / scale[0];\n    const inverseScale1 = 1 / scale[1];\n    const inverseScale2 = 1 / scale[2];\n    result[0] = this[0] * inverseScale0;\n    result[1] = this[1] * inverseScale1;\n    result[2] = this[2] * inverseScale2;\n    result[3] = this[4] * inverseScale0;\n    result[4] = this[5] * inverseScale1;\n    result[5] = this[6] * inverseScale2;\n    result[6] = this[8] * inverseScale0;\n    result[7] = this[9] * inverseScale1;\n    result[8] = this[10] * inverseScale2;\n    return result;\n  }\n\n  // Modifiers\n\n  transpose(): this {\n    mat4.transpose(this, this);\n    return this.check();\n  }\n\n  invert(): this {\n    mat4.invert(this, this);\n    return this.check();\n  }\n\n  // Operations\n\n  multiplyLeft(a: Readonly<NumericArray>): this {\n    mat4.multiply(this, a, this);\n    return this.check();\n  }\n\n  multiplyRight(a: Readonly<NumericArray>): this {\n    mat4.multiply(this, this, a);\n    return this.check();\n  }\n\n  // Rotates a matrix by the given angle around the X axis\n  rotateX(radians: number): this {\n    mat4.rotateX(this, this, radians);\n    // mat4.rotate(this, this, radians, [1, 0, 0]);\n    return this.check();\n  }\n\n  // Rotates a matrix by the given angle around the Y axis.\n  rotateY(radians: number): this {\n    mat4.rotateY(this, this, radians);\n    // mat4.rotate(this, this, radians, [0, 1, 0]);\n    return this.check();\n  }\n\n  /**\n   * Rotates a matrix by the given angle around the Z axis.\n   * @param radians\n   * @returns self\n   */\n  rotateZ(radians: number): this {\n    mat4.rotateZ(this, this, radians);\n    // mat4.rotate(this, this, radians, [0, 0, 1]);\n    return this.check();\n  }\n\n  /**\n   *\n   * @param param0\n   * @returns self\n   */\n  rotateXYZ(angleXYZ: Readonly<NumericArray>): this {\n    return this.rotateX(angleXYZ[0]).rotateY(angleXYZ[1]).rotateZ(angleXYZ[2]);\n  }\n\n  /**\n   *\n   * @param radians\n   * @param axis\n   * @returns self\n   */\n  rotateAxis(radians: number, axis: Readonly<NumericArray>): this {\n    mat4.rotate(this, this, radians, axis);\n    return this.check();\n  }\n\n  /**\n   *\n   * @param factor\n   * @returns self\n   */\n  scale(factor: number | Readonly<NumericArray>): this {\n    mat4.scale(this, this, Array.isArray(factor) ? factor : [factor, factor, factor]);\n    return this.check();\n  }\n\n  /**\n   *\n   * @param vec\n   * @returns self\n   */\n  translate(vector: Readonly<NumericArray>): this {\n    mat4.translate(this, this, vector);\n    return this.check();\n  }\n\n  // Transforms\n\n  /**\n   * Transforms any 2, 3 or 4 element vector. 2 and 3 elements are treated as points\n   * @param vector\n   * @param result\n   * @returns self\n   */\n  transform(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    if (vector.length === 4) {\n      result = vec4.transformMat4(result || [-0, -0, -0, -0], vector, this);\n      checkVector(result, 4);\n      return result;\n    }\n    return this.transformAsPoint(vector, result);\n  }\n\n  /**\n   * Transforms any 2 or 3 element array as point (w implicitly 1)\n   * @param vector\n   * @param result\n   * @returns self\n   */\n  transformAsPoint(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    const {length} = vector;\n    let out: NumericArray;\n    switch (length) {\n      case 2:\n        out = vec2.transformMat4(result || [-0, -0], vector, this);\n        break;\n      case 3:\n        out = vec3.transformMat4(result || [-0, -0, -0], vector, this);\n        break;\n      default:\n        throw new Error('Illegal vector');\n    }\n    checkVector(out, vector.length);\n    return out;\n  }\n\n  /**\n   * Transforms any 2 or 3 element array as vector (w implicitly 0)\n   * @param vector\n   * @param result\n   * @returns self\n   */\n  transformAsVector(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    let out: NumericArray;\n    switch (vector.length) {\n      case 2:\n        out = vec2_transformMat4AsVector(result || [-0, -0], vector, this);\n        break;\n      case 3:\n        out = vec3_transformMat4AsVector(result || [-0, -0, -0], vector, this);\n        break;\n      default:\n        throw new Error('Illegal vector');\n    }\n    checkVector(out, vector.length);\n    return out;\n  }\n\n  /** @deprecated */\n  transformPoint(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    return this.transformAsPoint(vector, result);\n  }\n\n  /** @deprecated */\n  transformVector(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    return this.transformAsPoint(vector, result);\n  }\n\n  /** @deprecated */\n  transformDirection(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    return this.transformAsVector(vector, result);\n  }\n\n  // three.js math API compatibility\n\n  makeRotationX(radians: number): this {\n    return this.identity().rotateX(radians);\n  }\n\n  makeTranslation(x: number, y: number, z: number): this {\n    return this.identity().translate([x, y, z]);\n  }\n}\n\n// TODO initializing static members directly is an option, but make sure no tree-shaking issues\nlet ZERO: Matrix4;\nlet IDENTITY: Matrix4;\n\nfunction getZeroMatrix(): Readonly<Matrix4> {\n  if (!ZERO) {\n    ZERO = new Matrix4([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n    Object.freeze(ZERO);\n  }\n  return ZERO;\n}\n\nfunction getIdentityMatrix(): Matrix4 {\n  if (!IDENTITY) {\n    IDENTITY = new Matrix4();\n    Object.freeze(IDENTITY);\n  }\n  return IDENTITY;\n}\n\n// HELPER FUNCTIONS\n\nfunction checkRadians(possiblyDegrees: number) {\n  if (possiblyDegrees > Math.PI * 2) {\n    throw Error('expected radians');\n  }\n}\n\n// eslint-disable-next-line max-params\nfunction computeInfinitePerspectiveOffCenter(\n  result: NumericArray,\n  left: number,\n  right: number,\n  bottom: number,\n  top: number,\n  near: number\n): NumericArray {\n  const column0Row0 = (2 * near) / (right - left);\n  const column1Row1 = (2 * near) / (top - bottom);\n  const column2Row0 = (right + left) / (right - left);\n  const column2Row1 = (top + bottom) / (top - bottom);\n  const column2Row2 = -1;\n  const column2Row3 = -1;\n  const column3Row2 = -2 * near;\n  result[0] = column0Row0;\n  result[1] = 0;\n  result[2] = 0;\n  result[3] = 0;\n  result[4] = 0;\n  result[5] = column1Row1;\n  result[6] = 0;\n  result[7] = 0;\n  result[8] = column2Row0;\n  result[9] = column2Row1;\n  result[10] = column2Row2;\n  result[11] = column2Row3;\n  result[12] = 0;\n  result[13] = 0;\n  result[14] = column3Row2;\n  result[15] = 0;\n  return result;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}