{"ast":null,"code":"import _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { assert } from '../utils';\nimport { parsePropTypes } from './filters/prop-types';\nvar VERTEX_SHADER = 'vs';\nvar FRAGMENT_SHADER = 'fs';\nvar ShaderModule = /*#__PURE__*/function () {\n  function ShaderModule(_ref) {\n    _classCallCheck(this, ShaderModule);\n    var name = _ref.name,\n      vs = _ref.vs,\n      fs = _ref.fs,\n      _ref$dependencies = _ref.dependencies,\n      dependencies = _ref$dependencies === void 0 ? [] : _ref$dependencies,\n      uniforms = _ref.uniforms,\n      getUniforms = _ref.getUniforms,\n      _ref$deprecations = _ref.deprecations,\n      deprecations = _ref$deprecations === void 0 ? [] : _ref$deprecations,\n      _ref$defines = _ref.defines,\n      defines = _ref$defines === void 0 ? {} : _ref$defines,\n      _ref$inject = _ref.inject,\n      inject = _ref$inject === void 0 ? {} : _ref$inject,\n      vertexShader = _ref.vertexShader,\n      fragmentShader = _ref.fragmentShader;\n    assert(typeof name === 'string');\n    this.name = name;\n    this.vs = vs || vertexShader;\n    this.fs = fs || fragmentShader;\n    this.getModuleUniforms = getUniforms;\n    this.dependencies = dependencies;\n    this.deprecations = this._parseDeprecationDefinitions(deprecations);\n    this.defines = defines;\n    this.injections = normalizeInjections(inject);\n    if (uniforms) {\n      this.uniforms = parsePropTypes(uniforms);\n    }\n  }\n  _createClass(ShaderModule, [{\n    key: \"getModuleSource\",\n    value: function getModuleSource(type) {\n      var moduleSource;\n      switch (type) {\n        case VERTEX_SHADER:\n          moduleSource = this.vs || '';\n          break;\n        case FRAGMENT_SHADER:\n          moduleSource = this.fs || '';\n          break;\n        default:\n          assert(false);\n      }\n      return \"#define MODULE_\".concat(this.name.toUpperCase().replace(/[^0-9a-z]/gi, '_'), \"\\n\").concat(moduleSource, \"// END MODULE_\").concat(this.name, \"\\n\\n\");\n    }\n  }, {\n    key: \"getUniforms\",\n    value: function getUniforms(opts, uniforms) {\n      if (this.getModuleUniforms) {\n        return this.getModuleUniforms(opts, uniforms);\n      }\n      if (this.uniforms) {\n        return this._defaultGetUniforms(opts);\n      }\n      return {};\n    }\n  }, {\n    key: \"getDefines\",\n    value: function getDefines() {\n      return this.defines;\n    }\n  }, {\n    key: \"checkDeprecations\",\n    value: function checkDeprecations(shaderSource, log) {\n      this.deprecations.forEach(function (def) {\n        if (def.regex.test(shaderSource)) {\n          if (def.deprecated) {\n            log.deprecated(def.old, def.new)();\n          } else {\n            log.removed(def.old, def.new)();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"_parseDeprecationDefinitions\",\n    value: function _parseDeprecationDefinitions(deprecations) {\n      deprecations.forEach(function (def) {\n        switch (def.type) {\n          case 'function':\n            def.regex = new RegExp(\"\\\\b\".concat(def.old, \"\\\\(\"));\n            break;\n          default:\n            def.regex = new RegExp(\"\".concat(def.type, \" \").concat(def.old, \";\"));\n        }\n      });\n      return deprecations;\n    }\n  }, {\n    key: \"_defaultGetUniforms\",\n    value: function _defaultGetUniforms() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var uniforms = {};\n      var propTypes = this.uniforms;\n      for (var key in propTypes) {\n        var propDef = propTypes[key];\n        if (key in opts && !propDef.private) {\n          if (propDef.validate) {\n            assert(propDef.validate(opts[key], propDef), \"\".concat(this.name, \": invalid \").concat(key));\n          }\n          uniforms[key] = opts[key];\n        } else {\n          uniforms[key] = propDef.value;\n        }\n      }\n      return uniforms;\n    }\n  }]);\n  return ShaderModule;\n}();\nexport { ShaderModule as default };\nexport function normalizeShaderModule(module) {\n  if (!module.normalized) {\n    module.normalized = true;\n    if (module.uniforms && !module.getUniforms) {\n      var shaderModule = new ShaderModule(module);\n      module.getUniforms = shaderModule.getUniforms.bind(shaderModule);\n    }\n  }\n  return module;\n}\nfunction normalizeInjections(injections) {\n  var result = {\n    vs: {},\n    fs: {}\n  };\n  for (var hook in injections) {\n    var injection = injections[hook];\n    var stage = hook.slice(0, 2);\n    if (typeof injection === 'string') {\n      injection = {\n        order: 0,\n        injection: injection\n      };\n    }\n    result[stage][hook] = injection;\n  }\n  return result;\n}","map":{"version":3,"names":["assert","parsePropTypes","VERTEX_SHADER","FRAGMENT_SHADER","ShaderModule","_ref","_classCallCheck","name","vs","fs","_ref$dependencies","dependencies","uniforms","getUniforms","_ref$deprecations","deprecations","_ref$defines","defines","_ref$inject","inject","vertexShader","fragmentShader","getModuleUniforms","_parseDeprecationDefinitions","injections","normalizeInjections","_createClass","key","value","getModuleSource","type","moduleSource","concat","toUpperCase","replace","opts","_defaultGetUniforms","getDefines","checkDeprecations","shaderSource","log","forEach","def","regex","test","deprecated","old","new","removed","RegExp","arguments","length","undefined","propTypes","propDef","private","validate","default","normalizeShaderModule","module","normalized","shaderModule","bind","result","hook","injection","stage","slice","order"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@luma.gl/shadertools/src/lib/shader-module.js"],"sourcesContent":["import {assert} from '../utils';\nimport {parsePropTypes} from './filters/prop-types';\n\nconst VERTEX_SHADER = 'vs';\nconst FRAGMENT_SHADER = 'fs';\n\nexport default class ShaderModule {\n  constructor({\n    name,\n    vs,\n    fs,\n    dependencies = [],\n    uniforms,\n    getUniforms,\n    deprecations = [],\n    defines = {},\n    inject = {},\n    // DEPRECATED\n    vertexShader,\n    fragmentShader\n  }) {\n    assert(typeof name === 'string');\n    this.name = name;\n    this.vs = vs || vertexShader;\n    this.fs = fs || fragmentShader;\n    this.getModuleUniforms = getUniforms;\n    this.dependencies = dependencies;\n    this.deprecations = this._parseDeprecationDefinitions(deprecations);\n    this.defines = defines;\n    this.injections = normalizeInjections(inject);\n\n    if (uniforms) {\n      this.uniforms = parsePropTypes(uniforms);\n    }\n  }\n\n  // Extracts the source code chunk for the specified shader type from the named shader module\n  getModuleSource(type) {\n    let moduleSource;\n    switch (type) {\n      case VERTEX_SHADER:\n        moduleSource = this.vs || '';\n        break;\n      case FRAGMENT_SHADER:\n        moduleSource = this.fs || '';\n        break;\n      default:\n        assert(false);\n    }\n\n    return `\\\n#define MODULE_${this.name.toUpperCase().replace(/[^0-9a-z]/gi, '_')}\n${moduleSource}\\\n// END MODULE_${this.name}\n\n`;\n  }\n\n  getUniforms(opts, uniforms) {\n    if (this.getModuleUniforms) {\n      return this.getModuleUniforms(opts, uniforms);\n    }\n    // Build uniforms from the uniforms array\n    if (this.uniforms) {\n      return this._defaultGetUniforms(opts);\n    }\n    return {};\n  }\n\n  getDefines() {\n    return this.defines;\n  }\n\n  // Warn about deprecated uniforms or functions\n  checkDeprecations(shaderSource, log) {\n    this.deprecations.forEach(def => {\n      if (def.regex.test(shaderSource)) {\n        if (def.deprecated) {\n          log.deprecated(def.old, def.new)();\n        } else {\n          log.removed(def.old, def.new)();\n        }\n      }\n    });\n  }\n\n  _parseDeprecationDefinitions(deprecations) {\n    deprecations.forEach(def => {\n      switch (def.type) {\n        case 'function':\n          def.regex = new RegExp(`\\\\b${def.old}\\\\(`);\n          break;\n        default:\n          def.regex = new RegExp(`${def.type} ${def.old};`);\n      }\n    });\n\n    return deprecations;\n  }\n\n  _defaultGetUniforms(opts = {}) {\n    const uniforms = {};\n    const propTypes = this.uniforms;\n\n    for (const key in propTypes) {\n      const propDef = propTypes[key];\n      if (key in opts && !propDef.private) {\n        if (propDef.validate) {\n          assert(propDef.validate(opts[key], propDef), `${this.name}: invalid ${key}`);\n        }\n        uniforms[key] = opts[key];\n      } else {\n        uniforms[key] = propDef.value;\n      }\n    }\n\n    return uniforms;\n  }\n}\n\n// This utility mutates the original module\n// Keeping for backward compatibility\n// TODO - remove in v8\nexport function normalizeShaderModule(module) {\n  if (!module.normalized) {\n    module.normalized = true;\n    if (module.uniforms && !module.getUniforms) {\n      const shaderModule = new ShaderModule(module);\n      module.getUniforms = shaderModule.getUniforms.bind(shaderModule);\n    }\n  }\n  return module;\n}\n\nfunction normalizeInjections(injections) {\n  const result = {\n    vs: {},\n    fs: {}\n  };\n\n  for (const hook in injections) {\n    let injection = injections[hook];\n    const stage = hook.slice(0, 2);\n\n    if (typeof injection === 'string') {\n      injection = {\n        order: 0,\n        injection\n      };\n    }\n\n    result[stage][hook] = injection;\n  }\n\n  return result;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}