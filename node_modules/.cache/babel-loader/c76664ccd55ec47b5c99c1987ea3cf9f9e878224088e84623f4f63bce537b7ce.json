{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\nvar _fuzzy = _interopRequireDefault(require(\"fuzzy\"));\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\nvar _window = require(\"global/window\");\nvar _accessor = _interopRequireDefault(require(\"./accessor\"));\nvar _dropdownList = _interopRequireWildcard(require(\"./dropdown-list\"));\nvar _icons = require(\"../icons\");\nvar _constants = require(\"@kepler.gl/constants\");\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar DEFAULT_CLASS = 'typeahead';\n/**\n * Copied mostly from 'react-typeahead', an auto-completing text input\n *\n * Renders an text input that shows options nearby that you can use the\n * keyboard or mouse to select.\n */\n\nvar TypeaheadWrapper = _styledComponents[\"default\"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  display: flex;\\n  flex-direction: column;\\n  background-color: \", \";\\n  box-shadow: \", \";\\n\\n  :focus {\\n    outline: 0;\\n  }\\n\"])), function (props) {\n  return props.light ? props.theme.dropdownListBgdLT : props.theme.dropdownListBgd;\n}, function (props) {\n  return props.theme.dropdownListShadow;\n});\nvar InputBox = _styledComponents[\"default\"].div.attrs({\n  className: 'typeahead__input_box'\n})(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  padding: 8px;\\n\"])));\nvar TypeaheadInput = _styledComponents[\"default\"].input(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  \", \" :hover {\\n    cursor: pointer;\\n    background-color: \", \";\\n  }\\n\"])), function (props) {\n  return props.light ? props.theme.inputLT : props.theme.secondaryInput;\n}, function (props) {\n  return props.light ? props.theme.selectBackgroundLT : props.theme.secondaryInputBgd;\n});\nvar InputIcon = _styledComponents[\"default\"].div.attrs({\n  className: 'typeahead__input_icon'\n})(_templateObject4 || (_templateObject4 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  position: absolute;\\n  right: 15px;\\n  top: 14px;\\n  color: \", \";\\n\"])), function (props) {\n  return props.theme.inputPlaceholderColor;\n});\nfunction generateSearchFunction(props) {\n  var searchOptions = props.searchOptions,\n    filterOption = props.filterOption;\n  if (typeof searchOptions === 'function') {\n    if (filterOption !== null) {\n      _window.console.warn('searchOptions prop is being used, filterOption prop will be ignored');\n    }\n    return searchOptions;\n  } else if (typeof filterOption === 'function') {\n    // use custom filter option\n    return function (value, options) {\n      return options.filter(function (o) {\n        return filterOption(value, o);\n      });\n    };\n  }\n  var mapper = typeof filterOption === 'string' ? _accessor[\"default\"].generateAccessor(filterOption) : _accessor[\"default\"].IDENTITY_FN;\n  return function (value, options) {\n    return _fuzzy[\"default\"].filter(value, options, {\n      extract: mapper\n    }).map(function (res) {\n      return options[res.index];\n    });\n  };\n}\nfunction getOptionsForValue(value, props, state) {\n  var options = props.options,\n    showOptionsWhenEmpty = props.showOptionsWhenEmpty;\n  if (!props.searchable) {\n    // directly pass through options if can not be searched\n    return options;\n  }\n  if (shouldSkipSearch(value, state, showOptionsWhenEmpty)) {\n    return options;\n  }\n  var searchOptions = generateSearchFunction(props);\n  return searchOptions(value, options);\n}\nfunction shouldSkipSearch(input, state, showOptionsWhenEmpty) {\n  var emptyValue = !input || input.trim().length === 0; // this.state must be checked because it may not be defined yet if this function\n  // is called from within getInitialState\n\n  var isFocused = state && state.isFocused;\n  return !(showOptionsWhenEmpty && isFocused) && emptyValue;\n}\nvar Typeahead = /*#__PURE__*/function (_Component) {\n  (0, _inherits2[\"default\"])(Typeahead, _Component);\n  var _super = _createSuper(Typeahead);\n  function Typeahead(props) {\n    var _this;\n    (0, _classCallCheck2[\"default\"])(this, Typeahead);\n    _this = _super.call(this, props);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"root\", /*#__PURE__*/(0, _react.createRef)());\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"entry\", /*#__PURE__*/(0, _react.createRef)());\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"focus\", function () {\n      if (_this.entry.current) {\n        _this.entry.current.focus();\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_hasCustomValue\", function () {\n      var _this$state$entryValu;\n      return Number(_this.props.allowCustomValues) > 0 && Number((_this$state$entryValu = _this.state.entryValue) === null || _this$state$entryValu === void 0 ? void 0 : _this$state$entryValu.length) >= Number(_this.props.allowCustomValues) && _this.state.searchResults.indexOf(_this.state.entryValue) < 0;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_getCustomValue\", function () {\n      return _this._hasCustomValue() ? _this.state.entryValue : null;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onOptionSelected\", function (option, event) {\n      var _this$props$onOptionS, _this$props;\n      if (_this.props.searchable) {\n        // reset entry input\n        _this.setState({\n          searchResults: getOptionsForValue('', _this.props, _this.state),\n          selection: '',\n          entryValue: ''\n        });\n      }\n      return (_this$props$onOptionS = (_this$props = _this.props).onOptionSelected) === null || _this$props$onOptionS === void 0 ? void 0 : _this$props$onOptionS.call(_this$props, option, event);\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onTextEntryUpdated\", function () {\n      if (_this.props.searchable) {\n        var _this$entry$current;\n        var value = (_this$entry$current = _this.entry.current) === null || _this$entry$current === void 0 ? void 0 : _this$entry$current.value;\n        _this.setState({\n          searchResults: getOptionsForValue(value, _this.props, _this.state),\n          selection: '',\n          entryValue: value\n        });\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onEnter\", function (event) {\n      var selection = _this.getSelection();\n      if (!selection) {\n        var _this$props$onKeyDown, _this$props2;\n        return (_this$props$onKeyDown = (_this$props2 = _this.props).onKeyDown) === null || _this$props$onKeyDown === void 0 ? void 0 : _this$props$onKeyDown.call(_this$props2, event);\n      }\n      return _this._onOptionSelected(selection, event);\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onEscape\", function () {\n      _this.setState({\n        selectionIndex: null\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onTab\", function (event) {\n      var selection = _this.getSelection();\n      var option = selection ? selection : _this.state.searchResults.length > 0 ? _this.state.searchResults[0] : null;\n      if (option === null && _this._hasCustomValue()) {\n        option = _this._getCustomValue();\n      }\n      if (option !== null) {\n        return _this._onOptionSelected(option, event);\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"eventMap\", function () {\n      var events = {};\n      events[_constants.KeyEvent.DOM_VK_UP] = _this.navUp;\n      events[_constants.KeyEvent.DOM_VK_DOWN] = _this.navDown;\n      events[_constants.KeyEvent.DOM_VK_RETURN] = events[_constants.KeyEvent.DOM_VK_ENTER] = _this._onEnter;\n      events[_constants.KeyEvent.DOM_VK_ESCAPE] = _this._onEscape;\n      events[_constants.KeyEvent.DOM_VK_TAB] = _this._onTab;\n      return events;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_nav\", function (delta) {\n      if (!_this._hasHint()) {\n        return;\n      }\n      var newIndex = _this.state.selectionIndex === null ? delta === 1 ? 0 : delta : _this.state.selectionIndex + delta;\n      var length = _this.props.maxVisible ? _this.state.searchResults.slice(0, _this.props.maxVisible).length : _this.state.searchResults.length;\n      if (_this._hasCustomValue()) {\n        length += 1;\n      }\n      if (newIndex < 0) {\n        newIndex += length;\n      } else if (newIndex >= length) {\n        newIndex -= length;\n      }\n      _this.setState({\n        selectionIndex: newIndex\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"navDown\", function () {\n      _this._nav(1);\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"navUp\", function () {\n      _this._nav(-1);\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onChange\", function (event) {\n      if (_this.props.onChange) {\n        _this.props.onChange(event);\n      }\n      _this._onTextEntryUpdated();\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onKeyDown\", function (event) {\n      // If there are no visible elements, don't perform selector navigation.\n      // Just pass this up to the upstream onKeydown handler.\n      // Also skip if the user is pressing the shift key, since none of our handlers are looking for shift\n      if (!_this._hasHint() || event.shiftKey) {\n        var _this$props$onKeyDown2, _this$props3;\n        return (_this$props$onKeyDown2 = (_this$props3 = _this.props).onKeyDown) === null || _this$props$onKeyDown2 === void 0 ? void 0 : _this$props$onKeyDown2.call(_this$props3, event);\n      }\n      var handler = _this.eventMap()[event.keyCode];\n      if (handler) {\n        handler(event);\n      } else {\n        var _this$props$onKeyDown3, _this$props4;\n        return (_this$props$onKeyDown3 = (_this$props4 = _this.props).onKeyDown) === null || _this$props$onKeyDown3 === void 0 ? void 0 : _this$props$onKeyDown3.call(_this$props4, event);\n      } // Don't propagate the keystroke back to the DOM/browser\n\n      event.preventDefault();\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onFocus\", function (event) {\n      _this.setState({\n        isFocused: true\n      });\n      if (_this.props.onFocus) {\n        return _this.props.onFocus(event);\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onBlur\", function (event) {\n      _this.setState({\n        isFocused: false\n      });\n      if (_this.props.onBlur) {\n        return _this.props.onBlur(event);\n      }\n    });\n    _this.state = {\n      /** @type {ReadonlyArray<string>} */\n      searchResults: [],\n      // This should be called something else, 'entryValue'\n      entryValue: _this.props.value || _this.props.initialValue,\n      // A valid typeahead value\n      selection: _this.props.value,\n      // Index of the selection\n      selectionIndex: null,\n      // Keep track of the focus state of the input element, to determine\n      // whether to show options when empty (if showOptionsWhenEmpty is true)\n      isFocused: false\n    };\n    return _this;\n  }\n  (0, _createClass2[\"default\"])(Typeahead, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // call focus on entry or div to trigger key events listener\n      if (this.entry.current) {\n        this.entry.current.focus();\n      } else {\n        var _this$root$current;\n        (_this$root$current = this.root.current) === null || _this$root$current === void 0 ? void 0 : _this$root$current.focus();\n      }\n    }\n  }, {\n    key: \"_renderIncrementalSearchResults\",\n    value: function _renderIncrementalSearchResults() {\n      var _this$props$customLis = this.props.customListComponent,\n        CustomListComponent = _this$props$customLis === void 0 ? _dropdownList[\"default\"] : _this$props$customLis;\n      return /*#__PURE__*/_react[\"default\"].createElement(CustomListComponent, {\n        fixedOptions: this.props.fixedOptions,\n        options: this.props.maxVisible ? this.state.searchResults.slice(0, this.props.maxVisible) : this.state.searchResults,\n        areResultsTruncated: this.props.maxVisible && this.state.searchResults.length > this.props.maxVisible,\n        resultsTruncatedMessage: this.props.resultsTruncatedMessage,\n        onOptionSelected: this._onOptionSelected,\n        allowCustomValues: this.props.allowCustomValues,\n        customValue: this._getCustomValue(),\n        customClasses: this.props.customClasses,\n        customListItemComponent: this.props.customListItemComponent,\n        customListHeaderComponent: this.props.customListHeaderComponent,\n        selectionIndex: this.state.selectionIndex,\n        defaultClassNames: this.props.defaultClassNames,\n        displayOption: this.props.displayOption,\n        selectedItems: this.props.selectedItems,\n        light: this.props.light\n      });\n    }\n  }, {\n    key: \"getSelection\",\n    value: function getSelection() {\n      var index = this.state.selectionIndex;\n      if (index === null) {\n        return null;\n      }\n      index = Number(index);\n      if (this._hasCustomValue()) {\n        if (index === 0) {\n          return this.state.entryValue;\n        }\n        index--;\n      }\n      if (this._hasFixedOptions()) {\n        var _this$props$fixedOpti, _this$props$fixedOpti2, _this$props$fixedOpti3;\n        return index < Number((_this$props$fixedOpti = this.props.fixedOptions) === null || _this$props$fixedOpti === void 0 ? void 0 : _this$props$fixedOpti.length) ? (_this$props$fixedOpti2 = this.props.fixedOptions) === null || _this$props$fixedOpti2 === void 0 ? void 0 : _this$props$fixedOpti2[index] : this.state.searchResults[index - Number((_this$props$fixedOpti3 = this.props.fixedOptions) === null || _this$props$fixedOpti3 === void 0 ? void 0 : _this$props$fixedOpti3.length)];\n      }\n      return this.state.searchResults[index];\n    }\n  }, {\n    key: \"_renderHiddenInput\",\n    value: function _renderHiddenInput() {\n      if (!this.props.name) {\n        return null;\n      }\n      return /*#__PURE__*/_react[\"default\"].createElement(\"input\", {\n        type: \"hidden\",\n        name: this.props.name,\n        value: this.state.selection\n      });\n    }\n  }, {\n    key: \"_hasHint\",\n    value: function _hasHint() {\n      return this.state.searchResults.length > 0 || this._hasCustomValue();\n    }\n  }, {\n    key: \"_hasFixedOptions\",\n    value: function _hasFixedOptions() {\n      return Array.isArray(this.props.fixedOptions) && this.props.fixedOptions.length;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$customCla, _this$props$customCla2;\n      var inputClasses = {};\n      inputClasses[(_this$props$customCla = this.props.customClasses) === null || _this$props$customCla === void 0 ? void 0 : _this$props$customCla.input] = Boolean((_this$props$customCla2 = this.props.customClasses) === null || _this$props$customCla2 === void 0 ? void 0 : _this$props$customCla2.input);\n      var inputClassList = (0, _classnames[\"default\"])(inputClasses);\n      var classes = (0, _defineProperty2[\"default\"])({}, DEFAULT_CLASS, this.props.defaultClassNames);\n      classes[this.props.className ? this.props.className : ''] = Boolean(this.props.className);\n      var classList = (0, _classnames[\"default\"])(classes);\n      return /*#__PURE__*/_react[\"default\"].createElement(TypeaheadWrapper, {\n        className: classList,\n        ref: this.root,\n        tabIndex: 0,\n        onKeyDown: this._onKeyDown,\n        onKeyPress: this.props.onKeyPress,\n        onKeyUp: this.props.onKeyUp,\n        onFocus: this._onFocus,\n        light: this.props.light\n      }, this._renderHiddenInput(), this.props.searchable ? /*#__PURE__*/_react[\"default\"].createElement(InputBox, null, /*#__PURE__*/_react[\"default\"].createElement(TypeaheadInput, (0, _extends2[\"default\"])({\n        ref: this.entry,\n        type: \"text\",\n        disabled: this.props.disabled\n      }, this.props.inputProps, {\n        placeholder: this.props.placeholder,\n        className: inputClassList,\n        value: this.state.entryValue,\n        onChange: this._onChange,\n        onBlur: this._onBlur,\n        light: this.props.light\n      })), /*#__PURE__*/_react[\"default\"].createElement(InputIcon, null, /*#__PURE__*/_react[\"default\"].createElement(this.props.inputIcon, {\n        height: \"18px\"\n      }))) : null, this._renderIncrementalSearchResults());\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      //  invoked after a component is instantiated as well as before it is re-rendered\n      var searchResults = getOptionsForValue(state.entryValue, props, state);\n      return {\n        searchResults: searchResults\n      };\n    }\n  }]);\n  return Typeahead;\n}(_react.Component);\n(0, _defineProperty2[\"default\"])(Typeahead, \"defaultProps\", {\n  options: [],\n  customClasses: {},\n  allowCustomValues: 0,\n  initialValue: '',\n  value: '',\n  placeholder: '',\n  disabled: false,\n  textarea: false,\n  inputProps: {},\n  onOptionSelected: function onOptionSelected(option) {},\n  onChange: function onChange(event) {},\n  onKeyDown: function onKeyDown(event) {},\n  onKeyPress: function onKeyPress(event) {},\n  onKeyUp: function onKeyUp(event) {},\n  onFocus: function onFocus(event) {},\n  onBlur: function onBlur(event) {},\n  filterOption: null,\n  searchOptions: null,\n  inputDisplayOption: null,\n  defaultClassNames: true,\n  customListComponent: _dropdownList[\"default\"],\n  customListItemComponent: _dropdownList.ListItem,\n  inputIcon: _icons.Search,\n  customListHeaderComponent: null,\n  showOptionsWhenEmpty: true,\n  searchable: true,\n  resultsTruncatedMessage: null\n});\n(0, _reactLifecyclesCompat.polyfill)(Typeahead);\nvar _default = Typeahead;\nexports[\"default\"] = _default;","map":{"version":3,"names":["exports","_extends2","_interopRequireDefault","require","_classCallCheck2","_createClass2","_assertThisInitialized2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_defineProperty2","_taggedTemplateLiteral2","_classnames","_styledComponents","_window","_accessor","_dropdownList","_interopRequireWildcard","_icons","_constants","_templateObject","_templateObject2","_templateObject3","_templateObject4","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","DEFAULT_CLASS","TypeaheadWrapper","div","props","theme","dropdownListShadow","InputBox","attrs","className","light","inputLT","secondaryInput","selectBackgroundLT","secondaryInputBgd","InputIcon","inputPlaceholderColor","generateSearchFunction","searchOptions","filterOption","console","warn","options","filter","o","value","mapper","generateAccessor","IDENTITY_FN","extract","map","res","index","showOptionsWhenEmpty","shouldSkipSearch","input","state","emptyValue","trim","length","isFocused","Typeahead","_Component","_super","_this","_react","createRef","entry","current","focus","_this$state$entryValu","Number","allowCustomValues","entryValue","searchResults","indexOf","_hasCustomValue","option","event","_this$props$onOptionS","_this$props","searchable","setState","getOptionsForValue","selection","_this$entry$current","getSelection","_this$props$onKeyDown","_this$props2","onKeyDown","_onOptionSelected","selectionIndex","events","KeyEvent","DOM_VK_UP","navUp","DOM_VK_DOWN","navDown","DOM_VK_RETURN","DOM_VK_ENTER","_onEnter","DOM_VK_ESCAPE","_onEscape","delta","_hasHint","newIndex","maxVisible","slice","_nav","onChange","_onTextEntryUpdated","shiftKey","_this$props$onKeyDown2","_this$props3","handler","eventMap","keyCode","_this$props$onKeyDown3","_this$props4","preventDefault","onFocus","key","componentDidMount","_this$root$current","root","_renderIncrementalSearchResults","createElement","CustomListComponent","fixedOptions","areResultsTruncated","resultsTruncatedMessage","onOptionSelected","customValue","_getCustomValue","customListItemComponent","customListHeaderComponent","defaultClassNames","selectedItems","_hasFixedOptions","_this$props$fixedOpti","_this$props$fixedOpti2","_this$props$fixedOpti3","_renderHiddenInput","type","name","classList","Array","isArray","render","_this$props$customCla","_this$props$customCla2","inputClasses","customClasses","inputClassList","classes","ref","tabIndex","onKeyUp","_onFocus","TypeaheadInput","disabled","onBlur","_onBlur","inputIcon","height","getDerivedStateFromProps","Component","initialValue","placeholder","inputProps"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/components/src/common/item-selector/typeahead.tsx"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {Component, createRef, ElementType, KeyboardEventHandler} from 'react';\nimport {polyfill} from 'react-lifecycles-compat';\nimport fuzzy from 'fuzzy';\nimport classNames from 'classnames';\nimport styled from 'styled-components';\nimport {console as Console} from 'global/window';\n\nimport Accessor from './accessor';\nimport DropdownList, {ListItem} from './dropdown-list';\nimport {Search} from '../icons';\nimport {KeyEvent} from '@kepler.gl/constants';\n\nconst DEFAULT_CLASS = 'typeahead';\n/**\n * Copied mostly from 'react-typeahead', an auto-completing text input\n *\n * Renders an text input that shows options nearby that you can use the\n * keyboard or mouse to select.\n */\n\ninterface TypeaheadWrapperProps {\n  light?: boolean;\n}\n\nconst TypeaheadWrapper = styled.div<TypeaheadWrapperProps>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${props =>\n    props.light ? props.theme.dropdownListBgdLT : props.theme.dropdownListBgd};\n  box-shadow: ${props => props.theme.dropdownListShadow};\n\n  :focus {\n    outline: 0;\n  }\n`;\n\nconst InputBox = styled.div.attrs({\n  className: 'typeahead__input_box'\n})`\n  padding: 8px;\n`;\n\nconst TypeaheadInput = styled.input<TypeaheadWrapperProps>`\n  ${props => (props.light ? props.theme.inputLT : props.theme.secondaryInput)} :hover {\n    cursor: pointer;\n    background-color: ${props =>\n      props.light ? props.theme.selectBackgroundLT : props.theme.secondaryInputBgd};\n  }\n`;\n\nconst InputIcon = styled.div.attrs({\n  className: 'typeahead__input_icon'\n})`\n  position: absolute;\n  right: 15px;\n  top: 14px;\n  color: ${props => props.theme.inputPlaceholderColor};\n`;\n\nfunction generateSearchFunction(props: TypeaheadProps) {\n  const {searchOptions, filterOption} = props;\n  if (typeof searchOptions === 'function') {\n    if (filterOption !== null) {\n      Console.warn('searchOptions prop is being used, filterOption prop will be ignored');\n    }\n    return searchOptions;\n  } else if (typeof filterOption === 'function') {\n    // use custom filter option\n    return (value, options) => options.filter(o => filterOption(value, o));\n  }\n\n  const mapper =\n    typeof filterOption === 'string'\n      ? Accessor.generateAccessor(filterOption)\n      : Accessor.IDENTITY_FN;\n\n  return (value, options) =>\n    fuzzy.filter(value, options, {extract: mapper}).map(res => options[res.index]);\n}\n\nfunction getOptionsForValue(value, props, state) {\n  const {options, showOptionsWhenEmpty} = props;\n\n  if (!props.searchable) {\n    // directly pass through options if can not be searched\n    return options;\n  }\n  if (shouldSkipSearch(value, state, showOptionsWhenEmpty)) {\n    return options;\n  }\n\n  const searchOptions = generateSearchFunction(props);\n  return searchOptions(value, options);\n}\n\nfunction shouldSkipSearch(input, state, showOptionsWhenEmpty) {\n  const emptyValue = !input || input.trim().length === 0;\n\n  // this.state must be checked because it may not be defined yet if this function\n  // is called from within getInitialState\n  const isFocused = state && state.isFocused;\n  return !(showOptionsWhenEmpty && isFocused) && emptyValue;\n}\n\ninterface TypeaheadProps {\n  name?: string;\n  customClasses?: any;\n  maxVisible?: number;\n  resultsTruncatedMessage?: string;\n  options?: ReadonlyArray<string | number | boolean | object>;\n  fixedOptions?: ReadonlyArray<string | number | boolean | object> | null;\n  allowCustomValues?: number;\n  initialValue?: string;\n  value?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  textarea?: boolean;\n  inputProps?: object;\n  onOptionSelected?: (option: any, event: any) => any;\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyDown?: (event: React.KeyboardEvent<HTMLDivElement>) => void;\n  onKeyPress?: KeyboardEventHandler<HTMLDivElement>;\n  onKeyUp?: KeyboardEventHandler<HTMLDivElement>;\n  onFocus?: (event: React.FocusEvent<HTMLDivElement>) => void;\n  onBlur?: (event: React.FocusEvent<HTMLInputElement>) => void;\n  filterOption?: string | Function;\n  searchOptions?: Function;\n  displayOption?: string | Function;\n  inputDisplayOption?: string | Function;\n  formInputOption?: string | Function;\n  defaultClassNames?: boolean;\n  customListComponent?: ElementType;\n  customListItemComponent?: ElementType | Function;\n  customListHeaderComponent?: ElementType | Function | null;\n  showOptionsWhenEmpty?: boolean;\n  searchable?: boolean;\n  light?: boolean;\n  inputIcon: ElementType;\n  className?: string;\n  selectedItems?: any[] | null;\n}\n\ninterface TypeaheadState {\n  /** @type {ReadonlyArray<string>} */\n  searchResults: (string | undefined)[];\n\n  // This should be called something else, 'entryValue'\n  entryValue?: string;\n\n  // A valid typeahead value\n  selection?: string;\n\n  // Index of the selection\n  selectionIndex: null;\n\n  // Keep track of the focus state of the input element, to determine\n  // whether to show options when empty (if showOptionsWhenEmpty is true)\n  isFocused: boolean;\n}\n\nclass Typeahead extends Component<TypeaheadProps, TypeaheadState> {\n  static defaultProps = {\n    options: [],\n    customClasses: {},\n    allowCustomValues: 0,\n    initialValue: '',\n    value: '',\n    placeholder: '',\n    disabled: false,\n    textarea: false,\n    inputProps: {},\n    onOptionSelected(option) {},\n    onChange(event) {},\n    onKeyDown(event) {},\n    onKeyPress(event) {},\n    onKeyUp(event) {},\n    onFocus(event) {},\n    onBlur(event) {},\n    filterOption: null,\n    searchOptions: null,\n    inputDisplayOption: null,\n    defaultClassNames: true,\n    customListComponent: DropdownList,\n    customListItemComponent: ListItem,\n    inputIcon: Search,\n    customListHeaderComponent: null,\n    showOptionsWhenEmpty: true,\n    searchable: true,\n    resultsTruncatedMessage: null\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    //  invoked after a component is instantiated as well as before it is re-rendered\n    const searchResults = getOptionsForValue(state.entryValue, props, state);\n\n    return {searchResults};\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      /** @type {ReadonlyArray<string>} */\n      searchResults: [],\n\n      // This should be called something else, 'entryValue'\n      entryValue: this.props.value || this.props.initialValue,\n\n      // A valid typeahead value\n      selection: this.props.value,\n\n      // Index of the selection\n      selectionIndex: null,\n\n      // Keep track of the focus state of the input element, to determine\n      // whether to show options when empty (if showOptionsWhenEmpty is true)\n      isFocused: false\n    };\n  }\n\n  componentDidMount() {\n    // call focus on entry or div to trigger key events listener\n    if (this.entry.current) {\n      this.entry.current.focus();\n    } else {\n      this.root.current?.focus();\n    }\n  }\n\n  root = createRef<HTMLDivElement>();\n  entry = createRef<HTMLInputElement>();\n\n  focus = () => {\n    if (this.entry.current) {\n      this.entry.current.focus();\n    }\n  };\n\n  _hasCustomValue = () => {\n    return (\n      Number(this.props.allowCustomValues) > 0 &&\n      Number(this.state.entryValue?.length) >= Number(this.props.allowCustomValues) &&\n      this.state.searchResults.indexOf(this.state.entryValue) < 0\n    );\n  };\n\n  _getCustomValue = () => {\n    return this._hasCustomValue() ? this.state.entryValue : null;\n  };\n\n  _renderIncrementalSearchResults() {\n    const {customListComponent: CustomListComponent = DropdownList} = this.props;\n    return (\n      <CustomListComponent\n        fixedOptions={this.props.fixedOptions}\n        options={\n          this.props.maxVisible\n            ? this.state.searchResults.slice(0, this.props.maxVisible)\n            : this.state.searchResults\n        }\n        areResultsTruncated={\n          this.props.maxVisible && this.state.searchResults.length > this.props.maxVisible\n        }\n        resultsTruncatedMessage={this.props.resultsTruncatedMessage}\n        onOptionSelected={this._onOptionSelected}\n        allowCustomValues={this.props.allowCustomValues}\n        customValue={this._getCustomValue()}\n        customClasses={this.props.customClasses}\n        customListItemComponent={this.props.customListItemComponent}\n        customListHeaderComponent={this.props.customListHeaderComponent}\n        selectionIndex={this.state.selectionIndex}\n        defaultClassNames={this.props.defaultClassNames}\n        displayOption={this.props.displayOption}\n        selectedItems={this.props.selectedItems}\n        light={this.props.light}\n      />\n    );\n  }\n\n  getSelection() {\n    let index: number | null = this.state.selectionIndex;\n    if (index === null) {\n      return null;\n    }\n    index = Number(index);\n\n    if (this._hasCustomValue()) {\n      if (index === 0) {\n        return this.state.entryValue;\n      }\n      index--;\n    }\n    if (this._hasFixedOptions()) {\n      return index < Number(this.props.fixedOptions?.length)\n        ? this.props.fixedOptions?.[index]\n        : this.state.searchResults[index - Number(this.props.fixedOptions?.length)];\n    }\n    return this.state.searchResults[index];\n  }\n\n  _onOptionSelected = (option, event) => {\n    if (this.props.searchable) {\n      // reset entry input\n      this.setState({\n        searchResults: getOptionsForValue('', this.props, this.state),\n        selection: '',\n        entryValue: ''\n      });\n    }\n\n    return this.props.onOptionSelected?.(option, event);\n  };\n\n  // use () => {} to avoid binding 'this'\n  _onTextEntryUpdated = () => {\n    if (this.props.searchable) {\n      const value = this.entry.current?.value;\n\n      this.setState({\n        searchResults: getOptionsForValue(value, this.props, this.state),\n        selection: '',\n        entryValue: value\n      });\n    }\n  };\n\n  _onEnter = event => {\n    const selection = this.getSelection();\n    if (!selection) {\n      return this.props.onKeyDown?.(event);\n    }\n    return this._onOptionSelected(selection, event);\n  };\n\n  _onEscape = () => {\n    this.setState({\n      selectionIndex: null\n    });\n  };\n\n  _onTab = event => {\n    const selection = this.getSelection();\n    let option = selection\n      ? selection\n      : this.state.searchResults.length > 0\n      ? this.state.searchResults[0]\n      : null;\n\n    if (option === null && this._hasCustomValue()) {\n      option = this._getCustomValue();\n    }\n\n    if (option !== null) {\n      return this._onOptionSelected(option, event);\n    }\n  };\n\n  eventMap = () => {\n    const events = {};\n\n    events[KeyEvent.DOM_VK_UP] = this.navUp;\n    events[KeyEvent.DOM_VK_DOWN] = this.navDown;\n    events[KeyEvent.DOM_VK_RETURN] = events[KeyEvent.DOM_VK_ENTER] = this._onEnter;\n    events[KeyEvent.DOM_VK_ESCAPE] = this._onEscape;\n    events[KeyEvent.DOM_VK_TAB] = this._onTab;\n\n    return events;\n  };\n\n  _nav = delta => {\n    if (!this._hasHint()) {\n      return;\n    }\n    let newIndex =\n      this.state.selectionIndex === null\n        ? delta === 1\n          ? 0\n          : delta\n        : this.state.selectionIndex + delta;\n    let length = this.props.maxVisible\n      ? this.state.searchResults.slice(0, this.props.maxVisible).length\n      : this.state.searchResults.length;\n    if (this._hasCustomValue()) {\n      length += 1;\n    }\n\n    if (newIndex < 0) {\n      newIndex += length;\n    } else if (newIndex >= length) {\n      newIndex -= length;\n    }\n\n    this.setState({selectionIndex: newIndex});\n  };\n\n  navDown = () => {\n    this._nav(1);\n  };\n\n  navUp = () => {\n    this._nav(-1);\n  };\n\n  _onChange: React.ChangeEventHandler<HTMLInputElement> = event => {\n    if (this.props.onChange) {\n      this.props.onChange(event);\n    }\n\n    this._onTextEntryUpdated();\n  };\n\n  _onKeyDown: React.KeyboardEventHandler<HTMLDivElement> = event => {\n    // If there are no visible elements, don't perform selector navigation.\n    // Just pass this up to the upstream onKeydown handler.\n    // Also skip if the user is pressing the shift key, since none of our handlers are looking for shift\n    if (!this._hasHint() || event.shiftKey) {\n      return this.props.onKeyDown?.(event);\n    }\n\n    const handler = this.eventMap()[event.keyCode];\n\n    if (handler) {\n      handler(event);\n    } else {\n      return this.props.onKeyDown?.(event);\n    }\n    // Don't propagate the keystroke back to the DOM/browser\n    event.preventDefault();\n  };\n\n  _onFocus: React.FocusEventHandler<HTMLDivElement> = event => {\n    this.setState({isFocused: true});\n    if (this.props.onFocus) {\n      return this.props.onFocus(event);\n    }\n  };\n\n  _onBlur: React.FocusEventHandler<HTMLInputElement> = event => {\n    this.setState({isFocused: false});\n    if (this.props.onBlur) {\n      return this.props.onBlur(event);\n    }\n  };\n\n  _renderHiddenInput() {\n    if (!this.props.name) {\n      return null;\n    }\n\n    return <input type=\"hidden\" name={this.props.name} value={this.state.selection} />;\n  }\n\n  _hasHint() {\n    return this.state.searchResults.length > 0 || this._hasCustomValue();\n  }\n\n  _hasFixedOptions() {\n    return Array.isArray(this.props.fixedOptions) && this.props.fixedOptions.length;\n  }\n\n  render() {\n    const inputClasses = {};\n    inputClasses[this.props.customClasses?.input] = Boolean(this.props.customClasses?.input);\n    const inputClassList = classNames(inputClasses);\n\n    const classes = {\n      [DEFAULT_CLASS]: this.props.defaultClassNames\n    };\n    classes[this.props.className ? this.props.className : ''] = Boolean(this.props.className);\n    const classList = classNames(classes);\n\n    return (\n      <TypeaheadWrapper\n        className={classList}\n        ref={this.root}\n        tabIndex={0}\n        onKeyDown={this._onKeyDown}\n        onKeyPress={this.props.onKeyPress}\n        onKeyUp={this.props.onKeyUp}\n        onFocus={this._onFocus}\n        light={this.props.light}\n      >\n        {this._renderHiddenInput()}\n        {this.props.searchable ? (\n          <InputBox>\n            <TypeaheadInput\n              ref={this.entry}\n              type=\"text\"\n              disabled={this.props.disabled}\n              {...this.props.inputProps}\n              placeholder={this.props.placeholder}\n              className={inputClassList}\n              value={this.state.entryValue}\n              onChange={this._onChange}\n              onBlur={this._onBlur}\n              light={this.props.light}\n            />\n            <InputIcon>\n              <this.props.inputIcon height=\"18px\" />\n            </InputIcon>\n          </InputBox>\n        ) : null}\n        {this._renderIncrementalSearchResults()}\n      </TypeaheadWrapper>\n    );\n  }\n}\n\npolyfill(Typeahead);\n\nexport default Typeahead;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}