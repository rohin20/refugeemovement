{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { atob } from '../text-encoding/btoa.node';\nexport var FileReaderPolyfill = function () {\n  function FileReaderPolyfill() {\n    _classCallCheck(this, FileReaderPolyfill);\n    this.onload = null;\n  }\n  _createClass(FileReaderPolyfill, [{\n    key: \"abort\",\n    value: function abort() {}\n  }, {\n    key: \"readAsArrayBuffer\",\n    value: function () {\n      var _readAsArrayBuffer = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(blob) {\n        var arrayBuffer;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return blob.arrayBuffer();\n              case 2:\n                arrayBuffer = _context.sent;\n                if (this.onload) {\n                  this.onload({\n                    target: {\n                      result: arrayBuffer\n                    }\n                  });\n                }\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function readAsArrayBuffer(_x) {\n        return _readAsArrayBuffer.apply(this, arguments);\n      }\n      return readAsArrayBuffer;\n    }()\n  }, {\n    key: \"readAsBinaryString\",\n    value: function readAsBinaryString(blob) {\n      throw Error('Not implemented');\n    }\n  }, {\n    key: \"readAsDataURL\",\n    value: function () {\n      var _readAsDataURL = _asyncToGenerator(_regeneratorRuntime.mark(function _callee2(blob) {\n        var text, dataUrl;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return blob.text();\n              case 2:\n                text = _context2.sent;\n                dataUrl = \"data://;base64,\".concat(atob(text));\n                if (this.onload) {\n                  this.onload({\n                    target: {\n                      result: dataUrl\n                    }\n                  });\n                }\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function readAsDataURL(_x2) {\n        return _readAsDataURL.apply(this, arguments);\n      }\n      return readAsDataURL;\n    }()\n  }, {\n    key: \"readAsText\",\n    value: function () {\n      var _readAsText = _asyncToGenerator(_regeneratorRuntime.mark(function _callee3(blob) {\n        var text;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return blob.text();\n              case 2:\n                text = _context3.sent;\n                if (this.onload) {\n                  this.onload({\n                    target: {\n                      result: text\n                    }\n                  });\n                }\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n      function readAsText(_x3) {\n        return _readAsText.apply(this, arguments);\n      }\n      return readAsText;\n    }()\n  }]);\n  return FileReaderPolyfill;\n}();","map":{"version":3,"names":["atob","FileReaderPolyfill","_classCallCheck","onload","_createClass","key","value","abort","_readAsArrayBuffer","_asyncToGenerator","_regeneratorRuntime","mark","_callee","blob","arrayBuffer","wrap","_callee$","_context","prev","next","sent","target","result","stop","readAsArrayBuffer","_x","apply","arguments","readAsBinaryString","Error","_readAsDataURL","_callee2","text","dataUrl","_callee2$","_context2","concat","readAsDataURL","_x2","_readAsText","_callee3","_callee3$","_context3","readAsText","_x3"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@loaders.gl/polyfills/src/file/file-reader-polyfill.js"],"sourcesContent":["import {atob} from '../text-encoding/btoa.node';\n\nexport class FileReaderPolyfill {\n  constructor() {\n    this.onload = null;\n  }\n\n  abort() {}\n\n  async readAsArrayBuffer(blob) {\n    const arrayBuffer = await blob.arrayBuffer();\n    if (this.onload) {\n      this.onload({target: {result: arrayBuffer}});\n    }\n  }\n\n  readAsBinaryString(blob) {\n    throw Error('Not implemented');\n  }\n\n  async readAsDataURL(blob) {\n    const text = await blob.text();\n    const dataUrl = `data://;base64,${atob(text)}`;\n    if (this.onload) {\n      this.onload({target: {result: dataUrl}});\n    }\n  }\n\n  async readAsText(blob) {\n    const text = await blob.text();\n    if (this.onload) {\n      this.onload({target: {result: text}});\n    }\n  }\n}\n"],"mappings":";;;;AAAA,SAAQA,IAAR,QAAmB,4BAAnB;AAEA,WAAaC,kBAAb;EACE,SAAAA,mBAAA,EAAc;IAAAC,eAAA,OAAAD,kBAAA;IACZ,KAAKE,MAAL,GAAc,IAAd;EACD;EAHHC,YAAA,CAAAH,kBAAA;IAAAI,GAAA;IAAAC,KAAA,WAAAC,MAAA,EAKU,CAAE;EALZ;IAAAF,GAAA;IAAAC,KAAA;MAAA,IAAAE,kBAAA,GAAAC,iBAAA,CAAAC,mBAAA,CAAAC,IAAA,UAAAC,QAO0BC,IAP1B;QAAA,IAAAC,WAAA;QAAA,OAAAJ,mBAAA,CAAAK,IAAA,UAAAC,SAAAC,QAAA;UAAA;YAAA,QAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;cAAA;gBAAAF,QAAA,CAAAE,IAAA;gBAAA,OAQ8BN,IAAI,CAACC,WAAL,EAR9B;cAAA;gBAQUA,WARV,GAAAG,QAAA,CAAAG,IAAA;gBASI,IAAI,KAAKjB,MAAT,EAAiB;kBACf,KAAKA,MAAL,CAAY;oBAACkB,MAAM,EAAE;sBAACC,MAAM,EAAER;oBAAT;kBAAT,CAAZ;gBACD;cAXL;cAAA;gBAAA,OAAAG,QAAA,CAAAM,IAAA;YAAA;UAAA;QAAA,GAAAX,OAAA;MAAA;MAAA,SAAAY,kBAAAC,EAAA;QAAA,OAAAjB,kBAAA,CAAAkB,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAH,iBAAA;IAAA;EAAA;IAAAnB,GAAA;IAAAC,KAAA,WAAAsB,mBAcqBf,IAdrB,EAc2B;MACvB,MAAMgB,KAAK,CAAC,iBAAD,CAAX;IACD;EAhBH;IAAAxB,GAAA;IAAAC,KAAA;MAAA,IAAAwB,cAAA,GAAArB,iBAAA,CAAAC,mBAAA,CAAAC,IAAA,UAAAoB,SAkBsBlB,IAlBtB;QAAA,IAAAmB,IAAA,EAAAC,OAAA;QAAA,OAAAvB,mBAAA,CAAAK,IAAA,UAAAmB,UAAAC,SAAA;UAAA;YAAA,QAAAA,SAAA,CAAAjB,IAAA,GAAAiB,SAAA,CAAAhB,IAAA;cAAA;gBAAAgB,SAAA,CAAAhB,IAAA;gBAAA,OAmBuBN,IAAI,CAACmB,IAAL,EAnBvB;cAAA;gBAmBUA,IAnBV,GAAAG,SAAA,CAAAf,IAAA;gBAoBUa,OApBV,qBAAAG,MAAA,CAoBsCpC,IAAI,CAACgC,IAAD,CApB1C;gBAqBI,IAAI,KAAK7B,MAAT,EAAiB;kBACf,KAAKA,MAAL,CAAY;oBAACkB,MAAM,EAAE;sBAACC,MAAM,EAAEW;oBAAT;kBAAT,CAAZ;gBACD;cAvBL;cAAA;gBAAA,OAAAE,SAAA,CAAAZ,IAAA;YAAA;UAAA;QAAA,GAAAQ,QAAA;MAAA;MAAA,SAAAM,cAAAC,GAAA;QAAA,OAAAR,cAAA,CAAAJ,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAU,aAAA;IAAA;EAAA;IAAAhC,GAAA;IAAAC,KAAA;MAAA,IAAAiC,WAAA,GAAA9B,iBAAA,CAAAC,mBAAA,CAAAC,IAAA,UAAA6B,SA0BmB3B,IA1BnB;QAAA,IAAAmB,IAAA;QAAA,OAAAtB,mBAAA,CAAAK,IAAA,UAAA0B,UAAAC,SAAA;UAAA;YAAA,QAAAA,SAAA,CAAAxB,IAAA,GAAAwB,SAAA,CAAAvB,IAAA;cAAA;gBAAAuB,SAAA,CAAAvB,IAAA;gBAAA,OA2BuBN,IAAI,CAACmB,IAAL,EA3BvB;cAAA;gBA2BUA,IA3BV,GAAAU,SAAA,CAAAtB,IAAA;gBA4BI,IAAI,KAAKjB,MAAT,EAAiB;kBACf,KAAKA,MAAL,CAAY;oBAACkB,MAAM,EAAE;sBAACC,MAAM,EAAEU;oBAAT;kBAAT,CAAZ;gBACD;cA9BL;cAAA;gBAAA,OAAAU,SAAA,CAAAnB,IAAA;YAAA;UAAA;QAAA,GAAAiB,QAAA;MAAA;MAAA,SAAAG,WAAAC,GAAA;QAAA,OAAAL,WAAA,CAAAb,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAgB,UAAA;IAAA;EAAA;EAAA,OAAA1C,kBAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}