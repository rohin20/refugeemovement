{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport ClarinetParser from '../clarinet/clarinet';\nimport JSONPath from '../jsonpath/jsonpath';\nvar JSONParser = function () {\n  function JSONParser() {\n    _classCallCheck(this, JSONParser);\n    this.reset();\n    this._initializeParser();\n  }\n  _createClass(JSONParser, [{\n    key: \"reset\",\n    value: function reset() {\n      this.result = undefined;\n      this.previousStates = [];\n      this.currentState = Object.freeze({\n        container: [],\n        key: null\n      });\n      this.jsonpath = new JSONPath();\n    }\n  }, {\n    key: \"write\",\n    value: function write(chunk) {\n      this.parser.write(chunk);\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.parser.close();\n    }\n  }, {\n    key: \"_pushOrSet\",\n    value: function _pushOrSet(value) {\n      var _this$currentState = this.currentState,\n        container = _this$currentState.container,\n        key = _this$currentState.key;\n      if (key !== null) {\n        container[key] = value;\n        this.currentState.key = null;\n      } else {\n        container.push(value);\n      }\n    }\n  }, {\n    key: \"_openArray\",\n    value: function _openArray() {\n      var newContainer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      this.jsonpath.push(null);\n      this._pushOrSet(newContainer);\n      this.previousStates.push(this.currentState);\n      this.currentState = {\n        container: newContainer,\n        isArray: true,\n        key: null\n      };\n    }\n  }, {\n    key: \"_closeArray\",\n    value: function _closeArray() {\n      this.jsonpath.pop();\n      this.currentState = this.previousStates.pop();\n    }\n  }, {\n    key: \"_openObject\",\n    value: function _openObject() {\n      var newContainer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.jsonpath.push(null);\n      this._pushOrSet(newContainer);\n      this.previousStates.push(this.currentState);\n      this.currentState = {\n        container: newContainer,\n        isArray: false,\n        key: null\n      };\n    }\n  }, {\n    key: \"_closeObject\",\n    value: function _closeObject() {\n      this.jsonpath.pop();\n      this.currentState = this.previousStates.pop();\n    }\n  }, {\n    key: \"_initializeParser\",\n    value: function _initializeParser() {\n      var _this = this;\n      this.parser = new ClarinetParser({\n        onready: function onready() {\n          _this.jsonpath = new JSONPath();\n          _this.previousStates.length = 0;\n          _this.currentState.container.length = 0;\n        },\n        onopenobject: function onopenobject(name) {\n          _this._openObject({});\n          if (typeof name !== 'undefined') {\n            _this.parser.onkey(name);\n          }\n        },\n        onkey: function onkey(name) {\n          _this.jsonpath.set(name);\n          _this.currentState.key = name;\n        },\n        oncloseobject: function oncloseobject() {\n          _this._closeObject();\n        },\n        onopenarray: function onopenarray() {\n          _this._openArray();\n        },\n        onclosearray: function onclosearray() {\n          _this._closeArray();\n        },\n        onvalue: function onvalue(value) {\n          _this._pushOrSet(value);\n        },\n        onerror: function onerror(error) {\n          throw error;\n        },\n        onend: function onend() {\n          _this.result = _this.currentState.container.pop();\n        }\n      });\n    }\n  }]);\n  return JSONParser;\n}();\nexport { JSONParser as default };","map":{"version":3,"names":["ClarinetParser","JSONPath","JSONParser","_classCallCheck","reset","_initializeParser","result","undefined","previousStates","currentState","Object","freeze","container","key","jsonpath","chunk","parser","write","close","value","_this$currentState","push","newContainer","arguments","length","_pushOrSet","isArray","pop","_this","onready","onopenobject","name","_openObject","onkey","set","oncloseobject","_closeObject","onopenarray","_openArray","onclosearray","_closeArray","onvalue","onerror","error","onend"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@loaders.gl/json/src/lib/parser/json-parser.js"],"sourcesContent":["// @ts-nocheck\n\nimport ClarinetParser from '../clarinet/clarinet';\nimport JSONPath from '../jsonpath/jsonpath';\n\n// JSONParser builds a JSON object using the events emitted by the Clarinet parser\n\nexport default class JSONParser {\n  constructor() {\n    this.reset();\n    this._initializeParser();\n  }\n\n  reset() {\n    this.result = undefined;\n    this.previousStates = [];\n    this.currentState = Object.freeze({container: [], key: null});\n    this.jsonpath = new JSONPath();\n  }\n\n  write(chunk) {\n    this.parser.write(chunk);\n  }\n\n  close() {\n    this.parser.close();\n  }\n\n  // PRIVATE METHODS\n\n  _pushOrSet(value) {\n    const {container, key} = this.currentState;\n    if (key !== null) {\n      container[key] = value;\n      this.currentState.key = null;\n    } else {\n      container.push(value);\n    }\n  }\n\n  _openArray(newContainer = []) {\n    this.jsonpath.push(null);\n    this._pushOrSet(newContainer);\n    this.previousStates.push(this.currentState);\n    this.currentState = {container: newContainer, isArray: true, key: null};\n  }\n\n  _closeArray() {\n    this.jsonpath.pop();\n    this.currentState = this.previousStates.pop();\n  }\n\n  _openObject(newContainer = {}) {\n    this.jsonpath.push(null);\n    this._pushOrSet(newContainer);\n    this.previousStates.push(this.currentState);\n    this.currentState = {container: newContainer, isArray: false, key: null};\n  }\n\n  _closeObject() {\n    this.jsonpath.pop();\n    this.currentState = this.previousStates.pop();\n  }\n\n  _initializeParser() {\n    this.parser = new ClarinetParser({\n      onready: () => {\n        this.jsonpath = new JSONPath();\n        this.previousStates.length = 0;\n        this.currentState.container.length = 0;\n      },\n\n      onopenobject: name => {\n        this._openObject({});\n        if (typeof name !== 'undefined') {\n          this.parser.onkey(name);\n        }\n      },\n\n      onkey: name => {\n        this.jsonpath.set(name);\n        this.currentState.key = name;\n      },\n\n      oncloseobject: () => {\n        this._closeObject();\n      },\n\n      onopenarray: () => {\n        this._openArray();\n      },\n\n      onclosearray: () => {\n        this._closeArray();\n      },\n\n      onvalue: value => {\n        this._pushOrSet(value);\n      },\n\n      onerror: error => {\n        throw error;\n      },\n\n      onend: () => {\n        this.result = this.currentState.container.pop();\n      }\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}