{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport WEBGL_FEATURES from './webgl-features-table';\nimport { isWebGL2, log } from '@luma.gl/gltools';\nimport { assert } from '../utils/assert';\nvar LOG_UNSUPPORTED_FEATURE = 2;\nexport function hasFeature(gl, feature) {\n  return hasFeatures(gl, feature);\n}\nexport function hasFeatures(gl, features) {\n  features = Array.isArray(features) ? features : [features];\n  return features.every(function (feature) {\n    return isFeatureSupported(gl, feature);\n  });\n}\nexport function getFeatures(gl) {\n  gl.luma = gl.luma || {};\n  gl.luma.caps = gl.luma.caps || {};\n  for (var cap in WEBGL_FEATURES) {\n    if (gl.luma.caps[cap] === undefined) {\n      gl.luma.caps[cap] = isFeatureSupported(gl, cap);\n    }\n  }\n  return gl.luma.caps;\n}\nfunction isFeatureSupported(gl, cap) {\n  gl.luma = gl.luma || {};\n  gl.luma.caps = gl.luma.caps || {};\n  if (gl.luma.caps[cap] === undefined) {\n    gl.luma.caps[cap] = queryFeature(gl, cap);\n  }\n  if (!gl.luma.caps[cap]) {\n    log.log(LOG_UNSUPPORTED_FEATURE, \"Feature: \".concat(cap, \" not supported\"))();\n  }\n  return gl.luma.caps[cap];\n}\nfunction queryFeature(gl, cap) {\n  var feature = WEBGL_FEATURES[cap];\n  assert(feature, cap);\n  var isSupported;\n  var featureDefinition = isWebGL2(gl) ? feature[1] || feature[0] : feature[0];\n  if (typeof featureDefinition === 'function') {\n    isSupported = featureDefinition(gl);\n  } else if (Array.isArray(featureDefinition)) {\n    isSupported = true;\n    var _iterator = _createForOfIteratorHelper(featureDefinition),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var extension = _step.value;\n        isSupported = isSupported && Boolean(gl.getExtension(extension));\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  } else if (typeof featureDefinition === 'string') {\n    isSupported = Boolean(gl.getExtension(featureDefinition));\n  } else if (typeof featureDefinition === 'boolean') {\n    isSupported = featureDefinition;\n  } else {\n    assert(false);\n  }\n  return isSupported;\n}","map":{"version":3,"names":["WEBGL_FEATURES","isWebGL2","log","assert","LOG_UNSUPPORTED_FEATURE","hasFeature","gl","feature","hasFeatures","features","Array","isArray","every","isFeatureSupported","getFeatures","luma","caps","cap","undefined","queryFeature","concat","isSupported","featureDefinition","_iterator","_createForOfIteratorHelper","_step","s","n","done","extension","value","Boolean","getExtension","err","e","f"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@luma.gl/webgl/src/features/features.js"],"sourcesContent":["// Feature detection for WebGL\n//\n// Provides a function that enables simple checking of which WebGL features are\n// available in an WebGL1 or WebGL2 environment.\n\nimport WEBGL_FEATURES from './webgl-features-table';\nimport {isWebGL2, log} from '@luma.gl/gltools';\nimport {assert} from '../utils/assert';\n\nconst LOG_UNSUPPORTED_FEATURE = 2;\n\n// Check one feature\nexport function hasFeature(gl, feature) {\n  return hasFeatures(gl, feature);\n}\n\n// Check one or more features\nexport function hasFeatures(gl, features) {\n  features = Array.isArray(features) ? features : [features];\n  return features.every(feature => {\n    return isFeatureSupported(gl, feature);\n  });\n}\n\n// Return a list of supported features\nexport function getFeatures(gl) {\n  gl.luma = gl.luma || {};\n  gl.luma.caps = gl.luma.caps || {};\n  for (const cap in WEBGL_FEATURES) {\n    if (gl.luma.caps[cap] === undefined) {\n      gl.luma.caps[cap] = isFeatureSupported(gl, cap);\n    }\n  }\n  return gl.luma.caps;\n}\n\n// TODO - cache the value\nfunction isFeatureSupported(gl, cap) {\n  gl.luma = gl.luma || {};\n  gl.luma.caps = gl.luma.caps || {};\n\n  if (gl.luma.caps[cap] === undefined) {\n    gl.luma.caps[cap] = queryFeature(gl, cap);\n  }\n\n  if (!gl.luma.caps[cap]) {\n    log.log(LOG_UNSUPPORTED_FEATURE, `Feature: ${cap} not supported`)();\n  }\n\n  return gl.luma.caps[cap];\n}\n\nfunction queryFeature(gl, cap) {\n  const feature = WEBGL_FEATURES[cap];\n  assert(feature, cap);\n\n  let isSupported;\n\n  // Get extension name from table\n  const featureDefinition = isWebGL2(gl) ? feature[1] || feature[0] : feature[0];\n\n  // Check if the value is dependent on checking one or more extensions\n  if (typeof featureDefinition === 'function') {\n    isSupported = featureDefinition(gl);\n  } else if (Array.isArray(featureDefinition)) {\n    isSupported = true;\n    for (const extension of featureDefinition) {\n      isSupported = isSupported && Boolean(gl.getExtension(extension));\n    }\n  } else if (typeof featureDefinition === 'string') {\n    isSupported = Boolean(gl.getExtension(featureDefinition));\n  } else if (typeof featureDefinition === 'boolean') {\n    isSupported = featureDefinition;\n  } else {\n    assert(false);\n  }\n\n  return isSupported;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}