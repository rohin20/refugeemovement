{"ast":null,"code":"import _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { assert } from '../env-utils/assert';\nvar WorkerJob = /*#__PURE__*/function () {\n  function WorkerJob(jobName, workerThread) {\n    var _this = this;\n    _classCallCheck(this, WorkerJob);\n    _defineProperty(this, \"name\", void 0);\n    _defineProperty(this, \"workerThread\", void 0);\n    _defineProperty(this, \"isRunning\", true);\n    _defineProperty(this, \"result\", void 0);\n    _defineProperty(this, \"_resolve\", function () {});\n    _defineProperty(this, \"_reject\", function () {});\n    this.name = jobName;\n    this.workerThread = workerThread;\n    this.result = new Promise(function (resolve, reject) {\n      _this._resolve = resolve;\n      _this._reject = reject;\n    });\n  }\n  _createClass(WorkerJob, [{\n    key: \"postMessage\",\n    value: function postMessage(type, payload) {\n      this.workerThread.postMessage({\n        source: 'loaders.gl',\n        type: type,\n        payload: payload\n      });\n    }\n  }, {\n    key: \"done\",\n    value: function done(value) {\n      assert(this.isRunning);\n      this.isRunning = false;\n      this._resolve(value);\n    }\n  }, {\n    key: \"error\",\n    value: function error(_error) {\n      assert(this.isRunning);\n      this.isRunning = false;\n      this._reject(_error);\n    }\n  }]);\n  return WorkerJob;\n}();\nexport { WorkerJob as default };","map":{"version":3,"names":["assert","WorkerJob","jobName","workerThread","_this","_classCallCheck","_defineProperty","name","result","Promise","resolve","reject","_resolve","_reject","_createClass","key","value","postMessage","type","payload","source","done","isRunning","error","default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@loaders.gl/worker-utils/src/lib/worker-farm/worker-job.ts"],"sourcesContent":["import type {WorkerMessageType, WorkerMessagePayload} from '../../types';\nimport WorkerThread from './worker-thread';\nimport {assert} from '../env-utils/assert';\n\n/**\n * Represents one Job handled by a WorkerPool or WorkerFarm\n */\nexport default class WorkerJob {\n  readonly name: string;\n  readonly workerThread: WorkerThread;\n  isRunning: boolean = true;\n  /** Promise that resolves when Job is done */\n  readonly result: Promise<any>;\n\n  private _resolve: (value: any) => void = () => {};\n  private _reject: (reason?: any) => void = () => {};\n\n  constructor(jobName: string, workerThread: WorkerThread) {\n    this.name = jobName;\n    this.workerThread = workerThread;\n    this.result = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n  }\n\n  /**\n   * Send a message to the job's worker thread\n   * @param data any data structure, ideally consisting mostly of transferrable objects\n   */\n  postMessage(type: WorkerMessageType, payload: WorkerMessagePayload): void {\n    this.workerThread.postMessage({\n      source: 'loaders.gl', // Lets worker ignore unrelated messages\n      type,\n      payload\n    });\n  }\n\n  /**\n   * Call to resolve the `result` Promise with the supplied value\n   */\n  done(value: any): void {\n    assert(this.isRunning);\n    this.isRunning = false;\n    this._resolve(value);\n  }\n\n  /**\n   * Call to reject the `result` Promise with the supplied error\n   */\n  error(error: Error): void {\n    assert(this.isRunning);\n    this.isRunning = false;\n    this._reject(error);\n  }\n}\n"],"mappings":";;;AAEA,SAAQA,MAAM,QAAO,qBAAqB;AAAA,IAKrBC,SAAS;EAU5B,SAAAA,UAAYC,OAAe,EAAEC,YAA0B,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAJ,SAAA;IAAAK,eAAA;IAAAA,eAAA;IAAAA,eAAA,oBAPpC,IAAI;IAAAA,eAAA;IAAAA,eAAA,mBAIgB,YAAM,CAAC,CAAC;IAAAA,eAAA,kBACP,YAAM,CAAC,CAAC;IAGhD,IAAI,CAACC,IAAI,GAAGL,OAAO;IACnB,IAAI,CAACC,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACK,MAAM,GAAG,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;MAC7CP,KAAI,CAACQ,QAAQ,GAAGF,OAAO;MACvBN,KAAI,CAACS,OAAO,GAAGF,MAAM;IACvB,CAAC,CAAC;EACJ;EAAAG,YAAA,CAAAb,SAAA;IAAAc,GAAA;IAAAC,KAAA,EAMA,SAAAC,YAAYC,IAAuB,EAAEC,OAA6B,EAAQ;MACxE,IAAI,CAAChB,YAAY,CAACc,WAAW,CAAC;QAC5BG,MAAM,EAAE,YAAY;QACpBF,IAAI,EAAJA,IAAI;QACJC,OAAA,EAAAA;MACF,CAAC,CAAC;IACJ;EAAA;IAAAJ,GAAA;IAAAC,KAAA,EAKA,SAAAK,KAAKL,KAAU,EAAQ;MACrBhB,MAAM,CAAC,IAAI,CAACsB,SAAS,CAAC;MACtB,IAAI,CAACA,SAAS,GAAG,KAAK;MACtB,IAAI,CAACV,QAAQ,CAACI,KAAK,CAAC;IACtB;EAAA;IAAAD,GAAA;IAAAC,KAAA,EAKA,SAAAO,MAAMA,MAAY,EAAQ;MACxBvB,MAAM,CAAC,IAAI,CAACsB,SAAS,CAAC;MACtB,IAAI,CAACA,SAAS,GAAG,KAAK;MACtB,IAAI,CAACT,OAAO,CAACU,MAAK,CAAC;IACrB;EAAA;EAAA,OAAAtB,SAAA;AAAA;AAAA,SA/CmBA,SAAS,IAAAuB,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}