{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createForOfIteratorHelper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport GLTFScenegraph from '../api/gltf-scenegraph';\nimport { meshoptDecodeGltfBuffer } from '../../meshopt/meshopt-decoder';\nvar DEFAULT_MESHOPT_OPTIONS = {\n  byteOffset: 0,\n  filter: 'NONE'\n};\nvar EXT_MESHOPT_COMPRESSION = 'EXT_meshopt_compression';\nexport var name = EXT_MESHOPT_COMPRESSION;\nexport function decode(_x, _x2) {\n  return _decode.apply(this, arguments);\n}\nfunction _decode() {\n  _decode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(gltfData, options) {\n    var _options$gltf, scenegraph, promises, _iterator, _step, bufferViewIndex;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          scenegraph = new GLTFScenegraph(gltfData);\n          if (options !== null && options !== void 0 && (_options$gltf = options.gltf) !== null && _options$gltf !== void 0 && _options$gltf.decompressMeshes) {\n            _context.next = 3;\n            break;\n          }\n          return _context.abrupt(\"return\");\n        case 3:\n          promises = [];\n          _iterator = _createForOfIteratorHelper(gltfData.json.bufferViews || []);\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              bufferViewIndex = _step.value;\n              promises.push(decodeMeshoptBufferView(scenegraph, bufferViewIndex));\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n          _context.next = 8;\n          return Promise.all(promises);\n        case 8:\n          scenegraph.removeExtension(EXT_MESHOPT_COMPRESSION);\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _decode.apply(this, arguments);\n}\nfunction decodeMeshoptBufferView(_x3, _x4) {\n  return _decodeMeshoptBufferView.apply(this, arguments);\n}\nfunction _decodeMeshoptBufferView() {\n  _decodeMeshoptBufferView = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(scenegraph, bufferView) {\n    var meshoptExtension, _meshoptExtension$byt, byteOffset, _meshoptExtension$byt2, byteLength, byteStride, count, mode, _meshoptExtension$fil, filter, bufferIndex, buffer, source, result;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          meshoptExtension = scenegraph.getObjectExtension(bufferView, EXT_MESHOPT_COMPRESSION);\n          if (!meshoptExtension) {\n            _context2.next = 9;\n            break;\n          }\n          _meshoptExtension$byt = meshoptExtension.byteOffset, byteOffset = _meshoptExtension$byt === void 0 ? 0 : _meshoptExtension$byt, _meshoptExtension$byt2 = meshoptExtension.byteLength, byteLength = _meshoptExtension$byt2 === void 0 ? 0 : _meshoptExtension$byt2, byteStride = meshoptExtension.byteStride, count = meshoptExtension.count, mode = meshoptExtension.mode, _meshoptExtension$fil = meshoptExtension.filter, filter = _meshoptExtension$fil === void 0 ? 'NONE' : _meshoptExtension$fil, bufferIndex = meshoptExtension.buffer;\n          buffer = scenegraph.gltf.buffers[bufferIndex];\n          source = new Uint8Array(buffer.arrayBuffer, buffer.byteOffset + byteOffset, byteLength);\n          result = new Uint8Array(scenegraph.gltf.buffers[bufferView.buffer].arrayBuffer, bufferView.byteOffset, bufferView.byteLength);\n          _context2.next = 8;\n          return meshoptDecodeGltfBuffer(result, count, byteStride, source, mode, filter);\n        case 8:\n          return _context2.abrupt(\"return\", result);\n        case 9:\n          return _context2.abrupt(\"return\", null);\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _decodeMeshoptBufferView.apply(this, arguments);\n}","map":{"version":3,"names":["GLTFScenegraph","meshoptDecodeGltfBuffer","DEFAULT_MESHOPT_OPTIONS","byteOffset","filter","EXT_MESHOPT_COMPRESSION","name","decode","_x","_x2","_decode","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","gltfData","options","_options$gltf","scenegraph","promises","_iterator","_step","bufferViewIndex","wrap","_callee$","_context","prev","next","gltf","decompressMeshes","abrupt","_createForOfIteratorHelper","json","bufferViews","s","n","done","value","push","decodeMeshoptBufferView","err","e","f","Promise","all","removeExtension","stop","_x3","_x4","_decodeMeshoptBufferView","_callee2","bufferView","meshoptExtension","_meshoptExtension$byt","_meshoptExtension$byt2","byteLength","byteStride","count","mode","_meshoptExtension$fil","bufferIndex","buffer","source","result","_callee2$","_context2","getObjectExtension","buffers","Uint8Array","arrayBuffer"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@loaders.gl/gltf/src/lib/extensions/EXT_meshopt_compression.ts"],"sourcesContent":["/* eslint-disable camelcase */\nimport type {GLTF, GLTFBufferView, GLTF_EXT_meshopt_compression} from '../types/gltf-types';\nimport type {GLTFLoaderOptions} from '../../gltf-loader';\nimport GLTFScenegraph from '../api/gltf-scenegraph';\nimport {meshoptDecodeGltfBuffer} from '../../meshopt/meshopt-decoder';\n\n// @ts-ignore\n// eslint-disable-next-line\nconst DEFAULT_MESHOPT_OPTIONS = {\n  byteOffset: 0,\n  filter: 'NONE'\n};\n\n/** Extension name */\nconst EXT_MESHOPT_COMPRESSION = 'EXT_meshopt_compression';\n\nexport const name = EXT_MESHOPT_COMPRESSION;\n\nexport async function decode(gltfData: {json: GLTF}, options: GLTFLoaderOptions) {\n  const scenegraph = new GLTFScenegraph(gltfData);\n\n  if (!options?.gltf?.decompressMeshes) {\n    return;\n  }\n\n  const promises: Promise<any>[] = [];\n  for (const bufferViewIndex of gltfData.json.bufferViews || []) {\n    promises.push(decodeMeshoptBufferView(scenegraph, bufferViewIndex));\n  }\n\n  // Decompress meshes in parallel\n  await Promise.all(promises);\n\n  // We have now decompressed all primitives, so remove the top-level extension\n  scenegraph.removeExtension(EXT_MESHOPT_COMPRESSION);\n}\n\n/** Decode one meshopt buffer view */\nasync function decodeMeshoptBufferView(\n  scenegraph: GLTFScenegraph,\n  bufferView: GLTFBufferView\n): Promise<ArrayBuffer | null> {\n  const meshoptExtension = scenegraph.getObjectExtension<GLTF_EXT_meshopt_compression>(\n    bufferView,\n    EXT_MESHOPT_COMPRESSION\n  );\n  if (meshoptExtension) {\n    const {\n      byteOffset = 0,\n      byteLength = 0,\n      byteStride,\n      count,\n      mode,\n      filter = 'NONE',\n      buffer: bufferIndex\n    } = meshoptExtension;\n    const buffer = scenegraph.gltf.buffers[bufferIndex];\n\n    const source = new Uint8Array(buffer.arrayBuffer, buffer.byteOffset + byteOffset, byteLength);\n    const result = new Uint8Array(\n      scenegraph.gltf.buffers[bufferView.buffer].arrayBuffer,\n      bufferView.byteOffset,\n      bufferView.byteLength\n    );\n    await meshoptDecodeGltfBuffer(result, count, byteStride, source, mode, filter);\n    return result;\n  }\n\n  return null;\n}\n"],"mappings":";;;AAGA,OAAOA,cAAc,MAAM,wBAAwB;AACnD,SAAQC,uBAAuB,QAAO,+BAA+B;AAIrE,IAAMC,uBAAuB,GAAG;EAC9BC,UAAU,EAAE,CAAC;EACbC,MAAM,EAAE;AACV,CAAC;AAGD,IAAMC,uBAAuB,GAAG,yBAAyB;AAEzD,OAAO,IAAMC,IAAI,GAAGD,uBAAuB;AAE3C,gBAAsBE,MAAMA,CAAAC,EAAA,EAAAC,GAAA;EAAA,OAAAC,OAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAiB5B,SAAAF,QAAA;EAAAA,OAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAjBO,SAAAC,QAAsBC,QAAsB,EAAEC,OAA0B;IAAA,IAAAC,aAAA,EAAAC,UAAA,EAAAC,QAAA,EAAAC,SAAA,EAAAC,KAAA,EAAAC,eAAA;IAAA,OAAAV,mBAAA,GAAAW,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UACvET,UAAU,GAAG,IAAIpB,cAAc,CAACiB,QAAQ,CAAC;UAAA,IAE1CC,OAAO,aAAPA,OAAO,gBAAAC,aAAA,GAAPD,OAAO,CAAEY,IAAI,cAAAX,aAAA,eAAbA,aAAA,CAAeY,gBAAgB;YAAAJ,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,OAAAF,QAAA,CAAAK,MAAA;QAAA;UAI9BX,QAAwB,GAAG,EAAE;UAAAC,SAAA,GAAAW,0BAAA,CACLhB,QAAQ,CAACiB,IAAI,CAACC,WAAW,IAAI,EAAE;UAAA;YAA7D,KAAAb,SAAA,CAAAc,CAAA,MAAAb,KAAA,GAAAD,SAAA,CAAAe,CAAA,IAAAC,IAAA,GAA+D;cAApDd,eAAe,GAAAD,KAAA,CAAAgB,KAAA;cACxBlB,QAAQ,CAACmB,IAAI,CAACC,uBAAuB,CAACrB,UAAU,EAAEI,eAAe,CAAC,CAAC;YACrE;UAAA,SAAAkB,GAAA;YAAApB,SAAA,CAAAqB,CAAA,CAAAD,GAAA;UAAA;YAAApB,SAAA,CAAAsB,CAAA;UAAA;UAAAjB,QAAA,CAAAE,IAAA;UAAA,OAGMgB,OAAO,CAACC,GAAG,CAACzB,QAAQ,CAAC;QAAA;UAG3BD,UAAU,CAAC2B,eAAe,CAAC1C,uBAAuB,CAAC;QAAA;QAAA;UAAA,OAAAsB,QAAA,CAAAqB,IAAA;MAAA;IAAA,GAAAhC,OAAA;EAAA,CACrD;EAAA,OAAAN,OAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAGe6B,uBAAuBA,CAAAQ,GAAA,EAAAC,GAAA;EAAA,OAAAC,wBAAA,CAAAxC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAuC,yBAAA;EAAAA,wBAAA,GAAAtC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAtC,SAAAqC,SACEhC,UAA0B,EAC1BiC,UAA0B;IAAA,IAAAC,gBAAA,EAAAC,qBAAA,EAAApD,UAAA,EAAAqD,sBAAA,EAAAC,UAAA,EAAAC,UAAA,EAAAC,KAAA,EAAAC,IAAA,EAAAC,qBAAA,EAAAzD,MAAA,EAAA0D,WAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,MAAA;IAAA,OAAAnD,mBAAA,GAAAW,IAAA,UAAAyC,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAvC,IAAA,GAAAuC,SAAA,CAAAtC,IAAA;QAAA;UAEpByB,gBAAgB,GAAGlC,UAAU,CAACgD,kBAAkB,CACpDf,UAAU,EACVhD,uBAAuB,CACxB;UAAA,KACGiD,gBAAgB;YAAAa,SAAA,CAAAtC,IAAA;YAAA;UAAA;UAAA0B,qBAAA,GASdD,gBAAgB,CAPlBnD,UAAU,EAAVA,UAAU,GAAAoD,qBAAA,cAAG,CAAC,GAAAA,qBAAA,EAAAC,sBAAA,GAOZF,gBAAgB,CANlBG,UAAU,EAAVA,UAAU,GAAAD,sBAAA,cAAG,CAAC,GAAAA,sBAAA,EACdE,UAAU,GAKRJ,gBAAgB,CALlBI,UAAU,EACVC,KAAK,GAIHL,gBAAgB,CAJlBK,KAAK,EACLC,IAAI,GAGFN,gBAAgB,CAHlBM,IAAI,EAAAC,qBAAA,GAGFP,gBAAgB,CAFlBlD,MAAM,EAANA,MAAM,GAAAyD,qBAAA,cAAG,MAAM,GAAAA,qBAAA,EACPC,WAAA,GACNR,gBAAgB,CADlBS,MAAM;UAEFA,MAAM,GAAG3C,UAAU,CAACU,IAAI,CAACuC,OAAO,CAACP,WAAW,CAAC;UAE7CE,MAAM,GAAG,IAAIM,UAAU,CAACP,MAAM,CAACQ,WAAW,EAAER,MAAM,CAAC5D,UAAU,GAAGA,UAAU,EAAEsD,UAAU,CAAC;UACvFQ,MAAM,GAAG,IAAIK,UAAU,CAC3BlD,UAAU,CAACU,IAAI,CAACuC,OAAO,CAAChB,UAAU,CAACU,MAAM,CAAC,CAACQ,WAAW,EACtDlB,UAAU,CAAClD,UAAU,EACrBkD,UAAU,CAACI,UAAU,CACtB;UAAAU,SAAA,CAAAtC,IAAA;UAAA,OACK5B,uBAAuB,CAACgE,MAAM,EAAEN,KAAK,EAAED,UAAU,EAAEM,MAAM,EAAEJ,IAAI,EAAExD,MAAM,CAAC;QAAA;UAAA,OAAA+D,SAAA,CAAAnC,MAAA,WACvEiC,MAAM;QAAA;UAAA,OAAAE,SAAA,CAAAnC,MAAA,WAGR,IAAI;QAAA;QAAA;UAAA,OAAAmC,SAAA,CAAAnB,IAAA;MAAA;IAAA,GAAAI,QAAA;EAAA,CACb;EAAA,OAAAD,wBAAA,CAAAxC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}