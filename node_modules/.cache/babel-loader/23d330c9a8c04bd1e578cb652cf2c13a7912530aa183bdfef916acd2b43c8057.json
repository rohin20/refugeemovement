{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DEFAULT_COLOR_RANGE = exports.COLOR_RANGES = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _colorbrewer = _interopRequireDefault(require(\"colorbrewer\"));\nvar _customColorRanges = require(\"./custom-color-ranges\");\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\n\n// Add colorbrewer color schemes (Data Science requirement)\n// See http://colorbrewer2.org/\nvar colorBrewerMap = Object.entries(_colorbrewer[\"default\"].schemeGroups).reduce(function (accu, _ref) {\n  var _ref2 = (0, _slicedToArray2[\"default\"])(_ref, 2),\n    type = _ref2[0],\n    palettes = _ref2[1];\n  return _objectSpread(_objectSpread({}, accu), palettes.reduce(function (group, name) {\n    return _objectSpread(_objectSpread({}, group), {}, (0, _defineProperty2[\"default\"])({}, name, type));\n  }, {}));\n}, {});\nvar colorRanges = (0, _toConsumableArray2[\"default\"])(_customColorRanges.VizColorPalette);\nfor (var _i = 0, _Object$entries = Object.entries(_colorbrewer[\"default\"]); _i < _Object$entries.length; _i++) {\n  var _Object$entries$_i = (0, _slicedToArray2[\"default\"])(_Object$entries[_i], 2),\n    keyName = _Object$entries$_i[0],\n    colorScheme = _Object$entries$_i[1];\n  if (keyName !== 'schemeGroups') {\n    for (var _i2 = 0, _Object$entries2 = Object.entries(colorScheme); _i2 < _Object$entries2.length; _i2++) {\n      var _Object$entries2$_i = (0, _slicedToArray2[\"default\"])(_Object$entries2[_i2], 2),\n        lenKey = _Object$entries2$_i[0],\n        colors = _Object$entries2$_i[1];\n      colorRanges.push({\n        name: \"ColorBrewer \".concat(keyName, \"-\").concat(lenKey),\n        type: colorBrewerMap[keyName],\n        category: 'ColorBrewer',\n        colors: colors\n      });\n    }\n  }\n}\nvar COLOR_RANGES = colorRanges;\nexports.COLOR_RANGES = COLOR_RANGES;\nvar DEFAULT_COLOR_RANGE = colorRanges.find(function (_ref3) {\n  var name = _ref3.name;\n  return name === 'Global Warming';\n}) || {\n  name: 'Global Warming',\n  type: 'SEQ',\n  category: 'Uber',\n  colors: ['#5A1846', '#900C3F', '#C70039', '#E3611C', '#F1920E', '#FFC300']\n};\nexports.DEFAULT_COLOR_RANGE = DEFAULT_COLOR_RANGE;","map":{"version":3,"names":["_colorbrewer","_interopRequireDefault","require","_customColorRanges","colorBrewerMap","Object","entries","schemeGroups","reduce","accu","_ref","_ref2","_slicedToArray2","type","palettes","_objectSpread","group","name","_defineProperty2","colorRanges","_toConsumableArray2","VizColorPalette","_i","_Object$entries","length","_Object$entries$_i","keyName","colorScheme","_i2","_Object$entries2","_Object$entries2$_i","lenKey","colors","push","concat","category","COLOR_RANGES","DEFAULT_COLOR_RANGE","find","_ref3"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/kepler.gl/src/constants/color-ranges.js"],"sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport colorbrewer from 'colorbrewer';\nimport {VizColorPalette} from './custom-color-ranges';\n\n// Add colorbrewer color schemes (Data Science requirement)\n// See http://colorbrewer2.org/\n\nconst colorBrewerMap = Object.entries(colorbrewer.schemeGroups).reduce(\n  (accu, [type, palettes]) => ({\n    ...accu,\n    ...palettes.reduce(\n      (group, name) => ({\n        ...group,\n        [name]: type\n      }),\n      {}\n    )\n  }),\n  {}\n);\n\nconst colorRanges = [...VizColorPalette];\n\nfor (const [keyName, colorScheme] of Object.entries(colorbrewer)) {\n  if (keyName !== 'schemeGroups') {\n    for (const [lenKey, colors] of Object.entries(colorScheme)) {\n      colorRanges.push({\n        name: `ColorBrewer ${keyName}-${lenKey}`,\n        type: colorBrewerMap[keyName],\n        category: 'ColorBrewer',\n        colors\n      });\n    }\n  }\n}\n\nexport const COLOR_RANGES = colorRanges;\n\nexport const DEFAULT_COLOR_RANGE = colorRanges.find(({name}) => name === 'Global Warming') || {\n  name: 'Global Warming',\n  type: 'SEQ',\n  category: 'Uber',\n  colors: ['#5A1846', '#900C3F', '#C70039', '#E3611C', '#F1920E', '#FFC300']\n};\n"],"mappings":";;;;;;;;;;AAoBA,IAAAA,YAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,kBAAA,GAAAD,OAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AAEA,IAAME,cAAc,GAAGC,MAAM,CAACC,OAAP,CAAeN,YAAA,YAAYO,YAA3B,EAAyCC,MAAzC,CACrB,UAACC,IAAD,EAAAC,IAAA;EAAA,IAAAC,KAAA,OAAAC,eAAA,aAAAF,IAAA;IAAQG,IAAR,GAAAF,KAAA;IAAcG,QAAd,GAAAH,KAAA;EAAA,OAAAI,aAAA,CAAAA,aAAA,KACKN,IADL,GAEKK,QAAQ,CAACN,MAAT,CACD,UAACQ,KAAD,EAAQC,IAAR;IAAA,OAAAF,aAAA,CAAAA,aAAA,KACKC,KADL,WAAAE,gBAAA,iBAEGD,IAFH,EAEUJ,IAFV;EAAA,CADC,EAKD,EALC,CAFL;AAAA,CADqB,EAWrB,EAXqB,CAAvB;AAcA,IAAMM,WAAW,OAAAC,mBAAA,aAAOjB,kBAAA,CAAAkB,eAAP,CAAjB;AAEA,SAAAC,EAAA,MAAAC,eAAA,GAAqClB,MAAM,CAACC,OAAP,CAAeN,YAAA,WAAf,CAArC,EAAAsB,EAAA,GAAAC,eAAA,CAAAC,MAAA,EAAAF,EAAA,IAAkE;EAAA,IAAAG,kBAAA,OAAAb,eAAA,aAAAW,eAAA,CAAAD,EAAA;IAAtDI,OAAsD,GAAAD,kBAAA;IAA7CE,WAA6C,GAAAF,kBAAA;EAChE,IAAIC,OAAO,KAAK,cAAhB,EAAgC;IAC9B,SAAAE,GAAA,MAAAC,gBAAA,GAA+BxB,MAAM,CAACC,OAAP,CAAeqB,WAAf,CAA/B,EAAAC,GAAA,GAAAC,gBAAA,CAAAL,MAAA,EAAAI,GAAA,IAA4D;MAAA,IAAAE,mBAAA,OAAAlB,eAAA,aAAAiB,gBAAA,CAAAD,GAAA;QAAhDG,MAAgD,GAAAD,mBAAA;QAAxCE,MAAwC,GAAAF,mBAAA;MAC1DX,WAAW,CAACc,IAAZ,CAAiB;QACfhB,IAAI,iBAAAiB,MAAA,CAAiBR,OAAjB,OAAAQ,MAAA,CAA4BH,MAA5B,CADW;QAEflB,IAAI,EAAET,cAAc,CAACsB,OAAD,CAFL;QAGfS,QAAQ,EAAE,aAHK;QAIfH,MAAM,EAANA;MAJe,CAAjB;IAMD;EACF;AACF;AAEM,IAAMI,YAAY,GAAGjB,WAArB;;AAEA,IAAMkB,mBAAmB,GAAGlB,WAAW,CAACmB,IAAZ,CAAiB,UAAAC,KAAA;EAAA,IAAEtB,IAAF,GAAAsB,KAAA,CAAEtB,IAAF;EAAA,OAAYA,IAAI,KAAK,gBAArB;AAAA,CAAjB,KAA2D;EAC5FA,IAAI,EAAE,gBADsF;EAE5FJ,IAAI,EAAE,KAFsF;EAG5FsB,QAAQ,EAAE,MAHkF;EAI5FH,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD;AAJoF,CAAvF"},"metadata":{},"sourceType":"script","externalDependencies":[]}