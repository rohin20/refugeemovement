{"ast":null,"code":"import _slicedToArray from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { WebMercatorViewport, _GlobeViewport } from '@deck.gl/core';\nimport { CullingVolume, Plane, AxisAlignedBoundingBox, makeOrientedBoundingBoxFromPoints } from '@math.gl/culling';\nimport { lngLatToWorld } from '@math.gl/web-mercator';\nimport { osmTile2lngLat } from './utils';\nvar TILE_SIZE = 512;\nvar MAX_MAPS = 3;\nvar REF_POINTS_5 = [[0.5, 0.5], [0, 0], [0, 1], [1, 0], [1, 1]];\nvar REF_POINTS_9 = REF_POINTS_5.concat([[0, 0.5], [0.5, 0], [1, 0.5], [0.5, 1]]);\nvar REF_POINTS_11 = REF_POINTS_9.concat([[0.25, 0.5], [0.75, 0.5]]);\nvar OSMNode = /*#__PURE__*/function () {\n  function OSMNode(x, y, z) {\n    _classCallCheck(this, OSMNode);\n    _defineProperty(this, \"x\", void 0);\n    _defineProperty(this, \"y\", void 0);\n    _defineProperty(this, \"z\", void 0);\n    _defineProperty(this, \"childVisible\", void 0);\n    _defineProperty(this, \"selected\", void 0);\n    _defineProperty(this, \"_children\", void 0);\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  }\n  _createClass(OSMNode, [{\n    key: \"children\",\n    get: function get() {\n      if (!this._children) {\n        var x = this.x * 2;\n        var y = this.y * 2;\n        var z = this.z + 1;\n        this._children = [new OSMNode(x, y, z), new OSMNode(x, y + 1, z), new OSMNode(x + 1, y, z), new OSMNode(x + 1, y + 1, z)];\n      }\n      return this._children;\n    }\n  }, {\n    key: \"update\",\n    value: function update(params) {\n      var viewport = params.viewport,\n        cullingVolume = params.cullingVolume,\n        elevationBounds = params.elevationBounds,\n        minZ = params.minZ,\n        maxZ = params.maxZ,\n        bounds = params.bounds,\n        offset = params.offset,\n        project = params.project;\n      var boundingVolume = this.getBoundingVolume(elevationBounds, offset, project);\n      if (bounds && !this.insideBounds(bounds)) {\n        return false;\n      }\n      var isInside = cullingVolume.computeVisibility(boundingVolume);\n      if (isInside < 0) {\n        return false;\n      }\n      if (!this.childVisible) {\n        var z = this.z;\n        if (z < maxZ && z >= minZ) {\n          var distance = boundingVolume.distanceTo(viewport.cameraPosition) * viewport.scale / viewport.height;\n          z += Math.floor(Math.log2(distance));\n        }\n        if (z >= maxZ) {\n          this.selected = true;\n          return true;\n        }\n      }\n      this.selected = false;\n      this.childVisible = true;\n      var _iterator = _createForOfIteratorHelper(this.children),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var child = _step.value;\n          child.update(params);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return true;\n    }\n  }, {\n    key: \"getSelected\",\n    value: function getSelected() {\n      var result = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      if (this.selected) {\n        result.push(this);\n      }\n      if (this._children) {\n        var _iterator2 = _createForOfIteratorHelper(this._children),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var node = _step2.value;\n            node.getSelected(result);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"insideBounds\",\n    value: function insideBounds(_ref) {\n      var _ref2 = _slicedToArray(_ref, 4),\n        minX = _ref2[0],\n        minY = _ref2[1],\n        maxX = _ref2[2],\n        maxY = _ref2[3];\n      var scale = Math.pow(2, this.z);\n      var extent = TILE_SIZE / scale;\n      return this.x * extent < maxX && this.y * extent < maxY && (this.x + 1) * extent > minX && (this.y + 1) * extent > minY;\n    }\n  }, {\n    key: \"getBoundingVolume\",\n    value: function getBoundingVolume(zRange, worldOffset, project) {\n      if (project) {\n        var refPoints = this.z < 1 ? REF_POINTS_11 : this.z < 2 ? REF_POINTS_9 : REF_POINTS_5;\n        var refPointPositions = [];\n        var _iterator3 = _createForOfIteratorHelper(refPoints),\n          _step3;\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var p = _step3.value;\n            var lngLat = osmTile2lngLat(this.x + p[0], this.y + p[1], this.z);\n            lngLat[2] = zRange[0];\n            refPointPositions.push(project(lngLat));\n            if (zRange[0] !== zRange[1]) {\n              lngLat[2] = zRange[1];\n              refPointPositions.push(project(lngLat));\n            }\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n        return makeOrientedBoundingBoxFromPoints(refPointPositions);\n      }\n      var scale = Math.pow(2, this.z);\n      var extent = TILE_SIZE / scale;\n      var originX = this.x * extent + worldOffset * TILE_SIZE;\n      var originY = TILE_SIZE - (this.y + 1) * extent;\n      return new AxisAlignedBoundingBox([originX, originY, zRange[0]], [originX + extent, originY + extent, zRange[1]]);\n    }\n  }]);\n  return OSMNode;\n}();\nexport function getOSMTileIndices(viewport, maxZ, zRange, bounds) {\n  var project = viewport instanceof _GlobeViewport && viewport.resolution ? viewport.projectPosition : null;\n  var planes = Object.values(viewport.getFrustumPlanes()).map(function (_ref3) {\n    var normal = _ref3.normal,\n      distance = _ref3.distance;\n    return new Plane(normal.clone().negate(), distance);\n  });\n  var cullingVolume = new CullingVolume(planes);\n  var unitsPerMeter = viewport.distanceScales.unitsPerMeter[2];\n  var elevationMin = zRange && zRange[0] * unitsPerMeter || 0;\n  var elevationMax = zRange && zRange[1] * unitsPerMeter || 0;\n  var minZ = viewport instanceof WebMercatorViewport && viewport.pitch <= 60 ? maxZ : 0;\n  if (bounds) {\n    var _bounds = bounds,\n      _bounds2 = _slicedToArray(_bounds, 4),\n      minLng = _bounds2[0],\n      minLat = _bounds2[1],\n      maxLng = _bounds2[2],\n      maxLat = _bounds2[3];\n    var topLeft = lngLatToWorld([minLng, maxLat]);\n    var bottomRight = lngLatToWorld([maxLng, minLat]);\n    bounds = [topLeft[0], TILE_SIZE - topLeft[1], bottomRight[0], TILE_SIZE - bottomRight[1]];\n  }\n  var root = new OSMNode(0, 0, 0);\n  var traversalParams = {\n    viewport: viewport,\n    project: project,\n    cullingVolume: cullingVolume,\n    elevationBounds: [elevationMin, elevationMax],\n    minZ: minZ,\n    maxZ: maxZ,\n    bounds: bounds,\n    offset: 0\n  };\n  root.update(traversalParams);\n  if (viewport instanceof WebMercatorViewport && viewport.subViewports && viewport.subViewports.length > 1) {\n    traversalParams.offset = -1;\n    while (root.update(traversalParams)) {\n      if (--traversalParams.offset < -MAX_MAPS) {\n        break;\n      }\n    }\n    traversalParams.offset = 1;\n    while (root.update(traversalParams)) {\n      if (++traversalParams.offset > MAX_MAPS) {\n        break;\n      }\n    }\n  }\n  return root.getSelected();\n}","map":{"version":3,"names":["WebMercatorViewport","_GlobeViewport","CullingVolume","Plane","AxisAlignedBoundingBox","makeOrientedBoundingBoxFromPoints","lngLatToWorld","osmTile2lngLat","TILE_SIZE","MAX_MAPS","REF_POINTS_5","REF_POINTS_9","concat","REF_POINTS_11","OSMNode","x","y","z","_classCallCheck","_defineProperty","_createClass","key","get","_children","value","update","params","viewport","cullingVolume","elevationBounds","minZ","maxZ","bounds","offset","project","boundingVolume","getBoundingVolume","insideBounds","isInside","computeVisibility","childVisible","distance","distanceTo","cameraPosition","scale","height","Math","floor","log2","selected","_iterator","_createForOfIteratorHelper","children","_step","s","n","done","child","err","e","f","getSelected","result","arguments","length","undefined","push","_iterator2","_step2","node","_ref","_ref2","_slicedToArray","minX","minY","maxX","maxY","pow","extent","zRange","worldOffset","refPoints","refPointPositions","_iterator3","_step3","p","lngLat","originX","originY","getOSMTileIndices","resolution","projectPosition","planes","Object","values","getFrustumPlanes","map","_ref3","normal","clone","negate","unitsPerMeter","distanceScales","elevationMin","elevationMax","pitch","_bounds","_bounds2","minLng","minLat","maxLng","maxLat","topLeft","bottomRight","root","traversalParams","subViewports"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/geo-layers/src/tile-layer/tile-2d-traversal.ts"],"sourcesContent":["/* eslint-disable complexity */\nimport {Viewport, WebMercatorViewport, _GlobeViewport} from '@deck.gl/core';\nimport {\n  CullingVolume,\n  Plane,\n  AxisAlignedBoundingBox,\n  makeOrientedBoundingBoxFromPoints\n} from '@math.gl/culling';\nimport {lngLatToWorld} from '@math.gl/web-mercator';\nimport {Bounds, TileIndex, ZRange} from './types';\nimport {osmTile2lngLat} from './utils';\n\nconst TILE_SIZE = 512;\n// number of world copies to check\nconst MAX_MAPS = 3;\n// for calculating bounding volume of a tile in a non-web-mercator viewport\nconst REF_POINTS_5 = [\n  [0.5, 0.5],\n  [0, 0],\n  [0, 1],\n  [1, 0],\n  [1, 1]\n]; // 4 corners and center\nconst REF_POINTS_9 = REF_POINTS_5.concat([\n  [0, 0.5],\n  [0.5, 0],\n  [1, 0.5],\n  [0.5, 1]\n]); // 4 corners, center and 4 mid points\nconst REF_POINTS_11 = REF_POINTS_9.concat([\n  [0.25, 0.5],\n  [0.75, 0.5]\n]); // 2 additional points on equator for top tile\n\nclass OSMNode {\n  x: number;\n  y: number;\n  z: number;\n\n  private childVisible?: boolean;\n  private selected?: boolean;\n\n  private _children?: OSMNode[];\n\n  constructor(x, y, z) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  }\n\n  get children() {\n    if (!this._children) {\n      const x = this.x * 2;\n      const y = this.y * 2;\n      const z = this.z + 1;\n      this._children = [\n        new OSMNode(x, y, z),\n        new OSMNode(x, y + 1, z),\n        new OSMNode(x + 1, y, z),\n        new OSMNode(x + 1, y + 1, z)\n      ];\n    }\n    return this._children;\n  }\n\n  update(params: {\n    viewport: Viewport;\n    project: ((xyz: number[]) => number[]) | null;\n    cullingVolume: CullingVolume;\n    elevationBounds: ZRange;\n    minZ: number;\n    maxZ: number;\n    bounds?: Bounds;\n    offset: number;\n  }) {\n    const {viewport, cullingVolume, elevationBounds, minZ, maxZ, bounds, offset, project} = params;\n    const boundingVolume = this.getBoundingVolume(elevationBounds, offset, project);\n\n    // First, check if this tile is visible\n    if (bounds && !this.insideBounds(bounds)) {\n      return false;\n    }\n\n    const isInside = cullingVolume.computeVisibility(boundingVolume);\n    if (isInside < 0) {\n      return false;\n    }\n\n    // Avoid loading overlapping tiles - if a descendant is requested, do not request the ancester\n    if (!this.childVisible) {\n      let {z} = this;\n      if (z < maxZ && z >= minZ) {\n        // Adjust LOD\n        // If the tile is far enough from the camera, accept a lower zoom level\n        const distance =\n          (boundingVolume.distanceTo(viewport.cameraPosition) * viewport.scale) / viewport.height;\n        z += Math.floor(Math.log2(distance));\n      }\n      if (z >= maxZ) {\n        // LOD is acceptable\n        this.selected = true;\n        return true;\n      }\n    }\n\n    // LOD is not enough, recursively test child tiles\n    this.selected = false;\n    this.childVisible = true;\n    for (const child of this.children) {\n      child.update(params);\n    }\n    return true;\n  }\n\n  getSelected(result: OSMNode[] = []): OSMNode[] {\n    if (this.selected) {\n      result.push(this);\n    }\n    if (this._children) {\n      for (const node of this._children) {\n        node.getSelected(result);\n      }\n    }\n    return result;\n  }\n\n  insideBounds([minX, minY, maxX, maxY]: Bounds): boolean {\n    const scale = Math.pow(2, this.z);\n    const extent = TILE_SIZE / scale;\n\n    return (\n      this.x * extent < maxX &&\n      this.y * extent < maxY &&\n      (this.x + 1) * extent > minX &&\n      (this.y + 1) * extent > minY\n    );\n  }\n\n  getBoundingVolume(\n    zRange: ZRange,\n    worldOffset: number,\n    project: ((xyz: number[]) => number[]) | null\n  ) {\n    if (project) {\n      // Custom projection\n      // Estimate bounding box from sample points\n      // At low zoom level we need more samples to calculate the bounding volume correctly\n      const refPoints = this.z < 1 ? REF_POINTS_11 : this.z < 2 ? REF_POINTS_9 : REF_POINTS_5;\n\n      // Convert from tile-relative coordinates to common space\n      const refPointPositions: number[][] = [];\n      for (const p of refPoints) {\n        const lngLat: number[] = osmTile2lngLat(this.x + p[0], this.y + p[1], this.z);\n        lngLat[2] = zRange[0];\n        refPointPositions.push(project(lngLat));\n\n        if (zRange[0] !== zRange[1]) {\n          // Account for the elevation volume\n          lngLat[2] = zRange[1];\n          refPointPositions.push(project(lngLat));\n        }\n      }\n\n      return makeOrientedBoundingBoxFromPoints(refPointPositions);\n    }\n\n    // Use WebMercator projection\n    const scale = Math.pow(2, this.z);\n    const extent = TILE_SIZE / scale;\n    const originX = this.x * extent + worldOffset * TILE_SIZE;\n    // deck's common space is y-flipped\n    const originY = TILE_SIZE - (this.y + 1) * extent;\n\n    return new AxisAlignedBoundingBox(\n      [originX, originY, zRange[0]],\n      [originX + extent, originY + extent, zRange[1]]\n    );\n  }\n}\n\nexport function getOSMTileIndices(\n  viewport: Viewport,\n  maxZ: number,\n  zRange: ZRange | undefined,\n  bounds?: Bounds\n): TileIndex[] {\n  const project: ((xyz: number[]) => number[]) | null =\n    viewport instanceof _GlobeViewport && viewport.resolution\n      ? // eslint-disable-next-line @typescript-eslint/unbound-method\n        viewport.projectPosition\n      : null;\n\n  // Get the culling volume of the current camera\n  const planes: Plane[] = Object.values(viewport.getFrustumPlanes()).map(\n    ({normal, distance}) => new Plane(normal.clone().negate(), distance)\n  );\n  const cullingVolume = new CullingVolume(planes);\n\n  // Project zRange from meters to common space\n  const unitsPerMeter = viewport.distanceScales.unitsPerMeter[2];\n  const elevationMin = (zRange && zRange[0] * unitsPerMeter) || 0;\n  const elevationMax = (zRange && zRange[1] * unitsPerMeter) || 0;\n\n  // Always load at the current zoom level if pitch is small\n  const minZ = viewport instanceof WebMercatorViewport && viewport.pitch <= 60 ? maxZ : 0;\n\n  // Map extent to OSM position\n  if (bounds) {\n    const [minLng, minLat, maxLng, maxLat] = bounds;\n    const topLeft = lngLatToWorld([minLng, maxLat]);\n    const bottomRight = lngLatToWorld([maxLng, minLat]);\n    bounds = [topLeft[0], TILE_SIZE - topLeft[1], bottomRight[0], TILE_SIZE - bottomRight[1]];\n  }\n\n  const root = new OSMNode(0, 0, 0);\n  const traversalParams = {\n    viewport,\n    project,\n    cullingVolume,\n    elevationBounds: [elevationMin, elevationMax] as ZRange,\n    minZ,\n    maxZ,\n    bounds,\n    // num. of worlds from the center. For repeated maps\n    offset: 0\n  };\n\n  root.update(traversalParams);\n\n  if (\n    viewport instanceof WebMercatorViewport &&\n    viewport.subViewports &&\n    viewport.subViewports.length > 1\n  ) {\n    // Check worlds in repeated maps\n    traversalParams.offset = -1;\n    while (root.update(traversalParams)) {\n      if (--traversalParams.offset < -MAX_MAPS) {\n        break;\n      }\n    }\n    traversalParams.offset = 1;\n    while (root.update(traversalParams)) {\n      if (++traversalParams.offset > MAX_MAPS) {\n        break;\n      }\n    }\n  }\n\n  return root.getSelected();\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}