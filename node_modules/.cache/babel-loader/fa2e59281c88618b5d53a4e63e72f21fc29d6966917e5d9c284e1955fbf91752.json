{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _styledComponents = require(\"../../common/styled-components\");\nvar _polygonFilter = _interopRequireDefault(require(\"../polygon-filter\"));\nvar _panelHeaderAction = _interopRequireDefault(require(\"../../side-panel/panel-header-action\"));\nvar _icons = require(\"../../common/icons\");\nvar _filterPanelHeader = _interopRequireDefault(require(\"../../side-panel/filter-panel/filter-panel-header\"));\nvar _components = require(\"../components\");\nvar _lodash = _interopRequireDefault(require(\"lodash.get\"));\nPolygonFilterPanelFactory.deps = [_filterPanelHeader[\"default\"], _polygonFilter[\"default\"], _panelHeaderAction[\"default\"]];\nfunction PolygonFilterPanelFactory(FilterPanelHeader, PolygonFilter, PanelHeaderAction) {\n  var PolygonFilterPanel = /*#__PURE__*/_react[\"default\"].memo(function (_ref) {\n    var idx = _ref.idx,\n      datasets = _ref.datasets,\n      layers = _ref.layers,\n      filter = _ref.filter,\n      removeFilter = _ref.removeFilter,\n      setFilter = _ref.setFilter,\n      toggleFilterFeature = _ref.toggleFilterFeature;\n    var filterDatasets = (0, _react.useMemo)(function () {\n      return filter.dataId.map(function (d) {\n        return datasets[d];\n      });\n    }, [filter, datasets]);\n    var onSetLayers = (0, _react.useCallback)(function (value) {\n      return setFilter(idx, 'layerId', value);\n    }, [setFilter, idx]);\n    var isVisible = (0, _lodash[\"default\"])(filter, ['value', 'properties', 'isVisible'], true);\n    var featureType = (0, _lodash[\"default\"])(filter, ['value', 'properties', 'renderType'], true);\n    return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n      className: \"polygon-filter-panel\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(FilterPanelHeader, {\n      datasets: filterDatasets,\n      filter: filter,\n      removeFilter: removeFilter\n    }, /*#__PURE__*/_react[\"default\"].createElement(_components.StyledFilterPanel, null, \"Geo - \", featureType), /*#__PURE__*/_react[\"default\"].createElement(PanelHeaderAction, {\n      id: filter.id,\n      onClick: toggleFilterFeature,\n      tooltip: isVisible ? 'tooltip.hideFeature' : 'tooltip.showFeature',\n      IconComponent: isVisible ? _icons.EyeSeen : _icons.EyeUnseen,\n      active: isVisible\n    })), /*#__PURE__*/_react[\"default\"].createElement(_styledComponents.StyledFilterContent, {\n      className: \"filter-panel__content\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n      className: \"filter-panel__filter\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(PolygonFilter, {\n      filter: filter,\n      layers: layers,\n      setLayers: onSetLayers\n    }))));\n  });\n  PolygonFilterPanel.displayName = 'PolygonFilterPanel';\n  return PolygonFilterPanel;\n}\nvar _default = PolygonFilterPanelFactory;\nexports[\"default\"] = _default;","map":{"version":3,"names":["value","exports","_react","_interopRequireWildcard","require","_styledComponents","_polygonFilter","_interopRequireDefault","_panelHeaderAction","_icons","_filterPanelHeader","_components","_lodash","PolygonFilterPanelFactory","deps","PolygonFilterPanel","memo","_ref","idx","datasets","layers","filter","removeFilter","setFilter","toggleFilterFeature","filterDatasets","useMemo","dataId","map","d","onSetLayers","useCallback","isVisible","featureType","createElement","className","FilterPanelHeader","StyledFilterPanel","PanelHeaderAction","id","onClick","tooltip","IconComponent","EyeSeen","EyeUnseen","active","StyledFilterContent","PolygonFilter","setLayers","_default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/components/src/filters/filter-panels/polygon-filter-panel.tsx"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {useMemo, useCallback} from 'react';\nimport {StyledFilterContent} from '../../common/styled-components';\nimport PolygonFilterFactory from '../polygon-filter';\nimport PanelHeaderActionFactory from '../../side-panel/panel-header-action';\nimport {EyeSeen, EyeUnseen} from '../../common/icons';\n\nimport FilterPanelHeaderFactory from '../../side-panel/filter-panel/filter-panel-header';\nimport {StyledFilterPanel} from '../components';\n\nimport get from 'lodash.get';\nimport {PolygonFilterPanelComponent} from './types';\nimport {KeplerTable} from '@kepler.gl/table';\n\nPolygonFilterPanelFactory.deps = [\n  FilterPanelHeaderFactory,\n  PolygonFilterFactory,\n  PanelHeaderActionFactory\n];\n\nfunction PolygonFilterPanelFactory(\n  FilterPanelHeader: ReturnType<typeof FilterPanelHeaderFactory>,\n  PolygonFilter: ReturnType<typeof PolygonFilterFactory>,\n  PanelHeaderAction: ReturnType<typeof PanelHeaderActionFactory>\n) {\n  const PolygonFilterPanel: PolygonFilterPanelComponent = React.memo(\n    ({idx, datasets, layers, filter, removeFilter, setFilter, toggleFilterFeature}) => {\n      const filterDatasets: KeplerTable[] = useMemo(() => filter.dataId.map(d => datasets[d]), [\n        filter,\n        datasets\n      ]);\n\n      const onSetLayers = useCallback(value => setFilter(idx, 'layerId', value), [setFilter, idx]);\n\n      const isVisible = get(filter, ['value', 'properties', 'isVisible'], true);\n      const featureType = get(filter, ['value', 'properties', 'renderType'], true);\n\n      return (\n        <div className=\"polygon-filter-panel\">\n          <FilterPanelHeader datasets={filterDatasets} filter={filter} removeFilter={removeFilter}>\n            <StyledFilterPanel>Geo - {featureType}</StyledFilterPanel>\n            <PanelHeaderAction\n              id={filter.id}\n              onClick={toggleFilterFeature}\n              tooltip={isVisible ? 'tooltip.hideFeature' : 'tooltip.showFeature'}\n              IconComponent={isVisible ? EyeSeen : EyeUnseen}\n              active={isVisible}\n            />\n          </FilterPanelHeader>\n          <StyledFilterContent className=\"filter-panel__content\">\n            <div className=\"filter-panel__filter\">\n              <PolygonFilter filter={filter} layers={layers} setLayers={onSetLayers} />\n            </div>\n          </StyledFilterContent>\n        </div>\n      );\n    }\n  );\n\n  PolygonFilterPanel.displayName = 'PolygonFilterPanel';\n\n  return PolygonFilterPanel;\n}\n\nexport default PolygonFilterPanelFactory;\n"],"mappings":";;;;;;;;;;;AAoBA;;AACA;;AACA;;AACA;;;;;;;;EAvBAA,KAAA;AACA;AACAC,OAAA;AAEA,IAAAC,MAAA,GAAAC,uBAAA,CAAAC,OAAA;AAEA,IAAAC,iBAAA,GAAAD,OAAA;AAEA,IAAAE,cAAA,GAAAC,sBAAA,CAAAH,OAAA;AAEA,IAAAI,kBAAA,GAAAD,sBAAA,CAAAH,OAAA;AAEA,IAAAK,MAAA,GAAAL,OAAA;AAEA,IAAAM,kBAAA,GAAAH,sBAAA,CAAAH,OAAA;AAEA,IAAAO,WAAA,GAAAP,OAAA;AAEA,IAAAQ,OAAA,GAAAL,sBAAA,CAAAH,OAAA;AAAAS,yBAAA,CAAAC,IAAA,IAAAJ,kBAAA,aAAAJ,cAAA,aAAAE,kBAAA;;EAqBA,IAAAO,kBAAS,gBACPb,MAAA,UACA,EAAAc,IAAA,WACAC,IAAA;IAEA,IAAMC,GAAA,GAAAD,IAAA,CAAAC,GAAA;MACFC,QAAiF,GAAjFF,IAAiF,CAAAE,QAAA;MAA5EC,MAAA,GAA4EH,IAAA,CAAAG,MAA5E;MAAUC,MAAkE,GAAAJ,IAAA,CAAlEI,MAAkE;MAA1DC,YAA0D,GAA1DL,IAAA,CAA0DK,YAAA;MAAlDC,SAAA,GAAkDN,IAAA,CAAAM,SAAlD;MAAcC,mBAAA,GAAAP,IAAoC,CAAAO,mBAAA;IAAA,IAAzBC,cAAA,KAAyB,EAAAvB,MAAzB,CAAAwB,OAAA,cAAyB;MACjF,OAAML,MAAA,CAAAM,MAAgC,CAAAC,GAAA,WAAAC,CAAA;QAAQ,OAAMV,QAAO,CAAAU,CAAA,CAAP;MAAmB;IAAA,GAAnB,CAANR,MAAA,EAAAF,QAAA;IAAA,IAC5CW,WACA,KAFuF,EAAzF5B,MAAA,CAAA6B,WAAA,YAAA/B,KAAA;MAKA,OAAMuB,SAAc,CAAAL,GAAA,aAAAlB,KAAA;IAAiB,IAAAuB,SAAI,EAAAL,GAAS,CAAC;IAAd,IAAuCc,SAAD,GAAY,EAAZ,EAA3EpB,OAAA,aAAAS,MAAA;IAEA,IAAMY,WAAS,GAAG,IAAArB,OAAA,WAAI,EAAAS,MAAQ,EAAC,QAAS,cAAc,cAAc,OAApE;IACA,OAAM,aAAcnB,MAAA,YAAAgC,aAAa,QAAD;MAEhCC,SAAA;IACO,gBAAUjC,MAAA,YAAAgC,aAAA,CAAAE,iBAAA;MAAfjB,QAAA,EAAAM,cACE;MAAmBJ,MAAA,EAAQA,MAAE;MAAgBC,YAAQ,EAArDA;IAA6D,gBAAcpB,MAAA,YAAAgC,aAAA,CAAAvB,WAAA,CAAA0B,iBAAA,kBAAAJ,WAAA,gBAAA/B,MAAA,YAAAgC,aAAA,CAAAI,iBAAA;MAA3EC,EAAA,EAAAlB,MAAA,CAAAkB,EAAA;MAGIC,OAAI,EAAAhB,mBADN;MAEEiB,OAAO,EAAET,SAAA,wBAFX;MAGEU,aAAS,EAAAV,SAAY,GAAAvB,MAAA,CAAAkC,OAAA,GAAHlC,MAA2B,CAAAmC,SAAA;MAC7CC,MAAA,EAAAb;IACA,kBAAQ9B,MAAA,YAAAgC,aAAA,CAAA7B,iBAAA,CAAAyC,mBAAA;MAPZX,SADF;IAWuB,gBAAUjC,MAAA,YAAAgC,aAAA;MAA/BC,SAAA;IACO,gBAAUjC,MAAA,YAAAgC,aAAA,CAAAa,aAAA;MAAf1B,MAAA,EAAAA,MACE;MAAeD,MAAM,EAAEA,MAAvB;MAA+B4B,SAAQ,EAAAlB;IAAQ;EAA/C;;EAQZ,OAAAf,kBAAmB;AAEnB;;iBAGa,IAAAkC,QAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}