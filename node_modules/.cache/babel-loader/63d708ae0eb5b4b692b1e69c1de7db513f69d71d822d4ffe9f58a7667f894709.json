{"ast":null,"code":"/*\n * Copyright 2012-2016 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n\n'use strict';\n\nvar interceptor, UrlBuilder;\ninterceptor = require('../interceptor');\nUrlBuilder = require('../UrlBuilder');\nfunction startsWith(str, prefix) {\n  return str.indexOf(prefix) === 0;\n}\nfunction endsWith(str, suffix) {\n  return str.lastIndexOf(suffix) + suffix.length === str.length;\n}\n\n/**\n * Prefixes the request path with a common value.\n *\n * @param {Client} [client] client to wrap\n * @param {number} [config.prefix] path prefix\n *\n * @returns {Client}\n */\nmodule.exports = interceptor({\n  request: function request(_request, config) {\n    var path;\n    if (config.prefix && !new UrlBuilder(_request.path).isFullyQualified()) {\n      path = config.prefix;\n      if (_request.path) {\n        if (!endsWith(path, '/') && !startsWith(_request.path, '/')) {\n          // add missing '/' between path sections\n          path += '/';\n        }\n        path += _request.path;\n      }\n      _request.path = path;\n    }\n    return _request;\n  }\n});","map":{"version":3,"names":["interceptor","UrlBuilder","require","startsWith","str","prefix","indexOf","endsWith","suffix","lastIndexOf","length","module","exports","request","config","path","isFullyQualified"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/rest/interceptor/pathPrefix.js"],"sourcesContent":["/*\n * Copyright 2012-2016 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n\n'use strict';\n\nvar interceptor, UrlBuilder;\n\ninterceptor = require('../interceptor');\nUrlBuilder = require('../UrlBuilder');\n\nfunction startsWith(str, prefix) {\n\treturn str.indexOf(prefix) === 0;\n}\n\nfunction endsWith(str, suffix) {\n\treturn str.lastIndexOf(suffix) + suffix.length === str.length;\n}\n\n/**\n * Prefixes the request path with a common value.\n *\n * @param {Client} [client] client to wrap\n * @param {number} [config.prefix] path prefix\n *\n * @returns {Client}\n */\nmodule.exports = interceptor({\n\trequest: function (request, config) {\n\t\tvar path;\n\n\t\tif (config.prefix && !(new UrlBuilder(request.path).isFullyQualified())) {\n\t\t\tpath = config.prefix;\n\t\t\tif (request.path) {\n\t\t\t\tif (!endsWith(path, '/') && !startsWith(request.path, '/')) {\n\t\t\t\t\t// add missing '/' between path sections\n\t\t\t\t\tpath += '/';\n\t\t\t\t}\n\t\t\t\tpath += request.path;\n\t\t\t}\n\t\t\trequest.path = path;\n\t\t}\n\n\t\treturn request;\n\t}\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,WAAW,EAAEC,UAAU;AAE3BD,WAAW,GAAGE,OAAO,CAAC,gBAAgB,CAAC;AACvCD,UAAU,GAAGC,OAAO,CAAC,eAAe,CAAC;AAErC,SAASC,UAAUA,CAACC,GAAG,EAAEC,MAAM,EAAE;EAChC,OAAOD,GAAG,CAACE,OAAO,CAACD,MAAM,CAAC,KAAK,CAAC;AACjC;AAEA,SAASE,QAAQA,CAACH,GAAG,EAAEI,MAAM,EAAE;EAC9B,OAAOJ,GAAG,CAACK,WAAW,CAACD,MAAM,CAAC,GAAGA,MAAM,CAACE,MAAM,KAAKN,GAAG,CAACM,MAAM;AAC9D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAGZ,WAAW,CAAC;EAC5Ba,OAAO,EAAE,SAAAA,QAAUA,QAAO,EAAEC,MAAM,EAAE;IACnC,IAAIC,IAAI;IAER,IAAID,MAAM,CAACT,MAAM,IAAI,CAAE,IAAIJ,UAAU,CAACY,QAAO,CAACE,IAAI,CAAC,CAACC,gBAAgB,EAAG,EAAE;MACxED,IAAI,GAAGD,MAAM,CAACT,MAAM;MACpB,IAAIQ,QAAO,CAACE,IAAI,EAAE;QACjB,IAAI,CAACR,QAAQ,CAACQ,IAAI,EAAE,GAAG,CAAC,IAAI,CAACZ,UAAU,CAACU,QAAO,CAACE,IAAI,EAAE,GAAG,CAAC,EAAE;UAC3D;UACAA,IAAI,IAAI,GAAG;QACZ;QACAA,IAAI,IAAIF,QAAO,CAACE,IAAI;MACrB;MACAF,QAAO,CAACE,IAAI,GAAGA,IAAI;IACpB;IAEA,OAAOF,QAAO;EACf;AACD,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}