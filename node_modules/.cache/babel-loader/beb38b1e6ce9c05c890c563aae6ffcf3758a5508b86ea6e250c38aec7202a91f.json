{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport GLTFScenegraph from '../api/gltf-scenegraph';\nvar KHR_BINARY_GLTF = 'KHR_binary_glTF';\nexport var name = KHR_BINARY_GLTF;\nexport function preprocess(gltfData) {\n  var gltfScenegraph = new GLTFScenegraph(gltfData);\n  var json = gltfScenegraph.json;\n  var _iterator = _createForOfIteratorHelper(json.images || []),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var image = _step.value;\n      var extension = gltfScenegraph.getObjectExtension(image, KHR_BINARY_GLTF);\n      if (extension) {\n        Object.assign(image, extension);\n      }\n      gltfScenegraph.removeObjectExtension(image, KHR_BINARY_GLTF);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  if (json.buffers && json.buffers[0]) {\n    delete json.buffers[0].uri;\n  }\n  gltfScenegraph.removeExtension(KHR_BINARY_GLTF);\n}","map":{"version":3,"names":["GLTFScenegraph","KHR_BINARY_GLTF","name","preprocess","gltfData","gltfScenegraph","json","_iterator","_createForOfIteratorHelper","images","_step","s","n","done","image","value","extension","getObjectExtension","Object","assign","removeObjectExtension","err","e","f","buffers","uri","removeExtension"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@loaders.gl/gltf/src/lib/extensions/KHR_binary_gltf.ts"],"sourcesContent":["// GLTF 1.0 EXTENSION: KHR_binary_glTF\n// https://github.com/KhronosGroup/glTF/tree/master/extensions/1.0/Khronos/KHR_binary_glTF\n/* eslint-disable camelcase */\n\nimport type {GLTF, GLTF_KHR_binary_glTF} from '../types/gltf-types';\n\nimport GLTFScenegraph from '../api/gltf-scenegraph';\n\nconst KHR_BINARY_GLTF = 'KHR_binary_glTF';\n\n/** Extension name */\nexport const name = KHR_BINARY_GLTF;\n\nexport function preprocess(gltfData: {json: GLTF}): void {\n  const gltfScenegraph = new GLTFScenegraph(gltfData);\n  const {json} = gltfScenegraph;\n\n  // Note: json.buffers.binary_glTF also needs to be replaced\n  // This is currently done during gltf normalization\n\n  // Image and shader nodes can have the extension\n  // https://github.com/KhronosGroup/glTF/blob/master/extensions/1.0/Khronos/KHR_binary_glTF/schema/image.KHR_binary_glTF.schema.json\n  for (const image of json.images || []) {\n    const extension = gltfScenegraph.getObjectExtension<GLTF_KHR_binary_glTF>(\n      image,\n      KHR_BINARY_GLTF\n    );\n    // The data in the extension is valid as glTF 2.0 data inside the object, so just copy it in\n    if (extension) {\n      Object.assign(image, extension);\n    }\n    gltfScenegraph.removeObjectExtension(image, KHR_BINARY_GLTF);\n  }\n\n  // TODO shaders - At least traverse and throw error if used?\n  // https://github.com/KhronosGroup/glTF/blob/master/extensions/1.0/Khronos/KHR_binary_glTF/schema/shader.KHR_binary_glTF.schema.json\n\n  // glTF v1 one files have a partially formed URI field that is not expected in (and causes problems in) 2.0\n  if (json.buffers && json.buffers[0]) {\n    delete json.buffers[0].uri;\n  }\n\n  // Remove the top-level extension as it has now been processed\n  gltfScenegraph.removeExtension(KHR_BINARY_GLTF);\n}\n\n// KHR_binary_gltf is a 1.0 extension that is supported natively by 2.0\n// export function encode() {\n//   throw new Error(KHR_BINARY_GLTF);\n// }\n"],"mappings":";AAMA,OAAOA,cAAc,MAAM,wBAAwB;AAEnD,IAAMC,eAAe,GAAG,iBAAiB;AAGzC,OAAO,IAAMC,IAAI,GAAGD,eAAe;AAEnC,OAAO,SAASE,UAAUA,CAACC,QAAsB,EAAQ;EACvD,IAAMC,cAAc,GAAG,IAAIL,cAAc,CAACI,QAAQ,CAAC;EACnD,IAAOE,IAAA,GAAQD,cAAc,CAAtBC,IAAA;EAAsB,IAAAC,SAAA,GAAAC,0BAAA,CAOTF,IAAI,CAACG,MAAM,IAAI,EAAE;IAAAC,KAAA;EAAA;IAArC,KAAAH,SAAA,CAAAI,CAAA,MAAAD,KAAA,GAAAH,SAAA,CAAAK,CAAA,IAAAC,IAAA,GAAuC;MAAA,IAA5BC,KAAK,GAAAJ,KAAA,CAAAK,KAAA;MACd,IAAMC,SAAS,GAAGX,cAAc,CAACY,kBAAkB,CACjDH,KAAK,EACLb,eAAe,CAChB;MAED,IAAIe,SAAS,EAAE;QACbE,MAAM,CAACC,MAAM,CAACL,KAAK,EAAEE,SAAS,CAAC;MACjC;MACAX,cAAc,CAACe,qBAAqB,CAACN,KAAK,EAAEb,eAAe,CAAC;IAC9D;EAAA,SAAAoB,GAAA;IAAAd,SAAA,CAAAe,CAAA,CAAAD,GAAA;EAAA;IAAAd,SAAA,CAAAgB,CAAA;EAAA;EAMA,IAAIjB,IAAI,CAACkB,OAAO,IAAIlB,IAAI,CAACkB,OAAO,CAAC,CAAC,CAAC,EAAE;IACnC,OAAOlB,IAAI,CAACkB,OAAO,CAAC,CAAC,CAAC,CAACC,GAAG;EAC5B;EAGApB,cAAc,CAACqB,eAAe,CAACzB,eAAe,CAAC;AACjD"},"metadata":{},"sourceType":"module","externalDependencies":[]}