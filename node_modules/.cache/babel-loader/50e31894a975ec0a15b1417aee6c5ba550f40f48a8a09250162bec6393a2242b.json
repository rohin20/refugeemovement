{"ast":null,"code":"import _objectSpread from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { log } from '@deck.gl/core';\nimport IconLayer from '../../icon-layer/icon-layer';\nimport fs from './multi-icon-layer-fragment.glsl';\nvar DEFAULT_BUFFER = 192.0 / 256;\nvar EMPTY_ARRAY = [];\nvar defaultProps = {\n  getIconOffsets: {\n    type: 'accessor',\n    value: function value(x) {\n      return x.offsets;\n    }\n  },\n  alphaCutoff: 0.001,\n  smoothing: 0.1,\n  outlineWidth: 0,\n  outlineColor: {\n    type: 'color',\n    value: [0, 0, 0, 255]\n  }\n};\nvar MultiIconLayer = /*#__PURE__*/function (_IconLayer) {\n  _inherits(MultiIconLayer, _IconLayer);\n  var _super = _createSuper(MultiIconLayer);\n  function MultiIconLayer() {\n    var _this;\n    _classCallCheck(this, MultiIconLayer);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"state\", void 0);\n    return _this;\n  }\n  _createClass(MultiIconLayer, [{\n    key: \"getShaders\",\n    value: function getShaders() {\n      return _objectSpread(_objectSpread({}, _get(_getPrototypeOf(MultiIconLayer.prototype), \"getShaders\", this).call(this)), {}, {\n        fs: fs\n      });\n    }\n  }, {\n    key: \"initializeState\",\n    value: function initializeState() {\n      var _this2 = this;\n      _get(_getPrototypeOf(MultiIconLayer.prototype), \"initializeState\", this).call(this);\n      var attributeManager = this.getAttributeManager();\n      attributeManager.addInstanced({\n        instanceOffsets: {\n          size: 2,\n          accessor: 'getIconOffsets'\n        },\n        instancePickingColors: {\n          type: 5121,\n          size: 3,\n          accessor: function accessor(object, _ref) {\n            var index = _ref.index,\n              value = _ref.target;\n            return _this2.encodePickingColor(index, value);\n          }\n        }\n      });\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(params) {\n      _get(_getPrototypeOf(MultiIconLayer.prototype), \"updateState\", this).call(this, params);\n      var props = params.props,\n        oldProps = params.oldProps;\n      var outlineColor = props.outlineColor;\n      if (outlineColor !== oldProps.outlineColor) {\n        outlineColor = outlineColor.map(function (x) {\n          return x / 255;\n        });\n        outlineColor[3] = Number.isFinite(outlineColor[3]) ? outlineColor[3] : 1;\n        this.setState({\n          outlineColor: outlineColor\n        });\n      }\n      if (!props.sdf && props.outlineWidth) {\n        log.warn(\"\".concat(this.id, \": fontSettings.sdf is required to render outline\"))();\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(params) {\n      var _this$props = this.props,\n        sdf = _this$props.sdf,\n        smoothing = _this$props.smoothing,\n        outlineWidth = _this$props.outlineWidth;\n      var outlineColor = this.state.outlineColor;\n      params.uniforms = _objectSpread(_objectSpread({}, params.uniforms), {}, {\n        buffer: DEFAULT_BUFFER,\n        outlineBuffer: outlineWidth ? Math.max(smoothing, DEFAULT_BUFFER * (1 - outlineWidth)) : -1,\n        gamma: smoothing,\n        sdf: Boolean(sdf),\n        outlineColor: outlineColor\n      });\n      _get(_getPrototypeOf(MultiIconLayer.prototype), \"draw\", this).call(this, params);\n    }\n  }, {\n    key: \"getInstanceOffset\",\n    value: function getInstanceOffset(icons) {\n      var _this3 = this;\n      return icons ? Array.from(icons).flatMap(function (icon) {\n        return _get(_getPrototypeOf(MultiIconLayer.prototype), \"getInstanceOffset\", _this3).call(_this3, icon);\n      }) : EMPTY_ARRAY;\n    }\n  }, {\n    key: \"getInstanceColorMode\",\n    value: function getInstanceColorMode(icons) {\n      return 1;\n    }\n  }, {\n    key: \"getInstanceIconFrame\",\n    value: function getInstanceIconFrame(icons) {\n      var _this4 = this;\n      return icons ? Array.from(icons).flatMap(function (icon) {\n        return _get(_getPrototypeOf(MultiIconLayer.prototype), \"getInstanceIconFrame\", _this4).call(_this4, icon);\n      }) : EMPTY_ARRAY;\n    }\n  }]);\n  return MultiIconLayer;\n}(IconLayer);\nexport { MultiIconLayer as default };\n_defineProperty(MultiIconLayer, \"defaultProps\", defaultProps);\n_defineProperty(MultiIconLayer, \"layerName\", 'MultiIconLayer');","map":{"version":3,"names":["log","IconLayer","fs","DEFAULT_BUFFER","EMPTY_ARRAY","defaultProps","getIconOffsets","type","value","x","offsets","alphaCutoff","smoothing","outlineWidth","outlineColor","MultiIconLayer","_IconLayer","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","_defineProperty","_assertThisInitialized","_createClass","key","getShaders","_objectSpread","_get","_getPrototypeOf","prototype","initializeState","_this2","attributeManager","getAttributeManager","addInstanced","instanceOffsets","size","accessor","instancePickingColors","object","_ref","index","target","encodePickingColor","updateState","params","props","oldProps","map","Number","isFinite","setState","sdf","warn","id","draw","_this$props","state","uniforms","buffer","outlineBuffer","Math","max","gamma","Boolean","getInstanceOffset","icons","_this3","from","flatMap","icon","getInstanceColorMode","getInstanceIconFrame","_this4","default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/layers/src/text-layer/multi-icon-layer/multi-icon-layer.ts"],"sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport GL from '@luma.gl/constants';\nimport {log} from '@deck.gl/core';\nimport IconLayer from '../../icon-layer/icon-layer';\n\nimport fs from './multi-icon-layer-fragment.glsl';\n\nimport type {IconLayerProps} from '../../icon-layer/icon-layer';\nimport type {Accessor, Color, UpdateParameters, DefaultProps} from '@deck.gl/core';\n\n// TODO expose as layer properties\nconst DEFAULT_BUFFER = 192.0 / 256;\nconst EMPTY_ARRAY = [];\n\ntype _MultiIconLayerProps<DataT> = {\n  getIconOffsets?: Accessor<DataT, number[]>;\n  sdf?: boolean;\n  smoothing?: number;\n  outlineWidth?: number;\n  outlineColor?: Color;\n};\n\nexport type MultiIconLayerProps<DataT = any> = _MultiIconLayerProps<DataT> & IconLayerProps<DataT>;\n\nconst defaultProps: DefaultProps<MultiIconLayerProps> = {\n  getIconOffsets: {type: 'accessor', value: x => x.offsets},\n  alphaCutoff: 0.001,\n  smoothing: 0.1,\n  outlineWidth: 0,\n  outlineColor: {type: 'color', value: [0, 0, 0, 255]}\n};\n\nexport default class MultiIconLayer<DataT, ExtraPropsT = {}> extends IconLayer<\n  DataT,\n  ExtraPropsT & Required<_MultiIconLayerProps<DataT>>\n> {\n  static defaultProps = defaultProps;\n  static layerName = 'MultiIconLayer';\n\n  state!: IconLayer['state'] & {\n    outlineColor: Color;\n  };\n\n  getShaders() {\n    return {...super.getShaders(), fs};\n  }\n\n  initializeState() {\n    super.initializeState();\n\n    const attributeManager = this.getAttributeManager();\n    attributeManager!.addInstanced({\n      instanceOffsets: {\n        size: 2,\n        accessor: 'getIconOffsets'\n      },\n      instancePickingColors: {\n        type: GL.UNSIGNED_BYTE,\n        size: 3,\n        accessor: (object, {index, target: value}) => this.encodePickingColor(index, value)\n      }\n    });\n  }\n\n  updateState(params: UpdateParameters<this>) {\n    super.updateState(params);\n    const {props, oldProps} = params;\n    let {outlineColor} = props;\n\n    if (outlineColor !== oldProps.outlineColor) {\n      outlineColor = outlineColor.map(x => x / 255) as Color;\n      outlineColor[3] = Number.isFinite(outlineColor[3]) ? outlineColor[3] : 1;\n\n      this.setState({\n        outlineColor\n      });\n    }\n    if (!props.sdf && props.outlineWidth) {\n      log.warn(`${this.id}: fontSettings.sdf is required to render outline`)();\n    }\n  }\n\n  draw(params) {\n    const {sdf, smoothing, outlineWidth} = this.props;\n    const {outlineColor} = this.state;\n\n    params.uniforms = {\n      ...params.uniforms,\n      // Refer the following doc about gamma and buffer\n      // https://blog.mapbox.com/drawing-text-with-signed-distance-fields-in-mapbox-gl-b0933af6f817\n      buffer: DEFAULT_BUFFER,\n      outlineBuffer: outlineWidth ? Math.max(smoothing, DEFAULT_BUFFER * (1 - outlineWidth)) : -1,\n      gamma: smoothing,\n      sdf: Boolean(sdf),\n      outlineColor\n    };\n    super.draw(params);\n  }\n\n  protected getInstanceOffset(icons: string): number[] {\n    return icons ? Array.from(icons).flatMap(icon => super.getInstanceOffset(icon)) : EMPTY_ARRAY;\n  }\n\n  getInstanceColorMode(icons: string): number {\n    return 1; // mask\n  }\n\n  getInstanceIconFrame(icons: string): number[] {\n    return icons\n      ? Array.from(icons).flatMap(icon => super.getInstanceIconFrame(icon))\n      : EMPTY_ARRAY;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}