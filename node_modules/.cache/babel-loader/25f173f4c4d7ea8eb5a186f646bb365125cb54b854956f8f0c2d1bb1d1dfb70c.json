{"ast":null,"code":"var SphericalMercator = function () {\n  // Closures including constants and other precalculated values.\n  var cache = {},\n    EPSLN = 1.0e-10,\n    D2R = Math.PI / 180,\n    R2D = 180 / Math.PI,\n    // 900913 properties.\n    A = 6378137.0,\n    MAXEXTENT = 20037508.342789244;\n  function isFloat(n) {\n    return Number(n) === n && n % 1 !== 0;\n  }\n\n  // SphericalMercator constructor: precaches calculations\n  // for fast tile lookups.\n  function SphericalMercator(options) {\n    options = options || {};\n    this.size = options.size || 256;\n    if (!cache[this.size]) {\n      var size = this.size;\n      var c = cache[this.size] = {};\n      c.Bc = [];\n      c.Cc = [];\n      c.zc = [];\n      c.Ac = [];\n      for (var d = 0; d < 30; d++) {\n        c.Bc.push(size / 360);\n        c.Cc.push(size / (2 * Math.PI));\n        c.zc.push(size / 2);\n        c.Ac.push(size);\n        size *= 2;\n      }\n    }\n    this.Bc = cache[this.size].Bc;\n    this.Cc = cache[this.size].Cc;\n    this.zc = cache[this.size].zc;\n    this.Ac = cache[this.size].Ac;\n  }\n  ;\n\n  // Convert lon lat to screen pixel value\n  //\n  // - `ll` {Array} `[lon, lat]` array of geographic coordinates.\n  // - `zoom` {Number} zoom level.\n  SphericalMercator.prototype.px = function (ll, zoom) {\n    if (isFloat(zoom)) {\n      var size = this.size * Math.pow(2, zoom);\n      var d = size / 2;\n      var bc = size / 360;\n      var cc = size / (2 * Math.PI);\n      var ac = size;\n      var f = Math.min(Math.max(Math.sin(D2R * ll[1]), -0.9999), 0.9999);\n      var x = d + ll[0] * bc;\n      var y = d + 0.5 * Math.log((1 + f) / (1 - f)) * -cc;\n      x > ac && (x = ac);\n      y > ac && (y = ac);\n      //(x < 0) && (x = 0);\n      //(y < 0) && (y = 0);\n      return [x, y];\n    } else {\n      var d = this.zc[zoom];\n      var f = Math.min(Math.max(Math.sin(D2R * ll[1]), -0.9999), 0.9999);\n      var x = Math.round(d + ll[0] * this.Bc[zoom]);\n      var y = Math.round(d + 0.5 * Math.log((1 + f) / (1 - f)) * -this.Cc[zoom]);\n      x > this.Ac[zoom] && (x = this.Ac[zoom]);\n      y > this.Ac[zoom] && (y = this.Ac[zoom]);\n      //(x < 0) && (x = 0);\n      //(y < 0) && (y = 0);\n      return [x, y];\n    }\n  };\n\n  // Convert screen pixel value to lon lat\n  //\n  // - `px` {Array} `[x, y]` array of geographic coordinates.\n  // - `zoom` {Number} zoom level.\n  SphericalMercator.prototype.ll = function (px, zoom) {\n    if (isFloat(zoom)) {\n      var size = this.size * Math.pow(2, zoom);\n      var bc = size / 360;\n      var cc = size / (2 * Math.PI);\n      var zc = size / 2;\n      var g = (px[1] - zc) / -cc;\n      var lon = (px[0] - zc) / bc;\n      var lat = R2D * (2 * Math.atan(Math.exp(g)) - 0.5 * Math.PI);\n      return [lon, lat];\n    } else {\n      var g = (px[1] - this.zc[zoom]) / -this.Cc[zoom];\n      var lon = (px[0] - this.zc[zoom]) / this.Bc[zoom];\n      var lat = R2D * (2 * Math.atan(Math.exp(g)) - 0.5 * Math.PI);\n      return [lon, lat];\n    }\n  };\n\n  // Convert tile xyz value to bbox of the form `[w, s, e, n]`\n  //\n  // - `x` {Number} x (longitude) number.\n  // - `y` {Number} y (latitude) number.\n  // - `zoom` {Number} zoom.\n  // - `tms_style` {Boolean} whether to compute using tms-style.\n  // - `srs` {String} projection for resulting bbox (WGS84|900913).\n  // - `return` {Array} bbox array of values in form `[w, s, e, n]`.\n  SphericalMercator.prototype.bbox = function (x, y, zoom, tms_style, srs) {\n    // Convert xyz into bbox with srs WGS84\n    if (tms_style) {\n      y = Math.pow(2, zoom) - 1 - y;\n    }\n    // Use +y to make sure it's a number to avoid inadvertent concatenation.\n    var ll = [x * this.size, (+y + 1) * this.size]; // lower left\n    // Use +x to make sure it's a number to avoid inadvertent concatenation.\n    var ur = [(+x + 1) * this.size, y * this.size]; // upper right\n    var bbox = this.ll(ll, zoom).concat(this.ll(ur, zoom));\n\n    // If web mercator requested reproject to 900913.\n    if (srs === '900913') {\n      return this.convert(bbox, '900913');\n    } else {\n      return bbox;\n    }\n  };\n\n  // Convert bbox to xyx bounds\n  //\n  // - `bbox` {Number} bbox in the form `[w, s, e, n]`.\n  // - `zoom` {Number} zoom.\n  // - `tms_style` {Boolean} whether to compute using tms-style.\n  // - `srs` {String} projection of input bbox (WGS84|900913).\n  // - `@return` {Object} XYZ bounds containing minX, maxX, minY, maxY properties.\n  SphericalMercator.prototype.xyz = function (bbox, zoom, tms_style, srs) {\n    // If web mercator provided reproject to WGS84.\n    if (srs === '900913') {\n      bbox = this.convert(bbox, 'WGS84');\n    }\n    var ll = [bbox[0], bbox[1]]; // lower left\n    var ur = [bbox[2], bbox[3]]; // upper right\n    var px_ll = this.px(ll, zoom);\n    var px_ur = this.px(ur, zoom);\n    // Y = 0 for XYZ is the top hence minY uses px_ur[1].\n    var x = [Math.floor(px_ll[0] / this.size), Math.floor((px_ur[0] - 1) / this.size)];\n    var y = [Math.floor(px_ur[1] / this.size), Math.floor((px_ll[1] - 1) / this.size)];\n    var bounds = {\n      minX: Math.min.apply(Math, x) < 0 ? 0 : Math.min.apply(Math, x),\n      minY: Math.min.apply(Math, y) < 0 ? 0 : Math.min.apply(Math, y),\n      maxX: Math.max.apply(Math, x),\n      maxY: Math.max.apply(Math, y)\n    };\n    if (tms_style) {\n      var tms = {\n        minY: Math.pow(2, zoom) - 1 - bounds.maxY,\n        maxY: Math.pow(2, zoom) - 1 - bounds.minY\n      };\n      bounds.minY = tms.minY;\n      bounds.maxY = tms.maxY;\n    }\n    return bounds;\n  };\n\n  // Convert projection of given bbox.\n  //\n  // - `bbox` {Number} bbox in the form `[w, s, e, n]`.\n  // - `to` {String} projection of output bbox (WGS84|900913). Input bbox\n  //   assumed to be the \"other\" projection.\n  // - `@return` {Object} bbox with reprojected coordinates.\n  SphericalMercator.prototype.convert = function (bbox, to) {\n    if (to === '900913') {\n      return this.forward(bbox.slice(0, 2)).concat(this.forward(bbox.slice(2, 4)));\n    } else {\n      return this.inverse(bbox.slice(0, 2)).concat(this.inverse(bbox.slice(2, 4)));\n    }\n  };\n\n  // Convert lon/lat values to 900913 x/y.\n  SphericalMercator.prototype.forward = function (ll) {\n    var xy = [A * ll[0] * D2R, A * Math.log(Math.tan(Math.PI * 0.25 + 0.5 * ll[1] * D2R))];\n    // if xy value is beyond maxextent (e.g. poles), return maxextent.\n    xy[0] > MAXEXTENT && (xy[0] = MAXEXTENT);\n    xy[0] < -MAXEXTENT && (xy[0] = -MAXEXTENT);\n    xy[1] > MAXEXTENT && (xy[1] = MAXEXTENT);\n    xy[1] < -MAXEXTENT && (xy[1] = -MAXEXTENT);\n    return xy;\n  };\n\n  // Convert 900913 x/y values to lon/lat.\n  SphericalMercator.prototype.inverse = function (xy) {\n    return [xy[0] * R2D / A, (Math.PI * 0.5 - 2.0 * Math.atan(Math.exp(-xy[1] / A))) * R2D];\n  };\n  return SphericalMercator;\n}();\nif (typeof module !== 'undefined' && typeof exports !== 'undefined') {\n  module.exports = exports = SphericalMercator;\n}","map":{"version":3,"names":["SphericalMercator","cache","EPSLN","D2R","Math","PI","R2D","A","MAXEXTENT","isFloat","n","Number","options","size","c","Bc","Cc","zc","Ac","d","push","prototype","px","ll","zoom","pow","bc","cc","ac","f","min","max","sin","x","y","log","round","g","lon","lat","atan","exp","bbox","tms_style","srs","ur","concat","convert","xyz","px_ll","px_ur","floor","bounds","minX","apply","minY","maxX","maxY","tms","to","forward","slice","inverse","xy","tan","module","exports"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@mapbox/sphericalmercator/sphericalmercator.js"],"sourcesContent":["var SphericalMercator = (function(){\n\n// Closures including constants and other precalculated values.\nvar cache = {},\n    EPSLN = 1.0e-10,\n    D2R = Math.PI / 180,\n    R2D = 180 / Math.PI,\n    // 900913 properties.\n    A = 6378137.0,\n    MAXEXTENT = 20037508.342789244;\n\nfunction isFloat(n){\n    return Number(n) === n && n % 1 !== 0;\n}\n\n// SphericalMercator constructor: precaches calculations\n// for fast tile lookups.\nfunction SphericalMercator(options) {\n    options = options || {};\n    this.size = options.size || 256;\n    if (!cache[this.size]) {\n        var size = this.size;\n        var c = cache[this.size] = {};\n        c.Bc = [];\n        c.Cc = [];\n        c.zc = [];\n        c.Ac = [];\n        for (var d = 0; d < 30; d++) {\n            c.Bc.push(size / 360);\n            c.Cc.push(size / (2 * Math.PI));\n            c.zc.push(size / 2);\n            c.Ac.push(size);\n            size *= 2;\n        }\n    }\n    this.Bc = cache[this.size].Bc;\n    this.Cc = cache[this.size].Cc;\n    this.zc = cache[this.size].zc;\n    this.Ac = cache[this.size].Ac;\n};\n\n// Convert lon lat to screen pixel value\n//\n// - `ll` {Array} `[lon, lat]` array of geographic coordinates.\n// - `zoom` {Number} zoom level.\nSphericalMercator.prototype.px = function(ll, zoom) {\n  if (isFloat(zoom)) {\n    var size = this.size * Math.pow(2, zoom);\n    var d = size / 2;\n    var bc = (size / 360);\n    var cc = (size / (2 * Math.PI));\n    var ac = size;\n    var f = Math.min(Math.max(Math.sin(D2R * ll[1]), -0.9999), 0.9999);\n    var x = d + ll[0] * bc;\n    var y = d + 0.5 * Math.log((1 + f) / (1 - f)) * -cc;\n    (x > ac) && (x = ac);\n    (y > ac) && (y = ac);\n    //(x < 0) && (x = 0);\n    //(y < 0) && (y = 0);\n    return [x, y];\n  } else {\n    var d = this.zc[zoom];\n    var f = Math.min(Math.max(Math.sin(D2R * ll[1]), -0.9999), 0.9999);\n    var x = Math.round(d + ll[0] * this.Bc[zoom]);\n    var y = Math.round(d + 0.5 * Math.log((1 + f) / (1 - f)) * (-this.Cc[zoom]));\n    (x > this.Ac[zoom]) && (x = this.Ac[zoom]);\n    (y > this.Ac[zoom]) && (y = this.Ac[zoom]);\n    //(x < 0) && (x = 0);\n    //(y < 0) && (y = 0);\n    return [x, y];\n  }\n};\n\n// Convert screen pixel value to lon lat\n//\n// - `px` {Array} `[x, y]` array of geographic coordinates.\n// - `zoom` {Number} zoom level.\nSphericalMercator.prototype.ll = function(px, zoom) {\n  if (isFloat(zoom)) {\n    var size = this.size * Math.pow(2, zoom);\n    var bc = (size / 360);\n    var cc = (size / (2 * Math.PI));\n    var zc = size / 2;\n    var g = (px[1] - zc) / -cc;\n    var lon = (px[0] - zc) / bc;\n    var lat = R2D * (2 * Math.atan(Math.exp(g)) - 0.5 * Math.PI);\n    return [lon, lat];\n  } else {\n    var g = (px[1] - this.zc[zoom]) / (-this.Cc[zoom]);\n    var lon = (px[0] - this.zc[zoom]) / this.Bc[zoom];\n    var lat = R2D * (2 * Math.atan(Math.exp(g)) - 0.5 * Math.PI);\n    return [lon, lat];\n  }\n};\n\n// Convert tile xyz value to bbox of the form `[w, s, e, n]`\n//\n// - `x` {Number} x (longitude) number.\n// - `y` {Number} y (latitude) number.\n// - `zoom` {Number} zoom.\n// - `tms_style` {Boolean} whether to compute using tms-style.\n// - `srs` {String} projection for resulting bbox (WGS84|900913).\n// - `return` {Array} bbox array of values in form `[w, s, e, n]`.\nSphericalMercator.prototype.bbox = function(x, y, zoom, tms_style, srs) {\n    // Convert xyz into bbox with srs WGS84\n    if (tms_style) {\n        y = (Math.pow(2, zoom) - 1) - y;\n    }\n    // Use +y to make sure it's a number to avoid inadvertent concatenation.\n    var ll = [x * this.size, (+y + 1) * this.size]; // lower left\n    // Use +x to make sure it's a number to avoid inadvertent concatenation.\n    var ur = [(+x + 1) * this.size, y * this.size]; // upper right\n    var bbox = this.ll(ll, zoom).concat(this.ll(ur, zoom));\n\n    // If web mercator requested reproject to 900913.\n    if (srs === '900913') {\n        return this.convert(bbox, '900913');\n    } else {\n        return bbox;\n    }\n};\n\n// Convert bbox to xyx bounds\n//\n// - `bbox` {Number} bbox in the form `[w, s, e, n]`.\n// - `zoom` {Number} zoom.\n// - `tms_style` {Boolean} whether to compute using tms-style.\n// - `srs` {String} projection of input bbox (WGS84|900913).\n// - `@return` {Object} XYZ bounds containing minX, maxX, minY, maxY properties.\nSphericalMercator.prototype.xyz = function(bbox, zoom, tms_style, srs) {\n    // If web mercator provided reproject to WGS84.\n    if (srs === '900913') {\n        bbox = this.convert(bbox, 'WGS84');\n    }\n\n    var ll = [bbox[0], bbox[1]]; // lower left\n    var ur = [bbox[2], bbox[3]]; // upper right\n    var px_ll = this.px(ll, zoom);\n    var px_ur = this.px(ur, zoom);\n    // Y = 0 for XYZ is the top hence minY uses px_ur[1].\n    var x = [ Math.floor(px_ll[0] / this.size), Math.floor((px_ur[0] - 1) / this.size) ];\n    var y = [ Math.floor(px_ur[1] / this.size), Math.floor((px_ll[1] - 1) / this.size) ];\n    var bounds = {\n        minX: Math.min.apply(Math, x) < 0 ? 0 : Math.min.apply(Math, x),\n        minY: Math.min.apply(Math, y) < 0 ? 0 : Math.min.apply(Math, y),\n        maxX: Math.max.apply(Math, x),\n        maxY: Math.max.apply(Math, y)\n    };\n    if (tms_style) {\n        var tms = {\n            minY: (Math.pow(2, zoom) - 1) - bounds.maxY,\n            maxY: (Math.pow(2, zoom) - 1) - bounds.minY\n        };\n        bounds.minY = tms.minY;\n        bounds.maxY = tms.maxY;\n    }\n    return bounds;\n};\n\n// Convert projection of given bbox.\n//\n// - `bbox` {Number} bbox in the form `[w, s, e, n]`.\n// - `to` {String} projection of output bbox (WGS84|900913). Input bbox\n//   assumed to be the \"other\" projection.\n// - `@return` {Object} bbox with reprojected coordinates.\nSphericalMercator.prototype.convert = function(bbox, to) {\n    if (to === '900913') {\n        return this.forward(bbox.slice(0, 2)).concat(this.forward(bbox.slice(2,4)));\n    } else {\n        return this.inverse(bbox.slice(0, 2)).concat(this.inverse(bbox.slice(2,4)));\n    }\n};\n\n// Convert lon/lat values to 900913 x/y.\nSphericalMercator.prototype.forward = function(ll) {\n    var xy = [\n        A * ll[0] * D2R,\n        A * Math.log(Math.tan((Math.PI*0.25) + (0.5 * ll[1] * D2R)))\n    ];\n    // if xy value is beyond maxextent (e.g. poles), return maxextent.\n    (xy[0] > MAXEXTENT) && (xy[0] = MAXEXTENT);\n    (xy[0] < -MAXEXTENT) && (xy[0] = -MAXEXTENT);\n    (xy[1] > MAXEXTENT) && (xy[1] = MAXEXTENT);\n    (xy[1] < -MAXEXTENT) && (xy[1] = -MAXEXTENT);\n    return xy;\n};\n\n// Convert 900913 x/y values to lon/lat.\nSphericalMercator.prototype.inverse = function(xy) {\n    return [\n        (xy[0] * R2D / A),\n        ((Math.PI*0.5) - 2.0 * Math.atan(Math.exp(-xy[1] / A))) * R2D\n    ];\n};\n\nreturn SphericalMercator;\n\n})();\n\nif (typeof module !== 'undefined' && typeof exports !== 'undefined') {\n    module.exports = exports = SphericalMercator;\n}\n"],"mappings":"AAAA,IAAIA,iBAAiB,GAAI,YAAU;EAEnC;EACA,IAAIC,KAAK,GAAG,CAAC,CAAC;IACVC,KAAK,GAAG,OAAO;IACfC,GAAG,GAAGC,IAAI,CAACC,EAAE,GAAG,GAAG;IACnBC,GAAG,GAAG,GAAG,GAAGF,IAAI,CAACC,EAAE;IACnB;IACAE,CAAC,GAAG,SAAS;IACbC,SAAS,GAAG,kBAAkB;EAElC,SAASC,OAAOA,CAACC,CAAC,EAAC;IACf,OAAOC,MAAM,CAACD,CAAC,CAAC,KAAKA,CAAC,IAAIA,CAAC,GAAG,CAAC,KAAK,CAAC;EACzC;;EAEA;EACA;EACA,SAASV,iBAAiBA,CAACY,OAAO,EAAE;IAChCA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;IACvB,IAAI,CAACC,IAAI,GAAGD,OAAO,CAACC,IAAI,IAAI,GAAG;IAC/B,IAAI,CAACZ,KAAK,CAAC,IAAI,CAACY,IAAI,CAAC,EAAE;MACnB,IAAIA,IAAI,GAAG,IAAI,CAACA,IAAI;MACpB,IAAIC,CAAC,GAAGb,KAAK,CAAC,IAAI,CAACY,IAAI,CAAC,GAAG,CAAC,CAAC;MAC7BC,CAAC,CAACC,EAAE,GAAG,EAAE;MACTD,CAAC,CAACE,EAAE,GAAG,EAAE;MACTF,CAAC,CAACG,EAAE,GAAG,EAAE;MACTH,CAAC,CAACI,EAAE,GAAG,EAAE;MACT,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;QACzBL,CAAC,CAACC,EAAE,CAACK,IAAI,CAACP,IAAI,GAAG,GAAG,CAAC;QACrBC,CAAC,CAACE,EAAE,CAACI,IAAI,CAACP,IAAI,IAAI,CAAC,GAAGT,IAAI,CAACC,EAAE,CAAC,CAAC;QAC/BS,CAAC,CAACG,EAAE,CAACG,IAAI,CAACP,IAAI,GAAG,CAAC,CAAC;QACnBC,CAAC,CAACI,EAAE,CAACE,IAAI,CAACP,IAAI,CAAC;QACfA,IAAI,IAAI,CAAC;MACb;IACJ;IACA,IAAI,CAACE,EAAE,GAAGd,KAAK,CAAC,IAAI,CAACY,IAAI,CAAC,CAACE,EAAE;IAC7B,IAAI,CAACC,EAAE,GAAGf,KAAK,CAAC,IAAI,CAACY,IAAI,CAAC,CAACG,EAAE;IAC7B,IAAI,CAACC,EAAE,GAAGhB,KAAK,CAAC,IAAI,CAACY,IAAI,CAAC,CAACI,EAAE;IAC7B,IAAI,CAACC,EAAE,GAAGjB,KAAK,CAAC,IAAI,CAACY,IAAI,CAAC,CAACK,EAAE;EACjC;EAAC;;EAED;EACA;EACA;EACA;EACAlB,iBAAiB,CAACqB,SAAS,CAACC,EAAE,GAAG,UAASC,EAAE,EAAEC,IAAI,EAAE;IAClD,IAAIf,OAAO,CAACe,IAAI,CAAC,EAAE;MACjB,IAAIX,IAAI,GAAG,IAAI,CAACA,IAAI,GAAGT,IAAI,CAACqB,GAAG,CAAC,CAAC,EAAED,IAAI,CAAC;MACxC,IAAIL,CAAC,GAAGN,IAAI,GAAG,CAAC;MAChB,IAAIa,EAAE,GAAIb,IAAI,GAAG,GAAI;MACrB,IAAIc,EAAE,GAAId,IAAI,IAAI,CAAC,GAAGT,IAAI,CAACC,EAAE,CAAE;MAC/B,IAAIuB,EAAE,GAAGf,IAAI;MACb,IAAIgB,CAAC,GAAGzB,IAAI,CAAC0B,GAAG,CAAC1B,IAAI,CAAC2B,GAAG,CAAC3B,IAAI,CAAC4B,GAAG,CAAC7B,GAAG,GAAGoB,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC;MAClE,IAAIU,CAAC,GAAGd,CAAC,GAAGI,EAAE,CAAC,CAAC,CAAC,GAAGG,EAAE;MACtB,IAAIQ,CAAC,GAAGf,CAAC,GAAG,GAAG,GAAGf,IAAI,CAAC+B,GAAG,CAAC,CAAC,CAAC,GAAGN,CAAC,KAAK,CAAC,GAAGA,CAAC,CAAC,CAAC,GAAG,CAACF,EAAE;MAClDM,CAAC,GAAGL,EAAE,KAAMK,CAAC,GAAGL,EAAE,CAAC;MACnBM,CAAC,GAAGN,EAAE,KAAMM,CAAC,GAAGN,EAAE,CAAC;MACpB;MACA;MACA,OAAO,CAACK,CAAC,EAAEC,CAAC,CAAC;IACf,CAAC,MAAM;MACL,IAAIf,CAAC,GAAG,IAAI,CAACF,EAAE,CAACO,IAAI,CAAC;MACrB,IAAIK,CAAC,GAAGzB,IAAI,CAAC0B,GAAG,CAAC1B,IAAI,CAAC2B,GAAG,CAAC3B,IAAI,CAAC4B,GAAG,CAAC7B,GAAG,GAAGoB,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC;MAClE,IAAIU,CAAC,GAAG7B,IAAI,CAACgC,KAAK,CAACjB,CAAC,GAAGI,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAACR,EAAE,CAACS,IAAI,CAAC,CAAC;MAC7C,IAAIU,CAAC,GAAG9B,IAAI,CAACgC,KAAK,CAACjB,CAAC,GAAG,GAAG,GAAGf,IAAI,CAAC+B,GAAG,CAAC,CAAC,CAAC,GAAGN,CAAC,KAAK,CAAC,GAAGA,CAAC,CAAC,CAAC,GAAI,CAAC,IAAI,CAACb,EAAE,CAACQ,IAAI,CAAE,CAAC;MAC3ES,CAAC,GAAG,IAAI,CAACf,EAAE,CAACM,IAAI,CAAC,KAAMS,CAAC,GAAG,IAAI,CAACf,EAAE,CAACM,IAAI,CAAC,CAAC;MACzCU,CAAC,GAAG,IAAI,CAAChB,EAAE,CAACM,IAAI,CAAC,KAAMU,CAAC,GAAG,IAAI,CAAChB,EAAE,CAACM,IAAI,CAAC,CAAC;MAC1C;MACA;MACA,OAAO,CAACS,CAAC,EAAEC,CAAC,CAAC;IACf;EACF,CAAC;;EAED;EACA;EACA;EACA;EACAlC,iBAAiB,CAACqB,SAAS,CAACE,EAAE,GAAG,UAASD,EAAE,EAAEE,IAAI,EAAE;IAClD,IAAIf,OAAO,CAACe,IAAI,CAAC,EAAE;MACjB,IAAIX,IAAI,GAAG,IAAI,CAACA,IAAI,GAAGT,IAAI,CAACqB,GAAG,CAAC,CAAC,EAAED,IAAI,CAAC;MACxC,IAAIE,EAAE,GAAIb,IAAI,GAAG,GAAI;MACrB,IAAIc,EAAE,GAAId,IAAI,IAAI,CAAC,GAAGT,IAAI,CAACC,EAAE,CAAE;MAC/B,IAAIY,EAAE,GAAGJ,IAAI,GAAG,CAAC;MACjB,IAAIwB,CAAC,GAAG,CAACf,EAAE,CAAC,CAAC,CAAC,GAAGL,EAAE,IAAI,CAACU,EAAE;MAC1B,IAAIW,GAAG,GAAG,CAAChB,EAAE,CAAC,CAAC,CAAC,GAAGL,EAAE,IAAIS,EAAE;MAC3B,IAAIa,GAAG,GAAGjC,GAAG,IAAI,CAAC,GAAGF,IAAI,CAACoC,IAAI,CAACpC,IAAI,CAACqC,GAAG,CAACJ,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGjC,IAAI,CAACC,EAAE,CAAC;MAC5D,OAAO,CAACiC,GAAG,EAAEC,GAAG,CAAC;IACnB,CAAC,MAAM;MACL,IAAIF,CAAC,GAAG,CAACf,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAACL,EAAE,CAACO,IAAI,CAAC,IAAK,CAAC,IAAI,CAACR,EAAE,CAACQ,IAAI,CAAE;MAClD,IAAIc,GAAG,GAAG,CAAChB,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAACL,EAAE,CAACO,IAAI,CAAC,IAAI,IAAI,CAACT,EAAE,CAACS,IAAI,CAAC;MACjD,IAAIe,GAAG,GAAGjC,GAAG,IAAI,CAAC,GAAGF,IAAI,CAACoC,IAAI,CAACpC,IAAI,CAACqC,GAAG,CAACJ,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGjC,IAAI,CAACC,EAAE,CAAC;MAC5D,OAAO,CAACiC,GAAG,EAAEC,GAAG,CAAC;IACnB;EACF,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAvC,iBAAiB,CAACqB,SAAS,CAACqB,IAAI,GAAG,UAAST,CAAC,EAAEC,CAAC,EAAEV,IAAI,EAAEmB,SAAS,EAAEC,GAAG,EAAE;IACpE;IACA,IAAID,SAAS,EAAE;MACXT,CAAC,GAAI9B,IAAI,CAACqB,GAAG,CAAC,CAAC,EAAED,IAAI,CAAC,GAAG,CAAC,GAAIU,CAAC;IACnC;IACA;IACA,IAAIX,EAAE,GAAG,CAACU,CAAC,GAAG,IAAI,CAACpB,IAAI,EAAE,CAAC,CAACqB,CAAC,GAAG,CAAC,IAAI,IAAI,CAACrB,IAAI,CAAC,CAAC,CAAC;IAChD;IACA,IAAIgC,EAAE,GAAG,CAAC,CAAC,CAACZ,CAAC,GAAG,CAAC,IAAI,IAAI,CAACpB,IAAI,EAAEqB,CAAC,GAAG,IAAI,CAACrB,IAAI,CAAC,CAAC,CAAC;IAChD,IAAI6B,IAAI,GAAG,IAAI,CAACnB,EAAE,CAACA,EAAE,EAAEC,IAAI,CAAC,CAACsB,MAAM,CAAC,IAAI,CAACvB,EAAE,CAACsB,EAAE,EAAErB,IAAI,CAAC,CAAC;;IAEtD;IACA,IAAIoB,GAAG,KAAK,QAAQ,EAAE;MAClB,OAAO,IAAI,CAACG,OAAO,CAACL,IAAI,EAAE,QAAQ,CAAC;IACvC,CAAC,MAAM;MACH,OAAOA,IAAI;IACf;EACJ,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA1C,iBAAiB,CAACqB,SAAS,CAAC2B,GAAG,GAAG,UAASN,IAAI,EAAElB,IAAI,EAAEmB,SAAS,EAAEC,GAAG,EAAE;IACnE;IACA,IAAIA,GAAG,KAAK,QAAQ,EAAE;MAClBF,IAAI,GAAG,IAAI,CAACK,OAAO,CAACL,IAAI,EAAE,OAAO,CAAC;IACtC;IAEA,IAAInB,EAAE,GAAG,CAACmB,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,IAAIG,EAAE,GAAG,CAACH,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,IAAIO,KAAK,GAAG,IAAI,CAAC3B,EAAE,CAACC,EAAE,EAAEC,IAAI,CAAC;IAC7B,IAAI0B,KAAK,GAAG,IAAI,CAAC5B,EAAE,CAACuB,EAAE,EAAErB,IAAI,CAAC;IAC7B;IACA,IAAIS,CAAC,GAAG,CAAE7B,IAAI,CAAC+C,KAAK,CAACF,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAACpC,IAAI,CAAC,EAAET,IAAI,CAAC+C,KAAK,CAAC,CAACD,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAACrC,IAAI,CAAC,CAAE;IACpF,IAAIqB,CAAC,GAAG,CAAE9B,IAAI,CAAC+C,KAAK,CAACD,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAACrC,IAAI,CAAC,EAAET,IAAI,CAAC+C,KAAK,CAAC,CAACF,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAACpC,IAAI,CAAC,CAAE;IACpF,IAAIuC,MAAM,GAAG;MACTC,IAAI,EAAEjD,IAAI,CAAC0B,GAAG,CAACwB,KAAK,CAAClD,IAAI,EAAE6B,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG7B,IAAI,CAAC0B,GAAG,CAACwB,KAAK,CAAClD,IAAI,EAAE6B,CAAC,CAAC;MAC/DsB,IAAI,EAAEnD,IAAI,CAAC0B,GAAG,CAACwB,KAAK,CAAClD,IAAI,EAAE8B,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG9B,IAAI,CAAC0B,GAAG,CAACwB,KAAK,CAAClD,IAAI,EAAE8B,CAAC,CAAC;MAC/DsB,IAAI,EAAEpD,IAAI,CAAC2B,GAAG,CAACuB,KAAK,CAAClD,IAAI,EAAE6B,CAAC,CAAC;MAC7BwB,IAAI,EAAErD,IAAI,CAAC2B,GAAG,CAACuB,KAAK,CAAClD,IAAI,EAAE8B,CAAC;IAChC,CAAC;IACD,IAAIS,SAAS,EAAE;MACX,IAAIe,GAAG,GAAG;QACNH,IAAI,EAAGnD,IAAI,CAACqB,GAAG,CAAC,CAAC,EAAED,IAAI,CAAC,GAAG,CAAC,GAAI4B,MAAM,CAACK,IAAI;QAC3CA,IAAI,EAAGrD,IAAI,CAACqB,GAAG,CAAC,CAAC,EAAED,IAAI,CAAC,GAAG,CAAC,GAAI4B,MAAM,CAACG;MAC3C,CAAC;MACDH,MAAM,CAACG,IAAI,GAAGG,GAAG,CAACH,IAAI;MACtBH,MAAM,CAACK,IAAI,GAAGC,GAAG,CAACD,IAAI;IAC1B;IACA,OAAOL,MAAM;EACjB,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACApD,iBAAiB,CAACqB,SAAS,CAAC0B,OAAO,GAAG,UAASL,IAAI,EAAEiB,EAAE,EAAE;IACrD,IAAIA,EAAE,KAAK,QAAQ,EAAE;MACjB,OAAO,IAAI,CAACC,OAAO,CAAClB,IAAI,CAACmB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACf,MAAM,CAAC,IAAI,CAACc,OAAO,CAAClB,IAAI,CAACmB,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC;IAC/E,CAAC,MAAM;MACH,OAAO,IAAI,CAACC,OAAO,CAACpB,IAAI,CAACmB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACf,MAAM,CAAC,IAAI,CAACgB,OAAO,CAACpB,IAAI,CAACmB,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC;IAC/E;EACJ,CAAC;;EAED;EACA7D,iBAAiB,CAACqB,SAAS,CAACuC,OAAO,GAAG,UAASrC,EAAE,EAAE;IAC/C,IAAIwC,EAAE,GAAG,CACLxD,CAAC,GAAGgB,EAAE,CAAC,CAAC,CAAC,GAAGpB,GAAG,EACfI,CAAC,GAAGH,IAAI,CAAC+B,GAAG,CAAC/B,IAAI,CAAC4D,GAAG,CAAE5D,IAAI,CAACC,EAAE,GAAC,IAAI,GAAK,GAAG,GAAGkB,EAAE,CAAC,CAAC,CAAC,GAAGpB,GAAI,CAAC,CAAC,CAC/D;IACD;IACC4D,EAAE,CAAC,CAAC,CAAC,GAAGvD,SAAS,KAAMuD,EAAE,CAAC,CAAC,CAAC,GAAGvD,SAAS,CAAC;IACzCuD,EAAE,CAAC,CAAC,CAAC,GAAG,CAACvD,SAAS,KAAMuD,EAAE,CAAC,CAAC,CAAC,GAAG,CAACvD,SAAS,CAAC;IAC3CuD,EAAE,CAAC,CAAC,CAAC,GAAGvD,SAAS,KAAMuD,EAAE,CAAC,CAAC,CAAC,GAAGvD,SAAS,CAAC;IACzCuD,EAAE,CAAC,CAAC,CAAC,GAAG,CAACvD,SAAS,KAAMuD,EAAE,CAAC,CAAC,CAAC,GAAG,CAACvD,SAAS,CAAC;IAC5C,OAAOuD,EAAE;EACb,CAAC;;EAED;EACA/D,iBAAiB,CAACqB,SAAS,CAACyC,OAAO,GAAG,UAASC,EAAE,EAAE;IAC/C,OAAO,CACFA,EAAE,CAAC,CAAC,CAAC,GAAGzD,GAAG,GAAGC,CAAC,EAChB,CAAEH,IAAI,CAACC,EAAE,GAAC,GAAG,GAAI,GAAG,GAAGD,IAAI,CAACoC,IAAI,CAACpC,IAAI,CAACqC,GAAG,CAAC,CAACsB,EAAE,CAAC,CAAC,CAAC,GAAGxD,CAAC,CAAC,CAAC,IAAID,GAAG,CAChE;EACL,CAAC;EAED,OAAON,iBAAiB;AAExB,CAAC,EAAG;AAEJ,IAAI,OAAOiE,MAAM,KAAK,WAAW,IAAI,OAAOC,OAAO,KAAK,WAAW,EAAE;EACjED,MAAM,CAACC,OAAO,GAAGA,OAAO,GAAGlE,iBAAiB;AAChD"},"metadata":{},"sourceType":"script","externalDependencies":[]}