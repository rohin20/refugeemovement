{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport parseQuantizedMesh from './lib/parse-quantized-mesh';\nimport loadTerrain from './lib/parse-terrain';\nimport { TerrainLoader as TerrainWorkerLoader } from './terrain-loader';\nimport { QuantizedMeshLoader as QuantizedMeshWorkerLoader } from './quantized-mesh-loader';\nexport { TerrainWorkerLoader };\nexport var TerrainLoader = _objectSpread(_objectSpread({}, TerrainWorkerLoader), {}, {\n  parse: loadTerrain\n});\nexport var _typecheckTerrainLoader = TerrainLoader;\nexport { QuantizedMeshWorkerLoader };\nexport var QuantizedMeshLoader = _objectSpread(_objectSpread({}, QuantizedMeshWorkerLoader), {}, {\n  parseSync: parseQuantizedMesh,\n  parse: function () {\n    var _parse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(arrayBuffer, options) {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", parseQuantizedMesh(arrayBuffer, options));\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    function parse(_x, _x2) {\n      return _parse.apply(this, arguments);\n    }\n    return parse;\n  }()\n});\nexport var _typecheckQuantizedMeshLoader = QuantizedMeshLoader;","map":{"version":3,"names":["parseQuantizedMesh","loadTerrain","TerrainLoader","TerrainWorkerLoader","QuantizedMeshLoader","QuantizedMeshWorkerLoader","_objectSpread","parse","_typecheckTerrainLoader","parseSync","_parse","_asyncToGenerator","_regeneratorRuntime","mark","_callee","arrayBuffer","options","wrap","_callee$","_context","prev","next","abrupt","stop","_x","_x2","apply","arguments","_typecheckQuantizedMeshLoader"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@loaders.gl/terrain/src/index.ts"],"sourcesContent":["import type {LoaderWithParser} from '@loaders.gl/loader-utils';\nimport parseQuantizedMesh from './lib/parse-quantized-mesh';\nimport loadTerrain from './lib/parse-terrain';\n\nimport {TerrainLoader as TerrainWorkerLoader} from './terrain-loader';\nimport {QuantizedMeshLoader as QuantizedMeshWorkerLoader} from './quantized-mesh-loader';\n\n// TerrainLoader\n\nexport {TerrainWorkerLoader};\n\nexport const TerrainLoader = {\n  ...TerrainWorkerLoader,\n  parse: loadTerrain\n};\n\nexport const _typecheckTerrainLoader: LoaderWithParser = TerrainLoader; // eslint-disable-line\n\n// QuantizedMeshLoader\n\nexport {QuantizedMeshWorkerLoader};\n\n/**\n * Loader for quantized meshes\n */\nexport const QuantizedMeshLoader = {\n  ...QuantizedMeshWorkerLoader,\n  parseSync: parseQuantizedMesh,\n  parse: async (arrayBuffer, options) => parseQuantizedMesh(arrayBuffer, options)\n};\n\nexport const _typecheckQuantizedMeshLoader: LoaderWithParser = QuantizedMeshLoader;\n"],"mappings":";;;AACA,OAAOA,kBAAkB,MAAM,4BAA4B;AAC3D,OAAOC,WAAW,MAAM,qBAAqB;AAE7C,SAAQC,aAAa,IAAIC,mBAAmB,QAAO,kBAAkB;AACrE,SAAQC,mBAAmB,IAAIC,yBAAyB,QAAO,yBAAyB;AAIxF,SAAQF,mBAAmB;AAE3B,OAAO,IAAMD,aAAa,GAAAI,aAAA,CAAAA,aAAA,KACrBH,mBAAmB;EACtBI,KAAK,EAAEN;AAAA,EACR;AAED,OAAO,IAAMO,uBAAyC,GAAGN,aAAa;AAItE,SAAQG,yBAAyB;AAKjC,OAAO,IAAMD,mBAAmB,GAAAE,aAAA,CAAAA,aAAA,KAC3BD,yBAAyB;EAC5BI,SAAS,EAAET,kBAAkB;EAC7BO,KAAK;IAAA,IAAAG,MAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAE,SAAAC,QAAOC,WAAW,EAAEC,OAAO;MAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAA,OAAAF,QAAA,CAAAG,MAAA,WAAKtB,kBAAkB,CAACe,WAAW,EAAEC,OAAO;UAAA;UAAA;YAAA,OAAAG,QAAA,CAAAI,IAAA;QAAA;MAAA,GAAAT,OAAA;IAAA;IAAA,SAAAP,MAAAiB,EAAA,EAAAC,GAAA;MAAA,OAAAf,MAAA,CAAAgB,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAApB,KAAA;EAAA;AAAA,EAC/E;AAED,OAAO,IAAMqB,6BAA+C,GAAGxB,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}