{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _objectSpread from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport debug from '../debug';\nimport DrawLayersPass from '../passes/draw-layers-pass';\nimport PickLayersPass from '../passes/pick-layers-pass';\nimport { Framebuffer } from '@luma.gl/core';\nvar TRACE_RENDER_LAYERS = 'deckRenderer.renderLayers';\nvar DeckRenderer = /*#__PURE__*/function () {\n  function DeckRenderer(gl) {\n    _classCallCheck(this, DeckRenderer);\n    this.gl = gl;\n    this.layerFilter = null;\n    this.drawPickingColors = false;\n    this.drawLayersPass = new DrawLayersPass(gl);\n    this.pickLayersPass = new PickLayersPass(gl);\n    this.renderCount = 0;\n    this._needsRedraw = 'Initial render';\n    this.renderBuffers = [];\n    this.lastPostProcessEffect = null;\n  }\n  _createClass(DeckRenderer, [{\n    key: \"setProps\",\n    value: function setProps(props) {\n      if ('layerFilter' in props && this.layerFilter !== props.layerFilter) {\n        this.layerFilter = props.layerFilter;\n        this._needsRedraw = 'layerFilter changed';\n      }\n      if ('drawPickingColors' in props && this.drawPickingColors !== props.drawPickingColors) {\n        this.drawPickingColors = props.drawPickingColors;\n        this._needsRedraw = 'drawPickingColors changed';\n      }\n    }\n  }, {\n    key: \"renderLayers\",\n    value: function renderLayers(opts) {\n      var layerPass = this.drawPickingColors ? this.pickLayersPass : this.drawLayersPass;\n      opts.layerFilter = opts.layerFilter || this.layerFilter;\n      opts.effects = opts.effects || [];\n      opts.target = opts.target || Framebuffer.getDefaultFramebuffer(this.gl);\n      this._preRender(opts.effects, opts);\n      var outputBuffer = this.lastPostProcessEffect ? this.renderBuffers[0] : opts.target;\n      var renderStats = layerPass.render(_objectSpread(_objectSpread({}, opts), {}, {\n        target: outputBuffer\n      }));\n      this._postRender(opts.effects, opts);\n      this.renderCount++;\n      debug(TRACE_RENDER_LAYERS, this, renderStats, opts);\n    }\n  }, {\n    key: \"needsRedraw\",\n    value: function needsRedraw() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        clearRedrawFlags: false\n      };\n      var redraw = this._needsRedraw;\n      if (opts.clearRedrawFlags) {\n        this._needsRedraw = false;\n      }\n      return redraw;\n    }\n  }, {\n    key: \"finalize\",\n    value: function finalize() {\n      var renderBuffers = this.renderBuffers;\n      var _iterator = _createForOfIteratorHelper(renderBuffers),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var buffer = _step.value;\n          buffer.delete();\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      renderBuffers.length = 0;\n    }\n  }, {\n    key: \"_preRender\",\n    value: function _preRender(effects, opts) {\n      var lastPostProcessEffect = null;\n      var _iterator2 = _createForOfIteratorHelper(effects),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var effect = _step2.value;\n          effect.preRender(this.gl, opts);\n          if (effect.postRender) {\n            lastPostProcessEffect = effect;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      if (lastPostProcessEffect) {\n        this._resizeRenderBuffers();\n      }\n      this.lastPostProcessEffect = lastPostProcessEffect;\n    }\n  }, {\n    key: \"_resizeRenderBuffers\",\n    value: function _resizeRenderBuffers() {\n      var renderBuffers = this.renderBuffers;\n      if (renderBuffers.length === 0) {\n        renderBuffers.push(new Framebuffer(this.gl), new Framebuffer(this.gl));\n      }\n      var _iterator3 = _createForOfIteratorHelper(renderBuffers),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var buffer = _step3.value;\n          buffer.resize();\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"_postRender\",\n    value: function _postRender(effects, opts) {\n      var renderBuffers = this.renderBuffers;\n      var params = {\n        inputBuffer: renderBuffers[0],\n        swapBuffer: renderBuffers[1],\n        target: null\n      };\n      var _iterator4 = _createForOfIteratorHelper(effects),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var effect = _step4.value;\n          if (effect.postRender) {\n            if (effect === this.lastPostProcessEffect) {\n              params.target = opts.target;\n              effect.postRender(this.gl, params);\n              break;\n            }\n            var buffer = effect.postRender(this.gl, params);\n            params.inputBuffer = buffer;\n            params.swapBuffer = buffer === renderBuffers[0] ? renderBuffers[1] : renderBuffers[0];\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n  }]);\n  return DeckRenderer;\n}();\nexport { DeckRenderer as default };","map":{"version":3,"names":["debug","DrawLayersPass","PickLayersPass","Framebuffer","TRACE_RENDER_LAYERS","DeckRenderer","gl","_classCallCheck","layerFilter","drawPickingColors","drawLayersPass","pickLayersPass","renderCount","_needsRedraw","renderBuffers","lastPostProcessEffect","_createClass","key","value","setProps","props","renderLayers","opts","layerPass","effects","target","getDefaultFramebuffer","_preRender","outputBuffer","renderStats","render","_objectSpread","_postRender","needsRedraw","arguments","length","undefined","clearRedrawFlags","redraw","finalize","_iterator","_createForOfIteratorHelper","_step","s","n","done","buffer","delete","err","e","f","_iterator2","_step2","effect","preRender","postRender","_resizeRenderBuffers","push","_iterator3","_step3","resize","params","inputBuffer","swapBuffer","_iterator4","_step4","default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/core/src/lib/deck-renderer.js"],"sourcesContent":["import debug from '../debug';\nimport DrawLayersPass from '../passes/draw-layers-pass';\nimport PickLayersPass from '../passes/pick-layers-pass';\nimport {Framebuffer} from '@luma.gl/core';\n\nconst TRACE_RENDER_LAYERS = 'deckRenderer.renderLayers';\n\nexport default class DeckRenderer {\n  constructor(gl) {\n    this.gl = gl;\n    this.layerFilter = null;\n    this.drawPickingColors = false;\n    this.drawLayersPass = new DrawLayersPass(gl);\n    this.pickLayersPass = new PickLayersPass(gl);\n    this.renderCount = 0;\n    this._needsRedraw = 'Initial render';\n    this.renderBuffers = [];\n    this.lastPostProcessEffect = null;\n  }\n\n  setProps(props) {\n    if ('layerFilter' in props && this.layerFilter !== props.layerFilter) {\n      this.layerFilter = props.layerFilter;\n      this._needsRedraw = 'layerFilter changed';\n    }\n\n    if ('drawPickingColors' in props && this.drawPickingColors !== props.drawPickingColors) {\n      this.drawPickingColors = props.drawPickingColors;\n      this._needsRedraw = 'drawPickingColors changed';\n    }\n  }\n\n  /*\n    target,\n    layers,\n    viewports,\n    onViewportActive,\n    views,\n    redrawReason,\n    clearCanvas,\n    effects,\n    pass,\n    stats\n  */\n  renderLayers(opts) {\n    const layerPass = this.drawPickingColors ? this.pickLayersPass : this.drawLayersPass;\n\n    opts.layerFilter = opts.layerFilter || this.layerFilter;\n    opts.effects = opts.effects || [];\n    opts.target = opts.target || Framebuffer.getDefaultFramebuffer(this.gl);\n\n    this._preRender(opts.effects, opts);\n\n    const outputBuffer = this.lastPostProcessEffect ? this.renderBuffers[0] : opts.target;\n    const renderStats = layerPass.render({...opts, target: outputBuffer});\n\n    this._postRender(opts.effects, opts);\n\n    this.renderCount++;\n\n    debug(TRACE_RENDER_LAYERS, this, renderStats, opts);\n  }\n\n  needsRedraw(opts = {clearRedrawFlags: false}) {\n    const redraw = this._needsRedraw;\n    if (opts.clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n    return redraw;\n  }\n\n  finalize() {\n    const {renderBuffers} = this;\n    for (const buffer of renderBuffers) {\n      buffer.delete();\n    }\n    renderBuffers.length = 0;\n  }\n\n  // Private\n  _preRender(effects, opts) {\n    let lastPostProcessEffect = null;\n\n    for (const effect of effects) {\n      effect.preRender(this.gl, opts);\n      if (effect.postRender) {\n        lastPostProcessEffect = effect;\n      }\n    }\n\n    if (lastPostProcessEffect) {\n      this._resizeRenderBuffers();\n    }\n    this.lastPostProcessEffect = lastPostProcessEffect;\n  }\n\n  _resizeRenderBuffers() {\n    const {renderBuffers} = this;\n    if (renderBuffers.length === 0) {\n      renderBuffers.push(new Framebuffer(this.gl), new Framebuffer(this.gl));\n    }\n    for (const buffer of renderBuffers) {\n      buffer.resize();\n    }\n  }\n\n  _postRender(effects, opts) {\n    const {renderBuffers} = this;\n    const params = {\n      inputBuffer: renderBuffers[0],\n      swapBuffer: renderBuffers[1],\n      target: null\n    };\n    for (const effect of effects) {\n      if (effect.postRender) {\n        if (effect === this.lastPostProcessEffect) {\n          params.target = opts.target;\n          effect.postRender(this.gl, params);\n          break;\n        }\n        const buffer = effect.postRender(this.gl, params);\n        params.inputBuffer = buffer;\n        params.swapBuffer = buffer === renderBuffers[0] ? renderBuffers[1] : renderBuffers[0];\n      }\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}