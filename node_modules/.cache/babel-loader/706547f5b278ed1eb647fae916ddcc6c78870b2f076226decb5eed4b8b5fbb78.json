{"ast":null,"code":"import _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nfunction getStorage(type) {\n  try {\n    var storage = window[type];\n    var x = '__storage_test__';\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return storage;\n  } catch (e) {\n    return null;\n  }\n}\nexport var LocalStorage = /*#__PURE__*/function () {\n  function LocalStorage(id, defaultConfig) {\n    _classCallCheck(this, LocalStorage);\n    var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'sessionStorage';\n    _defineProperty(this, \"storage\", void 0);\n    _defineProperty(this, \"id\", void 0);\n    _defineProperty(this, \"config\", void 0);\n    this.storage = getStorage(type);\n    this.id = id;\n    this.config = defaultConfig;\n    this._loadConfiguration();\n  }\n  _createClass(LocalStorage, [{\n    key: \"getConfiguration\",\n    value: function getConfiguration() {\n      return this.config;\n    }\n  }, {\n    key: \"setConfiguration\",\n    value: function setConfiguration(configuration) {\n      Object.assign(this.config, configuration);\n      if (this.storage) {\n        var serialized = JSON.stringify(this.config);\n        this.storage.setItem(this.id, serialized);\n      }\n    }\n  }, {\n    key: \"_loadConfiguration\",\n    value: function _loadConfiguration() {\n      var configuration = {};\n      if (this.storage) {\n        var serializedConfiguration = this.storage.getItem(this.id);\n        configuration = serializedConfiguration ? JSON.parse(serializedConfiguration) : {};\n      }\n      Object.assign(this.config, configuration);\n      return this;\n    }\n  }]);\n  return LocalStorage;\n}();","map":{"version":3,"names":["getStorage","type","storage","window","x","setItem","removeItem","e","LocalStorage","id","defaultConfig","_classCallCheck","arguments","length","undefined","_defineProperty","config","_loadConfiguration","_createClass","key","value","getConfiguration","setConfiguration","configuration","Object","assign","serialized","JSON","stringify","serializedConfiguration","getItem","parse"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@probe.gl/log/src/utils/local-storage.ts"],"sourcesContent":["// probe.gl, MIT license\n\nfunction getStorage(type): Storage {\n  try {\n    // @ts-expect-error\n    const storage: Storage = window[type];\n    const x = '__storage_test__';\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return storage;\n  } catch (e) {\n    return null;\n  }\n}\n\n// Store keys in local storage via simple interface\nexport class LocalStorage<Configuration extends {}> {\n  storage: Storage;\n  id: string;\n  config: Required<Configuration>;\n\n  constructor(id: string, defaultConfig: Required<Configuration>, type = 'sessionStorage') {\n    this.storage = getStorage(type);\n    this.id = id;\n    this.config = defaultConfig;\n    this._loadConfiguration();\n  }\n\n  getConfiguration(): Required<Configuration> {\n    return this.config;\n  }\n\n  setConfiguration(configuration: Configuration): void {\n    Object.assign(this.config, configuration);\n    if (this.storage) {\n      const serialized = JSON.stringify(this.config);\n      this.storage.setItem(this.id, serialized);\n    }\n  }\n\n  // Get config from persistent store, if available\n  _loadConfiguration() {\n    let configuration = {};\n    if (this.storage) {\n      const serializedConfiguration = this.storage.getItem(this.id);\n      configuration = serializedConfiguration ? JSON.parse(serializedConfiguration) : {};\n    }\n    Object.assign(this.config, configuration);\n    return this;\n  }\n}\n"],"mappings":";;;AAEA,SAASA,UAATA,CAAoBC,IAApB,EAAmC;EACjC,IAAI;IAEF,IAAMC,OAAgB,GAAGC,MAAM,CAACF,IAAD,CAA/B;IACA,IAAMG,CAAC,GAAG,kBAAV;IACAF,OAAO,CAACG,OAAR,CAAgBD,CAAhB,EAAmBA,CAAnB;IACAF,OAAO,CAACI,UAAR,CAAmBF,CAAnB;IACA,OAAOF,OAAP;EACD,CAPD,CAOE,OAAOK,CAAP,EAAU;IACV,OAAO,IAAP;EACD;AACF;AAGD,WAAaC,YAAN;EAKL,SAAAA,aAAYC,EAAD,EAAaC,aAAb,EAA8E;IAAAC,eAAA,OAAAH,YAAA;IAAA,IAAzBP,IAAyB,GAAAW,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAlB,gBAAkB;IAAAG,eAAA;IAAAA,eAAA;IAAAA,eAAA;IACvF,KAAKb,OAAL,GAAeF,UAAU,CAACC,IAAD,CAAzB;IACA,KAAKQ,EAAL,GAAUA,EAAV;IACA,KAAKO,MAAL,GAAcN,aAAd;IACA,KAAKO,kBAAL;EACD;EAAAC,YAAA,CAAAV,YAAA;IAAAW,GAAA;IAAAC,KAAA,EAED,SAAAC,iBAAA,EAA4C;MAC1C,OAAO,KAAKL,MAAZ;IACD;EAAA;IAAAG,GAAA;IAAAC,KAAA,EAED,SAAAE,iBAAiBC,aAAD,EAAqC;MACnDC,MAAM,CAACC,MAAP,CAAc,KAAKT,MAAnB,EAA2BO,aAA3B;MACA,IAAI,KAAKrB,OAAT,EAAkB;QAChB,IAAMwB,UAAU,GAAGC,IAAI,CAACC,SAAL,CAAe,KAAKZ,MAApB,CAAnB;QACA,KAAKd,OAAL,CAAaG,OAAb,CAAqB,KAAKI,EAA1B,EAA8BiB,UAA9B;MACD;IACF;EAAA;IAAAP,GAAA;IAAAC,KAAA,EAGD,SAAAH,mBAAA,EAAqB;MACnB,IAAIM,aAAa,GAAG,EAApB;MACA,IAAI,KAAKrB,OAAT,EAAkB;QAChB,IAAM2B,uBAAuB,GAAG,KAAK3B,OAAL,CAAa4B,OAAb,CAAqB,KAAKrB,EAA1B,CAAhC;QACAc,aAAa,GAAGM,uBAAuB,GAAGF,IAAI,CAACI,KAAL,CAAWF,uBAAX,CAAH,GAAyC,EAAhF;MACD;MACDL,MAAM,CAACC,MAAP,CAAc,KAAKT,MAAnB,EAA2BO,aAA3B;MACA,OAAO,IAAP;IACD;EAAA;EAAA,OAAAf,YAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}