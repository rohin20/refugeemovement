{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UNWRAP_TASK = exports.DELAY_TASK = exports.ACTION_TASK = exports.GET_SAVED_MAPS_TASK = exports.LOAD_CLOUD_MAP_TASK = exports.EXPORT_FILE_TO_CLOUD_TASK = exports.LOAD_MAP_STYLE_TASK = exports.PROCESS_FILE_DATA = exports.LOAD_FILE_TASK = void 0;\nvar _tasks = _interopRequireWildcard(require(\"react-palm/tasks\"));\nvar _d3Request = require(\"d3-request\");\nvar _processors = require(\"@kepler.gl/processors\");\nvar LOAD_FILE_TASK = _tasks[\"default\"].fromPromise(function (_ref) {\n  var file = _ref.file,\n    fileCache = _ref.fileCache,\n    loaders = _ref.loaders,\n    loadOptions = _ref.loadOptions;\n  return (0, _processors.readFileInBatches)({\n    file: file,\n    fileCache: fileCache,\n    loaders: loaders,\n    loadOptions: loadOptions\n  });\n}, 'LOAD_FILE_TASK');\nexports.LOAD_FILE_TASK = LOAD_FILE_TASK;\nvar PROCESS_FILE_DATA = _tasks[\"default\"].fromPromise(_processors.processFileData, 'PROCESS_FILE_CONTENT');\nexports.PROCESS_FILE_DATA = PROCESS_FILE_DATA;\nvar LOAD_MAP_STYLE_TASK = (0, _tasks.taskCreator)(function (_ref2, success, error) {\n  var url = _ref2.url,\n    id = _ref2.id;\n  return (0, _d3Request.json)(url, function (err, result) {\n    if (err) {\n      error(err);\n    } else {\n      if (!result) {\n        error(new Error('Map style response is empty'));\n      }\n      success({\n        id: id,\n        style: result\n      });\n    }\n  });\n}, 'LOAD_MAP_STYLE_TASK');\n/**\n * task to upload file to cloud provider\n */\n\nexports.LOAD_MAP_STYLE_TASK = LOAD_MAP_STYLE_TASK;\nvar EXPORT_FILE_TO_CLOUD_TASK = _tasks[\"default\"].fromPromise(function (_ref3) {\n  var provider = _ref3.provider,\n    payload = _ref3.payload;\n  return provider.uploadMap(payload);\n}, 'EXPORT_FILE_TO_CLOUD_TASK');\nexports.EXPORT_FILE_TO_CLOUD_TASK = EXPORT_FILE_TO_CLOUD_TASK;\nvar LOAD_CLOUD_MAP_TASK = _tasks[\"default\"].fromPromise(function (_ref4) {\n  var provider = _ref4.provider,\n    payload = _ref4.payload;\n  return provider.downloadMap(payload);\n}, 'LOAD_CLOUD_MAP_TASK');\nexports.LOAD_CLOUD_MAP_TASK = LOAD_CLOUD_MAP_TASK;\nvar GET_SAVED_MAPS_TASK = _tasks[\"default\"].fromPromise(function (provider) {\n  return provider.listMaps();\n}, 'GET_SAVED_MAPS_TASK');\n/**\n *  task to dispatch a function as a task\n */\n\nexports.GET_SAVED_MAPS_TASK = GET_SAVED_MAPS_TASK;\nvar ACTION_TASK = _tasks[\"default\"].fromCallback(function (_, cb) {\n  return cb();\n}, 'ACTION_TASK');\nexports.ACTION_TASK = ACTION_TASK;\nvar DELAY_TASK = _tasks[\"default\"].fromCallback(function (delay, cb) {\n  return window.setTimeout(function () {\n    return cb();\n  }, delay);\n}, 'DELAY_TASK');\nexports.DELAY_TASK = DELAY_TASK;\nvar UNWRAP_TASK = _tasks[\"default\"].fromPromise(function (promise) {\n  return promise;\n}, 'UNWRAP');\nexports.UNWRAP_TASK = UNWRAP_TASK;","map":{"version":3,"names":["_interopRequireWildcard","require","Object","defineProperty","exports","value","UNWRAP_TASK","DELAY_TASK","ACTION_TASK","GET_SAVED_MAPS_TASK","LOAD_CLOUD_MAP_TASK","EXPORT_FILE_TO_CLOUD_TASK","LOAD_MAP_STYLE_TASK","PROCESS_FILE_DATA","LOAD_FILE_TASK","_tasks","_d3Request","_processors","fromPromise","_ref","file","fileCache","loaders","loadOptions","readFileInBatches","url","_ref2","id","json","err","result","error","Error","style","provider","_ref3","payload","uploadMap","_ref4","downloadMap","listMaps","cb","window","setTimeout","delay","promise"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/tasks/src/index.ts"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport Task, {taskCreator} from 'react-palm/tasks';\nimport {json as requestJson} from 'd3-request';\nimport {readFileInBatches, processFileData} from '@kepler.gl/processors';\n\nexport const LOAD_FILE_TASK = Task.fromPromise(\n  ({file, fileCache, loaders, loadOptions}) =>\n    readFileInBatches({file, fileCache, loaders, loadOptions}),\n  'LOAD_FILE_TASK'\n);\n\nexport const PROCESS_FILE_DATA = Task.fromPromise(\n  processFileData,\n\n  'PROCESS_FILE_CONTENT'\n);\n\nexport const LOAD_MAP_STYLE_TASK = taskCreator(\n  ({url, id}, success, error) =>\n    requestJson(url, (err, result) => {\n      if (err) {\n        error(err);\n      } else {\n        if (!result) {\n          error(new Error('Map style response is empty'));\n        }\n        success({id, style: result});\n      }\n    }),\n\n  'LOAD_MAP_STYLE_TASK'\n);\n\n/**\n * task to upload file to cloud provider\n */\nexport const EXPORT_FILE_TO_CLOUD_TASK = Task.fromPromise(\n  ({provider, payload}) => provider.uploadMap(payload),\n\n  'EXPORT_FILE_TO_CLOUD_TASK'\n);\n\nexport const LOAD_CLOUD_MAP_TASK = Task.fromPromise(\n  ({provider, payload}) => provider.downloadMap(payload),\n\n  'LOAD_CLOUD_MAP_TASK'\n);\n\nexport const GET_SAVED_MAPS_TASK = Task.fromPromise(\n  provider => provider.listMaps(),\n\n  'GET_SAVED_MAPS_TASK'\n);\n/**\n *  task to dispatch a function as a task\n */\nexport const ACTION_TASK = Task.fromCallback(\n  (_, cb) => cb(),\n\n  'ACTION_TASK'\n);\n\nexport const DELAY_TASK = Task.fromCallback(\n  (delay, cb) => window.setTimeout(() => cb(), delay),\n\n  'DELAY_TASK'\n);\n\nexport const UNWRAP_TASK = Task.fromPromise(\n  promise => promise,\n\n  'UNWRAP'\n);\n"],"mappings":";;;;;;;;;AAoBA;;AACA;;AACA;;AAtBA;AACA;AACA;AACA;;AAEA;;AAEA,IAAAA,uBAAA,GAAAC,OAAA;AAEAC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EACAC,KAAA;AACA;AACAD,OAAA,CAAAE,WAAA,GAAAF,OAAA,CAAAG,UAAA,GAAAH,OAAA,CAAAI,WAAA,GAAAJ,OAAA,CAAAK,mBAAA,GAAAL,OAAA,CAAAM,mBAAA,GAAAN,OAAA,CAAAO,yBAAA,GAAAP,OAAA,CAAAQ,mBAAA,GAAAR,OAAA,CAAAS,iBAAA,GAAAT,OAAA,CAAAU,cAAA;AAEA,IAAAC,MAAA,GAAAf,uBAAA,CAAAC,OAAA;AAEA,IAAAe,UAAA,GAAAf,OAAA;AAEA,IAAAgB,WAAA,GAAAhB,OAAA;AAAA,IAAAa,cAAA,GAAAC,MAAA,YAAAG,WAAA,WAAAC,IAAA;EAMO,IAAMC,IAAA,GAAAD,IAAA,CAAcC,IAAG;IAC1BC,SAAF,GAAEF,IAAF,CAAAE,SAAA;IAAQC,OAAA,GAARH,IAAA,CAAAG,OAAQ;IAAWC,WAAnB,GAAAJ,IAAmB,CAAAI,WAAnB;EAAA,OAA4B,IAAAN,WAA5B,CAA4BO,iBAA5B;IAAAJ,IAAA,EACEA,IAAA;IAAmBC,SAAA,EAADA,SAAA;IAAOC,OAAA,EAASA,OAAT;IAAWC,WAAA,EAAAA;EAAS;AAA3B,GAAlB,gBADF;;;;;EAWK,IAAME,GAAA,GAAAC,KAAA,CAAAD,GAAA;IACTE,EAAA,GAAFD,KAAA,CAAAC,EAAE;EAAF,WAAAX,UAAA,CAAAY,IAAA,EAAAH,GAAA,YAAAI,GAAA,EAAAC,MAAA;IAAA,IAAAD,GACE;MACEE,KAAA,CAAAF,GAAS;IACP,OAAK;MADP,KAEOC,MAAA;QACLC,KAAK,KAALC,KAAa;MACX;;QAEFL,EAAA,EAAAA,EAAQ;QAACM,KAAA,EAADH;MAAK;IAAL;EACT;AACF,GATD,qBADF;AAAA;AAeF;AACA;;;;EAEO,IAAMI,QAAA,GAAAC,KAAA,CAAAD,QAAyB;IAClCE,OAAA,GAAFD,KAAA,CAAAC,OAAE;EAAF,OAAYF,QAAZ,CAAAG,SAAY,CAAAD,OAAZ;AAAA,8BAA4C;;;EAKvC,IAAMF,QAAA,GAAAI,KAAA,CAAmBJ,QAAG;IAC/BE,OAAA,GAAFE,KAAA,CAAAF,OAAE;EAAF,OAAYF,QAAZ,CAAAK,WAAA,CAAAH,OAAA;AAAA,wBAAkC;;;EAK7B,OAAMF,QAAA,CAAAM,QAAsB;AACzB,wBAAa;AAAb;AAIV;AACA;;;;EAEO,OAAMC,EAAA;AACX;;;EAKK,OAAMC,MAAU,CAAAC,UAAG,aAAK;IAC7B,OAAeF,EAAA,EAAM;EAAY,GAAAG,KAAA,CAAM;AAAN,GAAlB,YAAf;;;EAKK,OAAMC,OAAW;AACf,WAAI"},"metadata":{},"sourceType":"script","externalDependencies":[]}