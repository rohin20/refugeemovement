{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createForOfIteratorHelper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { assert } from '../../utils/assert';\nimport GLTFScenegraph from '../../api/gltf-scenegraph';\nvar KHR_LIGHTS_PUNCTUAL = 'KHR_lights_punctual';\nexport var name = KHR_LIGHTS_PUNCTUAL;\nexport function decode(_x) {\n  return _decode.apply(this, arguments);\n}\nfunction _decode() {\n  _decode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(gltfData) {\n    var gltfScenegraph, json, extension, _iterator, _step, node, nodeExtension;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          gltfScenegraph = new GLTFScenegraph(gltfData);\n          json = gltfScenegraph.json;\n          extension = gltfScenegraph.getExtension(KHR_LIGHTS_PUNCTUAL);\n          if (extension) {\n            gltfScenegraph.json.lights = extension.lights;\n            gltfScenegraph.removeExtension(KHR_LIGHTS_PUNCTUAL);\n          }\n          _iterator = _createForOfIteratorHelper(json.nodes || []);\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              node = _step.value;\n              nodeExtension = gltfScenegraph.getObjectExtension(node, KHR_LIGHTS_PUNCTUAL);\n              if (nodeExtension) {\n                node.light = nodeExtension.light;\n              }\n              gltfScenegraph.removeObjectExtension(node, KHR_LIGHTS_PUNCTUAL);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _decode.apply(this, arguments);\n}\nexport function encode(_x2) {\n  return _encode.apply(this, arguments);\n}\nfunction _encode() {\n  _encode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(gltfData) {\n    var gltfScenegraph, json, extension, _iterator2, _step2, light, node;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          gltfScenegraph = new GLTFScenegraph(gltfData);\n          json = gltfScenegraph.json;\n          if (json.lights) {\n            extension = gltfScenegraph.addExtension(KHR_LIGHTS_PUNCTUAL);\n            assert(!extension.lights);\n            extension.lights = json.lights;\n            delete json.lights;\n          }\n          if (gltfScenegraph.json.lights) {\n            _iterator2 = _createForOfIteratorHelper(gltfScenegraph.json.lights);\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                light = _step2.value;\n                node = light.node;\n                gltfScenegraph.addObjectExtension(node, KHR_LIGHTS_PUNCTUAL, light);\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n            delete gltfScenegraph.json.lights;\n          }\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _encode.apply(this, arguments);\n}","map":{"version":3,"names":["assert","GLTFScenegraph","KHR_LIGHTS_PUNCTUAL","name","decode","_x","_decode","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","gltfData","gltfScenegraph","json","extension","_iterator","_step","node","nodeExtension","wrap","_callee$","_context","prev","next","getExtension","lights","removeExtension","_createForOfIteratorHelper","nodes","s","n","done","value","getObjectExtension","light","removeObjectExtension","err","e","f","stop","encode","_x2","_encode","_callee2","_iterator2","_step2","_callee2$","_context2","addExtension","addObjectExtension"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@loaders.gl/gltf/src/lib/extensions/deprecated/KHR_lights_punctual.ts"],"sourcesContent":["// GLTF EXTENSION: KHR_lights_punctual\n// https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n\nimport type {GLTF} from '../../types/gltf-types';\n\nimport {assert} from '../../utils/assert';\nimport GLTFScenegraph from '../../api/gltf-scenegraph';\n\nconst KHR_LIGHTS_PUNCTUAL = 'KHR_lights_punctual';\n\nexport const name = KHR_LIGHTS_PUNCTUAL;\n\nexport async function decode(gltfData: {json: GLTF}): Promise<void> {\n  const gltfScenegraph = new GLTFScenegraph(gltfData);\n  const {json} = gltfScenegraph;\n\n  // Move the light array out of the extension and remove the extension\n  const extension = gltfScenegraph.getExtension(KHR_LIGHTS_PUNCTUAL);\n  if (extension) {\n    // @ts-ignore\n    gltfScenegraph.json.lights = extension.lights;\n    gltfScenegraph.removeExtension(KHR_LIGHTS_PUNCTUAL);\n  }\n\n  // Any nodes that have the extension, add lights field pointing to light object\n  // and remove the extension\n  for (const node of json.nodes || []) {\n    const nodeExtension = gltfScenegraph.getObjectExtension(node, KHR_LIGHTS_PUNCTUAL);\n    if (nodeExtension) {\n      // @ts-ignore\n      node.light = nodeExtension.light;\n    }\n    gltfScenegraph.removeObjectExtension(node, KHR_LIGHTS_PUNCTUAL);\n  }\n}\n\n// Move the light ar ray out of the extension and remove the extension\nexport async function encode(gltfData): Promise<void> {\n  const gltfScenegraph = new GLTFScenegraph(gltfData);\n  const {json} = gltfScenegraph;\n\n  // @ts-ignore\n  if (json.lights) {\n    const extension = gltfScenegraph.addExtension(KHR_LIGHTS_PUNCTUAL);\n    // @ts-ignore\n    assert(!extension.lights);\n    // @ts-ignore\n    extension.lights = json.lights;\n    // @ts-ignore\n    delete json.lights;\n  }\n\n  // Any nodes that have lights field pointing to light object\n  // add the extension\n  // @ts-ignore\n  if (gltfScenegraph.json.lights) {\n    // @ts-ignore\n    for (const light of gltfScenegraph.json.lights) {\n      const node = light.node;\n      gltfScenegraph.addObjectExtension(node, KHR_LIGHTS_PUNCTUAL, light);\n    }\n    // @ts-ignore\n    delete gltfScenegraph.json.lights;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}