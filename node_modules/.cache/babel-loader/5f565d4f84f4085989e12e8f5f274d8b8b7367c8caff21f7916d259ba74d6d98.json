{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { log } from '@luma.gl/webgl';\nimport Display from './display';\nimport { createEnterVRButton } from './vr-button';\nvar VRDisplay = /*#__PURE__*/function (_Display) {\n  _inherits(VRDisplay, _Display);\n  var _super = _createSuper(VRDisplay);\n  function VRDisplay(props) {\n    var _this;\n    _classCallCheck(this, VRDisplay);\n    _this = _super.call(this, props);\n    _this._vrSupported = VRDisplay.isSupported();\n    if (_this._vrSupported) {\n      _this.vrFrameData = new window.VRFrameData();\n      _this.vrPresenting = false;\n      _this.vrFrame = false;\n      window.addEventListener('vrdisplaypresentchange', _this._vrDisplayPresentChange.bind(_assertThisInitialized(_this)));\n    }\n    return _this;\n  }\n  _createClass(VRDisplay, [{\n    key: \"delete\",\n    value: function _delete() {\n      _get(_getPrototypeOf(VRDisplay.prototype), \"delete\", this).call(this);\n      this._removeVRButton();\n    }\n  }, {\n    key: \"getViews\",\n    value: function getViews(options) {\n      if (this._vrSupported) {\n        this._addVRButton();\n      }\n      if (this.vrPresenting && this.vrFrame) {\n        this.vrDisplay.getFrameData(this.vrFrameData);\n        var _this$vrFrameData = this.vrFrameData,\n          leftProjectionMatrix = _this$vrFrameData.leftProjectionMatrix,\n          leftViewMatrix = _this$vrFrameData.leftViewMatrix,\n          rightProjectionMatrix = _this$vrFrameData.rightProjectionMatrix,\n          rightViewMatrix = _this$vrFrameData.rightViewMatrix;\n        var width = options.width,\n          height = options.height;\n        return [{\n          displayEye: 'left',\n          projectionMatrix: leftProjectionMatrix,\n          viewMatrix: leftViewMatrix,\n          params: {\n            viewport: [0, 0, width * 0.5, height],\n            scissor: [0, 0, width * 0.5, height],\n            scissorTest: true\n          }\n        }, {\n          displayEye: 'right',\n          projectionMatrix: rightProjectionMatrix,\n          viewMatrix: rightViewMatrix,\n          params: {\n            viewport: [width * 0.5, 0, width * 0.5, height],\n            scissor: [width * 0.5, 0, width * 0.5, height],\n            scissorTest: true\n          }\n        }];\n      }\n      return _get(_getPrototypeOf(VRDisplay.prototype), \"getViews\", this).call(this, options);\n    }\n  }, {\n    key: \"submitFrame\",\n    value: function submitFrame() {\n      if (this.vrPresenting && this.vrFrame) {\n        this.vrDisplay.submitFrame();\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"requestAnimationFrame\",\n    value: function requestAnimationFrame(renderFrame) {\n      var _this2 = this;\n      if (this.vrPresenting) {\n        this.vrDisplay.requestAnimationFrame(function () {\n          _this2.vrFrame = true;\n          renderFrame();\n          _this2.vrFrame = false;\n        });\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"_addVRButton\",\n    value: function () {\n      var _addVRButton2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _this3 = this;\n        var canvas, displays;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!this.vrButton) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 2:\n              canvas = this._getCanvas();\n              if (canvas) {\n                _context.next = 5;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 5:\n              _context.next = 7;\n              return navigator.getVRDisplays();\n            case 7:\n              displays = _context.sent;\n              if (displays && displays.length) {\n                log.info(2, 'Found VR Displays', displays)();\n                this.vrDisplay = displays[0];\n                this.vrButton = createEnterVRButton({\n                  canvas: canvas,\n                  title: \"Enter VR (\".concat(this.vrDisplay.displayName, \")\")\n                });\n                this.vrButton.onclick = function () {\n                  return _this3._startDisplay();\n                };\n              }\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function _addVRButton() {\n        return _addVRButton2.apply(this, arguments);\n      }\n      return _addVRButton;\n    }()\n  }, {\n    key: \"_getCanvas\",\n    value: function _getCanvas() {\n      return this.animationLoop.canvas || this.animationLoop.gl && this.animationLoop.gl.canvas;\n    }\n  }, {\n    key: \"_removeVRButton\",\n    value: function _removeVRButton() {\n      if (this.vrButton) {}\n    }\n  }, {\n    key: \"_startDisplay\",\n    value: function _startDisplay() {\n      this.vrDisplay.requestPresent([{\n        source: this._getCanvas()\n      }]);\n    }\n  }, {\n    key: \"_vrDisplayPresentChange\",\n    value: function _vrDisplayPresentChange() {\n      if (this.vrDisplay.isPresenting) {\n        log.info(2, 'Entering VR')();\n        this.vrPresenting = true;\n        this.vrButton.style.display = 'none';\n      } else {\n        log.info(2, 'Exiting VR')();\n        this.vrPresenting = false;\n        this.vrButton.style.display = 'block';\n      }\n    }\n  }], [{\n    key: \"isSupported\",\n    value: function isSupported() {\n      return typeof navigator !== 'undefined' && 'getVRDisplays' in navigator && 'VRFrameData' in window;\n    }\n  }]);\n  return VRDisplay;\n}(Display);\nexport { VRDisplay as default };","map":{"version":3,"names":["log","Display","createEnterVRButton","VRDisplay","_Display","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","_vrSupported","isSupported","vrFrameData","window","VRFrameData","vrPresenting","vrFrame","addEventListener","_vrDisplayPresentChange","bind","_assertThisInitialized","_createClass","key","value","_delete","_get","_getPrototypeOf","prototype","_removeVRButton","getViews","options","_addVRButton","vrDisplay","getFrameData","_this$vrFrameData","leftProjectionMatrix","leftViewMatrix","rightProjectionMatrix","rightViewMatrix","width","height","displayEye","projectionMatrix","viewMatrix","params","viewport","scissor","scissorTest","submitFrame","requestAnimationFrame","renderFrame","_this2","_addVRButton2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this3","canvas","displays","wrap","_callee$","_context","prev","next","vrButton","abrupt","_getCanvas","navigator","getVRDisplays","sent","length","info","title","concat","displayName","onclick","_startDisplay","stop","apply","arguments","animationLoop","gl","requestPresent","source","isPresenting","style","display","default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@luma.gl/experimental/src/webvr/vr-display.js"],"sourcesContent":["import {log} from '@luma.gl/webgl';\nimport Display from './display';\nimport {createEnterVRButton} from './vr-button';\n\nexport default class VRDisplay extends Display {\n  static isSupported() {\n    return (\n      typeof navigator !== 'undefined' && 'getVRDisplays' in navigator && 'VRFrameData' in window\n    );\n  }\n\n  constructor(props) {\n    super(props);\n\n    this._vrSupported = VRDisplay.isSupported();\n    if (this._vrSupported) {\n      // @ts-expect-error\n      this.vrFrameData = new window.VRFrameData();\n      this.vrPresenting = false;\n      this.vrFrame = false;\n      window.addEventListener('vrdisplaypresentchange', this._vrDisplayPresentChange.bind(this));\n    }\n  }\n\n  delete() {\n    super.delete();\n    this._removeVRButton();\n  }\n\n  getViews(options) {\n    if (this._vrSupported) {\n      this._addVRButton();\n    }\n\n    // Need both vrPresenting and vrFrame\n    // to avoid race conditions when we exit VR\n    // after we schedule an animation frame\n    if (this.vrPresenting && this.vrFrame) {\n      this.vrDisplay.getFrameData(this.vrFrameData);\n\n      const {\n        leftProjectionMatrix,\n        leftViewMatrix,\n        rightProjectionMatrix,\n        rightViewMatrix\n      } = this.vrFrameData;\n\n      const {width, height} = options;\n\n      return [\n        {\n          displayEye: 'left',\n          projectionMatrix: leftProjectionMatrix,\n          viewMatrix: leftViewMatrix,\n          params: {\n            viewport: [0, 0, width * 0.5, height],\n            scissor: [0, 0, width * 0.5, height],\n            scissorTest: true\n          }\n        },\n        {\n          displayEye: 'right',\n          projectionMatrix: rightProjectionMatrix,\n          viewMatrix: rightViewMatrix,\n          params: {\n            viewport: [width * 0.5, 0, width * 0.5, height],\n            scissor: [width * 0.5, 0, width * 0.5, height],\n            scissorTest: true\n          }\n        }\n      ];\n    }\n\n    return super.getViews(options);\n  }\n\n  submitFrame() {\n    if (this.vrPresenting && this.vrFrame) {\n      this.vrDisplay.submitFrame();\n      return true;\n    }\n\n    return false;\n  }\n\n  requestAnimationFrame(renderFrame) {\n    if (this.vrPresenting) {\n      this.vrDisplay.requestAnimationFrame(() => {\n        this.vrFrame = true;\n        renderFrame();\n        this.vrFrame = false;\n      });\n\n      return true;\n    }\n\n    return false;\n  }\n\n  // PRIVATE\n\n  // TODO: Consider resizing canvas to match vrDisplay.getEyeParameters()\n  // TODO: Maybe allow to select display?\n  async _addVRButton() {\n    if (this.vrButton) {\n      return;\n    }\n\n    const canvas = this._getCanvas();\n    if (!canvas) {\n      return;\n    }\n\n    // @ts-expect-error\n    const displays = await navigator.getVRDisplays();\n    if (displays && displays.length) {\n      log.info(2, 'Found VR Displays', displays)();\n\n      this.vrDisplay = displays[0];\n      this.vrButton = createEnterVRButton({\n        canvas,\n        title: `Enter VR (${this.vrDisplay.displayName})`\n      });\n      this.vrButton.onclick = () => this._startDisplay();\n    }\n  }\n\n  _getCanvas() {\n    return this.animationLoop.canvas || (this.animationLoop.gl && this.animationLoop.gl.canvas);\n  }\n\n  _removeVRButton() {\n    if (this.vrButton) {\n      // TODO\n    }\n  }\n\n  _startDisplay() {\n    // @ts-ignore\n    this.vrDisplay.requestPresent([\n      {\n        source: this._getCanvas()\n      }\n    ]);\n  }\n\n  _vrDisplayPresentChange() {\n    if (this.vrDisplay.isPresenting) {\n      log.info(2, 'Entering VR')();\n\n      this.vrPresenting = true;\n      this.vrButton.style.display = 'none';\n    } else {\n      log.info(2, 'Exiting VR')();\n\n      this.vrPresenting = false;\n      this.vrButton.style.display = 'block';\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}