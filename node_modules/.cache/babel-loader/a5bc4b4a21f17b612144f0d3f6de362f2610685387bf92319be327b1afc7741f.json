{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reselect = require(\"reselect\");\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\nvar _lodash = _interopRequireDefault(require(\"lodash.get\"));\nvar _constants = require(\"@kepler.gl/constants\");\nvar _newFilterPanel = _interopRequireDefault(require(\"../../filters/filter-panels/new-filter-panel\"));\nvar _timeRangeFilterPanel = _interopRequireDefault(require(\"../../filters/filter-panels/time-range-filter-panel\"));\nvar _singleSelectFilterPanel = _interopRequireDefault(require(\"../../filters/filter-panels/single-select-filter-panel\"));\nvar _multiSelectFilterPanel = _interopRequireDefault(require(\"../../filters/filter-panels/multi-select-filter-panel\"));\nvar _rangeFilterPanel = _interopRequireDefault(require(\"../../filters/filter-panels/range-filter-panel\"));\nvar _polygonFilterPanel = _interopRequireDefault(require(\"../../filters/filter-panels/polygon-filter-panel\"));\nvar _templateObject;\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar StyledFilterPanel = _styledComponents[\"default\"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  margin-bottom: 12px;\\n  border-radius: 1px;\\n\"])));\nFilterPanelFactory.deps = [_newFilterPanel[\"default\"], _timeRangeFilterPanel[\"default\"], _singleSelectFilterPanel[\"default\"], _multiSelectFilterPanel[\"default\"], _rangeFilterPanel[\"default\"], _polygonFilterPanel[\"default\"]];\nfunction FilterPanelFactory(NewFilterPanel, TimeRangeFilterPanel, SingleSelectFilterPanel, MultiSelectFilterPanel, RangeFilterPanel, PolygonFilterPanel) {\n  var _FilterPanelComponent;\n  var FilterPanelComponents = (_FilterPanelComponent = {\n    \"default\": NewFilterPanel\n  }, (0, _defineProperty2[\"default\"])(_FilterPanelComponent, _constants.FILTER_TYPES.timeRange, TimeRangeFilterPanel), (0, _defineProperty2[\"default\"])(_FilterPanelComponent, _constants.FILTER_TYPES.select, SingleSelectFilterPanel), (0, _defineProperty2[\"default\"])(_FilterPanelComponent, _constants.FILTER_TYPES.multiSelect, MultiSelectFilterPanel), (0, _defineProperty2[\"default\"])(_FilterPanelComponent, _constants.FILTER_TYPES.range, RangeFilterPanel), (0, _defineProperty2[\"default\"])(_FilterPanelComponent, _constants.FILTER_TYPES.polygon, PolygonFilterPanel), _FilterPanelComponent);\n  return /*#__PURE__*/function (_Component) {\n    (0, _inherits2[\"default\"])(FilterPanel, _Component);\n    var _super = _createSuper(FilterPanel);\n    function FilterPanel() {\n      var _this;\n      (0, _classCallCheck2[\"default\"])(this, FilterPanel);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _super.call.apply(_super, [this].concat(args));\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"fieldsSelector\", function (props) {\n        var datasetId = props.filter.dataId[0];\n        if (!datasetId) {\n          return [];\n        }\n        return (0, _lodash[\"default\"])(props, ['datasets', datasetId, 'fields'], []);\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"filterSelector\", function (props) {\n        return props.filters;\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"nameSelector\", function (props) {\n        return props.filter.name;\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"dataIdSelector\", function (props) {\n        return props.filter.dataId[0];\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"availableFieldsSelector\", (0, _reselect.createSelector)(_this.fieldsSelector, _this.filterSelector, _this.nameSelector, _this.dataIdSelector, function (fields, filters, name, dataId) {\n        return fields.filter(function (f) {\n          return f.type && f.type !== _constants.ALL_FIELD_TYPES.geojson && (name.includes(f.name) || !filters.find(function (d) {\n            return d.name.includes(f.name) && d.dataId.includes(dataId);\n          }));\n        });\n      }));\n      return _this;\n    }\n    (0, _createClass2[\"default\"])(FilterPanel, [{\n      key: \"render\",\n      value: function render() {\n        var filter = this.props.filter;\n        var type = filter.type;\n        var FilterFilterComponent = type && FilterPanelComponents[type] || FilterPanelComponents[\"default\"];\n        var allAvailableFields = this.availableFieldsSelector(this.props);\n        return /*#__PURE__*/_react[\"default\"].createElement(StyledFilterPanel, {\n          className: \"filter-panel\"\n        }, /*#__PURE__*/_react[\"default\"].createElement(FilterFilterComponent, (0, _extends2[\"default\"])({\n          allAvailableFields: allAvailableFields\n        }, this.props)));\n      }\n    }]);\n    return FilterPanel;\n  }(_react.Component);\n}\nvar _default = FilterPanelFactory;\nexports[\"default\"] = _default;","map":{"version":3,"names":["exports","_extends2","_interopRequireDefault","require","_classCallCheck2","_createClass2","_assertThisInitialized2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_defineProperty2","_taggedTemplateLiteral2","_react","_interopRequireWildcard","_constants","_newFilterPanel","_timeRangeFilterPanel","_multiSelectFilterPanel","_rangeFilterPanel","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","StyledFilterPanel","_styledComponents","div","_templateObject","FilterPanelFactory","deps","_singleSelectFilterPanel","_polygonFilterPanel","NewFilterPanel","TimeRangeFilterPanel","SingleSelectFilterPanel","MultiSelectFilterPanel","RangeFilterPanel","PolygonFilterPanel","_FilterPanelComponent","FILTER_TYPES","timeRange","select","multiSelect","range","polygon","_Component","_super","FilterPanel","_this","_len","length","args","Array","_key","concat","props","datasetId","filter","dataId","filters","name","_reselect","createSelector","fieldsSelector","filterSelector","nameSelector","dataIdSelector","fields","f","type","ALL_FIELD_TYPES","geojson","includes","find","d"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/components/src/side-panel/filter-panel/filter-panel.tsx"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {Component} from 'react';\nimport {createSelector} from 'reselect';\nimport styled from 'styled-components';\nimport get from 'lodash.get';\nimport {ALL_FIELD_TYPES, FILTER_TYPES} from '@kepler.gl/constants';\n\nimport NewFilterPanelFactory from '../../filters/filter-panels/new-filter-panel';\nimport TimeRangeFilterPanelFactory from '../../filters/filter-panels/time-range-filter-panel';\nimport SingleSelectFilterPanelFactory from '../../filters/filter-panels/single-select-filter-panel';\nimport MultiSelectFilterPanelFactory from '../../filters/filter-panels/multi-select-filter-panel';\nimport RangeFilterPanelFactory from '../../filters/filter-panels/range-filter-panel';\nimport PolygonFilterPanelFactory from '../../filters/filter-panels/polygon-filter-panel';\nimport {Field, Filter} from '@kepler.gl/types';\nimport {FilterPanelProps} from '../../filters/filter-panels/types';\nimport {Layer} from '@kepler.gl/layers';\n\nconst StyledFilterPanel = styled.div`\n  margin-bottom: 12px;\n  border-radius: 1px;\n`;\n\ninterface FilterPanelPropsImpl extends Omit<FilterPanelProps, 'allAvailableFields'> {\n  filters: Filter[];\n  layers: ReadonlyArray<Layer>;\n  isAnyFilterAnimating: boolean;\n  enlargeFilter: () => void;\n  toggleAnimation: () => void;\n  toggleFilterFeature: () => void;\n}\n\nFilterPanelFactory.deps = [\n  NewFilterPanelFactory,\n  TimeRangeFilterPanelFactory,\n  SingleSelectFilterPanelFactory,\n  MultiSelectFilterPanelFactory,\n  RangeFilterPanelFactory,\n  PolygonFilterPanelFactory\n];\n\nfunction FilterPanelFactory(\n  NewFilterPanel: ReturnType<typeof NewFilterPanelFactory>,\n  TimeRangeFilterPanel: ReturnType<typeof TimeRangeFilterPanelFactory>,\n  SingleSelectFilterPanel: ReturnType<typeof SingleSelectFilterPanelFactory>,\n  MultiSelectFilterPanel: ReturnType<typeof MultiSelectFilterPanelFactory>,\n  RangeFilterPanel: ReturnType<typeof RangeFilterPanelFactory>,\n  PolygonFilterPanel: ReturnType<typeof PolygonFilterPanelFactory>\n): React.ComponentType<FilterPanelPropsImpl> {\n  const FilterPanelComponents = {\n    default: NewFilterPanel,\n    [FILTER_TYPES.timeRange]: TimeRangeFilterPanel,\n    [FILTER_TYPES.select]: SingleSelectFilterPanel,\n    [FILTER_TYPES.multiSelect]: MultiSelectFilterPanel,\n    [FILTER_TYPES.range]: RangeFilterPanel,\n    [FILTER_TYPES.polygon]: PolygonFilterPanel\n  };\n\n  return class FilterPanel extends Component<FilterPanelPropsImpl> {\n    /* selectors */\n    fieldsSelector = (props: FilterPanelPropsImpl) => {\n      const datasetId = props.filter.dataId[0];\n      if (!datasetId) {\n        return [];\n      }\n      return get(props, ['datasets', datasetId, 'fields'], []);\n    };\n\n    filterSelector = (props: FilterPanelPropsImpl) => props.filters;\n    nameSelector = (props: FilterPanelPropsImpl) => props.filter.name;\n    dataIdSelector = (props: FilterPanelPropsImpl) => props.filter.dataId[0];\n\n    // only show current field and field that's not already been used as a filter\n    availableFieldsSelector = createSelector(\n      this.fieldsSelector,\n      this.filterSelector,\n      this.nameSelector,\n      this.dataIdSelector,\n      (fields, filters, name, dataId) =>\n        fields.filter(\n          (f: Field) =>\n            f.type &&\n            f.type !== ALL_FIELD_TYPES.geojson &&\n            (name.includes(f.name) ||\n              !filters.find(d => d.name.includes(f.name) && d.dataId.includes(dataId)))\n        )\n    );\n\n    render() {\n      const {filter} = this.props;\n\n      const {type} = filter;\n      const FilterFilterComponent =\n        (type && FilterPanelComponents[type]) || FilterPanelComponents.default;\n      const allAvailableFields = this.availableFieldsSelector(this.props);\n\n      return (\n        <StyledFilterPanel className=\"filter-panel\">\n          <FilterFilterComponent allAvailableFields={allAvailableFields} {...this.props} />\n        </StyledFilterPanel>\n      );\n    }\n  };\n}\n\nexport default FilterPanelFactory;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBAA,OAAA;AACA,IAAAC,SAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,gBAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,aAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,uBAAA,GAAAJ,sBAAA,CAAAC,OAAA;AAEA,IAAAI,UAAA,GAAAL,sBAAA,CAAAC,OAAA;AACA,IAAAK,2BAAA,GAAAN,sBAAA,CAAAC,OAAA;AACA,IAAAM,gBAAA,GAAAP,sBAAA,CAAAC,OAAA;AACA,IAAAO,gBAAA,GAAAR,sBAAA,CAAAC,OAAA;AACA,IAAAQ,uBAAA,GAAAT,sBAAA,CAAAC,OAAA;AACA,IAAAS,MAAA,GAAAC,uBAAA,CAAAV,OAAA;;;;AAKA,IAAMW,UAAA,GAAAX,OAAoB;AAc1B,IAAAY,eAAmB,GAAAb,sBACjB,CAAAC,OAAA,CADwB,8CAGxB;AAMF,IAAAa,qBAAS,GACPd,sBACA,CAAAC,OAAA,sDAEA,CAJF;;AASI,IAAAc,uBAAS,GAAAf,sBAAA,CAAAC,OAAA;AAQX,IAAAe,iBAAA,GAAAhB,sBAAA,CAAAC,OAAA;;;AAAA,SAAAgB,aAAAC,OAAA;EAAA,IAAAC,yBAAA,GAAAC,yBAAA;EAAA,gBAAAC,qBAAA;IAAA,IAAAC,KAAA,OAAAf,gBAAA,aAAAW,OAAA;MAAAK,MAAA;IAAA,IAAAJ,yBAAA;MAAA,IAAAK,SAAA,OAAAjB,gBAAA,mBAAAkB,WAAA;MAAAF,MAAA,GAAAG,OAAA,CAAAC,SAAA,CAAAL,KAAA,EAAAM,SAAA,EAAAJ,SAAA;IAAA;MAAAD,MAAA,GAAAD,KAAA,CAAAO,KAAA,OAAAD,SAAA;IAAA;IAAA,WAAAtB,2BAAA,mBAAAiB,MAAA;EAAA;AAAA;AAAA,SAAAH,0BAAA;EAAA,WAAAM,OAAA,qBAAAA,OAAA,CAAAC,SAAA;EAAA,IAAAD,OAAA,CAAAC,SAAA,CAAAG,IAAA;EAAA,WAAAC,KAAA;EAAA;IAAAC,OAAA,CAAAC,SAAA,CAAAC,OAAA,CAAAC,IAAA,CAAAT,OAAA,CAAAC,SAAA,CAAAK,OAAA;IAAA;EAAA,SAAAI,CAAA;IAAA;EAAA;AAAA;AAAA,IAAAC,iBAAA,GAAAC,iBAAA,YAAAC,GAAA,CAAAC,eAAA,KAAAA,eAAA,OAAA/B,uBAAA;AAAAgC,kBAAA,CAAAC,IAAA,IAAA7B,eAAA,aAAAC,qBAAA,aAAA6B,wBAAA,aAAA5B,uBAAA,aAAAC,iBAAA,aAAA4B,mBAAA;AAAA,SAAAH,mBAAAI,cAAA,EAAAC,oBAAA,EAAAC,uBAAA,EAAAC,sBAAA,EAAAC,gBAAA,EAAAC,kBAAA;EAAA,IAAAC,qBAAA;;IAII,SAAK,EAAAN;EACH,OAAArC,gBAAA,aAAA2C,qBAAA,EAAAvC,UAAA,CAAAwC,YAAA,CAAAC,SAAA,EAAAP,oBAAA,OAAAtC,gBAAA,aAAA2C,qBAAA,EAAAvC,UAAA,CAAAwC,YAAA,CAAAE,MAAA,EAAAP,uBAAA,OAAAvC,gBAAA,aAAA2C,qBAAA,EAAAvC,UAAA,CAAAwC,YAAA,CAAAG,WAAA,EAAAP,sBAAA,OAAAxC,gBAAA,aAAA2C,qBAAA,EAAAvC,UAAA,CAAAwC,YAAA,CAAAI,KAAA,EAAAP,gBAAA,OAAAzC,gBAAA,aAAA2C,qBAAA,EAAAvC,UAAA,CAAAwC,YAAA,CAAAK,OAAA,EAAAP,kBAAA,GAAAC,qBAAA;EACD,8BAAAO,UAAA;;IAEF,IARHC,MAAA,GAAA1C,YAAA,CAAA2C,WAAA;IAUmB,SAAAA,WAAuCA,CAAA;MAAvC,IAVnBC,KAAA;MAWiB,IAAA3D,gBAAuC,CAAN,SAAjC,SAAA0D,WAAA;MAXjB,SAAAE,IAAA,GAAAlC,SAAA,CAAAmC,MAAA,EAAAC,IAAA,OAAAC,KAAA,CAAAH,IAAA,GAAAI,IAAA,MAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA;QAYmBF,IAAA,CAAAE,IAAiC,IAAMtC,SAAO,CAAAsC,IAAO,CAApB;MAAjC;MAQfL,KAAA,GAAAF,MACE,CAAMxB,IAAC,CAAAN,KACL,CAAA8B,MAAA,SAAAQ,MAAA,CAAAH,IAAA;MAAA,IAAAxD,gBACE,CACA,YAAW,IAAAJ,uBAAgB,UAD3B,CAEC,EAAAyD,KAAK,mBACH,YAAAO,KAAa;QAAC,IAAAC,SAAM,GAAAD,KAAK,CAAAE,MAAU,CAACC,MAAlB,GAA2B;QAJlD,IAFJ,CAAAF,SAAA;UApBJ;QAAA;;MAAA;MAAA,IAAA7D,gBAAA,iBAAAJ,uBAAA,aAAAyD,KAAA,+BAAAO,KAAA;QAAA,OA8BEA,KAAA,CAAAI,OAAA;MAAS;MAAA,IAAAhE,gBAGA,UAHA,OAAAJ,uBAAA,aAAAyD,KAAA,6BAAAO,KAAA;QAIP,OAAMA,KAAA,CAAAE,MAAA,CAAAG,IAAA;MAEN;MAEA,IAAAjE,gBAAA,UACE,OAAAJ,uBAAC,WAAD,EAAAyD,KAAA,+BAAAO,KAAA;QAAmB,OAAAA,KAAS,CAACE,MAAA,CAAAC,MAAA;MAA7B;MACyB,IAAA/D,gBAAA,UAAoB,OAAAJ,uBAAA,aAAAyD,KAAA,kCAAAa,SAAA,CAAAC,cAAA,EAAAd,KAAA,CAAAe,cAAA,EAAAf,KAAA,CAAAgB,cAAA,EAAAhB,KAAA,CAAAiB,YAAA,EAAAjB,KAAA,CAAAkB,cAAA,YAAAC,MAAA,EAAAR,OAAA,EAAAC,IAAA,EAAAF,MAAA;QAA3C,OAAmES,MAAnE,CAAAV,MAFJ,WAAAW,CAAA;UAKD,OAAAA,CAAA,CAAAC,IAAA,IAAAD,CAAA,CAAAC,IAAA,KAAAtE,UAAA,CAAAuE,eAAA,CAAAC,OAAA,KAAAX,IAAA,CAAAY,QAAA,CAAAJ,CAAA,CAAAR,IAAA,MAAAD,OAAA,CAAAc,IAAA,WAAAC,CAAA;YA3CH,OAAAA,CAAA,CAAAd,IAAA,CAAAY,QAAA,CAAAJ,CAAA,CAAAR,IAAA,KAAAc,CAAA,CAAAhB,MAAA,CAAAc,QAAA,CAAAd,MAAA;UAAA;QAAiC;MA6ClC"},"metadata":{},"sourceType":"script","externalDependencies":[]}