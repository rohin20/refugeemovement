{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTickFormat = getTickFormat;\nexports.getXAxis = getXAxis;\nexports.updateAxis = updateAxis;\nexports[\"default\"] = void 0;\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _momentTimezone = _interopRequireDefault(require(\"moment-timezone\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _d3Scale = require(\"d3-scale\");\nvar _d3Selection = require(\"d3-selection\");\nvar _d3Axis = require(\"d3-axis\");\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\nvar _utils = require(\"@kepler.gl/utils\");\nvar _templateObject;\nvar MIN_TICK_WIDTH_LARGE = 80;\nvar MIN_TICK_WIDTH_SMALL = 50;\nvar HEIGHT = 30;\nvar TimeSliderContainer = _styledComponents[\"default\"].svg(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  pointer-events: none;\\n  position: absolute;\\n  top: 0;\\n  overflow: visible;\\n  margin-top: 6px;\\n\\n  .axis text {\\n    font-size: \", \";\\n    fill: \", \";\\n  }\\n\\n  .axis line,\\n  .axis path {\\n    fill: none;\\n    stroke: \", \";\\n    shape-rendering: crispEdges;\\n    stroke-width: 2;\\n  }\\n\\n  .axis .domain {\\n    display: none;\\n  }\\n\\n  .value {\\n    fill: \", \";\\n    font-size: \", \";\\n\\n    &.start {\\n      text-anchor: start;\\n    }\\n\\n    &.end {\\n      text-anchor: end;\\n    }\\n  }\\n\"])), function (props) {\n  return props.theme.axisFontSize;\n}, function (props) {\n  return props.theme.axisFontColor;\n}, function (props) {\n  return props.theme.sliderBarBgd;\n}, function (props) {\n  return props.theme.axisFontColor;\n}, function (props) {\n  return props.theme.axisFontSize;\n});\nvar TICK_FORMATS = {\n  millisecond: '.SSS',\n  second: ':ss',\n  minute: 'HH:ss',\n  hour: 'HH A',\n  day: 'ddd DD',\n  week: 'MMM DD',\n  month: 'MMM',\n  year: 'YYYY'\n}; // timezone sensitive tick formatter based on moment\n// adapted based on d3 time scale tick format https://github.com/d3/d3-scale/blob/master/src/time.js#L59\n\nfunction getTickFormat(timezone) {\n  // date is js date object\n  var toMoment = timezone ? function (date) {\n    return (0, _momentTimezone[\"default\"])(date).tz(timezone);\n  } : _momentTimezone[\"default\"];\n  var formatter = (0, _utils.datetimeFormatter)(timezone);\n  return function (date) {\n    return (toMoment(date).startOf('second') < date ? formatter(TICK_FORMATS.millisecond) : toMoment(date).startOf('minute') < date ? formatter(TICK_FORMATS.second) : toMoment(date).startOf('hour') < date ? formatter(TICK_FORMATS.minute) : toMoment(date).startOf('day') < date ? formatter(TICK_FORMATS.hour) : toMoment(date).startOf('month') < date ? toMoment(date).startOf('isoWeek') < date ? formatter(TICK_FORMATS.day) : formatter(TICK_FORMATS.week) : toMoment(date).startOf('year') < date ? formatter(TICK_FORMATS.month) : formatter(TICK_FORMATS.year))(date);\n  };\n} // create a helper function so we can test it\n\nfunction getXAxis(domain, width, isEnlarged, timezone) {\n  if (!Array.isArray(domain) || !domain.every(Number.isFinite)) {\n    return null;\n  }\n  var scale = (0, _d3Scale.scaleUtc)().domain(domain).range([0, width]);\n  if (!scale) {\n    return null;\n  }\n  var ticks = Math.floor(width / (isEnlarged ? MIN_TICK_WIDTH_LARGE : MIN_TICK_WIDTH_SMALL));\n  var tickFormat = timezone ? getTickFormat(timezone) : null;\n  var xAxis = (0, _d3Axis.axisBottom)(scale).ticks(ticks).tickSize(0).tickPadding(12);\n  if (tickFormat) {\n    xAxis.tickFormat(tickFormat);\n  }\n  return xAxis;\n}\nfunction updateAxis(xAxisRef, xAxis) {\n  if (!xAxis) {\n    return;\n  }\n  (0, _d3Selection.select)(xAxisRef.current).call(xAxis);\n}\nfunction TimeSliderMarkerFactory() {\n  var TimeSliderMarker = function TimeSliderMarker(_ref) {\n    var width = _ref.width,\n      domain = _ref.domain,\n      _ref$isEnlarged = _ref.isEnlarged,\n      isEnlarged = _ref$isEnlarged === void 0 ? true : _ref$isEnlarged,\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? HEIGHT : _ref$height,\n      timezone = _ref.timezone;\n    var xAxisRef = (0, _react.useRef)(null);\n    var xAxis = (0, _react.useMemo)(function () {\n      return getXAxis(domain, width, isEnlarged, timezone);\n    }, [domain, width, isEnlarged, timezone]);\n    (0, _react.useEffect)(function () {\n      updateAxis(xAxisRef, xAxis);\n    }, [xAxisRef, xAxis]);\n    return /*#__PURE__*/_react[\"default\"].createElement(TimeSliderContainer, {\n      className: \"time-slider-marker\",\n      width: width,\n      height: height\n    }, /*#__PURE__*/_react[\"default\"].createElement(\"g\", {\n      className: \"x axis\",\n      ref: xAxisRef,\n      transform: \"translate(0, 0)\"\n    }));\n  };\n  TimeSliderMarker.propTypes = {\n    domain: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].any).isRequired,\n    width: _propTypes[\"default\"].number.isRequired\n  };\n  return /*#__PURE__*/_react[\"default\"].memo(TimeSliderMarker);\n}\nvar _default = TimeSliderMarkerFactory;\nexports[\"default\"] = _default;","map":{"version":3,"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","getXAxis","_taggedTemplateLiteral2","_react","_momentTimezone","_propTypes","_d3Scale","_d3Selection","_d3Axis","_styledComponents","_utils","_templateObject","MIN_TICK_WIDTH_LARGE","MIN_TICK_WIDTH_SMALL","HEIGHT","TimeSliderContainer","svg","props","theme","axisFontSize","sliderBarBgd","axisFontColor","TICK_FORMATS","millisecond","hour","day","week","month","getTickFormat","timezone","date","tz","formatter","datetimeFormatter","toMoment","startOf","second","minute","year","domain","width","isEnlarged","scale","scaleUtc","range","ticks","Math","floor","tickFormat","xAxis","axisBottom","tickSize","tickPadding","updateAxis","xAxisRef","select","current","call","TimeSliderMarkerFactory","TimeSliderMarker","_ref","_ref$isEnlarged","height","_ref$height","useRef","useMemo"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/components/src/common/time-slider-marker.tsx"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {useRef, useEffect, useMemo} from 'react';\nimport moment from 'moment-timezone';\nimport PropTypes from 'prop-types';\nimport {NumberValue, scaleUtc} from 'd3-scale';\nimport {select} from 'd3-selection';\nimport {axisBottom} from 'd3-axis';\nimport styled from 'styled-components';\nimport {datetimeFormatter} from '@kepler.gl/utils';\n\nconst MIN_TICK_WIDTH_LARGE = 80;\nconst MIN_TICK_WIDTH_SMALL = 50;\nconst HEIGHT = 30;\n\nconst TimeSliderContainer = styled.svg`\n  pointer-events: none;\n  position: absolute;\n  top: 0;\n  overflow: visible;\n  margin-top: 6px;\n\n  .axis text {\n    font-size: ${props => props.theme.axisFontSize};\n    fill: ${props => props.theme.axisFontColor};\n  }\n\n  .axis line,\n  .axis path {\n    fill: none;\n    stroke: ${props => props.theme.sliderBarBgd};\n    shape-rendering: crispEdges;\n    stroke-width: 2;\n  }\n\n  .axis .domain {\n    display: none;\n  }\n\n  .value {\n    fill: ${props => props.theme.axisFontColor};\n    font-size: ${props => props.theme.axisFontSize};\n\n    &.start {\n      text-anchor: start;\n    }\n\n    &.end {\n      text-anchor: end;\n    }\n  }\n`;\n\nconst TICK_FORMATS = {\n  millisecond: '.SSS',\n  second: ':ss',\n  minute: 'HH:ss',\n  hour: 'HH A',\n  day: 'ddd DD',\n  week: 'MMM DD',\n  month: 'MMM',\n  year: 'YYYY'\n};\n\n// timezone sensitive tick formatter based on moment\n// adapted based on d3 time scale tick format https://github.com/d3/d3-scale/blob/master/src/time.js#L59\nexport function getTickFormat(timezone: string) {\n  // date is js date object\n  const toMoment = timezone ? date => moment(date).tz(timezone) : moment;\n  const formatter = datetimeFormatter(timezone);\n\n  return date =>\n    (toMoment(date).startOf('second') < date\n      ? formatter(TICK_FORMATS.millisecond)\n      : toMoment(date).startOf('minute') < date\n      ? formatter(TICK_FORMATS.second)\n      : toMoment(date).startOf('hour') < date\n      ? formatter(TICK_FORMATS.minute)\n      : toMoment(date).startOf('day') < date\n      ? formatter(TICK_FORMATS.hour)\n      : toMoment(date).startOf('month') < date\n      ? toMoment(date).startOf('isoWeek') < date\n        ? formatter(TICK_FORMATS.day)\n        : formatter(TICK_FORMATS.week)\n      : toMoment(date).startOf('year') < date\n      ? formatter(TICK_FORMATS.month)\n      : formatter(TICK_FORMATS.year))(date);\n}\n\n// create a helper function so we can test it\nexport function getXAxis(\n  domain: Date[] | NumberValue[],\n  width: number,\n  isEnlarged: boolean,\n  timezone: string\n) {\n  if (!Array.isArray(domain) || !domain.every(Number.isFinite)) {\n    return null;\n  }\n  const scale = scaleUtc()\n    .domain(domain)\n    .range([0, width]);\n  if (!scale) {\n    return null;\n  }\n\n  const ticks = Math.floor(width / (isEnlarged ? MIN_TICK_WIDTH_LARGE : MIN_TICK_WIDTH_SMALL));\n  const tickFormat = timezone ? getTickFormat(timezone) : null;\n  const xAxis = axisBottom(scale)\n    .ticks(ticks)\n    .tickSize(0)\n    .tickPadding(12);\n  if (tickFormat) {\n    xAxis.tickFormat(tickFormat);\n  }\n\n  return xAxis;\n}\n\nexport function updateAxis(xAxisRef, xAxis) {\n  if (!xAxis) {\n    return;\n  }\n\n  select(xAxisRef.current).call(xAxis);\n}\n\ninterface TimeSliderMarkerProps {\n  width: number;\n  domain: Date[] | NumberValue[];\n  isEnlarged?: boolean;\n  height?: number;\n  timezone: string;\n}\n\nfunction TimeSliderMarkerFactory() {\n  const TimeSliderMarker = ({\n    width,\n    domain,\n    isEnlarged = true,\n    height = HEIGHT,\n    timezone\n  }: TimeSliderMarkerProps) => {\n    const xAxisRef = useRef(null);\n    const xAxis = useMemo(() => getXAxis(domain, width, isEnlarged, timezone), [\n      domain,\n      width,\n      isEnlarged,\n      timezone\n    ]);\n    useEffect(() => {\n      updateAxis(xAxisRef, xAxis);\n    }, [xAxisRef, xAxis]);\n    return (\n      <TimeSliderContainer className=\"time-slider-marker\" width={width} height={height}>\n        <g className=\"x axis\" ref={xAxisRef} transform=\"translate(0, 0)\" />\n      </TimeSliderContainer>\n    );\n  };\n\n  TimeSliderMarker.propTypes = {\n    domain: PropTypes.arrayOf(PropTypes.any).isRequired,\n    width: PropTypes.number.isRequired\n  };\n\n  return React.memo(TimeSliderMarker);\n}\n\nexport default TimeSliderMarkerFactory;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}