{"ast":null,"code":"import _toConsumableArray from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport * as React from 'react';\nimport { createElement } from 'react';\nimport { inheritsFrom } from './inherits-from';\nimport { Layer, View } from '@deck.gl/core';\nimport { isComponent } from './evaluate-children';\nfunction wrapInView(node) {\n  if (typeof node === 'function') {\n    return createElement(View, {}, node);\n  }\n  if (Array.isArray(node)) {\n    return node.map(wrapInView);\n  }\n  if (isComponent(node)) {\n    if (node.type === React.Fragment) {\n      return wrapInView(node.props.children);\n    }\n    if (inheritsFrom(node.type, View)) {\n      return node;\n    }\n  }\n  return node;\n}\nexport default function extractJSXLayers(_ref) {\n  var children = _ref.children,\n    _ref$layers = _ref.layers,\n    layers = _ref$layers === void 0 ? [] : _ref$layers,\n    _ref$views = _ref.views,\n    views = _ref$views === void 0 ? null : _ref$views;\n  var reactChildren = [];\n  var jsxLayers = [];\n  var jsxViews = {};\n  React.Children.forEach(wrapInView(children), function (reactElement) {\n    if (isComponent(reactElement)) {\n      var ElementType = reactElement.type;\n      if (inheritsFrom(ElementType, Layer)) {\n        var layer = createLayer(ElementType, reactElement.props);\n        jsxLayers.push(layer);\n      } else {\n        reactChildren.push(reactElement);\n      }\n      if (inheritsFrom(ElementType, View) && ElementType !== View && reactElement.props.id) {\n        var view = new ElementType(reactElement.props);\n        jsxViews[view.id] = view;\n      }\n    } else if (reactElement) {\n      reactChildren.push(reactElement);\n    }\n  });\n  if (Object.keys(jsxViews).length > 0) {\n    if (Array.isArray(views)) {\n      views.forEach(function (view) {\n        jsxViews[view.id] = view;\n      });\n    } else if (views) {\n      jsxViews[views.id] = views;\n    }\n    views = Object.values(jsxViews);\n  }\n  layers = jsxLayers.length > 0 ? [].concat(jsxLayers, _toConsumableArray(layers)) : layers;\n  return {\n    layers: layers,\n    children: reactChildren,\n    views: views\n  };\n}\nfunction createLayer(LayerType, reactProps) {\n  var props = {};\n  var defaultProps = LayerType.defaultProps || {};\n  for (var key in reactProps) {\n    if (defaultProps[key] !== reactProps[key]) {\n      props[key] = reactProps[key];\n    }\n  }\n  return new LayerType(props);\n}","map":{"version":3,"names":["React","createElement","inheritsFrom","Layer","View","isComponent","wrapInView","node","Array","isArray","map","type","Fragment","props","children","extractJSXLayers","_ref","_ref$layers","layers","_ref$views","views","reactChildren","jsxLayers","jsxViews","Children","forEach","reactElement","ElementType","layer","createLayer","push","id","view","Object","keys","length","values","concat","_toConsumableArray","LayerType","reactProps","defaultProps","key"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/react/src/utils/extract-jsx-layers.ts"],"sourcesContent":["import * as React from 'react';\nimport {createElement} from 'react';\nimport {inheritsFrom} from './inherits-from';\nimport {Layer, View} from '@deck.gl/core';\nimport {isComponent} from './evaluate-children';\nimport type {LayersList} from '@deck.gl/core';\n\n// recursively wrap render callbacks in `View`\nfunction wrapInView(node: React.ReactNode): React.ReactNode {\n  if (typeof node === 'function') {\n    // React.Children does not traverse functions.\n    // All render callbacks must be protected under a <View>\n    // @ts-expect-error View is not a ReactJSXElement constructor. Only used as a temporary wrapper and will be removed in extractJSXLayers\n    return createElement(View, {}, node);\n  }\n  if (Array.isArray(node)) {\n    return node.map(wrapInView);\n  }\n  if (isComponent(node)) {\n    if (node.type === React.Fragment) {\n      return wrapInView(node.props.children);\n    }\n    if (inheritsFrom(node.type, View)) {\n      return node;\n    }\n  }\n  return node;\n}\n\n// extracts any deck.gl layers masquerading as react elements from props.children\nexport default function extractJSXLayers({\n  children,\n  layers = [],\n  views = null\n}: {\n  children?: React.ReactNode;\n  layers?: LayersList;\n  views?: View | View[] | null;\n}): {\n  children: React.ReactNode[];\n  layers: LayersList;\n  views: View | View[] | null;\n} {\n  const reactChildren: React.ReactNode[] = []; // extract real react elements (i.e. not deck.gl layers)\n  const jsxLayers: LayersList = []; // extracted layer from react children, will add to deck.gl layer array\n  const jsxViews: Record<string, View> = {};\n\n  // React.children\n  React.Children.forEach(wrapInView(children), reactElement => {\n    if (isComponent(reactElement)) {\n      // For some reason Children.forEach doesn't filter out `null`s\n      const ElementType = reactElement.type;\n      if (inheritsFrom(ElementType, Layer)) {\n        const layer = createLayer(ElementType, reactElement.props);\n        jsxLayers.push(layer);\n      } else {\n        reactChildren.push(reactElement);\n      }\n\n      // empty id => default view\n      if (inheritsFrom(ElementType, View) && ElementType !== View && reactElement.props.id) {\n        // @ts-ignore Cannot instantiate an abstract class (View)\n        const view = new ElementType(reactElement.props);\n        jsxViews[view.id] = view;\n      }\n    } else if (reactElement) {\n      reactChildren.push(reactElement);\n    }\n  });\n\n  // Avoid modifying views if no JSX views were found\n  if (Object.keys(jsxViews).length > 0) {\n    // If a view is specified in both views prop and JSX, use the one in views\n    if (Array.isArray(views)) {\n      views.forEach(view => {\n        jsxViews[view.id] = view;\n      });\n    } else if (views) {\n      jsxViews[views.id] = views;\n    }\n    views = Object.values(jsxViews);\n  }\n\n  // Avoid modifying layers array if no JSX layers were found\n  layers = jsxLayers.length > 0 ? [...jsxLayers, ...layers] : layers;\n\n  return {layers, children: reactChildren, views};\n}\n\nfunction createLayer(LayerType: typeof Layer, reactProps: any): Layer {\n  const props = {};\n  // Layer.defaultProps is treated as ReactElement.defaultProps and merged into react props\n  // Remove them\n  const defaultProps = LayerType.defaultProps || {};\n  for (const key in reactProps) {\n    if (defaultProps[key] !== reactProps[key]) {\n      props[key] = reactProps[key];\n    }\n  }\n  // @ts-ignore Cannot instantiate an abstract class (Layer)\n  return new LayerType(props);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}