{"ast":null,"code":"import _objectSpread from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { createTexture, destroyTexture } from '../utils/texture';\nimport { deepEqual } from '../utils/deep-equal';\nvar TYPE_DEFINITIONS = {\n  boolean: {\n    validate: function validate(value, propType) {\n      return true;\n    },\n    equal: function equal(value1, value2, propType) {\n      return Boolean(value1) === Boolean(value2);\n    }\n  },\n  number: {\n    validate: function validate(value, propType) {\n      return Number.isFinite(value) && (!('max' in propType) || value <= propType.max) && (!('min' in propType) || value >= propType.min);\n    }\n  },\n  color: {\n    validate: function validate(value, propType) {\n      return propType.optional && !value || isArray(value) && (value.length === 3 || value.length === 4);\n    },\n    equal: function equal(value1, value2, propType) {\n      return arrayEqual(value1, value2);\n    }\n  },\n  accessor: {\n    validate: function validate(value, propType) {\n      var valueType = getTypeOf(value);\n      return valueType === 'function' || valueType === getTypeOf(propType.value);\n    },\n    equal: function equal(value1, value2, propType) {\n      if (typeof value2 === 'function') {\n        return true;\n      }\n      return arrayEqual(value1, value2);\n    }\n  },\n  array: {\n    validate: function validate(value, propType) {\n      return propType.optional && !value || isArray(value);\n    },\n    equal: function equal(value1, value2, propType) {\n      return propType.compare ? arrayEqual(value1, value2) : value1 === value2;\n    }\n  },\n  object: {\n    equal: function equal(value1, value2, propType) {\n      return propType.compare ? deepEqual(value1, value2) : value1 === value2;\n    }\n  },\n  function: {\n    validate: function validate(value, propType) {\n      return propType.optional && !value || typeof value === 'function';\n    },\n    equal: function equal(value1, value2, propType) {\n      return !propType.compare || value1 === value2;\n    }\n  },\n  data: {\n    transform: function transform(value, propType, component) {\n      var dataTransform = component.props.dataTransform;\n      return dataTransform && value ? dataTransform(value) : value;\n    }\n  },\n  image: {\n    transform: function transform(value, propType, component) {\n      return createTexture(component, value);\n    },\n    release: function release(value) {\n      destroyTexture(value);\n    }\n  }\n};\nfunction arrayEqual(array1, array2) {\n  if (array1 === array2) {\n    return true;\n  }\n  if (!isArray(array1) || !isArray(array2)) {\n    return false;\n  }\n  var len = array1.length;\n  if (len !== array2.length) {\n    return false;\n  }\n  for (var i = 0; i < len; i++) {\n    if (array1[i] !== array2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\nexport function parsePropTypes(propDefs) {\n  var propTypes = {};\n  var defaultProps = {};\n  var deprecatedProps = {};\n  for (var _i = 0, _Object$entries = Object.entries(propDefs); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n      propName = _Object$entries$_i[0],\n      propDef = _Object$entries$_i[1];\n    var deprecated = propDef === null || propDef === void 0 ? void 0 : propDef.deprecatedFor;\n    if (deprecated) {\n      deprecatedProps[propName] = Array.isArray(deprecated) ? deprecated : [deprecated];\n    } else {\n      var propType = parsePropType(propName, propDef);\n      propTypes[propName] = propType;\n      defaultProps[propName] = propType.value;\n    }\n  }\n  return {\n    propTypes: propTypes,\n    defaultProps: defaultProps,\n    deprecatedProps: deprecatedProps\n  };\n}\nfunction parsePropType(name, propDef) {\n  switch (getTypeOf(propDef)) {\n    case 'object':\n      return normalizePropDefinition(name, propDef);\n    case 'array':\n      return normalizePropDefinition(name, {\n        type: 'array',\n        value: propDef,\n        compare: false\n      });\n    case 'boolean':\n      return normalizePropDefinition(name, {\n        type: 'boolean',\n        value: propDef\n      });\n    case 'number':\n      return normalizePropDefinition(name, {\n        type: 'number',\n        value: propDef\n      });\n    case 'function':\n      return normalizePropDefinition(name, {\n        type: 'function',\n        value: propDef,\n        compare: true\n      });\n    default:\n      return {\n        name: name,\n        type: 'unknown',\n        value: propDef\n      };\n  }\n}\nfunction normalizePropDefinition(name, propDef) {\n  if (!('type' in propDef)) {\n    if (!('value' in propDef)) {\n      return {\n        name: name,\n        type: 'object',\n        value: propDef\n      };\n    }\n    return _objectSpread({\n      name: name,\n      type: getTypeOf(propDef.value)\n    }, propDef);\n  }\n  return _objectSpread(_objectSpread({\n    name: name\n  }, TYPE_DEFINITIONS[propDef.type]), propDef);\n}\nfunction isArray(value) {\n  return Array.isArray(value) || ArrayBuffer.isView(value);\n}\nfunction getTypeOf(value) {\n  if (isArray(value)) {\n    return 'array';\n  }\n  if (value === null) {\n    return 'null';\n  }\n  return typeof value;\n}","map":{"version":3,"names":["createTexture","destroyTexture","deepEqual","TYPE_DEFINITIONS","boolean","validate","value","propType","equal","value1","value2","Boolean","number","Number","isFinite","max","min","color","optional","isArray","length","arrayEqual","accessor","valueType","getTypeOf","array","compare","object","function","data","transform","component","dataTransform","props","image","release","array1","array2","len","i","parsePropTypes","propDefs","propTypes","defaultProps","deprecatedProps","_i","_Object$entries","Object","entries","_Object$entries$_i","_slicedToArray","propName","propDef","deprecated","deprecatedFor","Array","parsePropType","name","normalizePropDefinition","type","_objectSpread","ArrayBuffer","isView"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/core/src/lifecycle/prop-types.ts"],"sourcesContent":["import {createTexture, destroyTexture} from '../utils/texture';\nimport {deepEqual} from '../utils/deep-equal';\n\nimport type Component from './component';\nimport type {Color, Texture} from '../types/layer-props';\n\ntype BasePropType<ValueT> = {\n  value: ValueT;\n  async?: boolean;\n  validate?: (value: any, propType: PropType) => boolean;\n  equal?: (value1: ValueT, value2: ValueT, propType: PropType) => boolean;\n};\n\n/**\n * Normalized prop type definition\n */\nexport type PropType = BasePropType<any> & {\n  type: string;\n  name: string;\n  transform?: (value: any, propType: PropType, component: Component<any>) => any;\n  release?: (value: any, propType: PropType, component: Component<any>) => void;\n};\n\ntype DefaultProp<T> =\n  | T\n  | DeprecatedProp\n  | BooleanPropType\n  | NumberPropType\n  | ColorPropType\n  | ImagePropType\n  | DataPropType<T>\n  | ArrayPropType<T>\n  | ObjectPropType<T>\n  | AccessorPropType<T>\n  | FunctionPropType<T>;\n\nexport type DefaultProps<T extends Record<string, any>> = {\n  [propName in keyof T]?: DefaultProp<Required<T>[propName]>;\n};\n\ntype BooleanPropType = BasePropType<boolean> & {\n  type: 'boolean';\n};\ntype NumberPropType = BasePropType<number> & {\n  type: 'number';\n  min?: number;\n  max?: number;\n};\ntype ColorPropType = BasePropType<Color | null> & {\n  type: 'color';\n  optional?: boolean;\n};\ntype ArrayPropType<T = any[]> = BasePropType<T> & {\n  type: 'array';\n  optional?: boolean;\n  compare?: boolean;\n};\ntype AccessorPropType<T = any> = BasePropType<T> & {\n  type: 'accessor';\n};\ntype FunctionPropType<T = Function> = BasePropType<T> & {\n  type: 'function';\n  optional?: boolean;\n  compare?: boolean;\n};\ntype DataPropType<T = any> = BasePropType<T> & {\n  type: 'data';\n};\ntype ImagePropType = BasePropType<Texture | null> & {\n  type: 'image';\n};\ntype ObjectPropType<T = any> = BasePropType<T> & {\n  type: 'object';\n  optional?: boolean;\n  compare?: boolean;\n};\ntype DeprecatedProp = {\n  deprecatedFor?: string | string[];\n};\ntype PropTypeDef =\n  | DeprecatedProp\n  | boolean\n  | BooleanPropType\n  | number\n  | NumberPropType\n  | string\n  | DataPropType\n  | number[]\n  | ColorPropType\n  | ArrayPropType\n  | AccessorPropType\n  | FunctionPropType\n  | ImagePropType\n  | ObjectPropType\n  | null;\n\nconst TYPE_DEFINITIONS = {\n  boolean: {\n    validate(value, propType: BooleanPropType) {\n      return true;\n    },\n    equal(value1, value2, propType: BooleanPropType) {\n      return Boolean(value1) === Boolean(value2);\n    }\n  },\n  number: {\n    validate(value, propType: NumberPropType) {\n      return (\n        Number.isFinite(value) &&\n        (!('max' in propType) || value <= propType.max!) &&\n        (!('min' in propType) || value >= propType.min!)\n      );\n    }\n  },\n  color: {\n    validate(value, propType: ColorPropType) {\n      return (\n        (propType.optional && !value) ||\n        (isArray(value) && (value.length === 3 || value.length === 4))\n      );\n    },\n    equal(value1, value2, propType: ColorPropType) {\n      return arrayEqual(value1, value2);\n    }\n  },\n  accessor: {\n    validate(value, propType: AccessorPropType) {\n      const valueType = getTypeOf(value);\n      return valueType === 'function' || valueType === getTypeOf(propType.value);\n    },\n    equal(value1, value2, propType: AccessorPropType) {\n      if (typeof value2 === 'function') {\n        return true;\n      }\n      return arrayEqual(value1, value2);\n    }\n  },\n  array: {\n    validate(value, propType: ArrayPropType) {\n      return (propType.optional && !value) || isArray(value);\n    },\n    equal(value1, value2, propType: ArrayPropType) {\n      return propType.compare ? arrayEqual(value1, value2) : value1 === value2;\n    }\n  },\n  object: {\n    equal(value1, value2, propType: ObjectPropType) {\n      return propType.compare ? deepEqual(value1, value2) : value1 === value2;\n    }\n  },\n  function: {\n    validate(value, propType: FunctionPropType) {\n      return (propType.optional && !value) || typeof value === 'function';\n    },\n    equal(value1, value2, propType: FunctionPropType) {\n      return !propType.compare || value1 === value2;\n    }\n  },\n  data: {\n    transform: (value, propType: DataPropType, component) => {\n      const {dataTransform} = component.props;\n      return dataTransform && value ? dataTransform(value) : value;\n    }\n  },\n  image: {\n    transform: (value, propType: ImagePropType, component) => {\n      return createTexture(component, value);\n    },\n    release: value => {\n      destroyTexture(value);\n    }\n  }\n} as const;\n\nfunction arrayEqual(array1, array2) {\n  if (array1 === array2) {\n    return true;\n  }\n  if (!isArray(array1) || !isArray(array2)) {\n    return false;\n  }\n  const len = array1.length;\n  if (len !== array2.length) {\n    return false;\n  }\n  for (let i = 0; i < len; i++) {\n    if (array1[i] !== array2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function parsePropTypes(propDefs: Record<string, PropTypeDef>): {\n  propTypes: Record<string, PropType>;\n  defaultProps: Record<string, any>;\n  deprecatedProps: Record<string, string[]>;\n} {\n  const propTypes = {};\n  const defaultProps = {};\n  const deprecatedProps = {};\n\n  for (const [propName, propDef] of Object.entries(propDefs)) {\n    const deprecated = (propDef as DeprecatedProp)?.deprecatedFor;\n    if (deprecated) {\n      deprecatedProps[propName] = Array.isArray(deprecated) ? deprecated : [deprecated];\n    } else {\n      const propType = parsePropType(propName, propDef);\n      propTypes[propName] = propType;\n      defaultProps[propName] = propType.value;\n    }\n  }\n  return {propTypes, defaultProps, deprecatedProps};\n}\n\n// Parses one property definition entry. Either contains:\n// * a valid prop type object ({type, ...})\n// * or just a default value, in which case type and name inference is used\nfunction parsePropType(name: string, propDef: PropTypeDef): PropType {\n  switch (getTypeOf(propDef)) {\n    case 'object':\n      return normalizePropDefinition(name, propDef);\n\n    case 'array':\n      return normalizePropDefinition(name, {type: 'array', value: propDef, compare: false});\n\n    case 'boolean':\n      return normalizePropDefinition(name, {type: 'boolean', value: propDef});\n\n    case 'number':\n      return normalizePropDefinition(name, {type: 'number', value: propDef});\n\n    case 'function':\n      // return guessFunctionType(name, propDef);\n      return normalizePropDefinition(name, {type: 'function', value: propDef, compare: true});\n\n    default:\n      return {name, type: 'unknown', value: propDef};\n  }\n}\n\nfunction normalizePropDefinition(name, propDef): PropType {\n  if (!('type' in propDef)) {\n    if (!('value' in propDef)) {\n      // If no type and value this object is likely the value\n      return {name, type: 'object', value: propDef};\n    }\n    return {name, type: getTypeOf(propDef.value), ...propDef};\n  }\n  return {name, ...TYPE_DEFINITIONS[propDef.type], ...propDef};\n}\n\nfunction isArray(value: any): boolean {\n  return Array.isArray(value) || ArrayBuffer.isView(value);\n}\n\n// improved version of javascript typeof that can distinguish arrays and null values\nfunction getTypeOf(value: any): string {\n  if (isArray(value)) {\n    return 'array';\n  }\n  if (value === null) {\n    return 'null';\n  }\n  return typeof value;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}