{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.provideInitialState = provideInitialState;\nexports[\"default\"] = void 0;\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _actions = require(\"@kepler.gl/actions\");\nvar _reduxActions = require(\"redux-actions\");\nvar _core = require(\"./core\");\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\n\n// INITIAL_STATE\nvar initialCoreState = {};\nfunction provideInitialState(initialState) {\n  var coreReducer = (0, _core.coreReducerFactory)(initialState);\n  var handleRegisterEntry = function handleRegisterEntry(state, _ref) {\n    var _ref$payload = _ref.payload,\n      id = _ref$payload.id,\n      mint = _ref$payload.mint,\n      mapboxApiAccessToken = _ref$payload.mapboxApiAccessToken,\n      mapboxApiUrl = _ref$payload.mapboxApiUrl,\n      mapStylesReplaceDefault = _ref$payload.mapStylesReplaceDefault,\n      initialUiState = _ref$payload.initialUiState;\n    // by default, always create a mint state even if the same id already exist\n    // if state.id exist and mint=false, keep the existing state\n    var previousState = state[id] && mint === false ? state[id] : undefined;\n    return _objectSpread(_objectSpread({}, state), {}, (0, _defineProperty2[\"default\"])({}, id, coreReducer(previousState, (0, _actions.keplerGlInit)({\n      mapboxApiAccessToken: mapboxApiAccessToken,\n      mapboxApiUrl: mapboxApiUrl,\n      mapStylesReplaceDefault: mapStylesReplaceDefault,\n      initialUiState: initialUiState\n    }))));\n  };\n  var handleDeleteEntry = function handleDeleteEntry(state, _ref2) {\n    var id = _ref2.payload;\n    return Object.keys(state).reduce(function (accu, curr) {\n      return _objectSpread(_objectSpread({}, accu), curr === id ? {} : (0, _defineProperty2[\"default\"])({}, curr, state[curr]));\n    }, {});\n  };\n  var handleRenameEntry = function handleRenameEntry(state, _ref4) {\n    var _ref4$payload = _ref4.payload,\n      oldId = _ref4$payload.oldId,\n      newId = _ref4$payload.newId;\n    return Object.keys(state).reduce(function (accu, curr) {\n      return _objectSpread(_objectSpread({}, accu), (0, _defineProperty2[\"default\"])({}, curr === oldId ? newId : curr, state[curr]));\n    }, {});\n  };\n  return function () {\n    var _handlers;\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialCoreState;\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n    // update child states\n    Object.keys(state).forEach(function (id) {\n      var updateItemState = coreReducer(state[id], (0, _actions._actionFor)(id, action));\n      state = (0, _actions._updateProperty)(state, id, updateItemState);\n    }); // perform additional state reducing (e.g. switch action.type etc...)\n\n    var handlers = (_handlers = {}, (0, _defineProperty2[\"default\"])(_handlers, _actions.ActionTypes.REGISTER_ENTRY, handleRegisterEntry), (0, _defineProperty2[\"default\"])(_handlers, _actions.ActionTypes.DELETE_ENTRY, handleDeleteEntry), (0, _defineProperty2[\"default\"])(_handlers, _actions.ActionTypes.RENAME_ENTRY, handleRenameEntry), _handlers); // TODO: Understand why the Lint sees an error here, while the IDE does not.\n    // @ts-expect-error\n\n    return (0, _reduxActions.handleActions)(handlers, initialCoreState)(state, action);\n  };\n}\nvar _keplerGlReducer = provideInitialState(initialCoreState);\nfunction mergeInitialState() {\n  var saved = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var provided = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var keys = ['mapState', 'mapStyle', 'visState', 'uiState']; // shallow merge each reducer\n\n  return keys.reduce(function (accu, key) {\n    return _objectSpread(_objectSpread({}, accu), saved[key] && provided[key] ? (0, _defineProperty2[\"default\"])({}, key, _objectSpread(_objectSpread({}, saved[key]), provided[key])) : (0, _defineProperty2[\"default\"])({}, key, saved[key] || provided[key] || {}));\n  }, {});\n}\nfunction decorate(target) {\n  var savedInitialState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var targetInitialState = savedInitialState;\n  /**\n   * Returns a kepler.gl reducer that will also pass each action through additional reducers spiecified.\n   * The parameter should be either a reducer map or a reducer function.\n   * The state passed into the additional action handler is the instance state.\n   * It will include all the subreducers `visState`, `uiState`, `mapState` and `mapStyle`.\n   * `.plugin` is only meant to be called once when mounting the keplerGlReducer to the store.\n   * **Note** This is an advanced option to give you more freedom to modify the internal state of the kepler.gl instance.\n   * You should only use this to adding additional actions instead of replacing default actions.\n   *\n   * @mixin keplerGlReducer.plugin\n   * @memberof keplerGlReducer\n   * @param {Object|Function} customReducer - A reducer map or a reducer\n   * @public\n   * @example\n   * const myKeplerGlReducer = keplerGlReducer\n   *  .plugin({\n   *    // 1. as reducer map\n   *    HIDE_AND_SHOW_SIDE_PANEL: (state, action) => ({\n   *      ...state,\n   *      uiState: {\n   *        ...state.uiState,\n   *        readOnly: !state.uiState.readOnly\n   *      }\n   *    })\n   *  })\n   * .plugin(handleActions({\n   *   // 2. as reducer\n   *   'HIDE_MAP_CONTROLS': (state, action) => ({\n   *     ...state,\n   *     uiState: {\n   *       ...state.uiState,\n   *       mapControls: hiddenMapControl\n   *     }\n   *   })\n   * }, {}));\n   */\n\n  target.plugin = function plugin(customReducer) {\n    var _this = this;\n    if ((0, _typeof2[\"default\"])(customReducer) === 'object') {\n      // if only provided a reducerMap, wrap it in a reducer\n      customReducer = (0, _reduxActions.handleActions)(customReducer, {});\n    } // use 'function' keyword to enable 'this'\n\n    return decorate(function () {\n      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var nextState = _this(state, action); // for each entry in the staten\n\n      Object.keys(nextState).forEach(function (id) {\n        // update child states\n        nextState = (0, _actions._updateProperty)(nextState, id, customReducer(nextState[id], (0, _actions._actionFor)(id, action)));\n      });\n      return nextState;\n    });\n  };\n  /**\n   * Return a reducer that initiated with custom initial state.\n   * The parameter should be an object mapping from `subreducer` name to custom subreducer state,\n   * which will be shallow **merged** with default initial state.\n   *\n   * Default subreducer state:\n   *  - [`visState`](./vis-state.md#INITIAL_VIS_STATE)\n   *  - [`mapState`](./map-state.md#INITIAL_MAP_STATE)\n   *  - [`mapStyle`](./map-style.md#INITIAL_MAP_STYLE)\n   *  - [`uiState`](./ui-state.md#INITIAL_UI_STATE)\n   * @mixin keplerGlReducer.initialState\n   * @memberof keplerGlReducer\n   * @param {Object} iniSt - custom state to be merged with default initial state\n   * @public\n   * @example\n   * const myKeplerGlReducer = keplerGlReducer\n   *  .initialState({\n   *    uiState: {readOnly: true}\n   *  });\n   */\n\n  target.initialState = function initialState(iniSt) {\n    var merged = mergeInitialState(targetInitialState, iniSt);\n    var targetReducer = provideInitialState(merged);\n    return decorate(targetReducer, merged);\n  };\n  return target;\n}\n/**\n * Kepler.gl reducer to be mounted to your store. You can mount `keplerGlReducer` at property `keplerGl`, if you choose\n * to mount it at another address e.g. `foo` you will need to specify it when you mount `KeplerGl` component in your app with `getState: state => state.foo`\n * @public\n * @example\n * import keplerGlReducer from 'kepler.gl/reducers';\n * import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\n * import {taskMiddleware} from 'react-palm/tasks';\n *\n * const initialState = {};\n * const reducers = combineReducers({\n *   // <-- mount kepler.gl reducer in your app\n *   keplerGl: keplerGlReducer,\n *\n *   // Your other reducers here\n *   app: appReducer\n * });\n *\n * // using createStore\n * export default createStore(reducer, initialState, applyMiddleware(taskMiddleware));\n */\n\nvar keplerGlReducer = decorate(_keplerGlReducer);\nvar _default = keplerGlReducer;\nexports[\"default\"] = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","provideInitialState","_typeof2","_interopRequireDefault","require","_defineProperty2","_actions","_reduxActions","_core","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","initialCoreState","initialState","handleRegisterEntry","state","_ref","_ref$payload","payload","id","mint","mapboxApiAccessToken","mapStylesReplaceDefault","initialUiState","previousState","undefined","coreReducer","keplerGlInit","mapboxApiUrl","handleDeleteEntry","_ref2","reduce","accu","curr","handleRenameEntry","_ref4","_ref4$payload","newId","oldId","_handlers","updateItemState","_actionFor","action","_updateProperty","handlers","ActionTypes","REGISTER_ENTRY","DELETE_ENTRY","RENAME_ENTRY","handleActions","_keplerGlReducer","mergeInitialState","saved","provided","decorate","savedInitialState","targetInitialState","plugin","customReducer","_this","nextState","iniSt","merged","targetReducer"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/reducers/src/root.ts"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {ActionTypes, keplerGlInit, _actionFor, _updateProperty} from '@kepler.gl/actions';\nimport {handleActions} from 'redux-actions';\n\nimport {coreReducerFactory} from './core';\n\n// INITIAL_STATE\nconst initialCoreState = {};\n\nexport function provideInitialState(initialState) {\n  const coreReducer = coreReducerFactory(initialState);\n\n  const handleRegisterEntry = (\n    state,\n    {\n      payload: {\n        id,\n        mint,\n        mapboxApiAccessToken,\n        mapboxApiUrl,\n        mapStylesReplaceDefault,\n        initialUiState\n      }\n    }\n  ) => {\n    // by default, always create a mint state even if the same id already exist\n    // if state.id exist and mint=false, keep the existing state\n    const previousState = state[id] && mint === false ? state[id] : undefined;\n\n    return {\n      // register entry to kepler.gl passing in mapbox config to mapStyle\n      ...state,\n      [id]: coreReducer(\n        previousState,\n        keplerGlInit({mapboxApiAccessToken, mapboxApiUrl, mapStylesReplaceDefault, initialUiState})\n      )\n    };\n  };\n\n  const handleDeleteEntry = (state, {payload: id}) =>\n    Object.keys(state).reduce(\n      (accu, curr) => ({\n        ...accu,\n        ...(curr === id ? {} : {[curr]: state[curr]})\n      }),\n      {}\n    );\n\n  const handleRenameEntry = (state, {payload: {oldId, newId}}) =>\n    Object.keys(state).reduce(\n      (accu, curr) => ({\n        ...accu,\n        ...{[curr === oldId ? newId : curr]: state[curr]}\n      }),\n      {}\n    );\n\n  return (state = initialCoreState, action) => {\n    // update child states\n    Object.keys(state).forEach(id => {\n      const updateItemState = coreReducer(state[id], _actionFor(id, action));\n      state = _updateProperty(state, id, updateItemState);\n    });\n\n    // perform additional state reducing (e.g. switch action.type etc...)\n    const handlers = {\n      [ActionTypes.REGISTER_ENTRY]: handleRegisterEntry,\n      [ActionTypes.DELETE_ENTRY]: handleDeleteEntry,\n      [ActionTypes.RENAME_ENTRY]: handleRenameEntry\n    };\n\n    // TODO: Understand why the Lint sees an error here, while the IDE does not.\n    // @ts-expect-error\n    return handleActions(handlers, initialCoreState)(state, action);\n  };\n}\n\nconst _keplerGlReducer = provideInitialState(initialCoreState);\n\nfunction mergeInitialState(saved = {}, provided = {}) {\n  const keys = ['mapState', 'mapStyle', 'visState', 'uiState'];\n\n  // shallow merge each reducer\n  return keys.reduce(\n    (accu, key) => ({\n      ...accu,\n      ...(saved[key] && provided[key]\n        ? {[key]: {...saved[key], ...provided[key]}}\n        : {[key]: saved[key] || provided[key] || {}})\n    }),\n    {}\n  );\n}\n\nfunction decorate(target, savedInitialState = {}) {\n  const targetInitialState = savedInitialState;\n\n  /**\n   * Returns a kepler.gl reducer that will also pass each action through additional reducers spiecified.\n   * The parameter should be either a reducer map or a reducer function.\n   * The state passed into the additional action handler is the instance state.\n   * It will include all the subreducers `visState`, `uiState`, `mapState` and `mapStyle`.\n   * `.plugin` is only meant to be called once when mounting the keplerGlReducer to the store.\n   * **Note** This is an advanced option to give you more freedom to modify the internal state of the kepler.gl instance.\n   * You should only use this to adding additional actions instead of replacing default actions.\n   *\n   * @mixin keplerGlReducer.plugin\n   * @memberof keplerGlReducer\n   * @param {Object|Function} customReducer - A reducer map or a reducer\n   * @public\n   * @example\n   * const myKeplerGlReducer = keplerGlReducer\n   *  .plugin({\n   *    // 1. as reducer map\n   *    HIDE_AND_SHOW_SIDE_PANEL: (state, action) => ({\n   *      ...state,\n   *      uiState: {\n   *        ...state.uiState,\n   *        readOnly: !state.uiState.readOnly\n   *      }\n   *    })\n   *  })\n   * .plugin(handleActions({\n   *   // 2. as reducer\n   *   'HIDE_MAP_CONTROLS': (state, action) => ({\n   *     ...state,\n   *     uiState: {\n   *       ...state.uiState,\n   *       mapControls: hiddenMapControl\n   *     }\n   *   })\n   * }, {}));\n   */\n  target.plugin = function plugin(customReducer) {\n    if (typeof customReducer === 'object') {\n      // if only provided a reducerMap, wrap it in a reducer\n      customReducer = handleActions(customReducer, {});\n    }\n\n    // use 'function' keyword to enable 'this'\n    return decorate((state = {}, action = {}) => {\n      let nextState = this(state, action);\n\n      // for each entry in the staten\n      Object.keys(nextState).forEach(id => {\n        // update child states\n        nextState = _updateProperty(\n          nextState,\n          id,\n          customReducer(nextState[id], _actionFor(id, action))\n        );\n      });\n\n      return nextState;\n    });\n  };\n\n  /**\n   * Return a reducer that initiated with custom initial state.\n   * The parameter should be an object mapping from `subreducer` name to custom subreducer state,\n   * which will be shallow **merged** with default initial state.\n   *\n   * Default subreducer state:\n   *  - [`visState`](./vis-state.md#INITIAL_VIS_STATE)\n   *  - [`mapState`](./map-state.md#INITIAL_MAP_STATE)\n   *  - [`mapStyle`](./map-style.md#INITIAL_MAP_STYLE)\n   *  - [`uiState`](./ui-state.md#INITIAL_UI_STATE)\n   * @mixin keplerGlReducer.initialState\n   * @memberof keplerGlReducer\n   * @param {Object} iniSt - custom state to be merged with default initial state\n   * @public\n   * @example\n   * const myKeplerGlReducer = keplerGlReducer\n   *  .initialState({\n   *    uiState: {readOnly: true}\n   *  });\n   */\n  target.initialState = function initialState(iniSt) {\n    const merged = mergeInitialState(targetInitialState, iniSt);\n    const targetReducer = provideInitialState(merged);\n\n    return decorate(targetReducer, merged);\n  };\n\n  return target;\n}\n\n/**\n * Kepler.gl reducer to be mounted to your store. You can mount `keplerGlReducer` at property `keplerGl`, if you choose\n * to mount it at another address e.g. `foo` you will need to specify it when you mount `KeplerGl` component in your app with `getState: state => state.foo`\n * @public\n * @example\n * import keplerGlReducer from 'kepler.gl/reducers';\n * import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\n * import {taskMiddleware} from 'react-palm/tasks';\n *\n * const initialState = {};\n * const reducers = combineReducers({\n *   // <-- mount kepler.gl reducer in your app\n *   keplerGl: keplerGlReducer,\n *\n *   // Your other reducers here\n *   app: appReducer\n * });\n *\n * // using createStore\n * export default createStore(reducer, initialState, applyMiddleware(taskMiddleware));\n */\nconst keplerGlReducer = decorate(_keplerGlReducer);\nexport default keplerGlReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}