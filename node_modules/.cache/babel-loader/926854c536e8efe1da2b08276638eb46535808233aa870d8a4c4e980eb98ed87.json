{"ast":null,"code":"import _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { COORDINATE_SYSTEM, LayerExtension, log } from '@deck.gl/core';\nimport mask from './shader-module';\nvar defaultProps = {\n  maskId: ''\n};\nvar MaskExtension = /*#__PURE__*/function (_LayerExtension) {\n  _inherits(MaskExtension, _LayerExtension);\n  var _super = _createSuper(MaskExtension);\n  function MaskExtension() {\n    _classCallCheck(this, MaskExtension);\n    return _super.apply(this, arguments);\n  }\n  _createClass(MaskExtension, [{\n    key: \"getShaders\",\n    value: function getShaders() {\n      var maskByInstance = ('instancePositions' in this.getAttributeManager().attributes);\n      if ('maskByInstance' in this.props) {\n        maskByInstance = Boolean(this.props.maskByInstance);\n      }\n      this.state.maskByInstance = maskByInstance;\n      return {\n        modules: [mask]\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(_ref) {\n      var uniforms = _ref.uniforms,\n        context = _ref.context,\n        moduleParameters = _ref.moduleParameters;\n      uniforms.mask_maskByInstance = this.state.maskByInstance;\n      var _this$props$maskId = this.props.maskId,\n        maskId = _this$props$maskId === void 0 ? '' : _this$props$maskId;\n      var maskChannels = moduleParameters.maskChannels;\n      var viewport = context.viewport;\n      if (maskChannels && maskChannels[maskId]) {\n        var _maskChannels$maskId = maskChannels[maskId],\n          index = _maskChannels$maskId.index,\n          bounds = _maskChannels$maskId.bounds,\n          fromCoordinateOrigin = _maskChannels$maskId.coordinateOrigin;\n        var fromCoordinateSystem = maskChannels[maskId].coordinateSystem;\n        uniforms.mask_enabled = true;\n        uniforms.mask_channel = index;\n        if (fromCoordinateSystem === COORDINATE_SYSTEM.DEFAULT) {\n          fromCoordinateSystem = viewport.isGeospatial ? COORDINATE_SYSTEM.LNGLAT : COORDINATE_SYSTEM.CARTESIAN;\n        }\n        var opts = {\n          modelMatrix: null,\n          fromCoordinateOrigin: fromCoordinateOrigin,\n          fromCoordinateSystem: fromCoordinateSystem\n        };\n        var bl = this.projectPosition([bounds[0], bounds[1], 0], opts);\n        var tr = this.projectPosition([bounds[2], bounds[3], 0], opts);\n        uniforms.mask_bounds = [bl[0], bl[1], tr[0], tr[1]];\n      } else {\n        if (maskId) {\n          log.warn(\"Could not find a mask layer with id: \".concat(maskId))();\n        }\n        uniforms.mask_enabled = false;\n      }\n    }\n  }]);\n  return MaskExtension;\n}(LayerExtension);\nexport { MaskExtension as default };\n_defineProperty(MaskExtension, \"defaultProps\", defaultProps);\n_defineProperty(MaskExtension, \"extensionName\", 'MaskExtension');","map":{"version":3,"names":["COORDINATE_SYSTEM","LayerExtension","log","mask","defaultProps","maskId","MaskExtension","_LayerExtension","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","getShaders","maskByInstance","getAttributeManager","attributes","props","Boolean","state","modules","draw","_ref","uniforms","context","moduleParameters","mask_maskByInstance","_this$props$maskId","maskChannels","viewport","_maskChannels$maskId","index","bounds","fromCoordinateOrigin","coordinateOrigin","fromCoordinateSystem","coordinateSystem","mask_enabled","mask_channel","DEFAULT","isGeospatial","LNGLAT","CARTESIAN","opts","modelMatrix","bl","projectPosition","tr","mask_bounds","warn","concat","default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/extensions/src/mask/mask.ts"],"sourcesContent":["import {COORDINATE_SYSTEM, LayerExtension, log} from '@deck.gl/core';\nimport mask from './shader-module';\n\nimport type {Layer} from '@deck.gl/core';\n\nconst defaultProps = {\n  maskId: ''\n};\n\nexport type MaskExtensionProps = {\n  /**\n   * Id of the layer that defines the mask. The mask layer must use the prop `operation: 'mask'`.\n   * Masking is disabled if `maskId` is empty or no valid mask layer with the specified id is found.\n   */\n  maskId?: string;\n  /**\n   * controls whether an object is clipped by its anchor (usually defined by an accessor called `getPosition`, e.g. icon, scatterplot) or by its geometry (e.g. path, polygon).\n   * If not specified, it is automatically deduced from the layer.\n   */\n  maskByInstance?: boolean;\n};\n\n/** Allows layers to show/hide objects by a geofence. */\nexport default class MaskExtension extends LayerExtension {\n  static defaultProps = defaultProps;\n  static extensionName = 'MaskExtension';\n\n  getShaders(this: Layer<MaskExtensionProps>): any {\n    // Infer by geometry if 'maskByInstance' prop isn't explictly set\n    let maskByInstance = 'instancePositions' in this.getAttributeManager()!.attributes;\n    // Users can override by setting the `maskByInstance` prop\n    if ('maskByInstance' in this.props) {\n      maskByInstance = Boolean(this.props.maskByInstance);\n    }\n    this.state.maskByInstance = maskByInstance;\n\n    return {\n      modules: [mask]\n    };\n  }\n\n  /* eslint-disable camelcase */\n  draw(this: Layer<MaskExtensionProps>, {uniforms, context, moduleParameters}: any) {\n    uniforms.mask_maskByInstance = this.state.maskByInstance;\n    const {maskId = ''} = this.props;\n    const {maskChannels} = moduleParameters;\n    const {viewport} = context;\n    if (maskChannels && maskChannels[maskId]) {\n      const {index, bounds, coordinateOrigin: fromCoordinateOrigin} = maskChannels[maskId];\n      let {coordinateSystem: fromCoordinateSystem} = maskChannels[maskId];\n      uniforms.mask_enabled = true;\n      uniforms.mask_channel = index;\n\n      if (fromCoordinateSystem === COORDINATE_SYSTEM.DEFAULT) {\n        fromCoordinateSystem = viewport.isGeospatial\n          ? COORDINATE_SYSTEM.LNGLAT\n          : COORDINATE_SYSTEM.CARTESIAN;\n      }\n      const opts = {modelMatrix: null, fromCoordinateOrigin, fromCoordinateSystem};\n      const bl = this.projectPosition([bounds[0], bounds[1], 0], opts);\n      const tr = this.projectPosition([bounds[2], bounds[3], 0], opts);\n      uniforms.mask_bounds = [bl[0], bl[1], tr[0], tr[1]];\n    } else {\n      if (maskId) {\n        log.warn(`Could not find a mask layer with id: ${maskId}`)();\n      }\n      uniforms.mask_enabled = false;\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}