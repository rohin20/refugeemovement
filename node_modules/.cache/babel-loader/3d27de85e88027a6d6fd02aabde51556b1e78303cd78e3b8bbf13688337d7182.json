{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTextOffsetByRadius = getTextOffsetByRadius;\nexports.formatTextLabelData = exports.textLabelAccessor = exports.defaultPadding = void 0;\nvar _viewportMercatorProject = require(\"viewport-mercator-project\");\nvar _utils = require(\"@kepler.gl/utils\");\nvar _lodash = _interopRequireDefault(require(\"lodash.uniq\"));\nvar defaultPadding = 20;\nexports.defaultPadding = defaultPadding;\nfunction getTextOffsetByRadius(radiusScale, getRadius, mapState) {\n  return function (textLabel) {\n    var distanceScale = (0, _viewportMercatorProject.getDistanceScales)(mapState);\n    var xMult = textLabel.anchor === 'middle' ? 0 : textLabel.anchor === 'start' ? 1 : -1;\n    var yMult = textLabel.alignment === 'center' ? 0 : textLabel.alignment === 'bottom' ? 1 : -1;\n    var sizeOffset = textLabel.alignment === 'center' ? 0 : textLabel.alignment === 'bottom' ? textLabel.size : textLabel.size;\n    var pixelRadius = radiusScale * distanceScale.pixelsPerMeter[0];\n    var padding = defaultPadding;\n    return typeof getRadius === 'function' ? function (d) {\n      return [xMult * (getRadius(d) * pixelRadius + padding), yMult * (getRadius(d) * pixelRadius + padding + sizeOffset)];\n    } : [xMult * (getRadius * pixelRadius + padding), yMult * (getRadius * pixelRadius + padding + sizeOffset)];\n  };\n}\nvar textLabelAccessor = function textLabelAccessor(textLabel) {\n  return function (dc) {\n    return function (d) {\n      var val = textLabel.field.valueAccessor(d);\n      return (0, _utils.notNullorUndefined)(val) ? String(val) : '';\n    };\n  };\n};\nexports.textLabelAccessor = textLabelAccessor;\nvar formatTextLabelData = function formatTextLabelData(_ref) {\n  var textLabel = _ref.textLabel,\n    triggerChanged = _ref.triggerChanged,\n    oldLayerData = _ref.oldLayerData,\n    data = _ref.data,\n    dataContainer = _ref.dataContainer;\n  return textLabel.map(function (tl, i) {\n    if (!tl.field) {\n      // if no field selected,\n      return {\n        getText: null,\n        characterSet: []\n      };\n    }\n    var getText = textLabelAccessor(tl)(dataContainer);\n    var characterSet;\n    if (!triggerChanged[\"getLabelCharacterSet-\".concat(i)] && oldLayerData && oldLayerData.textLabels && oldLayerData.textLabels[i]) {\n      characterSet = oldLayerData.textLabels[i].characterSet;\n    } else {\n      var allLabels = tl.field ? data.map(getText) : [];\n      characterSet = (0, _lodash[\"default\"])(allLabels.join(''));\n    }\n    return {\n      characterSet: characterSet,\n      getText: getText\n    };\n  });\n};\nexports.formatTextLabelData = formatTextLabelData;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","getTextOffsetByRadius","formatTextLabelData","textLabelAccessor","defaultPadding","_viewportMercatorProject","_utils","_lodash","textLabel","distanceScale","getDistanceScales","mapState","xMult","anchor","yMult","alignment","sizeOffset","size","pixelRadius","radiusScale","pixelsPerMeter","padding","getRadius","d","dc","val","field","valueAccessor","notNullorUndefined","String","_ref","triggerChanged","oldLayerData","data","dataContainer","map","tl","i","getText","characterSet","textLabels","allLabels","join"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/layers/src/layer-text-label.ts"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {getDistanceScales} from 'viewport-mercator-project';\nimport {notNullorUndefined} from '@kepler.gl/utils';\nimport uniq from 'lodash.uniq';\n\nexport const defaultPadding = 20;\n\nexport function getTextOffsetByRadius(radiusScale, getRadius, mapState) {\n  return textLabel => {\n    const distanceScale = getDistanceScales(mapState);\n    const xMult = textLabel.anchor === 'middle' ? 0 : textLabel.anchor === 'start' ? 1 : -1;\n    const yMult = textLabel.alignment === 'center' ? 0 : textLabel.alignment === 'bottom' ? 1 : -1;\n\n    const sizeOffset =\n      textLabel.alignment === 'center'\n        ? 0\n        : textLabel.alignment === 'bottom'\n        ? textLabel.size\n        : textLabel.size;\n\n    const pixelRadius = radiusScale * distanceScale.pixelsPerMeter[0];\n    const padding = defaultPadding;\n\n    return typeof getRadius === 'function'\n      ? d => [\n          xMult * (getRadius(d) * pixelRadius + padding),\n          yMult * (getRadius(d) * pixelRadius + padding + sizeOffset)\n        ]\n      : [\n          xMult * (getRadius * pixelRadius + padding),\n          yMult * (getRadius * pixelRadius + padding + sizeOffset)\n        ];\n  };\n}\n\nexport const textLabelAccessor = textLabel => dc => d => {\n  const val = textLabel.field.valueAccessor(d);\n  return notNullorUndefined(val) ? String(val) : '';\n};\n\nexport const formatTextLabelData = ({\n  textLabel,\n  triggerChanged,\n  oldLayerData,\n  data,\n  dataContainer\n}) => {\n  return textLabel.map((tl, i) => {\n    if (!tl.field) {\n      // if no field selected,\n      return {\n        getText: null,\n        characterSet: []\n      };\n    }\n\n    const getText = textLabelAccessor(tl)(dataContainer);\n    let characterSet;\n\n    if (\n      !triggerChanged[`getLabelCharacterSet-${i}`] &&\n      oldLayerData &&\n      oldLayerData.textLabels &&\n      oldLayerData.textLabels[i]\n    ) {\n      characterSet = oldLayerData.textLabels[i].characterSet;\n    } else {\n      const allLabels = tl.field ? data.map(getText) : [];\n      characterSet = uniq(allLabels.join(''));\n    }\n\n    return {\n      characterSet,\n      getText\n    };\n  });\n};\n"],"mappings":";;;;;;;;;;AAoBA;;AACA;;AACA;;AAtBA;AACA;AACA;;AAEA;;AAEA,IAAAA,sBAAA,GAAAC,OAAA;AAEAC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EACAC,KAAA;AACA;AACAD,OAAA,CAAAE,qBAAA,GAAAA,qBAAA;AACAF,OAAA,CAAAG,mBAAA,GAAAH,OAAA,CAAAI,iBAAA,GAAAJ,OAAA,CAAAK,cAAA;AAEA,IAAAC,wBAAA,GAAAT,OAAA;AAEA,IAAAU,MAAA,GAAAV,OAAA;AAEA,IAAAW,OAAA,GAAAZ,sBAAA,CAAAC,OAAA;AAAA,IAAAQ,cAAA;AAMOL,OAAM,CAAAK,cAAiB,GAAvBA,cAAA;;EAEA,OAAS,UAAAI,SAAA,EAAT;IACL,IAAAC,aAAO,OAASJ,wBAAI,CAAAK,iBAAA,EAAAC,QAAA;IAClB,IAAMC,KAAA,GAAAJ,SAAgB,CAAAK,MAAA,oBAAAL,SAAA,CAAAK,MAAA,KAAkB,OAAlB,GAAtB;IACA,IAAMC,KAAK,GAAGN,SAAS,CAACO,SAAV,KAAqB,QAAW,GAAhC,CAAoC,GAAAP,SAAU,CAAAO,SAAW,aAAc,GAArF;IACA,IAAMC,UAAQ,GAAAR,SAAU,CAAAO,SAAc,aAAxB,GAAuC,IAAAP,SAAU,CAAAO,SAAc,aAAxB,GAAwCP,SAA7F,CAAAS,IAAA,GAAAT,SAAA,CAAAS,IAAA;IAEA,IAAMC,WAAU,GACdC,WAAU,GAAAV,aAAc,CAAAW,cAEpB;IAIN,IAAMC,OAAA,GAAAjB,cAAc;IACpB,OAAM,OAAUkB,SAAA,KAAhB,uBAAAC,CAAA;MAEA,OAAO,CAAAX,KAAO,IAAAU,SAAc,CAAAC,CAAA,IAAAL,WACxB,GAAAG,OAAC,GAAAP,KAAA,IAAAQ,SAAA,CAAAC,CAAA,IAAAL,WAAA,GAAAG,OAAA,GAAAL,UAAA;IAAA,KAAAJ,KACC,IAAAU,SAAS,GAAAJ,WAAe,GAAAG,OAAf,CAA6B,EAAAP,KAAjC,IACLQ,SAAS,GAAAJ,WAAe,GAAAG,OAAA,GAAfL,UAAA,CAAuC;EAFjD;AAQN;;EAGI,OAAM,UAAAQ,EAAiB;IAAY,OAAI,UAAED,CAAA;MAAA,IAAAE,GAAI,GAAAjB,SAAK,CAAAkB,KAAA,CAAAC,aAAA,CAAAJ,CAAA;MACvD,OAAS,IAAGjB,MAAA,CAAAsB,kBAAgB,EAAAH,GAAhB,CAAZ,GAAAI,MAAA,CAAAJ,GAAA;IACA;EACD;AAH+C;;;EAKzC,IAAMjB,SAAA,GAAAsB,IAAA,CAAmBtB,SAAG;IACjCuB,cAKI,GALJD,IAAA,CAAAC,cAKI;IAJJC,YAAA,GAIIF,IAAA,CAAAE,YAJJ;IACAC,IAAA,GAAAH,IAAA,CAGIG,IAAA;IAFJC,aAAA,GAEIJ,IAAA,CAAAI,aAAA;EAAA,OADJ1B,SAAA,CACI2B,GAAA,WADJC,EAAA,EAAAC,CAAA,EACI;IACJ,KAAOD,EAAA,CAAAV,KAAA,EAAU;MACf;MACE;QACAY,OAAO;QACLC,YAAS,EADJ;MAEL;IAFK;;IAMT,IAAMA,YAAU;;MAGhBA,YACG,GAAAP,YAAc,CAAAQ,UAAA,CAAAH,CAAA,EAAAE,YAAf;IAKA;MANF,IAAAE,SAOO,GAAAL,EAAA,CAAAV,KAAA,GAAAO,IAAA,CAAAE,GAAA,CAAAG,OAAA;MACLC,YAAM,GAAS,CAAG,GAAGhC,OAAH,CAAW,SAAS,GAAAkC,SAAW,CAAjDC,IAAA;IACA;;MAGFH,YAAO,EAAAA,YAAA;MACLD,OAAA,EAAAA;IACA;EAFK;AAIR"},"metadata":{},"sourceType":"script","externalDependencies":[]}