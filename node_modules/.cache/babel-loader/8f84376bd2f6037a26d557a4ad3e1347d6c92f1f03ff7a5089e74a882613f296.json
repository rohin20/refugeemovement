{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LegendRow = exports[\"default\"] = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\nvar _reselect = require(\"reselect\");\nvar _d3Format = require(\"d3-format\");\nvar _moment = _interopRequireDefault(require(\"moment\"));\nvar _constants = require(\"@kepler.gl/constants\");\nvar _utils = require(\"@kepler.gl/utils\");\nvar _templateObject;\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar ROW_H = 10;\nvar GAP = 4;\nvar RECT_W = 20;\nvar StyledLegend = _styledComponents[\"default\"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  \", \";\\n\\n  max-height: 150px;\\n  overflow-y: auto;\\n\\n  svg {\\n    text {\\n      font-size: 9px;\\n      fill: \", \";\\n    }\\n  }\\n\"])), function (props) {\n  return props.theme.sidePanelScrollBar;\n}, function (props) {\n  return props.theme.textColor;\n});\nvar defaultFormat = function defaultFormat(d) {\n  return d;\n};\nvar getTimeLabelFormat = function getTimeLabelFormat(domain) {\n  var formatter = (0, _utils.getTimeWidgetHintFormatter)(domain);\n  return function (val) {\n    return _moment[\"default\"].utc(val).format(formatter);\n  };\n};\nvar getNumericLabelFormat = function getNumericLabelFormat(domain) {\n  var diff = domain[1] - domain[0];\n  if (diff < 10) {\n    return (0, _d3Format.format)('.2f');\n  }\n  return (0, _d3Format.format)('.1f');\n};\nvar getQuantLabelFormat = function getQuantLabelFormat(domain, fieldType) {\n  // quant scale can only be assigned to linear Fields: real, timestamp, integer\n  return fieldType === _constants.ALL_FIELD_TYPES.timestamp ? getTimeLabelFormat(domain) : !fieldType ? defaultFormat : getNumericLabelFormat(domain);\n};\nvar getOrdinalLegends = function getOrdinalLegends(scale) {\n  var domain = scale.domain();\n  return {\n    data: domain.map(scale),\n    labels: domain\n  };\n};\nvar getQuantLegends = function getQuantLegends(scale, labelFormat) {\n  if (typeof scale.invertExtent !== 'function') {\n    // only quantile, quantize, threshold scale has invertExtent method\n    return {\n      data: [],\n      labels: []\n    };\n  }\n  var labels = scale.range().map(function (d) {\n    var invert = scale.invertExtent(d);\n    return \"\".concat(labelFormat(invert[0]), \" to \").concat(labelFormat(invert[1]));\n  });\n  return {\n    data: scale.range(),\n    labels: labels\n  };\n};\nvar ColorLegend = /*#__PURE__*/function (_Component) {\n  (0, _inherits2[\"default\"])(ColorLegend, _Component);\n  var _super = _createSuper(ColorLegend);\n  function ColorLegend() {\n    var _this;\n    (0, _classCallCheck2[\"default\"])(this, ColorLegend);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"domainSelector\", function (props) {\n      return props.domain;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"rangeSelector\", function (props) {\n      return props.range;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"labelFormatSelector\", function (props) {\n      return props.labelFormat;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"scaleTypeSelector\", function (props) {\n      return props.scaleType;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"fieldTypeSelector\", function (props) {\n      return props.fieldType;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"legendsSelector\", (0, _reselect.createSelector)(_this.domainSelector, _this.rangeSelector, _this.scaleTypeSelector, _this.labelFormatSelector, _this.fieldTypeSelector, function (domain, range, scaleType, labelFormat, fieldType) {\n      var empty = {\n        data: [],\n        labels: []\n      };\n      if (!range) {\n        return empty;\n      }\n      if (range.colorLegends) {\n        return {\n          data: Object.keys(range.colorLegends),\n          labels: Object.values(range.colorLegends)\n        };\n      } else if (Array.isArray(range.colorMap)) {\n        return {\n          data: range.colorMap.map(function (cm) {\n            return cm[1];\n          }),\n          labels: range.colorMap.map(function (cm) {\n            return cm[0];\n          })\n        };\n      } else if (Array.isArray(range.colors)) {\n        if (!domain || !scaleType) {\n          return empty;\n        }\n        var scaleFunction = _constants.SCALE_FUNC[scaleType]; // color scale can only be quantize, quantile or ordinal\n        // @ts-ignore fix d3 scale\n\n        var scale = scaleFunction().domain(domain).range(range.colors);\n        if (scaleType === _constants.SCALE_TYPES.ordinal) {\n          return getOrdinalLegends(scale);\n        }\n        var formatLabel = labelFormat || getQuantLabelFormat(scale.domain(), fieldType);\n        return getQuantLegends(scale, formatLabel);\n      }\n      return empty;\n    }));\n    return _this;\n  }\n  (0, _createClass2[\"default\"])(ColorLegend, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        width = _this$props.width,\n        _this$props$displayLa = _this$props.displayLabel,\n        displayLabel = _this$props$displayLa === void 0 ? true : _this$props$displayLa;\n      var legends = this.legendsSelector(this.props);\n      var height = legends.data.length * (ROW_H + GAP);\n      return /*#__PURE__*/_react[\"default\"].createElement(StyledLegend, null, /*#__PURE__*/_react[\"default\"].createElement(\"svg\", {\n        width: width,\n        height: height\n      }, legends.data.map(function (color, idx) {\n        return /*#__PURE__*/_react[\"default\"].createElement(LegendRow, {\n          key: idx,\n          label: legends.labels[idx],\n          displayLabel: displayLabel,\n          color: color,\n          idx: idx\n        });\n      })));\n    }\n  }]);\n  return ColorLegend;\n}(_react.Component);\nexports[\"default\"] = ColorLegend;\nvar LegendRow = function LegendRow(_ref) {\n  var _ref$label = _ref.label,\n    label = _ref$label === void 0 ? '' : _ref$label,\n    displayLabel = _ref.displayLabel,\n    color = _ref.color,\n    idx = _ref.idx;\n  return /*#__PURE__*/_react[\"default\"].createElement(\"g\", {\n    transform: \"translate(0, \".concat(idx * (ROW_H + GAP), \")\")\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"rect\", {\n    width: RECT_W,\n    height: ROW_H,\n    style: {\n      fill: color\n    }\n  }), /*#__PURE__*/_react[\"default\"].createElement(\"text\", {\n    x: RECT_W + 8,\n    y: ROW_H - 1\n  }, displayLabel ? label.toString() : ''));\n};\nexports.LegendRow = LegendRow;","map":{"version":3,"names":["value","exports","LegendRow","_classCallCheck2","_interopRequireDefault","require","_createClass2","_assertThisInitialized2","_inherits2","_possibleConstructorReturn2","_react","_interopRequireWildcard","_styledComponents","_reselect","_d3Format","_moment","_constants","_utils","_templateObject","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","GAP","RECT_W","StyledLegend","div","_taggedTemplateLiteral2","props","theme","sidePanelScrollBar","d","getTimeLabelFormat","domain","val","utc","format","formatter","getNumericLabelFormat","diff","getQuantLabelFormat","fieldType","ALL_FIELD_TYPES","timestamp","defaultFormat","getOrdinalLegends","scale","data","map","labels","ColorLegend","args","_key","_this","_super","concat","_defineProperty2","labelFormat","scaleType","createSelector","domainSelector","rangeSelector","scaleTypeSelector","labelFormatSelector","fieldTypeSelector","range","empty","colorLegends","Object","keys","Array","isArray","colorMap","cm","scaleFunction","SCALE_FUNC","colors","SCALE_TYPES","ordinal","formatLabel","getQuantLegends","key","width","height","legends","length","ROW_H","createElement","color","idx","label","displayLabel","Component"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/components/src/common/color-legend.tsx"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {Component} from 'react';\nimport styled from 'styled-components';\nimport {createSelector} from 'reselect';\nimport {format} from 'd3-format';\nimport moment from 'moment';\nimport {SCALE_TYPES, SCALE_FUNC, ALL_FIELD_TYPES} from '@kepler.gl/constants';\nimport {getTimeWidgetHintFormatter} from '@kepler.gl/utils';\n\nconst ROW_H = 10;\nconst GAP = 4;\nconst RECT_W = 20;\n\nconst StyledLegend = styled.div`\n  ${props => props.theme.sidePanelScrollBar};\n\n  max-height: 150px;\n  overflow-y: auto;\n\n  svg {\n    text {\n      font-size: 9px;\n      fill: ${props => props.theme.textColor};\n    }\n  }\n`;\n\nconst defaultFormat = d => d;\n\nconst getTimeLabelFormat = domain => {\n  const formatter = getTimeWidgetHintFormatter(domain);\n  return val => moment.utc(val).format(formatter);\n};\n\nconst getNumericLabelFormat = domain => {\n  const diff = domain[1] - domain[0];\n\n  if (diff < 10) {\n    return format('.2f');\n  }\n\n  return format('.1f');\n};\n\nconst getQuantLabelFormat = (domain, fieldType) => {\n  // quant scale can only be assigned to linear Fields: real, timestamp, integer\n  return fieldType === ALL_FIELD_TYPES.timestamp\n    ? getTimeLabelFormat(domain)\n    : !fieldType\n    ? defaultFormat\n    : getNumericLabelFormat(domain);\n};\n\nconst getOrdinalLegends = scale => {\n  const domain = scale.domain();\n  return {\n    data: domain.map(scale),\n    labels: domain\n  };\n};\n\nconst getQuantLegends = (scale, labelFormat) => {\n  if (typeof scale.invertExtent !== 'function') {\n    // only quantile, quantize, threshold scale has invertExtent method\n    return {\n      data: [],\n      labels: []\n    };\n  }\n\n  const labels = scale.range().map(d => {\n    const invert = scale.invertExtent(d);\n    return `${labelFormat(invert[0])} to ${labelFormat(invert[1])}`;\n  });\n\n  return {\n    data: scale.range(),\n    labels\n  };\n};\n\ntype RangeType = {\n  colorMap?: [string, string][];\n  colorLegends?: {[key: string]: string};\n  colors: string[];\n};\n\ninterface ColorLegendProps {\n  width: number;\n  scaleType?: string;\n  domain?: any[] | object;\n  fieldType?: string | null;\n  range?: RangeType;\n  labelFormat?: Function;\n  displayLabel?: boolean;\n}\n\nexport default class ColorLegend extends Component<ColorLegendProps> {\n  domainSelector = props => props.domain;\n  rangeSelector = props => props.range;\n  labelFormatSelector = props => props.labelFormat;\n  scaleTypeSelector = props => props.scaleType;\n  fieldTypeSelector = props => props.fieldType;\n\n  legendsSelector = createSelector(\n    this.domainSelector,\n    this.rangeSelector,\n    this.scaleTypeSelector,\n    this.labelFormatSelector,\n    this.fieldTypeSelector,\n    (domain, range, scaleType, labelFormat, fieldType) => {\n      const empty = {\n        data: [],\n        labels: []\n      };\n      if (!range) {\n        return empty;\n      }\n      if (range.colorLegends) {\n        return {\n          data: Object.keys(range.colorLegends),\n          labels: Object.values(range.colorLegends)\n        };\n      } else if (Array.isArray(range.colorMap)) {\n        return {\n          data: range.colorMap.map(cm => cm[1]),\n          labels: range.colorMap.map(cm => cm[0])\n        };\n      } else if (Array.isArray(range.colors)) {\n        if (!domain || !scaleType) {\n          return empty;\n        }\n\n        const scaleFunction = SCALE_FUNC[scaleType];\n        // color scale can only be quantize, quantile or ordinal\n        // @ts-ignore fix d3 scale\n        const scale = scaleFunction()\n          .domain(domain)\n          .range(range.colors);\n\n        if (scaleType === SCALE_TYPES.ordinal) {\n          return getOrdinalLegends(scale);\n        }\n\n        const formatLabel = labelFormat || getQuantLabelFormat(scale.domain(), fieldType);\n\n        return getQuantLegends(scale, formatLabel);\n      }\n      return empty;\n    }\n  );\n\n  render() {\n    const {width, displayLabel = true} = this.props;\n\n    const legends = this.legendsSelector(this.props);\n    const height = legends.data.length * (ROW_H + GAP);\n\n    return (\n      <StyledLegend>\n        <svg width={width} height={height}>\n          {legends.data.map((color, idx) => (\n            <LegendRow\n              key={idx}\n              label={legends.labels[idx]}\n              displayLabel={displayLabel}\n              color={color}\n              idx={idx}\n            />\n          ))}\n        </svg>\n      </StyledLegend>\n    );\n  }\n}\n\nexport const LegendRow = ({label = '', displayLabel, color, idx}) => (\n  <g transform={`translate(0, ${idx * (ROW_H + GAP)})`}>\n    <rect width={RECT_W} height={ROW_H} style={{fill: color}} />\n    <text x={RECT_W + 8} y={ROW_H - 1}>\n      {displayLabel ? label.toString() : ''}\n    </text>\n  </g>\n);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;EAoBAA,KAAA;;AACAC,OAAA,CAAAC,SAAA,GAAAD,OAAA;AACA,IAAAE,gBAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,aAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,uBAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,UAAA,GAAAJ,sBAAA,CAAAC,OAAA;AACA,IAAAI,2BAAA,GAAAL,sBAAA,CAAAC,OAAA;;;;AAEA,IAAMK,MAAK,GAAGC,uBAAd,CAAAN,OAAA;AAEA,IAAMO,iBAAN,GAAAR,sBAAA,CAAAC,OAAA;AAEA,IAAMQ,SAAA,GAAYR,OAAG;AACZ,IAQKS,SAAA,GAAAT,OAAK;AAAA,IATnBU,OAAA,GAAAX,sBAAA,CAAAC,OAAA;AAcA,IAAMW,UAAA,GAAaX,OAAG,uBAAC;AAAA,IAAvBY,MAAA,GAAAZ,OAAA;AAEA,IAAMa,eAAA;AAEJ,SAAOC,aAAGC,OAAA;EAAA,IAAAC,yBAAA,GAAAC,yBAAA;EAAA,gBAAAC,qBAAA;IAAA,IAAAC,KAAA,OAAAC,gBAAA,aAAAL,OAAA;MAAAM,MAAA;IAAA,IAAAL,yBAAA;MAAA,IAAAM,SAAA,OAAAF,gBAAA,mBAAAG,WAAA;MAAAF,MAAA,GAAAG,OAAA,CAAAC,SAAA,CAAAN,KAAA,EAAAO,SAAA,EAAAJ,SAAA;IAAA;MAAAD,MAAA,GAAAF,KAAA,CAAAQ,KAAA,OAAAD,SAAA;IAAA;IAAA,WAAAtB,2BAAA,mBAAAiB,MAAA;EAAA;AAAA;AAAA,SAAVJ,0BAAA;EAAA,WAAAO,OAAA,qBAAAA,OAAA,CAAAC,SAAA;EAAA,IAAAD,OAAA,CAAAC,SAAA,CAAAG,IAAA;EAAA,WAAAC,KAAA;EAAA;IAAAC,OAAA,CAAAC,SAAA,CAAAC,OAAA,CAAAC,IAAA,CAAAT,OAAA,CAAAC,SAAA,CAAAK,OAAA;IAAA;EAAA,SAAAI,CAAA;IAAA;EAAA;AAAA;;AAGF,IAAMC,GAAA;AACJ,IAAAC,MAAU,GAAG;AAEb,IAAAC,YAAA,GAAe9B,iBAAA,YAAA+B,GAAA,CAAAzB,eAAA,KAAAA,eAAA,OAAA0B,uBAAA,oKAAAC,KAAA;EACb,OAAAA,KAAO,CAAAC,KAAA,CAAAC,kBAAP;AACD,aAAAF,KAAA;;AAED;;EAGF,OAAMG,CAAA;AACJ;AAMD,IAPDC,kBAAA,YAAAA,mBAAAC,MAAA;;EASA,OAAM,UAAAC,GAAiB,EAAG;IACxB,OAAMpC,OAAS,WAAf,CAAAqC,GAAA,CAAAD,GAAA,EAAAE,MAAA,CAAAC,SAAA;EACA;AACE;AADK,IAAPC,qBAAA,YAAAA,sBAAAL,MAAA;EAFF,IAAAM,IAAA,GAAAN,MAAA,MAAAA,MAAA;EAQA,IAAMM,IAAA;IACJ,OAAI,EAAO,EAAA1C,SAAM,CAAAuC,MAAb,OAA8B;EAChC;EAEE,QAAI,GAAEvC,SADD,CAAAuC,MAAA;AAEL;AAEH,IAAAI,mBAAA,YAAAA,oBAAAP,MAAA,EAAAQ,SAAA;;EAED,OAAMA,SAAS,KAAM1C,UAAY,CAAA2C,eAAK,CAAAC,SAAA,GAAAX,kBAAA,CAAAC,MAAA,KAAAQ,SAAA,GAAAG,aAAA,GAAAN,qBAAA,CAAAL,MAAA;AACpC;AAED,IAHDY,iBAAA,YAAAA,kBAAAC,KAAA;EAKA,IAAAb,MAAO,GAAAa,KAAA,CAAAb,MAAA;EACL,OAAI;IACJc,IAAA,EAAMd,MAAN,CAAAe,GAAA,CAAAF,KAAA;IAFFG,MAAA,EAAAhB;EAdF;;;;;;;;;;;;;;;;IAqCwBgB,MAAA,EAAAA;EAAA;;AACD,IAAAC,W;;EACM,I;EACF,SAAAA,WAAUA,CAAA;IAAV,I;IACA,IAAAhE,gBAAU,UAAV,SAAAgE,WAAA;;MASrBC,IAAM,CAAAC,IAAK,IAAGtC,SAAA,CAAAsC,IAAA;IACZ;IADYC,KAAd,GAAAC,MAAA,CAAAjC,IAAA,CAAAN,KAAA,CAAAuC,MAAA,SAAAC,MAAA,CAAAJ,IAAA;;MAIA,OAAKvB,KAAO,CAAAK,MAAA;IACV;IACD,IAAAuB,gBAAA,iBAAAlE,uBAAA,aAAA+D,KAAA,8BAAAzB,KAAA;;IACD;IACE,IAAA4B,gBAAO,iBAAAlE,uBAAA,aAAA+D,KAAA,oCAAAzB,KAAA;MACL,OAAAA,KAAM,CAAA6B,WAAY;IAClB;IAFK,IAAAD,gBAAP,iBAAAlE,uBAAA,aAAA+D,KAAA,kCAAAzB,KAAA;MAID,OAAMA,KAAI,CAAA8B,SAAM;IACf;IACE,IAAAF,gBAAY,UAAN,CAAmB,MAAAlE,uBAAE,aAAA+D,KAAA,kCAAAzB,KAAA;MAAA,OAAAA,KAAA,CAAIa,SAAJ;IAAA;IAC3B,IAAAe,gBAAc,UAAS,GAAI,IAAAlE,uBAAE,aAAA+D,KAAA,0BAAAzD,SAAA,CAAA+D,cAAA,EAAAN,KAAA,CAAAO,cAAA,EAAAP,KAAA,CAAAQ,aAAA,EAAAR,KAAA,CAAAS,iBAAA,EAAAT,KAAA,CAAAU,mBAAA,EAAAV,KAAA,CAAAW,iBAAA,YAAA/B,MAAA,EAAAgC,KAAA,EAAAP,SAAA,EAAAD,WAAA,EAAAhB,SAAA;MAAA,IAAAyB,KAAA;QAAAnB,IAArB;QAFHE,MAAP;MAID,CALM;MAOH,KAAAgB,KAAA,EAAO;QACR,OAAAC,KAAA;;MAID,IAAAD,KAAA,CAAAE,YAAA;;UACApB,IAAM,EAAAqB,MAAQ,CAAAC,IAAA,CAAAJ,KAAa,CAAAE,YACjB;;QAGV;MACE,WAAOG,KAAA,CAAAC,OAAA,CAAAN,KAAkB,CAAAO,QAAzB;QACD;;YAEK,OAAAC,EAAA,EAAW;UAEjB;UACDxB,MAAA,EAAAgB,KAAA,CAAAO,QAAA,CAAAxB,GAAA,WAAAyB,EAAA;;UACD;;;;;;YAIJC,aAAA,GAAA3E,UAAS,CAAA4E,UAAA,CAAAjB,SAAA;QAAA;;QAAA,IAAAZ,KAAA,GAAA4B,aAAA,GAAAzC,MAAA,CAAAA,MACO,EAAAgC,KAAA,CAAAA,KADP,CAAAW,MAAA;QAGP,IAAMlB,SAAU,KAAK3D,UAAA,CAAA8E,WAAqB,CAAAC,OAA1C;UACM,OAAMjC,iBAAgB,CAAAC,KAAb;QAEf;QAEuB,IAAAiC,WAAQ,GAAAtB,WAAA,IAAAjB,mBAAA,CAAAM,KAAA,CAAAb,MAAA,IAAAQ,SAAA;QAA3B,OACGuC,eAAiB,CAAAlC,KAAC,EAAAiC,WAAD;MAAA;MAGd,OAAAb,KAAO;IACP;IACA,OAAAb,KAAK;EACL;EANc,IAAAhE,aAHxB,aAAA6D,WAAA;IAeD+B,GAAA;;;QA5EsCC,KAAA,G;;;;MA+E5B,IAAAC,MAAY,GAAAC,OAAZ,CAAArC,IAAA,CAAAsC,MAAY,IAAAC,KAAA,GAAA/D,GAAA;MAAA,oBAAE9B,MAAF,YAAA8F,aAAA,CAAA9D,YAAA,qBAAAhC,MAAA,YAAA8F,aAAA;QAAEL,KAAF,EAAAA,KAAA;QAAcC,MAAA,EAAAA;MAAc,GAAAC,OAA5B,CAAArC,IAA4B,CAAAC,GAA5B,WAAAwC,KAAA,EAAAC,GAAA;QAAmC,OAAnC,aAAAhG,MAAA,YAAA8F,aAAA,CAAAtG,SAAA;UAAAgG,GAAA,EAAAQ,GAAA;UACpBC,KAAS,EAAAN,OAAA,CAAAnC,MAAA,CAAAwC,GAAA;UAAZE,YACE,EAAAA,YAAA;UAAWH,KAAE,EAAbA,KAAA;UAA2BC,GAAE,EAAAA;QAAO,CAAK;MAAG,IAAI;IAAL;EAA3C,EADF;EAEQ,OAAGvC,WAAT;AAAqB,EAAAzD,MAAG,CAAAmG,SAAQ;AAHX5G,OAAlB,cAAAkE,WAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}