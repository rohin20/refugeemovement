{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactIntl = require(\"react-intl\");\nvar _localization = require(\"@kepler.gl/localization\");\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\nvar _layerList = _interopRequireDefault(require(\"./layer-panel/layer-list\"));\nvar _datasetLayerGroup = _interopRequireDefault(require(\"./layer-panel/dataset-layer-group\"));\nvar _panelViewListToggle = _interopRequireDefault(require(\"./layer-panel/panel-view-list-toggle\"));\nvar _panelTitle = _interopRequireDefault(require(\"./panel-title\"));\nvar _datasetSection = _interopRequireDefault(require(\"./layer-panel/dataset-section\"));\nvar _addLayerButton = _interopRequireDefault(require(\"./layer-panel/add-layer-button\"));\nvar _itemSelector = _interopRequireDefault(require(\"../common/item-selector/item-selector\"));\nvar _styledComponents2 = require(\"../common/styled-components\");\nvar _constants = require(\"@kepler.gl/constants\");\nvar _templateObject;\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nvar LayerHeader = _styledComponents[\"default\"].div.attrs({\n  className: 'layer-manager-header'\n})(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: flex-start;\\n  margin-top: 16px;\\n\"])));\nvar LayerBlendingSelector = /*#__PURE__*/_react[\"default\"].memo(function (_ref) {\n  var layerBlending = _ref.layerBlending,\n    updateLayerBlending = _ref.updateLayerBlending,\n    intl = _ref.intl;\n  var labeledLayerBlendings = Object.keys(_constants.LAYER_BLENDINGS).reduce(function (acc, current) {\n    return _objectSpread(_objectSpread({}, acc), {}, (0, _defineProperty2[\"default\"])({}, intl.formatMessage({\n      id: _constants.LAYER_BLENDINGS[current].label\n    }), current));\n  }, {});\n  var onChange = (0, _react.useCallback)(function (blending) {\n    return updateLayerBlending(labeledLayerBlendings[blending]);\n  }, [updateLayerBlending, labeledLayerBlendings]);\n  return /*#__PURE__*/_react[\"default\"].createElement(_styledComponents2.SidePanelSection, null, /*#__PURE__*/_react[\"default\"].createElement(_styledComponents2.PanelLabel, null, /*#__PURE__*/_react[\"default\"].createElement(_localization.FormattedMessage, {\n    id: \"layerBlending.title\"\n  })), /*#__PURE__*/_react[\"default\"].createElement(_itemSelector[\"default\"], {\n    selectedItems: intl.formatMessage({\n      id: _constants.LAYER_BLENDINGS[layerBlending].label\n    }),\n    options: Object.keys(labeledLayerBlendings),\n    multiSelect: false,\n    searchable: false,\n    onChange: onChange\n  }));\n});\nLayerBlendingSelector.displayName = 'LayerBlendingSelector';\nLayerManagerFactory.deps = [_layerList[\"default\"], _datasetLayerGroup[\"default\"], _panelViewListToggle[\"default\"], _panelTitle[\"default\"], _datasetSection[\"default\"], _addLayerButton[\"default\"]];\nfunction LayerManagerFactory(LayerList, DatasetLayerGroup, PanelViewListToggle, PanelTitle, DatasetSection, AddLayerButton) {\n  var LayerManager = /*#__PURE__*/function (_Component) {\n    (0, _inherits2[\"default\"])(LayerManager, _Component);\n    var _super = _createSuper(LayerManager);\n    function LayerManager() {\n      var _this;\n      (0, _classCallCheck2[\"default\"])(this, LayerManager);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _super.call.apply(_super, [this].concat(args));\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_addEmptyNewLayer\", function (dataset) {\n        var visStateActions = _this.props.visStateActions;\n        visStateActions.addLayer(undefined, dataset);\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_toggleLayerPanelListView\", function (listView) {\n        var uiStateActions = _this.props.uiStateActions;\n        uiStateActions.toggleLayerPanelListView(listView);\n      });\n      return _this;\n    }\n    (0, _createClass2[\"default\"])(LayerManager, [{\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n          layers = _this$props.layers,\n          datasets = _this$props.datasets,\n          intl = _this$props.intl,\n          layerOrder = _this$props.layerOrder,\n          showAddDataModal = _this$props.showAddDataModal,\n          updateTableColor = _this$props.updateTableColor,\n          showDatasetTable = _this$props.showDatasetTable,\n          removeDataset = _this$props.removeDataset,\n          uiStateActions = _this$props.uiStateActions,\n          visStateActions = _this$props.visStateActions,\n          layerPanelListView = _this$props.layerPanelListView,\n          panelMetadata = _this$props.panelMetadata;\n        var defaultDataset = Object.keys(datasets)[0];\n        var isSortByDatasetMode = layerPanelListView === 'sortByDataset';\n        return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n          className: \"layer-manager\"\n        }, /*#__PURE__*/_react[\"default\"].createElement(_styledComponents2.SidePanelSection, null, /*#__PURE__*/_react[\"default\"].createElement(PanelViewListToggle, {\n          toggleLayerPanelListView: this._toggleLayerPanelListView,\n          layerPanelListViewMode: layerPanelListView\n        })), /*#__PURE__*/_react[\"default\"].createElement(DatasetSection, {\n          datasets: datasets,\n          showDatasetTable: showDatasetTable,\n          updateTableColor: updateTableColor,\n          removeDataset: removeDataset,\n          showDeleteDataset: true,\n          showDatasetList: !isSortByDatasetMode,\n          showAddDataModal: showAddDataModal,\n          defaultDataset: defaultDataset\n        }), /*#__PURE__*/_react[\"default\"].createElement(_styledComponents2.SidePanelDivider, null), /*#__PURE__*/_react[\"default\"].createElement(_styledComponents2.SidePanelSection, null, /*#__PURE__*/_react[\"default\"].createElement(LayerHeader, null, /*#__PURE__*/_react[\"default\"].createElement(PanelTitle, {\n          className: \"layer-manager-title\"\n        }, /*#__PURE__*/_react[\"default\"].createElement(_localization.FormattedMessage, {\n          id: panelMetadata.label\n        })), defaultDataset ? /*#__PURE__*/\n        // TODO replace ignore\n        // @ts-ignore\n        _react[\"default\"].createElement(AddLayerButton, {\n          datasets: datasets,\n          typeaheadPlaceholder: \"Search datasets\",\n          intl: intl,\n          onOptionSelected: this._addEmptyNewLayer\n        }) : null)), /*#__PURE__*/_react[\"default\"].createElement(_styledComponents2.SidePanelSection, null, isSortByDatasetMode ? /*#__PURE__*/_react[\"default\"].createElement(DatasetLayerGroup, {\n          datasets: datasets,\n          showDatasetTable: showDatasetTable,\n          layers: layers,\n          updateTableColor: updateTableColor,\n          removeDataset: removeDataset,\n          layerOrder: layerOrder,\n          layerClasses: this.props.layerClasses,\n          uiStateActions: uiStateActions,\n          visStateActions: visStateActions,\n          showDeleteDataset: true\n        }) : /*#__PURE__*/\n        // TODO replace ignore\n        // @ts-ignore\n        _react[\"default\"].createElement(LayerList, {\n          layers: layers,\n          datasets: datasets,\n          layerOrder: layerOrder,\n          uiStateActions: uiStateActions,\n          visStateActions: visStateActions,\n          layerClasses: this.props.layerClasses\n        })), /*#__PURE__*/_react[\"default\"].createElement(LayerBlendingSelector, {\n          layerBlending: this.props.layerBlending,\n          updateLayerBlending: visStateActions.updateLayerBlending,\n          intl: intl\n        }));\n      }\n    }]);\n    return LayerManager;\n  }(_react.Component);\n  return (0, _reactIntl.injectIntl)(LayerManager);\n}\nvar _default = LayerManagerFactory;\nexports[\"default\"] = _default;","map":{"version":3,"names":["value","exports","_classCallCheck2","_interopRequireDefault","require","_createClass2","_assertThisInitialized2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_defineProperty2","_taggedTemplateLiteral2","_react","_interopRequireWildcard","_reactIntl","_localization","_datasetSection","_addLayerButton","_itemSelector","_styledComponents2","_constants","_templateObject","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","_objectSpread","target","i","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","LayerHeader","_styledComponents","div","attrs","className","LayerBlendingSelector","memo","_ref","layerBlending","updateLayerBlending","intl","acc","formatMessage","id","LAYER_BLENDINGS","current","label","onChange","useCallback","blending","labeledLayerBlendings","createElement","SidePanelSection","PanelLabel","FormattedMessage","selectedItems","multiSelect","searchable","displayName","LayerManagerFactory","deps","_layerList","_datasetLayerGroup","_panelViewListToggle","_panelTitle","LayerList","DatasetLayerGroup","PanelViewListToggle","PanelTitle","DatasetSection","AddLayerButton","LayerManager","_Component","_super","_this","_len","args","Array","_key","concat","dataset","visStateActions","props","addLayer","undefined","listView","uiStateActions","toggleLayerPanelListView","render","_this$props","layers","datasets","layerOrder","showAddDataModal","updateTableColor","showDatasetTable","removeDataset","layerPanelListView","panelMetadata","defaultDataset","isSortByDatasetMode","_toggleLayerPanelListView","layerPanelListViewMode","showDeleteDataset","showDatasetList","SidePanelDivider","typeaheadPlaceholder","onOptionSelected","_addEmptyNewLayer","layerClasses"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/components/src/side-panel/layer-manager.tsx"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {Component, useCallback} from 'react';\n\nimport {injectIntl, WrappedComponentProps} from 'react-intl';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport styled from 'styled-components';\n\nimport LayerListFactory from './layer-panel/layer-list';\nimport DatasetLayerGroupFactory from './layer-panel/dataset-layer-group';\nimport PanelViewListToggleFactory from './layer-panel/panel-view-list-toggle';\nimport PanelTitleFactory from './panel-title';\nimport DatasetSectionFactory from './layer-panel/dataset-section';\nimport AddLayerButtonFactory from './layer-panel/add-layer-button';\n\nimport ItemSelector from '../common/item-selector/item-selector';\nimport {PanelLabel, SidePanelDivider, SidePanelSection} from '../common/styled-components';\n\nimport {LAYER_BLENDINGS} from '@kepler.gl/constants';\nimport {Layer, LayerClassesType} from '@kepler.gl/layers';\nimport {UIStateActions, VisStateActions, ActionHandler} from '@kepler.gl/actions';\nimport {SidePanelItem} from '../types';\nimport {LayerPanelListView} from '@kepler.gl/types';\nimport {Datasets} from '@kepler.gl/table';\n\ntype LayerBlendingSelectorProps = {\n  layerBlending: string;\n  updateLayerBlending: ActionHandler<typeof VisStateActions.updateLayerBlending>;\n} & WrappedComponentProps;\n\ntype LayerManagerProps = {\n  datasets: Datasets;\n  layers: Layer[];\n  layerOrder: number[];\n  layerClasses: LayerClassesType;\n  layerBlending: string;\n  uiStateActions: typeof UIStateActions;\n  visStateActions: typeof VisStateActions;\n  showAddDataModal: () => void;\n  removeDataset: ActionHandler<typeof UIStateActions.openDeleteModal>;\n  showDatasetTable: ActionHandler<typeof VisStateActions.showDatasetTable>;\n  updateTableColor: ActionHandler<typeof VisStateActions.updateTableColor>;\n  layerPanelListView: LayerPanelListView;\n  panelMetadata: SidePanelItem;\n} & WrappedComponentProps;\n\nconst LayerHeader = styled.div.attrs({\n  className: 'layer-manager-header'\n})`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-top: 16px;\n`;\n\nconst LayerBlendingSelector = React.memo(\n  ({layerBlending, updateLayerBlending, intl}: LayerBlendingSelectorProps) => {\n    const labeledLayerBlendings = Object.keys(LAYER_BLENDINGS).reduce(\n      (acc, current) => ({\n        ...acc,\n        [intl.formatMessage({id: LAYER_BLENDINGS[current].label})]: current\n      }),\n      {}\n    );\n\n    const onChange = useCallback(blending => updateLayerBlending(labeledLayerBlendings[blending]), [\n      updateLayerBlending,\n      labeledLayerBlendings\n    ]);\n\n    return (\n      <SidePanelSection>\n        <PanelLabel>\n          <FormattedMessage id=\"layerBlending.title\" />\n        </PanelLabel>\n        <ItemSelector\n          selectedItems={intl.formatMessage({id: LAYER_BLENDINGS[layerBlending].label})}\n          options={Object.keys(labeledLayerBlendings)}\n          multiSelect={false}\n          searchable={false}\n          onChange={onChange}\n        />\n      </SidePanelSection>\n    );\n  }\n);\nLayerBlendingSelector.displayName = 'LayerBlendingSelector';\n\nLayerManagerFactory.deps = [\n  LayerListFactory,\n  DatasetLayerGroupFactory,\n  PanelViewListToggleFactory,\n  PanelTitleFactory,\n  DatasetSectionFactory,\n  AddLayerButtonFactory\n];\n\nfunction LayerManagerFactory(\n  LayerList: ReturnType<typeof LayerListFactory>,\n  DatasetLayerGroup: ReturnType<typeof DatasetLayerGroupFactory>,\n  PanelViewListToggle: ReturnType<typeof PanelViewListToggleFactory>,\n  PanelTitle: ReturnType<typeof PanelTitleFactory>,\n  DatasetSection: ReturnType<typeof DatasetSectionFactory>,\n  AddLayerButton: ReturnType<typeof AddLayerButtonFactory>\n) {\n  class LayerManager extends Component<LayerManagerProps> {\n    _addEmptyNewLayer = (dataset: string) => {\n      const {visStateActions} = this.props;\n      visStateActions.addLayer(undefined, dataset);\n    };\n\n    _toggleLayerPanelListView = (listView: string) => {\n      const {uiStateActions} = this.props;\n      uiStateActions.toggleLayerPanelListView(listView);\n    };\n\n    render() {\n      const {\n        layers,\n        datasets,\n        intl,\n        layerOrder,\n        showAddDataModal,\n        updateTableColor,\n        showDatasetTable,\n        removeDataset,\n        uiStateActions,\n        visStateActions,\n        layerPanelListView,\n        panelMetadata\n      } = this.props;\n\n      const defaultDataset = Object.keys(datasets)[0];\n      const isSortByDatasetMode = layerPanelListView === 'sortByDataset';\n\n      return (\n        <div className=\"layer-manager\">\n          <SidePanelSection>\n            <PanelViewListToggle\n              toggleLayerPanelListView={this._toggleLayerPanelListView}\n              layerPanelListViewMode={layerPanelListView}\n            />\n          </SidePanelSection>\n          <DatasetSection\n            datasets={datasets}\n            showDatasetTable={showDatasetTable}\n            updateTableColor={updateTableColor}\n            removeDataset={removeDataset}\n            showDeleteDataset\n            showDatasetList={!isSortByDatasetMode}\n            showAddDataModal={showAddDataModal}\n            defaultDataset={defaultDataset}\n          />\n          <SidePanelDivider />\n          <SidePanelSection>\n            <LayerHeader>\n              <PanelTitle className=\"layer-manager-title\">\n                <FormattedMessage id={panelMetadata.label} />\n              </PanelTitle>\n              {defaultDataset ? (\n                // TODO replace ignore\n                // @ts-ignore\n                <AddLayerButton\n                  datasets={datasets}\n                  typeaheadPlaceholder=\"Search datasets\"\n                  intl={intl}\n                  onOptionSelected={this._addEmptyNewLayer}\n                />\n              ) : null}\n            </LayerHeader>\n          </SidePanelSection>\n          <SidePanelSection>\n            {isSortByDatasetMode ? (\n              <DatasetLayerGroup\n                datasets={datasets}\n                showDatasetTable={showDatasetTable}\n                layers={layers}\n                updateTableColor={updateTableColor}\n                removeDataset={removeDataset}\n                layerOrder={layerOrder}\n                layerClasses={this.props.layerClasses}\n                uiStateActions={uiStateActions}\n                visStateActions={visStateActions}\n                showDeleteDataset\n              />\n            ) : (\n              // TODO replace ignore\n              // @ts-ignore\n              <LayerList\n                layers={layers}\n                datasets={datasets}\n                layerOrder={layerOrder}\n                uiStateActions={uiStateActions}\n                visStateActions={visStateActions}\n                layerClasses={this.props.layerClasses}\n              />\n            )}\n          </SidePanelSection>\n          <LayerBlendingSelector\n            layerBlending={this.props.layerBlending}\n            updateLayerBlending={visStateActions.updateLayerBlending}\n            intl={intl}\n          />\n        </div>\n      );\n    }\n  }\n  return injectIntl(LayerManager);\n}\n\nexport default LayerManagerFactory;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}