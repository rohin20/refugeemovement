{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar MS_PER_SECOND = 1e3;\nvar SECS_PER_MIN = 60;\nvar SECS_PER_HOUR = SECS_PER_MIN * 60;\nvar SECS_PER_DAY = SECS_PER_HOUR * 24;\nvar SECS_PER_WEEK = SECS_PER_DAY * 7;\nexport function selectUnit(from, to, thresholds) {\n  if (to === void 0) {\n    to = Date.now();\n  }\n  if (thresholds === void 0) {\n    thresholds = {};\n  }\n  var resolvedThresholds = __assign(__assign({}, DEFAULT_THRESHOLDS), thresholds || {});\n  var secs = (+from - +to) / MS_PER_SECOND;\n  if (Math.abs(secs) < resolvedThresholds.second) {\n    return {\n      value: Math.round(secs),\n      unit: 'second'\n    };\n  }\n  var mins = secs / SECS_PER_MIN;\n  if (Math.abs(mins) < resolvedThresholds.minute) {\n    return {\n      value: Math.round(mins),\n      unit: 'minute'\n    };\n  }\n  var hours = secs / SECS_PER_HOUR;\n  if (Math.abs(hours) < resolvedThresholds.hour) {\n    return {\n      value: Math.round(hours),\n      unit: 'hour'\n    };\n  }\n  var days = secs / SECS_PER_DAY;\n  if (Math.abs(days) < resolvedThresholds.day) {\n    return {\n      value: Math.round(days),\n      unit: 'day'\n    };\n  }\n  var fromDate = new Date(from);\n  var toDate = new Date(to);\n  var years = fromDate.getFullYear() - toDate.getFullYear();\n  if (Math.round(Math.abs(years)) > 0) {\n    return {\n      value: Math.round(years),\n      unit: 'year'\n    };\n  }\n  var months = years * 12 + fromDate.getMonth() - toDate.getMonth();\n  if (Math.round(Math.abs(months)) > 0) {\n    return {\n      value: Math.round(months),\n      unit: 'month'\n    };\n  }\n  var weeks = secs / SECS_PER_WEEK;\n  return {\n    value: Math.round(weeks),\n    unit: 'week'\n  };\n}\nexport var DEFAULT_THRESHOLDS = {\n  second: 45,\n  minute: 45,\n  hour: 22,\n  day: 5\n};","map":{"version":3,"names":["MS_PER_SECOND","SECS_PER_MIN","SECS_PER_HOUR","SECS_PER_DAY","SECS_PER_WEEK","selectUnit","from","to","thresholds","Date","now","resolvedThresholds","__assign","DEFAULT_THRESHOLDS","secs","Math","abs","second","value","round","unit","mins","minute","hours","hour","days","day","fromDate","toDate","years","getFullYear","months","getMonth","weeks"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@formatjs/intl-utils/src/diff.ts"],"sourcesContent":["export type Unit =\n  | 'second'\n  | 'minute'\n  | 'hour'\n  | 'day'\n  | 'week'\n  | 'month'\n  | 'quarter'\n  | 'year';\n\nconst MS_PER_SECOND = 1e3;\nconst SECS_PER_MIN = 60;\nconst SECS_PER_HOUR = SECS_PER_MIN * 60;\nconst SECS_PER_DAY = SECS_PER_HOUR * 24;\nconst SECS_PER_WEEK = SECS_PER_DAY * 7;\n\nexport function selectUnit(\n  from: Date | number,\n  to: Date | number = Date.now(),\n  thresholds: Partial<Thresholds> = {}\n): {value: number; unit: Unit} {\n  const resolvedThresholds: Thresholds = {\n    ...DEFAULT_THRESHOLDS,\n    ...(thresholds || {}),\n  };\n  const secs = (+from - +to) / MS_PER_SECOND;\n  if (Math.abs(secs) < resolvedThresholds.second) {\n    return {\n      value: Math.round(secs),\n      unit: 'second',\n    };\n  }\n  const mins = secs / SECS_PER_MIN;\n  if (Math.abs(mins) < resolvedThresholds.minute) {\n    return {\n      value: Math.round(mins),\n      unit: 'minute',\n    };\n  }\n  const hours = secs / SECS_PER_HOUR;\n  if (Math.abs(hours) < resolvedThresholds.hour) {\n    return {\n      value: Math.round(hours),\n      unit: 'hour',\n    };\n  }\n\n  const days = secs / SECS_PER_DAY;\n  if (Math.abs(days) < resolvedThresholds.day) {\n    return {\n      value: Math.round(days),\n      unit: 'day',\n    };\n  }\n  const fromDate = new Date(from);\n  const toDate = new Date(to);\n\n  const years = fromDate.getFullYear() - toDate.getFullYear();\n  if (Math.round(Math.abs(years)) > 0) {\n    return {\n      value: Math.round(years),\n      unit: 'year',\n    };\n  }\n\n  const months = years * 12 + fromDate.getMonth() - toDate.getMonth();\n  if (Math.round(Math.abs(months)) > 0) {\n    return {\n      value: Math.round(months),\n      unit: 'month',\n    };\n  }\n  const weeks = secs / SECS_PER_WEEK;\n\n  return {\n    value: Math.round(weeks),\n    unit: 'week',\n  };\n}\n\ntype Thresholds = Record<'second' | 'minute' | 'hour' | 'day', number>;\n\nexport const DEFAULT_THRESHOLDS: Thresholds = {\n  second: 45, // seconds to minute\n  minute: 45, // minutes to hour\n  hour: 22, // hour to day\n  day: 5, // day to week\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}