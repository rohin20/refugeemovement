{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport assert from '../utils/assert';\nimport { DataType } from '../types/arrow-like/type';\nvar Field = function () {\n  function Field(name) {\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var nullable = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var metadata = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : new Map();\n    _classCallCheck(this, Field);\n    assert(typeof name === 'string');\n    assert(!type || type instanceof DataType);\n    assert(typeof nullable === 'boolean');\n    assert(!metadata || _typeof(metadata) === 'object');\n    this.name = name;\n    this.type = type;\n    this.nullable = nullable;\n    this.metadata = metadata;\n  }\n  _createClass(Field, [{\n    key: \"clone\",\n    value: function clone() {\n      return new Field(this.name, this.type, this.nullable, this.metadata);\n    }\n  }, {\n    key: \"compareTo\",\n    value: function compareTo(other) {\n      return this.name === other.name && this.type === other.type && this.nullable === other.nullable && this.metadata === other.metadata;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.type).concat(this.nullable ? ', nullable' : '').concat(this.metadata ? \", metadata: \".concat(this.metadata) : '');\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return this.type && this.type.typeId;\n    }\n  }]);\n  return Field;\n}();\nexport { Field as default };","map":{"version":3,"names":["assert","DataType","Field","name","type","arguments","length","undefined","nullable","metadata","Map","_classCallCheck","_typeof","other","concat","typeId"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@loaders.gl/tables/src/lib/schema/field.js"],"sourcesContent":["import assert from '../utils/assert';\nimport {DataType} from '../types/arrow-like/type';\n\n// ArrowJS `Schema` API-compatible class for row-based tables (returned from `DataTable`)\n// https://loaders.gl/arrowjs/docs/api-reference/field\n// A field holds name, nullable, and metadata information about a table \"column\"\n// A Schema is essentially a list of fields\n\nexport default class Field {\n  constructor(name, type = null, nullable = false, metadata = new Map()) {\n    assert(typeof name === 'string');\n    assert(!type || type instanceof DataType);\n    assert(typeof nullable === 'boolean');\n    assert(!metadata || typeof metadata === 'object');\n\n    this.name = name;\n    this.type = type;\n    this.nullable = nullable;\n    this.metadata = metadata;\n  }\n\n  get typeId() {\n    return this.type && this.type.typeId;\n  }\n\n  clone() {\n    return new Field(this.name, this.type, this.nullable, this.metadata);\n  }\n\n  compareTo(other) {\n    return (\n      this.name === other.name &&\n      this.type === other.type &&\n      this.nullable === other.nullable &&\n      this.metadata === other.metadata\n    );\n  }\n\n  toString() {\n    return `${this.type}${this.nullable ? ', nullable' : ''}${\n      this.metadata ? `, metadata: ${this.metadata}` : ''\n    }`;\n  }\n}\n"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,iBAAnB;AACA,SAAQC,QAAR,QAAuB,0BAAvB;IAOqBC,K;EACnB,SAAAA,MAAYC,IAAZ,EAAuE;IAAA,IAArDC,IAAqD,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA9C,IAA8C;IAAA,IAAxCG,QAAwC,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA7B,KAA6B;IAAA,IAAtBI,QAAsB,GAAAJ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAX,IAAIK,GAAJ,EAAW;IAAAC,eAAA,OAAAT,KAAA;IACrEF,MAAM,CAAC,OAAOG,IAAP,KAAgB,QAAjB,CAAN;IACAH,MAAM,CAAC,CAACI,IAAD,IAASA,IAAI,YAAYH,QAA1B,CAAN;IACAD,MAAM,CAAC,OAAOQ,QAAP,KAAoB,SAArB,CAAN;IACAR,MAAM,CAAC,CAACS,QAAD,IAAaG,OAAA,CAAOH,QAAP,MAAoB,QAAlC,CAAN;IAEA,KAAKN,IAAL,GAAYA,IAAZ;IACA,KAAKC,IAAL,GAAYA,IAAZ;IACA,KAAKI,QAAL,GAAgBA,QAAhB;IACA,KAAKC,QAAL,GAAgBA,QAAhB;EACD;;;4BAMO;MACN,OAAO,IAAIP,KAAJ,CAAU,KAAKC,IAAf,EAAqB,KAAKC,IAA1B,EAAgC,KAAKI,QAArC,EAA+C,KAAKC,QAApD,CAAP;IACD;;;8BAESI,K,EAAO;MACf,OACE,KAAKV,IAAL,KAAcU,KAAK,CAACV,IAApB,IACA,KAAKC,IAAL,KAAcS,KAAK,CAACT,IADpB,IAEA,KAAKI,QAAL,KAAkBK,KAAK,CAACL,QAFxB,IAGA,KAAKC,QAAL,KAAkBI,KAAK,CAACJ,QAJ1B;IAMD;;;+BAEU;MACT,UAAAK,MAAA,CAAU,KAAKV,IAAf,EAAAU,MAAA,CAAsB,KAAKN,QAAL,GAAgB,YAAhB,GAA+B,EAArD,EAAAM,MAAA,CACE,KAAKL,QAAL,kBAAAK,MAAA,CAA+B,KAAKL,QAApC,IAAiD,EADnD;IAGD;;;wBArBY;MACX,OAAO,KAAKL,IAAL,IAAa,KAAKA,IAAL,CAAUW,MAA9B;IACD;;;;SAfkBb,K"},"metadata":{},"sourceType":"module","externalDependencies":[]}