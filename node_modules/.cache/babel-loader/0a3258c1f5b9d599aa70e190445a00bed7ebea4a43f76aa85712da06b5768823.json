{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { Vector3, Matrix3 } from '@math.gl/core';\nimport computeEigenDecomposition from './compute-eigen-decomposition';\nimport OrientedBoundingBox from '../bounding-volumes/oriented-bounding-box';\nimport AxisAlignedBoundingBox from '../bounding-volumes/axis-aligned-bounding-box';\nvar scratchVector2 = new Vector3();\nvar scratchVector3 = new Vector3();\nvar scratchVector4 = new Vector3();\nvar scratchVector5 = new Vector3();\nvar scratchVector6 = new Vector3();\nvar scratchCovarianceResult = new Matrix3();\nvar scratchEigenResult = {\n  diagonal: new Matrix3(),\n  unitary: new Matrix3()\n};\nexport function makeOrientedBoundingBoxFromPoints(positions) {\n  var result = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new OrientedBoundingBox();\n  if (!positions || positions.length === 0) {\n    result.halfAxes = new Matrix3([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n    result.center = new Vector3();\n    return result;\n  }\n  var length = positions.length;\n  var meanPoint = new Vector3(0, 0, 0);\n  var _iterator = _createForOfIteratorHelper(positions),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var position = _step.value;\n      meanPoint.add(position);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  var invLength = 1.0 / length;\n  meanPoint.multiplyByScalar(invLength);\n  var exx = 0.0;\n  var exy = 0.0;\n  var exz = 0.0;\n  var eyy = 0.0;\n  var eyz = 0.0;\n  var ezz = 0.0;\n  var _iterator2 = _createForOfIteratorHelper(positions),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var _position = _step2.value;\n      var p = scratchVector2.copy(_position).subtract(meanPoint);\n      exx += p.x * p.x;\n      exy += p.x * p.y;\n      exz += p.x * p.z;\n      eyy += p.y * p.y;\n      eyz += p.y * p.z;\n      ezz += p.z * p.z;\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  exx *= invLength;\n  exy *= invLength;\n  exz *= invLength;\n  eyy *= invLength;\n  eyz *= invLength;\n  ezz *= invLength;\n  var covarianceMatrix = scratchCovarianceResult;\n  covarianceMatrix[0] = exx;\n  covarianceMatrix[1] = exy;\n  covarianceMatrix[2] = exz;\n  covarianceMatrix[3] = exy;\n  covarianceMatrix[4] = eyy;\n  covarianceMatrix[5] = eyz;\n  covarianceMatrix[6] = exz;\n  covarianceMatrix[7] = eyz;\n  covarianceMatrix[8] = ezz;\n  var _computeEigenDecompos = computeEigenDecomposition(covarianceMatrix, scratchEigenResult),\n    unitary = _computeEigenDecompos.unitary;\n  var rotation = result.halfAxes.copy(unitary);\n  var v1 = rotation.getColumn(0, scratchVector4);\n  var v2 = rotation.getColumn(1, scratchVector5);\n  var v3 = rotation.getColumn(2, scratchVector6);\n  var u1 = -Number.MAX_VALUE;\n  var u2 = -Number.MAX_VALUE;\n  var u3 = -Number.MAX_VALUE;\n  var l1 = Number.MAX_VALUE;\n  var l2 = Number.MAX_VALUE;\n  var l3 = Number.MAX_VALUE;\n  var _iterator3 = _createForOfIteratorHelper(positions),\n    _step3;\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var _position2 = _step3.value;\n      scratchVector2.copy(_position2);\n      u1 = Math.max(scratchVector2.dot(v1), u1);\n      u2 = Math.max(scratchVector2.dot(v2), u2);\n      u3 = Math.max(scratchVector2.dot(v3), u3);\n      l1 = Math.min(scratchVector2.dot(v1), l1);\n      l2 = Math.min(scratchVector2.dot(v2), l2);\n      l3 = Math.min(scratchVector2.dot(v3), l3);\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n  v1 = v1.multiplyByScalar(0.5 * (l1 + u1));\n  v2 = v2.multiplyByScalar(0.5 * (l2 + u2));\n  v3 = v3.multiplyByScalar(0.5 * (l3 + u3));\n  result.center.copy(v1).add(v2).add(v3);\n  var scale = scratchVector3.set(u1 - l1, u2 - l2, u3 - l3).multiplyByScalar(0.5);\n  var scaleMatrix = new Matrix3([scale[0], 0, 0, 0, scale[1], 0, 0, 0, scale[2]]);\n  result.halfAxes.multiplyRight(scaleMatrix);\n  return result;\n}\nexport function makeAxisAlignedBoundingBoxFromPoints(positions) {\n  var result = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new AxisAlignedBoundingBox();\n  if (!positions || positions.length === 0) {\n    result.minimum.set(0, 0, 0);\n    result.maximum.set(0, 0, 0);\n    result.center.set(0, 0, 0);\n    result.halfDiagonal.set(0, 0, 0);\n    return result;\n  }\n  var minimumX = positions[0][0];\n  var minimumY = positions[0][1];\n  var minimumZ = positions[0][2];\n  var maximumX = positions[0][0];\n  var maximumY = positions[0][1];\n  var maximumZ = positions[0][2];\n  var _iterator4 = _createForOfIteratorHelper(positions),\n    _step4;\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var p = _step4.value;\n      var x = p[0];\n      var y = p[1];\n      var z = p[2];\n      minimumX = Math.min(x, minimumX);\n      maximumX = Math.max(x, maximumX);\n      minimumY = Math.min(y, minimumY);\n      maximumY = Math.max(y, maximumY);\n      minimumZ = Math.min(z, minimumZ);\n      maximumZ = Math.max(z, maximumZ);\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n  result.minimum.set(minimumX, minimumY, minimumZ);\n  result.maximum.set(maximumX, maximumY, maximumZ);\n  result.center.copy(result.minimum).add(result.maximum).scale(0.5);\n  result.halfDiagonal.copy(result.maximum).subtract(result.center);\n  return result;\n}","map":{"version":3,"names":["Vector3","Matrix3","computeEigenDecomposition","OrientedBoundingBox","AxisAlignedBoundingBox","scratchVector2","scratchVector3","scratchVector4","scratchVector5","scratchVector6","scratchCovarianceResult","scratchEigenResult","diagonal","unitary","makeOrientedBoundingBoxFromPoints","positions","result","arguments","length","undefined","halfAxes","center","meanPoint","_iterator","_createForOfIteratorHelper","_step","s","n","done","position","value","add","err","e","f","invLength","multiplyByScalar","exx","exy","exz","eyy","eyz","ezz","_iterator2","_step2","p","copy","subtract","x","y","z","covarianceMatrix","_computeEigenDecompos","rotation","v1","getColumn","v2","v3","u1","Number","MAX_VALUE","u2","u3","l1","l2","l3","_iterator3","_step3","Math","max","dot","min","scale","set","scaleMatrix","multiplyRight","makeAxisAlignedBoundingBoxFromPoints","minimum","maximum","halfDiagonal","minimumX","minimumY","minimumZ","maximumX","maximumY","maximumZ","_iterator4","_step4"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@math.gl/culling/src/lib/algorithms/bounding-box-from-points.ts"],"sourcesContent":["// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {Vector3, Matrix3} from '@math.gl/core';\nimport computeEigenDecomposition from './compute-eigen-decomposition';\nimport OrientedBoundingBox from '../bounding-volumes/oriented-bounding-box';\nimport AxisAlignedBoundingBox from '../bounding-volumes/axis-aligned-bounding-box';\n\nconst scratchVector2 = new Vector3();\n\nconst scratchVector3 = new Vector3();\n\nconst scratchVector4 = new Vector3();\n\nconst scratchVector5 = new Vector3();\n\nconst scratchVector6 = new Vector3();\n\nconst scratchCovarianceResult = new Matrix3();\n\nconst scratchEigenResult = {\n  diagonal: new Matrix3(),\n  unitary: new Matrix3()\n};\n\n/**\n * Computes an instance of an OrientedBoundingBox of the given positions.\n *\n * This is an implementation of Stefan Gottschalk's Collision Queries using Oriented Bounding Boxes solution (PHD thesis).\n * Reference: http://gamma.cs.unc.edu/users/gottschalk/main.pdf\n */\n/* eslint-disable max-statements */\nexport function makeOrientedBoundingBoxFromPoints(\n  positions: number[][],\n  result: OrientedBoundingBox = new OrientedBoundingBox()\n): OrientedBoundingBox {\n  if (!positions || positions.length === 0) {\n    result.halfAxes = new Matrix3([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n    result.center = new Vector3();\n    return result;\n  }\n\n  const length = positions.length;\n  const meanPoint = new Vector3(0, 0, 0);\n  for (const position of positions) {\n    meanPoint.add(position);\n  }\n  const invLength = 1.0 / length;\n  meanPoint.multiplyByScalar(invLength);\n\n  let exx = 0.0;\n  let exy = 0.0;\n  let exz = 0.0;\n  let eyy = 0.0;\n  let eyz = 0.0;\n  let ezz = 0.0;\n\n  for (const position of positions) {\n    const p = scratchVector2.copy(position).subtract(meanPoint);\n    exx += p.x * p.x;\n    exy += p.x * p.y;\n    exz += p.x * p.z;\n    eyy += p.y * p.y;\n    eyz += p.y * p.z;\n    ezz += p.z * p.z;\n  }\n\n  exx *= invLength;\n  exy *= invLength;\n  exz *= invLength;\n  eyy *= invLength;\n  eyz *= invLength;\n  ezz *= invLength;\n\n  const covarianceMatrix = scratchCovarianceResult;\n  covarianceMatrix[0] = exx;\n  covarianceMatrix[1] = exy;\n  covarianceMatrix[2] = exz;\n  covarianceMatrix[3] = exy;\n  covarianceMatrix[4] = eyy;\n  covarianceMatrix[5] = eyz;\n  covarianceMatrix[6] = exz;\n  covarianceMatrix[7] = eyz;\n  covarianceMatrix[8] = ezz;\n\n  const {unitary} = computeEigenDecomposition(covarianceMatrix, scratchEigenResult);\n  const rotation = result.halfAxes.copy(unitary);\n\n  let v1 = rotation.getColumn(0, scratchVector4);\n  let v2 = rotation.getColumn(1, scratchVector5);\n  let v3 = rotation.getColumn(2, scratchVector6);\n\n  let u1 = -Number.MAX_VALUE;\n  let u2 = -Number.MAX_VALUE;\n  let u3 = -Number.MAX_VALUE;\n  let l1 = Number.MAX_VALUE;\n  let l2 = Number.MAX_VALUE;\n  let l3 = Number.MAX_VALUE;\n\n  for (const position of positions) {\n    scratchVector2.copy(position);\n\n    u1 = Math.max(scratchVector2.dot(v1), u1);\n    u2 = Math.max(scratchVector2.dot(v2), u2);\n    u3 = Math.max(scratchVector2.dot(v3), u3);\n\n    l1 = Math.min(scratchVector2.dot(v1), l1);\n    l2 = Math.min(scratchVector2.dot(v2), l2);\n    l3 = Math.min(scratchVector2.dot(v3), l3);\n  }\n\n  v1 = v1.multiplyByScalar(0.5 * (l1 + u1));\n  v2 = v2.multiplyByScalar(0.5 * (l2 + u2));\n  v3 = v3.multiplyByScalar(0.5 * (l3 + u3));\n\n  result.center.copy(v1).add(v2).add(v3);\n\n  const scale = scratchVector3.set(u1 - l1, u2 - l2, u3 - l3).multiplyByScalar(0.5);\n  const scaleMatrix = new Matrix3([scale[0], 0, 0, 0, scale[1], 0, 0, 0, scale[2]]);\n  result.halfAxes.multiplyRight(scaleMatrix);\n\n  return result;\n}\n\n/**\n * Computes an instance of an AxisAlignedBoundingBox. The box is determined by\n * finding the points spaced the farthest apart on the x, y, and z axes.\n */\nexport function makeAxisAlignedBoundingBoxFromPoints(\n  positions: readonly number[][],\n  result: AxisAlignedBoundingBox = new AxisAlignedBoundingBox()\n): AxisAlignedBoundingBox {\n  if (!positions || positions.length === 0) {\n    result.minimum.set(0, 0, 0);\n    result.maximum.set(0, 0, 0);\n    result.center.set(0, 0, 0);\n    result.halfDiagonal.set(0, 0, 0);\n    return result;\n  }\n\n  let minimumX = positions[0][0];\n  let minimumY = positions[0][1];\n  let minimumZ = positions[0][2];\n\n  let maximumX = positions[0][0];\n  let maximumY = positions[0][1];\n  let maximumZ = positions[0][2];\n\n  for (const p of positions) {\n    const x = p[0];\n    const y = p[1];\n    const z = p[2];\n\n    minimumX = Math.min(x, minimumX);\n    maximumX = Math.max(x, maximumX);\n    minimumY = Math.min(y, minimumY);\n    maximumY = Math.max(y, maximumY);\n    minimumZ = Math.min(z, minimumZ);\n    maximumZ = Math.max(z, maximumZ);\n  }\n\n  result.minimum.set(minimumX, minimumY, minimumZ);\n  result.maximum.set(maximumX, maximumY, maximumZ);\n  result.center.copy(result.minimum).add(result.maximum).scale(0.5);\n  result.halfDiagonal.copy(result.maximum).subtract(result.center);\n\n  return result;\n}\n"],"mappings":";AAGA,SAAQA,OAAR,EAAiBC,OAAjB,QAA+B,eAA/B;AACA,OAAOC,yBAAP,MAAsC,+BAAtC;AACA,OAAOC,mBAAP,MAAgC,2CAAhC;AACA,OAAOC,sBAAP,MAAmC,+CAAnC;AAEA,IAAMC,cAAc,GAAG,IAAIL,OAAJ,EAAvB;AAEA,IAAMM,cAAc,GAAG,IAAIN,OAAJ,EAAvB;AAEA,IAAMO,cAAc,GAAG,IAAIP,OAAJ,EAAvB;AAEA,IAAMQ,cAAc,GAAG,IAAIR,OAAJ,EAAvB;AAEA,IAAMS,cAAc,GAAG,IAAIT,OAAJ,EAAvB;AAEA,IAAMU,uBAAuB,GAAG,IAAIT,OAAJ,EAAhC;AAEA,IAAMU,kBAAkB,GAAG;EACzBC,QAAQ,EAAE,IAAIX,OAAJ,EADe;EAEzBY,OAAO,EAAE,IAAIZ,OAAJ;AAFgB,CAA3B;AAYA,OAAO,SAASa,iCAATA,CACLC,SADK,EAGgB;EAAA,IADrBC,MAA2B,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAId,mBAAJ,EAFzB;EAIL,IAAI,CAACY,SAAD,IAAcA,SAAS,CAACG,MAAV,KAAqB,CAAvC,EAA0C;IACxCF,MAAM,CAACI,QAAP,GAAkB,IAAInB,OAAJ,CAAY,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAAZ,CAAlB;IACAe,MAAM,CAACK,MAAP,GAAgB,IAAIrB,OAAJ,EAAhB;IACA,OAAOgB,MAAP;EACD;EAED,IAAME,MAAM,GAAGH,SAAS,CAACG,MAAzB;EACA,IAAMI,SAAS,GAAG,IAAItB,OAAJ,CAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAAlB;EAAA,IAAAuB,SAAA,GAAAC,0BAAA,CACuBT,SAAvB;IAAAU,KAAA;EAAA;IAAA,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAAkC;MAAA,IAAvBC,QAAX,GAAAJ,KAAA,CAAAK,KAAA;MACER,SAAS,CAACS,GAAV,CAAcF,QAAd;IACD;EAAA,SAAAG,GAAA;IAAAT,SAAA,CAAAU,CAAA,CAAAD,GAAA;EAAA;IAAAT,SAAA,CAAAW,CAAA;EAAA;EACD,IAAMC,SAAS,GAAG,MAAMjB,MAAxB;EACAI,SAAS,CAACc,gBAAV,CAA2BD,SAA3B;EAEA,IAAIE,GAAG,GAAG,GAAV;EACA,IAAIC,GAAG,GAAG,GAAV;EACA,IAAIC,GAAG,GAAG,GAAV;EACA,IAAIC,GAAG,GAAG,GAAV;EACA,IAAIC,GAAG,GAAG,GAAV;EACA,IAAIC,GAAG,GAAG,GAAV;EAAA,IAAAC,UAAA,GAAAnB,0BAAA,CAEuBT,SAAvB;IAAA6B,MAAA;EAAA;IAAA,KAAAD,UAAA,CAAAjB,CAAA,MAAAkB,MAAA,GAAAD,UAAA,CAAAhB,CAAA,IAAAC,IAAA,GAAkC;MAAA,IAAvBC,SAAX,GAAAe,MAAA,CAAAd,KAAA;MACE,IAAMe,CAAC,GAAGxC,cAAc,CAACyC,IAAf,CAAoBjB,SAApB,EAA8BkB,QAA9B,CAAuCzB,SAAvC,CAAV;MACAe,GAAG,IAAIQ,CAAC,CAACG,CAAF,GAAMH,CAAC,CAACG,CAAf;MACAV,GAAG,IAAIO,CAAC,CAACG,CAAF,GAAMH,CAAC,CAACI,CAAf;MACAV,GAAG,IAAIM,CAAC,CAACG,CAAF,GAAMH,CAAC,CAACK,CAAf;MACAV,GAAG,IAAIK,CAAC,CAACI,CAAF,GAAMJ,CAAC,CAACI,CAAf;MACAR,GAAG,IAAII,CAAC,CAACI,CAAF,GAAMJ,CAAC,CAACK,CAAf;MACAR,GAAG,IAAIG,CAAC,CAACK,CAAF,GAAML,CAAC,CAACK,CAAf;IACD;EAAA,SAAAlB,GAAA;IAAAW,UAAA,CAAAV,CAAA,CAAAD,GAAA;EAAA;IAAAW,UAAA,CAAAT,CAAA;EAAA;EAEDG,GAAG,IAAIF,SAAP;EACAG,GAAG,IAAIH,SAAP;EACAI,GAAG,IAAIJ,SAAP;EACAK,GAAG,IAAIL,SAAP;EACAM,GAAG,IAAIN,SAAP;EACAO,GAAG,IAAIP,SAAP;EAEA,IAAMgB,gBAAgB,GAAGzC,uBAAzB;EACAyC,gBAAgB,CAAC,CAAD,CAAhB,GAAsBd,GAAtB;EACAc,gBAAgB,CAAC,CAAD,CAAhB,GAAsBb,GAAtB;EACAa,gBAAgB,CAAC,CAAD,CAAhB,GAAsBZ,GAAtB;EACAY,gBAAgB,CAAC,CAAD,CAAhB,GAAsBb,GAAtB;EACAa,gBAAgB,CAAC,CAAD,CAAhB,GAAsBX,GAAtB;EACAW,gBAAgB,CAAC,CAAD,CAAhB,GAAsBV,GAAtB;EACAU,gBAAgB,CAAC,CAAD,CAAhB,GAAsBZ,GAAtB;EACAY,gBAAgB,CAAC,CAAD,CAAhB,GAAsBV,GAAtB;EACAU,gBAAgB,CAAC,CAAD,CAAhB,GAAsBT,GAAtB;EAEA,IAAAU,qBAAA,GAAkBlD,yBAAyB,CAACiD,gBAAD,EAAmBxC,kBAAnB,CAA3C;IAAOE,OAAA,GAAAuC,qBAAA,CAAAvC,OAAA;EACP,IAAMwC,QAAQ,GAAGrC,MAAM,CAACI,QAAP,CAAgB0B,IAAhB,CAAqBjC,OAArB,CAAjB;EAEA,IAAIyC,EAAE,GAAGD,QAAQ,CAACE,SAAT,CAAmB,CAAnB,EAAsBhD,cAAtB,CAAT;EACA,IAAIiD,EAAE,GAAGH,QAAQ,CAACE,SAAT,CAAmB,CAAnB,EAAsB/C,cAAtB,CAAT;EACA,IAAIiD,EAAE,GAAGJ,QAAQ,CAACE,SAAT,CAAmB,CAAnB,EAAsB9C,cAAtB,CAAT;EAEA,IAAIiD,EAAE,GAAG,CAACC,MAAM,CAACC,SAAjB;EACA,IAAIC,EAAE,GAAG,CAACF,MAAM,CAACC,SAAjB;EACA,IAAIE,EAAE,GAAG,CAACH,MAAM,CAACC,SAAjB;EACA,IAAIG,EAAE,GAAGJ,MAAM,CAACC,SAAhB;EACA,IAAII,EAAE,GAAGL,MAAM,CAACC,SAAhB;EACA,IAAIK,EAAE,GAAGN,MAAM,CAACC,SAAhB;EAAA,IAAAM,UAAA,GAAA1C,0BAAA,CAEuBT,SAAvB;IAAAoD,MAAA;EAAA;IAAA,KAAAD,UAAA,CAAAxC,CAAA,MAAAyC,MAAA,GAAAD,UAAA,CAAAvC,CAAA,IAAAC,IAAA,GAAkC;MAAA,IAAvBC,UAAX,GAAAsC,MAAA,CAAArC,KAAA;MACEzB,cAAc,CAACyC,IAAf,CAAoBjB,UAApB;MAEA6B,EAAE,GAAGU,IAAI,CAACC,GAAL,CAAShE,cAAc,CAACiE,GAAf,CAAmBhB,EAAnB,CAAT,EAAiCI,EAAjC,CAAL;MACAG,EAAE,GAAGO,IAAI,CAACC,GAAL,CAAShE,cAAc,CAACiE,GAAf,CAAmBd,EAAnB,CAAT,EAAiCK,EAAjC,CAAL;MACAC,EAAE,GAAGM,IAAI,CAACC,GAAL,CAAShE,cAAc,CAACiE,GAAf,CAAmBb,EAAnB,CAAT,EAAiCK,EAAjC,CAAL;MAEAC,EAAE,GAAGK,IAAI,CAACG,GAAL,CAASlE,cAAc,CAACiE,GAAf,CAAmBhB,EAAnB,CAAT,EAAiCS,EAAjC,CAAL;MACAC,EAAE,GAAGI,IAAI,CAACG,GAAL,CAASlE,cAAc,CAACiE,GAAf,CAAmBd,EAAnB,CAAT,EAAiCQ,EAAjC,CAAL;MACAC,EAAE,GAAGG,IAAI,CAACG,GAAL,CAASlE,cAAc,CAACiE,GAAf,CAAmBb,EAAnB,CAAT,EAAiCQ,EAAjC,CAAL;IACD;EAAA,SAAAjC,GAAA;IAAAkC,UAAA,CAAAjC,CAAA,CAAAD,GAAA;EAAA;IAAAkC,UAAA,CAAAhC,CAAA;EAAA;EAEDoB,EAAE,GAAGA,EAAE,CAAClB,gBAAH,CAAoB,OAAO2B,EAAE,GAAGL,EAAZ,CAApB,CAAL;EACAF,EAAE,GAAGA,EAAE,CAACpB,gBAAH,CAAoB,OAAO4B,EAAE,GAAGH,EAAZ,CAApB,CAAL;EACAJ,EAAE,GAAGA,EAAE,CAACrB,gBAAH,CAAoB,OAAO6B,EAAE,GAAGH,EAAZ,CAApB,CAAL;EAEA9C,MAAM,CAACK,MAAP,CAAcyB,IAAd,CAAmBQ,EAAnB,EAAuBvB,GAAvB,CAA2ByB,EAA3B,EAA+BzB,GAA/B,CAAmC0B,EAAnC;EAEA,IAAMe,KAAK,GAAGlE,cAAc,CAACmE,GAAf,CAAmBf,EAAE,GAAGK,EAAxB,EAA4BF,EAAE,GAAGG,EAAjC,EAAqCF,EAAE,GAAGG,EAA1C,EAA8C7B,gBAA9C,CAA+D,GAA/D,CAAd;EACA,IAAMsC,WAAW,GAAG,IAAIzE,OAAJ,CAAY,CAACuE,KAAK,CAAC,CAAD,CAAN,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoBA,KAAK,CAAC,CAAD,CAAzB,EAA8B,CAA9B,EAAiC,CAAjC,EAAoC,CAApC,EAAuCA,KAAK,CAAC,CAAD,CAA5C,CAAZ,CAApB;EACAxD,MAAM,CAACI,QAAP,CAAgBuD,aAAhB,CAA8BD,WAA9B;EAEA,OAAO1D,MAAP;AACD;AAMD,OAAO,SAAS4D,oCAATA,CACL7D,SADK,EAGmB;EAAA,IADxBC,MAA8B,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAIb,sBAAJ,EAF5B;EAIL,IAAI,CAACW,SAAD,IAAcA,SAAS,CAACG,MAAV,KAAqB,CAAvC,EAA0C;IACxCF,MAAM,CAAC6D,OAAP,CAAeJ,GAAf,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB;IACAzD,MAAM,CAAC8D,OAAP,CAAeL,GAAf,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB;IACAzD,MAAM,CAACK,MAAP,CAAcoD,GAAd,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB;IACAzD,MAAM,CAAC+D,YAAP,CAAoBN,GAApB,CAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B;IACA,OAAOzD,MAAP;EACD;EAED,IAAIgE,QAAQ,GAAGjE,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,CAAf;EACA,IAAIkE,QAAQ,GAAGlE,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,CAAf;EACA,IAAImE,QAAQ,GAAGnE,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,CAAf;EAEA,IAAIoE,QAAQ,GAAGpE,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,CAAf;EACA,IAAIqE,QAAQ,GAAGrE,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,CAAf;EACA,IAAIsE,QAAQ,GAAGtE,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,CAAf;EAAA,IAAAuE,UAAA,GAAA9D,0BAAA,CAEgBT,SAAhB;IAAAwE,MAAA;EAAA;IAAA,KAAAD,UAAA,CAAA5D,CAAA,MAAA6D,MAAA,GAAAD,UAAA,CAAA3D,CAAA,IAAAC,IAAA,GAA2B;MAAA,IAAhBiB,CAAX,GAAA0C,MAAA,CAAAzD,KAAA;MACE,IAAMkB,CAAC,GAAGH,CAAC,CAAC,CAAD,CAAX;MACA,IAAMI,CAAC,GAAGJ,CAAC,CAAC,CAAD,CAAX;MACA,IAAMK,CAAC,GAAGL,CAAC,CAAC,CAAD,CAAX;MAEAmC,QAAQ,GAAGZ,IAAI,CAACG,GAAL,CAASvB,CAAT,EAAYgC,QAAZ,CAAX;MACAG,QAAQ,GAAGf,IAAI,CAACC,GAAL,CAASrB,CAAT,EAAYmC,QAAZ,CAAX;MACAF,QAAQ,GAAGb,IAAI,CAACG,GAAL,CAAStB,CAAT,EAAYgC,QAAZ,CAAX;MACAG,QAAQ,GAAGhB,IAAI,CAACC,GAAL,CAASpB,CAAT,EAAYmC,QAAZ,CAAX;MACAF,QAAQ,GAAGd,IAAI,CAACG,GAAL,CAASrB,CAAT,EAAYgC,QAAZ,CAAX;MACAG,QAAQ,GAAGjB,IAAI,CAACC,GAAL,CAASnB,CAAT,EAAYmC,QAAZ,CAAX;IACD;EAAA,SAAArD,GAAA;IAAAsD,UAAA,CAAArD,CAAA,CAAAD,GAAA;EAAA;IAAAsD,UAAA,CAAApD,CAAA;EAAA;EAEDlB,MAAM,CAAC6D,OAAP,CAAeJ,GAAf,CAAmBO,QAAnB,EAA6BC,QAA7B,EAAuCC,QAAvC;EACAlE,MAAM,CAAC8D,OAAP,CAAeL,GAAf,CAAmBU,QAAnB,EAA6BC,QAA7B,EAAuCC,QAAvC;EACArE,MAAM,CAACK,MAAP,CAAcyB,IAAd,CAAmB9B,MAAM,CAAC6D,OAA1B,EAAmC9C,GAAnC,CAAuCf,MAAM,CAAC8D,OAA9C,EAAuDN,KAAvD,CAA6D,GAA7D;EACAxD,MAAM,CAAC+D,YAAP,CAAoBjC,IAApB,CAAyB9B,MAAM,CAAC8D,OAAhC,EAAyC/B,QAAzC,CAAkD/B,MAAM,CAACK,MAAzD;EAEA,OAAOL,MAAP;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}