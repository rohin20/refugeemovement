{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { polyfillVertexArrayObject } from './polyfill-vertex-array-object';\nimport { assert } from '../utils/assert';\nimport { WEBGL2_CONTEXT_POLYFILLS, WEBGL2_CONTEXT_OVERRIDES } from './polyfill-table';\nexport function polyfillContext(gl) {\n  gl.luma = gl.luma || {};\n  var luma = gl.luma;\n  if (!luma.polyfilled) {\n    polyfillVertexArrayObject(gl);\n    initializeExtensions(gl);\n    installPolyfills(gl, WEBGL2_CONTEXT_POLYFILLS);\n    installOverrides(gl, {\n      target: luma,\n      target2: gl\n    });\n    luma.polyfilled = true;\n  }\n  return gl;\n}\nglobalThis.polyfillContext = polyfillContext;\nfunction initializeExtensions(gl) {\n  gl.luma.extensions = {};\n  var EXTENSIONS = gl.getSupportedExtensions() || [];\n  var _iterator = _createForOfIteratorHelper(EXTENSIONS),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var extension = _step.value;\n      gl.luma[extension] = gl.getExtension(extension);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\nfunction installOverrides(gl, _ref) {\n  var target = _ref.target,\n    target2 = _ref.target2;\n  Object.keys(WEBGL2_CONTEXT_OVERRIDES).forEach(function (key) {\n    if (typeof WEBGL2_CONTEXT_OVERRIDES[key] === 'function') {\n      var originalFunc = gl[key] ? gl[key].bind(gl) : function () {};\n      var polyfill = WEBGL2_CONTEXT_OVERRIDES[key].bind(null, gl, originalFunc);\n      target[key] = polyfill;\n      target2[key] = polyfill;\n    }\n  });\n}\nfunction installPolyfills(gl, polyfills) {\n  var _iterator2 = _createForOfIteratorHelper(Object.getOwnPropertyNames(polyfills)),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var extension = _step2.value;\n      if (extension !== 'overrides') {\n        polyfillExtension(gl, {\n          extension: extension,\n          target: gl.luma,\n          target2: gl\n        });\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n}\nfunction polyfillExtension(gl, _ref2) {\n  var extension = _ref2.extension,\n    target = _ref2.target,\n    target2 = _ref2.target2;\n  var defaults = WEBGL2_CONTEXT_POLYFILLS[extension];\n  assert(defaults);\n  var _defaults$meta = defaults.meta,\n    meta = _defaults$meta === void 0 ? {} : _defaults$meta;\n  var _meta$suffix = meta.suffix,\n    suffix = _meta$suffix === void 0 ? '' : _meta$suffix;\n  var ext = gl.getExtension(extension);\n  var _loop = function _loop() {\n    var key = _Object$keys[_i];\n    var extKey = \"\".concat(key).concat(suffix);\n    var polyfill = null;\n    if (key === 'meta') {} else if (typeof gl[key] === 'function') {} else if (ext && typeof ext[extKey] === 'function') {\n      polyfill = function polyfill() {\n        return ext[extKey].apply(ext, arguments);\n      };\n    } else if (typeof defaults[key] === 'function') {\n      polyfill = defaults[key].bind(target);\n    }\n    if (polyfill) {\n      target[key] = polyfill;\n      target2[key] = polyfill;\n    }\n  };\n  for (var _i = 0, _Object$keys = Object.keys(defaults); _i < _Object$keys.length; _i++) {\n    _loop();\n  }\n}","map":{"version":3,"names":["polyfillVertexArrayObject","assert","WEBGL2_CONTEXT_POLYFILLS","WEBGL2_CONTEXT_OVERRIDES","polyfillContext","gl","luma","polyfilled","initializeExtensions","installPolyfills","installOverrides","target","target2","globalThis","extensions","EXTENSIONS","getSupportedExtensions","_iterator","_createForOfIteratorHelper","_step","s","n","done","extension","value","getExtension","err","e","f","_ref","Object","keys","forEach","key","originalFunc","bind","polyfill","polyfills","_iterator2","getOwnPropertyNames","_step2","polyfillExtension","_ref2","defaults","_defaults$meta","meta","_meta$suffix","suffix","ext","_loop","_Object$keys","_i","extKey","concat","apply","arguments","length"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@luma.gl/gltools/src/polyfill/polyfill-context.js"],"sourcesContent":["// WebGL1/WebGL2 extension polyfill support\n//\n// Provides a function that creates polyfills for WebGL2 functions based\n// on available extensions and installs them on a supplied target (could be\n// the WebGLContext or its prototype, or a separate object).\n//\n// This is intended to be a stand-alone file with minimal dependencies,\n// easy to reuse or repurpose in other projects.\n\n/** @typedef {import('./polyfill-context')} types */\n\nimport {polyfillVertexArrayObject} from './polyfill-vertex-array-object';\nimport {assert} from '../utils/assert';\n\nimport {WEBGL2_CONTEXT_POLYFILLS, WEBGL2_CONTEXT_OVERRIDES} from './polyfill-table';\n\n/** @type {types['polyfillContext']} */\nexport function polyfillContext(gl) {\n  // @ts-ignore\n  gl.luma = gl.luma || {};\n  // @ts-ignore\n  const {luma} = gl;\n\n  if (!luma.polyfilled) {\n    polyfillVertexArrayObject(gl);\n    initializeExtensions(gl);\n    installPolyfills(gl, WEBGL2_CONTEXT_POLYFILLS);\n    installOverrides(gl, {target: luma, target2: gl});\n    luma.polyfilled = true;\n  }\n\n  // TODO - only supporting a few members\n  /** @type {WebGL2RenderingContext} */\n  // @ts-ignore\n  return gl;\n}\n\n// TODO - is this still required?\n// @ts-ignore\nglobalThis.polyfillContext = polyfillContext;\n\nfunction initializeExtensions(gl) {\n  gl.luma.extensions = {};\n  // `getSupportedExtensions` can return null when context is lost.\n  const EXTENSIONS = gl.getSupportedExtensions() || [];\n  for (const extension of EXTENSIONS) {\n    gl.luma[extension] = gl.getExtension(extension);\n  }\n}\n\n// Install simple overrides (mostly get* functions)\nfunction installOverrides(gl, {target, target2}) {\n  Object.keys(WEBGL2_CONTEXT_OVERRIDES).forEach(key => {\n    if (typeof WEBGL2_CONTEXT_OVERRIDES[key] === 'function') {\n      // install an override, if no implementation was detected\n      const originalFunc = gl[key] ? gl[key].bind(gl) : () => {};\n      const polyfill = WEBGL2_CONTEXT_OVERRIDES[key].bind(null, gl, originalFunc);\n      target[key] = polyfill;\n      target2[key] = polyfill;\n    }\n  });\n}\n\nfunction installPolyfills(gl, polyfills) {\n  for (const extension of Object.getOwnPropertyNames(polyfills)) {\n    if (extension !== 'overrides') {\n      polyfillExtension(gl, {extension, target: gl.luma, target2: gl});\n    }\n  }\n}\n\n// Polyfills a single WebGL extension into the `target` object\nfunction polyfillExtension(gl, {extension, target, target2}) {\n  const defaults = WEBGL2_CONTEXT_POLYFILLS[extension];\n  assert(defaults);\n\n  const {meta = {}} = defaults;\n  const {suffix = ''} = meta;\n\n  const ext = gl.getExtension(extension);\n\n  for (const key of Object.keys(defaults)) {\n    const extKey = `${key}${suffix}`;\n\n    let polyfill = null;\n    if (key === 'meta') {\n      // ignore\n    } else if (typeof gl[key] === 'function') {\n      // WebGL2 implementation is already\n    } else if (ext && typeof ext[extKey] === 'function') {\n      // pick extension implemenentation,if available\n      polyfill = (...args) => ext[extKey](...args);\n    } else if (typeof defaults[key] === 'function') {\n      // pick the mock implementation, if no implementation was detected\n      polyfill = defaults[key].bind(target);\n    }\n\n    if (polyfill) {\n      target[key] = polyfill;\n      target2[key] = polyfill;\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}