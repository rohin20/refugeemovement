{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = SidePanelFactory;\nexports.StyledSidePanelContent = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _localization = require(\"@kepler.gl/localization\");\nvar _constants = require(\"@kepler.gl/constants\");\nvar _icons = require(\"./common/icons\");\nvar _sideBar = _interopRequireDefault(require(\"./side-panel/side-bar\"));\nvar _panelHeader = _interopRequireDefault(require(\"./side-panel/panel-header\"));\nvar _panelToggle = _interopRequireDefault(require(\"./side-panel/panel-toggle\"));\nvar _layerManager = _interopRequireDefault(require(\"./side-panel/layer-manager\"));\nvar _filterManager = _interopRequireDefault(require(\"./side-panel/filter-manager\"));\nvar _interactionManager = _interopRequireDefault(require(\"./side-panel/interaction-manager\"));\nvar _mapManager = _interopRequireDefault(require(\"./side-panel/map-manager\"));\nvar _customPanel = _interopRequireDefault(require(\"./side-panel/custom-panel\"));\nvar _panelTitle = _interopRequireDefault(require(\"./side-panel/panel-title\"));\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\nvar _lodash = _interopRequireDefault(require(\"lodash.get\"));\nvar _templateObject;\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nvar StyledSidePanelContent = _styledComponents[\"default\"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  \", \";\\n  flex-grow: 1;\\n  padding: \", \"px;\\n  overflow-y: scroll;\\n  overflow-x: hidden;\\n\\n  .side-panel__content__inner {\\n    display: flex;\\n    height: 100%;\\n    flex-direction: column;\\n  }\\n\"])), function (props) {\n  return props.theme.sidePanelScrollBar;\n}, function (props) {\n  return props.theme.sidePanelInnerPadding;\n});\nexports.StyledSidePanelContent = StyledSidePanelContent;\nSidePanelFactory.deps = [_sideBar[\"default\"], _panelHeader[\"default\"], _panelToggle[\"default\"], _panelTitle[\"default\"], _layerManager[\"default\"], _filterManager[\"default\"], _interactionManager[\"default\"], _mapManager[\"default\"], _customPanel[\"default\"]];\n/**\n * Vertical sidebar containing input components for the rendering layers\n */\n\nfunction SidePanelFactory(Sidebar, PanelHeader, PanelToggle, PanelTitle, LayerManager, FilterManager, InteractionManager, MapManager, CustomPanels) {\n  // inject components\n  var SIDEBAR_COMPONENTS = {\n    layer: LayerManager,\n    filter: FilterManager,\n    interaction: InteractionManager,\n    map: MapManager\n  };\n  var SIDEBAR_ICONS = {\n    layer: _icons.Layers,\n    filter: _icons.FilterFunnel,\n    interaction: _icons.Settings,\n    map: _icons.CursorClick\n  }; // We should defined sidebar panels here but keeping them for backward compatible\n\n  var fullPanels = _constants.SIDEBAR_PANELS.map(function (component) {\n    return _objectSpread(_objectSpread({}, component), {}, {\n      component: SIDEBAR_COMPONENTS[component.id],\n      iconComponent: SIDEBAR_ICONS[component.id]\n    });\n  });\n  var getCustomPanelProps = (0, _lodash[\"default\"])(CustomPanels, ['defaultProps', 'getProps']) || function () {\n    return {};\n  }; // eslint-disable-next-line max-statements\n\n  var SidePanel = function SidePanel(props) {\n    var appName = props.appName,\n      appWebsite = props.appWebsite,\n      availableProviders = props.availableProviders,\n      datasets = props.datasets,\n      filters = props.filters,\n      layers = props.layers,\n      layerBlending = props.layerBlending,\n      layerClasses = props.layerClasses,\n      layerOrder = props.layerOrder,\n      interactionConfig = props.interactionConfig,\n      panels = props.panels,\n      mapInfo = props.mapInfo,\n      mapSaved = props.mapSaved,\n      mapStateActions = props.mapStateActions,\n      mapStyle = props.mapStyle,\n      mapStyleActions = props.mapStyleActions,\n      onSaveMap = props.onSaveMap,\n      uiState = props.uiState,\n      uiStateActions = props.uiStateActions,\n      visStateActions = props.visStateActions,\n      version = props.version,\n      width = props.width;\n    var openDeleteModal = uiStateActions.openDeleteModal,\n      toggleModal = uiStateActions.toggleModal,\n      toggleSidePanel = uiStateActions.toggleSidePanel;\n    var activeSidePanel = uiState.activeSidePanel;\n    var setMapInfo = visStateActions.setMapInfo,\n      showDatasetTable = visStateActions.showDatasetTable,\n      updateTableColor = visStateActions.updateTableColor;\n    var hasShare = availableProviders.hasShare,\n      hasStorage = availableProviders.hasStorage;\n    var title = mapInfo.title;\n    var isOpen = Boolean(activeSidePanel);\n    var _onOpenOrClose = (0, _react.useCallback)(function () {\n      return toggleSidePanel(activeSidePanel ? '' : 'layer');\n    }, [activeSidePanel, toggleSidePanel]);\n    var onClickExportImage = (0, _react.useCallback)(function () {\n      return toggleModal(_constants.EXPORT_IMAGE_ID);\n    }, [toggleModal]);\n    var onClickExportData = (0, _react.useCallback)(function () {\n      return toggleModal(_constants.EXPORT_DATA_ID);\n    }, [toggleModal]);\n    var onClickExportMap = (0, _react.useCallback)(function () {\n      return toggleModal(_constants.EXPORT_MAP_ID);\n    }, [toggleModal]);\n    var onClickSaveToStorage = (0, _react.useCallback)(function () {\n      return toggleModal(mapSaved ? _constants.OVERWRITE_MAP_ID : _constants.SAVE_MAP_ID);\n    }, [mapSaved, toggleModal]);\n    var onClickSaveAsToStorage = (0, _react.useCallback)(function () {\n      setMapInfo({\n        title: \"\".concat(title || 'Kepler.gl', \" (Copy)\")\n      });\n      toggleModal(_constants.SAVE_MAP_ID);\n    }, [title, setMapInfo, toggleModal]);\n    var onClickShareMap = (0, _react.useCallback)(function () {\n      return toggleModal(_constants.SHARE_MAP_ID);\n    }, [toggleModal]);\n    var onShowDatasetTable = (0, _react.useCallback)(function (dataId) {\n      return showDatasetTable(dataId);\n    }, [showDatasetTable]);\n    var onUpdateTableColor = (0, _react.useCallback)(function (dataId, newColor) {\n      return updateTableColor(dataId, newColor);\n    }, [updateTableColor]);\n    var onShowAddDataModal = (0, _react.useCallback)(function () {\n      return toggleModal(_constants.ADD_DATA_ID);\n    }, [toggleModal]);\n    var onShowAddMapStyleModal = (0, _react.useCallback)(function () {\n      return toggleModal(_constants.ADD_MAP_STYLE_ID);\n    }, [toggleModal]);\n    var onRemoveDataset = (0, _react.useCallback)(function (dataId) {\n      return openDeleteModal(dataId);\n    }, [openDeleteModal]);\n    var onSaveToStorage = (0, _react.useMemo)(function () {\n      return hasStorage ? onClickSaveToStorage : null;\n    }, [hasStorage, onClickSaveToStorage]);\n    var onSaveAsToStorage = (0, _react.useMemo)(function () {\n      return hasStorage && mapSaved ? onClickSaveAsToStorage : null;\n    }, [hasStorage, mapSaved, onClickSaveAsToStorage]);\n    var currentPanel = (0, _react.useMemo)(function () {\n      return panels.find(function (_ref) {\n        var id = _ref.id;\n        return id === activeSidePanel;\n      });\n    }, [activeSidePanel, panels]);\n    var onShareMap = (0, _react.useMemo)(function () {\n      return hasShare ? onClickShareMap : null;\n    }, [hasShare, onClickShareMap]);\n    var customPanelProps = (0, _react.useMemo)(function () {\n      return getCustomPanelProps(props);\n    }, [props]);\n    var PanelComponent = currentPanel === null || currentPanel === void 0 ? void 0 : currentPanel.component;\n    return /*#__PURE__*/_react[\"default\"].createElement(Sidebar, {\n      width: width,\n      isOpen: isOpen,\n      minifiedWidth: 0,\n      onOpenOrClose: _onOpenOrClose\n    }, /*#__PURE__*/_react[\"default\"].createElement(PanelHeader, {\n      appName: appName,\n      version: version,\n      appWebsite: appWebsite,\n      visibleDropdown: uiState.visibleDropdown,\n      showExportDropdown: uiStateActions.showExportDropdown,\n      hideExportDropdown: uiStateActions.hideExportDropdown,\n      onExportImage: onClickExportImage,\n      onExportData: onClickExportData,\n      onExportMap: onClickExportMap,\n      onSaveMap: onSaveMap,\n      onSaveToStorage: onSaveToStorage,\n      onSaveAsToStorage: onSaveAsToStorage,\n      onShareMap: onShareMap\n    }), /*#__PURE__*/_react[\"default\"].createElement(PanelToggle, {\n      panels: panels,\n      activePanel: activeSidePanel,\n      togglePanel: uiStateActions.toggleSidePanel\n    }), /*#__PURE__*/_react[\"default\"].createElement(StyledSidePanelContent, {\n      className: \"side-panel__content\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n      className: \"side-panel__content__inner\"\n    }, (currentPanel === null || currentPanel === void 0 ? void 0 : currentPanel.id) !== 'layer' ? /*#__PURE__*/_react[\"default\"].createElement(PanelTitle, null, /*#__PURE__*/_react[\"default\"].createElement(_localization.FormattedMessage, {\n      id: currentPanel === null || currentPanel === void 0 ? void 0 : currentPanel.label\n    })) : null, PanelComponent ? /*#__PURE__*/_react[\"default\"].createElement(PanelComponent, {\n      datasets: datasets,\n      filters: filters,\n      layers: layers,\n      layerClasses: layerClasses,\n      layerOrder: layerOrder,\n      layerBlending: layerBlending,\n      mapStyle: mapStyle,\n      mapStyleActions: mapStyleActions,\n      mapStateActions: mapStateActions,\n      interactionConfig: interactionConfig,\n      removeDataset: onRemoveDataset,\n      showDatasetTable: onShowDatasetTable,\n      updateTableColor: onUpdateTableColor,\n      showAddDataModal: onShowAddDataModal,\n      showAddMapStyleModal: onShowAddMapStyleModal,\n      uiStateActions: uiStateActions,\n      visStateActions: visStateActions,\n      panelMetadata: currentPanel,\n      layerPanelListView: (currentPanel === null || currentPanel === void 0 ? void 0 : currentPanel.id) === 'layer' && uiState.layerPanelListView\n    }) : null, /*#__PURE__*/_react[\"default\"].createElement(CustomPanels, (0, _extends2[\"default\"])({}, customPanelProps, {\n      activeSidePanel: activeSidePanel\n    })))));\n  };\n  SidePanel.defaultProps = {\n    panels: fullPanels,\n    sidebarComponents: SIDEBAR_COMPONENTS,\n    uiState: {},\n    visStateActions: {},\n    mapStyleActions: {},\n    uiStateActions: {},\n    availableProviders: {},\n    mapInfo: {}\n  };\n  return SidePanel;\n}","map":{"version":3,"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","StyledSidePanelContent","_extends2","_defineProperty2","_taggedTemplateLiteral2","_react","_localization","_constants","_icons","_sideBar","_filterManager","_interactionManager","_mapManager","_panelTitle","_styledComponents","_lodash","_templateObject","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","div","props","theme","sidePanelScrollBar","sidePanelInnerPadding","SidePanelFactory","deps","_panelHeader","_panelToggle","_layerManager","_customPanel","Sidebar","PanelHeader","PanelToggle","PanelTitle","LayerManager","FilterManager","InteractionManager","MapManager","CustomPanels","SIDEBAR_COMPONENTS","layer","SIDEBAR_ICONS","Layers","FilterFunnel","interaction","Settings","map","CursorClick","fullPanels","SIDEBAR_PANELS","component","id","iconComponent","getCustomPanelProps","SidePanel","appName","appWebsite","availableProviders","datasets","filters","layers","layerBlending","layerClasses","layerOrder","interactionConfig","panels","mapInfo","mapSaved","mapStyle","mapStyleActions","onSaveMap","uiStateActions","visStateActions","version","width","openDeleteModal","toggleModal","toggleSidePanel","activeSidePanel","uiState","setMapInfo","showDatasetTable","updateTableColor","hasShare","hasStorage","title","isOpen","Boolean","_onOpenOrClose","useCallback","onClickExportImage","EXPORT_IMAGE_ID","onClickExportData","EXPORT_DATA_ID","onClickExportMap","EXPORT_MAP_ID","onClickSaveToStorage","OVERWRITE_MAP_ID","SAVE_MAP_ID","onClickSaveAsToStorage","concat","onClickShareMap","SHARE_MAP_ID","onShowDatasetTable","dataId","onUpdateTableColor","newColor","onShowAddDataModal","ADD_DATA_ID","onShowAddMapStyleModal","ADD_MAP_STYLE_ID","onRemoveDataset","onSaveToStorage","useMemo","onSaveAsToStorage","currentPanel","find","_ref","onShareMap","customPanelProps","PanelComponent","createElement","minifiedWidth","onOpenOrClose","visibleDropdown","showExportDropdown","hideExportDropdown","onExportImage","onExportData","onExportMap","activePanel","togglePanel","className","FormattedMessage","label","mapStateActions","removeDataset","showAddDataModal","showAddMapStyleModal"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/components/src/side-panel.tsx"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {useCallback, useMemo} from 'react';\nimport {FormattedMessage} from '@kepler.gl/localization';\n\nimport {\n  EXPORT_DATA_ID,\n  EXPORT_MAP_ID,\n  SHARE_MAP_ID,\n  SIDEBAR_PANELS,\n  OVERWRITE_MAP_ID,\n  SAVE_MAP_ID,\n  EXPORT_IMAGE_ID,\n  ADD_DATA_ID,\n  ADD_MAP_STYLE_ID\n} from '@kepler.gl/constants';\n\nimport {CursorClick, Layers, FilterFunnel, Settings} from './common/icons';\n\nimport SidebarFactory from './side-panel/side-bar';\nimport PanelHeaderFactory from './side-panel/panel-header';\nimport PanelToggleFactory from './side-panel/panel-toggle';\nimport LayerManagerFactory from './side-panel/layer-manager';\nimport FilterManagerFactory from './side-panel/filter-manager';\nimport InteractionManagerFactory from './side-panel/interaction-manager';\nimport MapManagerFactory from './side-panel/map-manager';\nimport CustomPanelsFactory from './side-panel/custom-panel';\nimport PanelTitleFactory from './side-panel/panel-title';\n\nimport styled from 'styled-components';\nimport get from 'lodash.get';\nimport {SidePanelProps} from './types';\n\nexport const StyledSidePanelContent = styled.div`\n  ${props => props.theme.sidePanelScrollBar};\n  flex-grow: 1;\n  padding: ${props => props.theme.sidePanelInnerPadding}px;\n  overflow-y: scroll;\n  overflow-x: hidden;\n\n  .side-panel__content__inner {\n    display: flex;\n    height: 100%;\n    flex-direction: column;\n  }\n`;\n\nSidePanelFactory.deps = [\n  SidebarFactory,\n  PanelHeaderFactory,\n  PanelToggleFactory,\n  PanelTitleFactory,\n  LayerManagerFactory,\n  FilterManagerFactory,\n  InteractionManagerFactory,\n  MapManagerFactory,\n  CustomPanelsFactory\n];\n\n/**\n * Vertical sidebar containing input components for the rendering layers\n */\nexport default function SidePanelFactory(\n  Sidebar: ReturnType<typeof SidebarFactory>,\n  PanelHeader: ReturnType<typeof PanelHeaderFactory>,\n  PanelToggle: ReturnType<typeof PanelToggleFactory>,\n  PanelTitle: ReturnType<typeof PanelTitleFactory>,\n  LayerManager: ReturnType<typeof LayerManagerFactory>,\n  FilterManager: ReturnType<typeof FilterManagerFactory>,\n  InteractionManager: ReturnType<typeof InteractionManagerFactory>,\n  MapManager: ReturnType<typeof MapManagerFactory>,\n  CustomPanels: ReturnType<typeof CustomPanelsFactory>\n) {\n  // inject components\n  const SIDEBAR_COMPONENTS = {\n    layer: LayerManager,\n    filter: FilterManager,\n    interaction: InteractionManager,\n    map: MapManager\n  };\n\n  const SIDEBAR_ICONS = {\n    layer: Layers,\n    filter: FilterFunnel,\n    interaction: Settings,\n    map: CursorClick\n  };\n\n  // We should defined sidebar panels here but keeping them for backward compatible\n  const fullPanels = SIDEBAR_PANELS.map(component => ({\n    ...component,\n    component: SIDEBAR_COMPONENTS[component.id],\n    iconComponent: SIDEBAR_ICONS[component.id]\n  }));\n\n  const getCustomPanelProps = get(CustomPanels, ['defaultProps', 'getProps']) || (() => ({}));\n\n  // eslint-disable-next-line max-statements\n  const SidePanel = (props: SidePanelProps) => {\n    const {\n      appName,\n      appWebsite,\n      availableProviders,\n      datasets,\n      filters,\n      layers,\n      layerBlending,\n      layerClasses,\n      layerOrder,\n      interactionConfig,\n      panels,\n      mapInfo,\n      mapSaved,\n      mapStateActions,\n      mapStyle,\n      mapStyleActions,\n      onSaveMap,\n      uiState,\n      uiStateActions,\n      visStateActions,\n      version,\n      width\n    } = props;\n    const {openDeleteModal, toggleModal, toggleSidePanel} = uiStateActions;\n    const {activeSidePanel} = uiState;\n    const {setMapInfo, showDatasetTable, updateTableColor} = visStateActions;\n    const {hasShare, hasStorage} = availableProviders;\n\n    const {title} = mapInfo;\n\n    const isOpen = Boolean(activeSidePanel);\n\n    const _onOpenOrClose = useCallback(() => toggleSidePanel(activeSidePanel ? '' : 'layer'), [\n      activeSidePanel,\n      toggleSidePanel\n    ]);\n\n    const onClickExportImage = useCallback(() => toggleModal(EXPORT_IMAGE_ID), [toggleModal]);\n    const onClickExportData = useCallback(() => toggleModal(EXPORT_DATA_ID), [toggleModal]);\n    const onClickExportMap = useCallback(() => toggleModal(EXPORT_MAP_ID), [toggleModal]);\n    const onClickSaveToStorage = useCallback(\n      () => toggleModal(mapSaved ? OVERWRITE_MAP_ID : SAVE_MAP_ID),\n      [mapSaved, toggleModal]\n    );\n    const onClickSaveAsToStorage = useCallback(() => {\n      setMapInfo({\n        title: `${title || 'Kepler.gl'} (Copy)`\n      });\n\n      toggleModal(SAVE_MAP_ID);\n    }, [title, setMapInfo, toggleModal]);\n    const onClickShareMap = useCallback(() => toggleModal(SHARE_MAP_ID), [toggleModal]);\n    const onShowDatasetTable = useCallback(dataId => showDatasetTable(dataId), [showDatasetTable]);\n    const onUpdateTableColor = useCallback(\n      (dataId, newColor) => updateTableColor(dataId, newColor),\n      [updateTableColor]\n    );\n    const onShowAddDataModal = useCallback(() => toggleModal(ADD_DATA_ID), [toggleModal]);\n    const onShowAddMapStyleModal = useCallback(() => toggleModal(ADD_MAP_STYLE_ID), [toggleModal]);\n    const onRemoveDataset = useCallback(dataId => openDeleteModal(dataId), [openDeleteModal]);\n    const onSaveToStorage = useMemo(() => (hasStorage ? onClickSaveToStorage : null), [\n      hasStorage,\n      onClickSaveToStorage\n    ]);\n    const onSaveAsToStorage = useMemo(\n      () => (hasStorage && mapSaved ? onClickSaveAsToStorage : null),\n      [hasStorage, mapSaved, onClickSaveAsToStorage]\n    );\n    const currentPanel = useMemo(() => panels.find(({id}) => id === activeSidePanel), [\n      activeSidePanel,\n      panels\n    ]);\n    const onShareMap = useMemo(() => (hasShare ? onClickShareMap : null), [\n      hasShare,\n      onClickShareMap\n    ]);\n    const customPanelProps = useMemo(() => getCustomPanelProps(props), [props]);\n\n    const PanelComponent = currentPanel?.component;\n\n    return (\n      <Sidebar width={width} isOpen={isOpen} minifiedWidth={0} onOpenOrClose={_onOpenOrClose}>\n        <PanelHeader\n          appName={appName}\n          version={version}\n          appWebsite={appWebsite}\n          visibleDropdown={uiState.visibleDropdown}\n          showExportDropdown={uiStateActions.showExportDropdown}\n          hideExportDropdown={uiStateActions.hideExportDropdown}\n          onExportImage={onClickExportImage}\n          onExportData={onClickExportData}\n          onExportMap={onClickExportMap}\n          onSaveMap={onSaveMap}\n          onSaveToStorage={onSaveToStorage}\n          onSaveAsToStorage={onSaveAsToStorage}\n          onShareMap={onShareMap}\n        />\n        {/* the next two components should be moved into one */}\n        {/* but i am keeping them because of backward compatibility */}\n        <PanelToggle\n          panels={panels}\n          activePanel={activeSidePanel}\n          togglePanel={uiStateActions.toggleSidePanel}\n        />\n        <StyledSidePanelContent className=\"side-panel__content\">\n          <div className=\"side-panel__content__inner\">\n            {currentPanel?.id !== 'layer' ? (\n              <PanelTitle>\n                <FormattedMessage id={currentPanel?.label} />\n              </PanelTitle>\n            ) : null}\n            {PanelComponent ? (\n              <PanelComponent\n                datasets={datasets}\n                filters={filters}\n                layers={layers}\n                layerClasses={layerClasses}\n                layerOrder={layerOrder}\n                layerBlending={layerBlending}\n                mapStyle={mapStyle}\n                mapStyleActions={mapStyleActions}\n                mapStateActions={mapStateActions}\n                interactionConfig={interactionConfig}\n                removeDataset={onRemoveDataset}\n                showDatasetTable={onShowDatasetTable}\n                updateTableColor={onUpdateTableColor}\n                showAddDataModal={onShowAddDataModal}\n                showAddMapStyleModal={onShowAddMapStyleModal}\n                uiStateActions={uiStateActions}\n                visStateActions={visStateActions}\n                panelMetadata={currentPanel}\n                layerPanelListView={currentPanel?.id === 'layer' && uiState.layerPanelListView}\n              />\n            ) : null}\n            <CustomPanels {...customPanelProps} activeSidePanel={activeSidePanel} />\n          </div>\n        </StyledSidePanelContent>\n      </Sidebar>\n    );\n  };\n\n  SidePanel.defaultProps = {\n    panels: fullPanels,\n    sidebarComponents: SIDEBAR_COMPONENTS,\n    uiState: {},\n    visStateActions: {},\n    mapStyleActions: {},\n    uiStateActions: {},\n    availableProviders: {},\n    mapInfo: {}\n  };\n\n  return SidePanel;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}