{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSavedMapsError = exports.getSavedMapsSuccess = exports.getSavedMaps = exports.loadCloudMapError = exports.loadCloudMapSuccess = exports.loadCloudMap = exports.setCloudProvider = exports.resetProviderStatus = exports.postSaveLoadSuccess = exports.exportFileError = exports.exportFileSuccess = exports.exportFileToCloud = exports.ActionTypes = void 0;\nvar _toolkit = require(\"@reduxjs/toolkit\");\nvar _actionTypes = require(\"./action-types\"); // eslint-disable-next-line prettier/prettier\nvar assignType = function assignType(obj) {\n  return obj;\n};\nvar ActionTypes = assignType({\n  EXPORT_FILE_TO_CLOUD: \"\".concat(_actionTypes.ACTION_PREFIX, \"EXPORT_FILE_TO_CLOUD\"),\n  EXPORT_FILE_SUCCESS: \"\".concat(_actionTypes.ACTION_PREFIX, \"EXPORT_FILE_SUCCESS\"),\n  EXPORT_FILE_ERROR: \"\".concat(_actionTypes.ACTION_PREFIX, \"EXPORT_FILE_ERROR\"),\n  RESET_PROVIDER_STATUS: \"\".concat(_actionTypes.ACTION_PREFIX, \"RESET_PROVIDER_STATUS\"),\n  SET_CLOUD_PROVIDER: \"\".concat(_actionTypes.ACTION_PREFIX, \"SET_CLOUD_PROVIDER\"),\n  POST_SAVE_LOAD_SUCCESS: \"\".concat(_actionTypes.ACTION_PREFIX, \"POST_SAVE_LOAD_SUCCESS\"),\n  LOAD_CLOUD_MAP: \"\".concat(_actionTypes.ACTION_PREFIX, \"LOAD_CLOUD_MAP\"),\n  LOAD_CLOUD_MAP_SUCCESS: \"\".concat(_actionTypes.ACTION_PREFIX, \"LOAD_CLOUD_MAP_SUCCESS\"),\n  LOAD_CLOUD_MAP_ERROR: \"\".concat(_actionTypes.ACTION_PREFIX, \"LOAD_CLOUD_MAP_ERROR\"),\n  GET_SAVED_MAPS: \"\".concat(_actionTypes.ACTION_PREFIX, \"GET_SAVED_MAPS\"),\n  GET_SAVED_MAPS_SUCCESS: \"\".concat(_actionTypes.ACTION_PREFIX, \"GET_SAVED_MAPS_SUCCESS\"),\n  GET_SAVED_MAPS_ERROR: \"\".concat(_actionTypes.ACTION_PREFIX, \"GET_SAVED_MAPS_ERROR\")\n});\n/**\n * Call provider to upload file to cloud\n * @param mapData\n * @param provider\n * @param options\n * @param onSuccess\n * @param onError\n * @param closeModal\n */\n\nexports.ActionTypes = ActionTypes;\nvar exportFileToCloud = (0, _toolkit.createAction)(ActionTypes.EXPORT_FILE_TO_CLOUD, function (payload) {\n  return {\n    payload: payload\n  };\n});\n/** EXPORT_FILE_SUCCESS */\n\nexports.exportFileToCloud = exportFileToCloud;\nvar exportFileSuccess = (0, _toolkit.createAction)(ActionTypes.EXPORT_FILE_SUCCESS, function (payload) {\n  return {\n    payload: payload\n  };\n});\n/** EXPORT_FILE_ERROR */\n\nexports.exportFileSuccess = exportFileSuccess;\nvar exportFileError = (0, _toolkit.createAction)(ActionTypes.EXPORT_FILE_ERROR, function (payload) {\n  return {\n    payload: payload\n  };\n});\n/** POST_SAVE_LOAD_SUCCESS */\n\nexports.exportFileError = exportFileError;\nvar postSaveLoadSuccess = (0, _toolkit.createAction)(ActionTypes.POST_SAVE_LOAD_SUCCESS, function (message) {\n  return {\n    payload: message\n  };\n});\nexports.postSaveLoadSuccess = postSaveLoadSuccess;\nvar resetProviderStatus = (0, _toolkit.createAction)(ActionTypes.RESET_PROVIDER_STATUS);\n/** SET_CLOUD_PROVIDER */\n\nexports.resetProviderStatus = resetProviderStatus;\nvar setCloudProvider = (0, _toolkit.createAction)(ActionTypes.SET_CLOUD_PROVIDER, function (provider) {\n  return {\n    payload: provider\n  };\n});\n/** LOAD_CLOUD_MAP */\n\nexports.setCloudProvider = setCloudProvider;\nvar loadCloudMap = (0, _toolkit.createAction)(ActionTypes.LOAD_CLOUD_MAP, function (payload) {\n  return {\n    payload: payload\n  };\n});\n/** LOAD_CLOUD_MAP_SUCCESS */\n\nexports.loadCloudMap = loadCloudMap;\nvar loadCloudMapSuccess = (0, _toolkit.createAction)(ActionTypes.LOAD_CLOUD_MAP_SUCCESS, function (payload) {\n  return {\n    payload: payload\n  };\n});\n/** LOAD_CLOUD_MAP_ERROR */\n\nexports.loadCloudMapSuccess = loadCloudMapSuccess;\nvar loadCloudMapError = (0, _toolkit.createAction)(ActionTypes.LOAD_CLOUD_MAP_ERROR, function (payload) {\n  return {\n    payload: payload\n  };\n});\n/** GET_SAVED_MAPS */\n\nexports.loadCloudMapError = loadCloudMapError;\nvar getSavedMaps = (0, _toolkit.createAction)(ActionTypes.GET_SAVED_MAPS, function (provider) {\n  return {\n    payload: provider\n  };\n});\n/** GET_SAVED_MAPS_SUCCESS */\n\nexports.getSavedMaps = getSavedMaps;\nvar getSavedMapsSuccess = (0, _toolkit.createAction)(ActionTypes.GET_SAVED_MAPS_SUCCESS, function (payload) {\n  return {\n    payload: payload\n  };\n});\n/** GET_SAVED_MAPS_ERROR */\n\nexports.getSavedMapsSuccess = getSavedMapsSuccess;\nvar getSavedMapsError = (0, _toolkit.createAction)(ActionTypes.GET_SAVED_MAPS_ERROR, function (payload) {\n  return {\n    payload: payload\n  };\n});\nexports.getSavedMapsError = getSavedMapsError;","map":{"version":3,"names":["Object","defineProperty","exports","value","getSavedMapsError","getSavedMapsSuccess","getSavedMaps","loadCloudMapError","loadCloudMapSuccess","loadCloudMap","setCloudProvider","resetProviderStatus","postSaveLoadSuccess","exportFileError","exportFileSuccess","exportFileToCloud","ActionTypes","_toolkit","require","_actionTypes","assignType","obj","EXPORT_FILE_TO_CLOUD","concat","ACTION_PREFIX","EXPORT_FILE_SUCCESS","EXPORT_FILE_ERROR","RESET_PROVIDER_STATUS","SET_CLOUD_PROVIDER","POST_SAVE_LOAD_SUCCESS","LOAD_CLOUD_MAP","LOAD_CLOUD_MAP_SUCCESS","LOAD_CLOUD_MAP_ERROR","GET_SAVED_MAPS","GET_SAVED_MAPS_SUCCESS","GET_SAVED_MAPS_ERROR","payload","message","provider"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/actions/src/provider-actions.ts"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {createAction} from '@reduxjs/toolkit';\nimport {ACTION_PREFIX} from './action-types';\nimport {ExportFileOptions, ExportFileToCloudPayload, OnErrorCallBack, OnSuccessCallBack} from '@kepler.gl/types';\nimport {MapListItem, Provider} from '@kepler.gl/cloud-providers';\n\n// eslint-disable-next-line prettier/prettier\nconst assignType = <T>(obj: T): { [K in keyof T]: `${typeof ACTION_PREFIX}${string & K}`; } => obj as any\nexport const ActionTypes = assignType({\n  EXPORT_FILE_TO_CLOUD: `${ACTION_PREFIX}EXPORT_FILE_TO_CLOUD`,\n  EXPORT_FILE_SUCCESS: `${ACTION_PREFIX}EXPORT_FILE_SUCCESS`,\n  EXPORT_FILE_ERROR: `${ACTION_PREFIX}EXPORT_FILE_ERROR`,\n  RESET_PROVIDER_STATUS: `${ACTION_PREFIX}RESET_PROVIDER_STATUS`,\n  SET_CLOUD_PROVIDER: `${ACTION_PREFIX}SET_CLOUD_PROVIDER`,\n  POST_SAVE_LOAD_SUCCESS: `${ACTION_PREFIX}POST_SAVE_LOAD_SUCCESS`,\n  LOAD_CLOUD_MAP: `${ACTION_PREFIX}LOAD_CLOUD_MAP`,\n  LOAD_CLOUD_MAP_SUCCESS: `${ACTION_PREFIX}LOAD_CLOUD_MAP_SUCCESS`,\n  LOAD_CLOUD_MAP_ERROR: `${ACTION_PREFIX}LOAD_CLOUD_MAP_ERROR`,\n  GET_SAVED_MAPS: `${ACTION_PREFIX}GET_SAVED_MAPS`,\n  GET_SAVED_MAPS_SUCCESS: `${ACTION_PREFIX}GET_SAVED_MAPS_SUCCESS`,\n  GET_SAVED_MAPS_ERROR: `${ACTION_PREFIX}GET_SAVED_MAPS_ERROR`\n});\n\n/**\n * Call provider to upload file to cloud\n * @param mapData\n * @param provider\n * @param options\n * @param onSuccess\n * @param onError\n * @param closeModal\n */\nexport const exportFileToCloud: (\n  p: ExportFileToCloudPayload\n) => {\n  type: typeof ActionTypes.EXPORT_FILE_TO_CLOUD;\n  payload: ExportFileToCloudPayload;\n} = createAction(ActionTypes.EXPORT_FILE_TO_CLOUD, (payload: ExportFileToCloudPayload) => ({payload}));\n\n/** EXPORT_FILE_SUCCESS */\nexport type ExportFileSuccessPayload = {\n  response: any;\n  provider: Provider;\n  options?: ExportFileOptions;\n  onSuccess?: OnSuccessCallBack;\n  closeModal?: boolean;\n};\n\nexport const exportFileSuccess: (\n  p: ExportFileSuccessPayload\n) => {\n  type: typeof ActionTypes.EXPORT_FILE_SUCCESS;\n  payload: ExportFileSuccessPayload;\n} = createAction(ActionTypes.EXPORT_FILE_SUCCESS, (payload: ExportFileSuccessPayload) => ({payload}));\n\n/** EXPORT_FILE_ERROR */\nexport type ExportFileErrorPayload = {\n  error: any;\n  provider: Provider;\n  options?: ExportFileOptions;\n  onError?: OnErrorCallBack;\n};\n\nexport const exportFileError: (\n  p: ExportFileErrorPayload\n) => {\n  type: typeof ActionTypes.EXPORT_FILE_ERROR;\n  payload: ExportFileErrorPayload;\n} = createAction(ActionTypes.EXPORT_FILE_ERROR, (payload: ExportFileErrorPayload) => ({payload}));\n\n/** POST_SAVE_LOAD_SUCCESS */\nexport type PostSaveLoadSuccessPayload = string;\nexport const postSaveLoadSuccess: (\n  p: PostSaveLoadSuccessPayload\n) => {\n  type: typeof ActionTypes.POST_SAVE_LOAD_SUCCESS;\n  payload: PostSaveLoadSuccessPayload;\n} = createAction(\n  ActionTypes.POST_SAVE_LOAD_SUCCESS,\n  (message: PostSaveLoadSuccessPayload) => ({payload : message})\n);\n\nexport const resetProviderStatus: () => {\n  type: typeof ActionTypes.RESET_PROVIDER_STATUS;\n} = createAction(ActionTypes.RESET_PROVIDER_STATUS);\n\n/** SET_CLOUD_PROVIDER */\nexport type SetCloudProviderPayload = string | null;\nexport const setCloudProvider: (\n  p: SetCloudProviderPayload\n) => {\n  type: typeof ActionTypes.SET_CLOUD_PROVIDER;\n  payload: SetCloudProviderPayload;\n} = createAction(ActionTypes.SET_CLOUD_PROVIDER, (provider: SetCloudProviderPayload) => ({payload : provider}));\n\n/** LOAD_CLOUD_MAP */\nexport type LoadCloudMapPayload = {\n  loadParams: any;\n  provider: string;\n  onSuccess?: any;\n  onError?: OnErrorCallBack;\n};\nexport const loadCloudMap: (\n  p: LoadCloudMapPayload\n) => {\n  type: typeof ActionTypes.LOAD_CLOUD_MAP;\n  payload: LoadCloudMapPayload;\n} = createAction(ActionTypes.LOAD_CLOUD_MAP, payload => ({payload}));\n\n/** LOAD_CLOUD_MAP_SUCCESS */\ntype LoadCloudMapSuccessCallback = (p: {response: any; loadParams: any; provider: Provider}) => any;\nexport type LoadCloudMapSuccessPayload = {\n  response: any;\n  loadParams: any;\n  provider: Provider;\n  onSuccess?: LoadCloudMapSuccessCallback;\n  onError?: OnErrorCallBack;\n};\nexport const loadCloudMapSuccess: (\n  p: LoadCloudMapSuccessPayload\n) => {\n  type: typeof ActionTypes.LOAD_CLOUD_MAP_SUCCESS;\n  payload: LoadCloudMapSuccessPayload;\n} = createAction(\n  ActionTypes.LOAD_CLOUD_MAP_SUCCESS,\n  (payload: LoadCloudMapSuccessPayload) => ({payload})\n);\n\n/** LOAD_CLOUD_MAP_ERROR */\nexport type LoadCloudMapErrorPayload = {\n  error: any;\n  provider: Provider;\n  onError?: OnErrorCallBack;\n};\nexport const loadCloudMapError: (\n  p: LoadCloudMapErrorPayload\n) => {\n  type: typeof ActionTypes.LOAD_CLOUD_MAP_ERROR;\n  payload: LoadCloudMapErrorPayload;\n} = createAction(ActionTypes.LOAD_CLOUD_MAP_ERROR, (payload: LoadCloudMapErrorPayload) => ({payload}));\n\n/** GET_SAVED_MAPS */\nexport type GetSavedMapsPayload = string;\nexport const getSavedMaps: (\n  p: GetSavedMapsPayload\n) => {\n  type: typeof ActionTypes.GET_SAVED_MAPS;\n  payload: GetSavedMapsPayload;\n} = createAction(ActionTypes.GET_SAVED_MAPS, (provider: GetSavedMapsPayload) => ({payload : provider}));\n\n/** GET_SAVED_MAPS_SUCCESS */\nexport type GetSavedMapsSuccessPayload = {\n  visualizations: MapListItem[];\n  provider: string;\n};\nexport const getSavedMapsSuccess: (\n  p: GetSavedMapsSuccessPayload\n) => {\n  type: typeof ActionTypes.GET_SAVED_MAPS_SUCCESS;\n  payload: GetSavedMapsSuccessPayload;\n} = createAction(\n  ActionTypes.GET_SAVED_MAPS_SUCCESS,\n  (payload: GetSavedMapsSuccessPayload) => ({payload})\n);\n\n/** GET_SAVED_MAPS_ERROR */\nexport type GetSavedMapsErrorPayload = {\n  error: any;\n  provider: string;\n};\nexport const getSavedMapsError: (\n  p: GetSavedMapsErrorPayload\n) => {\n  type: typeof ActionTypes.GET_SAVED_MAPS_ERROR;\n  payload: GetSavedMapsErrorPayload;\n} = createAction(ActionTypes.GET_SAVED_MAPS_ERROR, payload => ({payload}));\n"],"mappings":";;;;;;;AAoBA;;AACA;;AArBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEAA,MAAA,CAAAC,cAAA,CAAAC,OAAA;EACAC,KAAA;AACA;AACAD,OAAA,CAAAE,iBAAA,GAAAF,OAAA,CAAAG,mBAAA,GAAAH,OAAA,CAAAI,YAAA,GAAAJ,OAAA,CAAAK,iBAAA,GAAAL,OAAA,CAAAM,mBAAA,GAAAN,OAAA,CAAAO,YAAA,GAAAP,OAAA,CAAAQ,gBAAA,GAAAR,OAAA,CAAAS,mBAAA,GAAAT,OAAA,CAAAU,mBAAA,GAAAV,OAAA,CAAAW,eAAA,GAAAX,OAAA,CAAAY,iBAAA,GAAAZ,OAAA,CAAAa,iBAAA,GAAAb,OAAA,CAAAc,WAAA;AAEA,IAAAC,QAAA,GAAAC,OAAA;AAEA,IAAAC,YAAA,GAAAD,OAAA;AAOA,IAAAE,UAAA,YAAAA,WAAAC,GAAA;EACA,OAAMA,GAAA;AAAa;;EACZC,oBAAoB,KAAAC,MAAW,CAAAJ,YAAA,CAAAK,aAAA;EACpCC,mBAAA,EAAoB,GAAAF,MAAA,CAAAJ,YAAK,CAAAK,aAAA,EAAL;EACpBE,iBAAA,EAAmB,GAAAH,MAAA,CAAAJ,YAAK,CAAAK,aAAA,EAAL;EACnBG,qBAAiB,KAAAJ,MAAK,CAAAJ,YAAA,CAAAK,aAAL,yBAHmB;EAIpCI,kBAAA,IAAqB,CAAAL,MAAA,CAAAJ,YAAK,CAAAK,aAAA,sBAAL;EACrBK,sBAAkB,KAAAN,MAAK,CAAAJ,YAAA,CAAAK,aAAL,0BALkB;EAMpCM,cAAA,KAAAP,MAAsB,CAAAJ,YAAK,CAAAK,aAAA,kBAAL;EACtBO,sBAAc,IAAK,CAAAR,MAAA,CAAAJ,YAAA,CAAAK,aAAL,0BAPsB;EAQpCQ,oBAAA,EAAsB,GAAAT,MAAA,CAAAJ,YAAK,CAAAK,aAAA,EAAL;EACtBS,cAAA,KAAAV,MAAoB,CAAAJ,YAAK,CAAAK,aAAA,kBAAL;EACpBU,sBAAc,IAAK,CAAAX,MAAA,CAAAJ,YAAA,CAAAK,aAAL,0BAVsB;EAWpCW,oBAAA,EAAsB,GAAAZ,MAAA,CAAAJ,YAAK,CAAAK,aAAA,EAAL;AACtB;AAZoC;AAetC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;EAEO,OAAM;IAKsCY,OAAwC,EAAAA;EAAC;AAAD;AAAxC;;;;EAW5C,OAAM;IAKqCA,OAAwC,EAAAA;EAAC;AAAD;AAAxC;;;;EAU3C,OAAM;IAKmCA,OAAsC,EAAAA;EAAC;AAAD;AAAtC;;;;EAIzC,OAAM;IAOXA,OAA0C,EAAAC;EAAC;AAAD;AAA1CnC,OAPK,CAAAU,mBAAA,GAAAA,mBAAA;;AAUA;;;;EAMA,OAAM;IAKoCwB,OAAwC,EAAAE;EAAC;AAAD;AAAxC;;;;EAS1C,OAAM;IAKuCF,OAAK,EAAAA;EAAC;AAAD;AAAL;;;;EAW7C,OAAM;IAOXA,OAA0C,EAAAA;EAAC;AAAD;AAA1C;;;;EASK,OAAM;IAKsCA,OAAwC,EAAAA;EAAC;AAAD;AAAxC;;;;EAI5C,OAAM;IAKgCA,OAAoC,EAAAE;EAAC;AAAD;AAApC;;;;EAOtC,OAAM;IAOXF,OAA0C,EAAAA;EAAC;AAAD;AAA1C;;;;EAQK,OAAM;IAK6CA,OAAK,EAAAA;EAAC;AAAD;AAALlC,OALnD,CAAAE,iBAAA,GAAAA,iBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}