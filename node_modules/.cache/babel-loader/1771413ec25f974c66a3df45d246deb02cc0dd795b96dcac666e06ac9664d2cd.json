{"ast":null,"code":"import _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport Matrix4 from './matrix4';\nimport Vector3 from './vector3';\nimport Euler from './euler';\nvar Pose = /*#__PURE__*/function () {\n  function Pose() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$x = _ref.x,\n      x = _ref$x === void 0 ? 0 : _ref$x,\n      _ref$y = _ref.y,\n      y = _ref$y === void 0 ? 0 : _ref$y,\n      _ref$z = _ref.z,\n      z = _ref$z === void 0 ? 0 : _ref$z,\n      _ref$roll = _ref.roll,\n      roll = _ref$roll === void 0 ? 0 : _ref$roll,\n      _ref$pitch = _ref.pitch,\n      pitch = _ref$pitch === void 0 ? 0 : _ref$pitch,\n      _ref$yaw = _ref.yaw,\n      yaw = _ref$yaw === void 0 ? 0 : _ref$yaw,\n      position = _ref.position,\n      orientation = _ref.orientation;\n    _classCallCheck(this, Pose);\n    _defineProperty(this, \"position\", void 0);\n    _defineProperty(this, \"orientation\", void 0);\n    if (Array.isArray(position) && position.length === 3) {\n      this.position = new Vector3(position);\n    } else {\n      this.position = new Vector3(x, y, z);\n    }\n    if (Array.isArray(orientation) && orientation.length === 4) {\n      this.orientation = new Euler(orientation, orientation[3]);\n    } else {\n      this.orientation = new Euler(roll, pitch, yaw, Euler.RollPitchYaw);\n    }\n  }\n  _createClass(Pose, [{\n    key: \"x\",\n    get: function get() {\n      return this.position.x;\n    },\n    set: function set(value) {\n      this.position.x = value;\n    }\n  }, {\n    key: \"y\",\n    get: function get() {\n      return this.position.y;\n    },\n    set: function set(value) {\n      this.position.y = value;\n    }\n  }, {\n    key: \"z\",\n    get: function get() {\n      return this.position.z;\n    },\n    set: function set(value) {\n      this.position.z = value;\n    }\n  }, {\n    key: \"roll\",\n    get: function get() {\n      return this.orientation.roll;\n    },\n    set: function set(value) {\n      this.orientation.roll = value;\n    }\n  }, {\n    key: \"pitch\",\n    get: function get() {\n      return this.orientation.pitch;\n    },\n    set: function set(value) {\n      this.orientation.pitch = value;\n    }\n  }, {\n    key: \"yaw\",\n    get: function get() {\n      return this.orientation.yaw;\n    },\n    set: function set(value) {\n      this.orientation.yaw = value;\n    }\n  }, {\n    key: \"getPosition\",\n    value: function getPosition() {\n      return this.position;\n    }\n  }, {\n    key: \"getOrientation\",\n    value: function getOrientation() {\n      return this.orientation;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(pose) {\n      if (!pose) {\n        return false;\n      }\n      return this.position.equals(pose.position) && this.orientation.equals(pose.orientation);\n    }\n  }, {\n    key: \"exactEquals\",\n    value: function exactEquals(pose) {\n      if (!pose) {\n        return false;\n      }\n      return this.position.exactEquals(pose.position) && this.orientation.exactEquals(pose.orientation);\n    }\n  }, {\n    key: \"getTransformationMatrix\",\n    value: function getTransformationMatrix() {\n      var sr = Math.sin(this.roll);\n      var sp = Math.sin(this.pitch);\n      var sw = Math.sin(this.yaw);\n      var cr = Math.cos(this.roll);\n      var cp = Math.cos(this.pitch);\n      var cw = Math.cos(this.yaw);\n      return new Matrix4().setRowMajor(cw * cp, -sw * cr + cw * sp * sr, sw * sr + cw * sp * cr, this.x, sw * cp, cw * cr + sw * sp * sr, -cw * sr + sw * sp * cr, this.y, -sp, cp * sr, cp * cr, this.z, 0, 0, 0, 1);\n    }\n  }, {\n    key: \"getTransformationMatrixFromPose\",\n    value: function getTransformationMatrixFromPose(pose) {\n      return new Matrix4().multiplyRight(this.getTransformationMatrix()).multiplyRight(pose.getTransformationMatrix().invert());\n    }\n  }, {\n    key: \"getTransformationMatrixToPose\",\n    value: function getTransformationMatrixToPose(pose) {\n      return new Matrix4().multiplyRight(pose.getTransformationMatrix()).multiplyRight(this.getTransformationMatrix().invert());\n    }\n  }]);\n  return Pose;\n}();\nexport { Pose as default };","map":{"version":3,"names":["Matrix4","Vector3","Euler","Pose","_ref","arguments","length","undefined","_ref$x","x","_ref$y","y","_ref$z","z","_ref$roll","roll","_ref$pitch","pitch","_ref$yaw","yaw","position","orientation","_classCallCheck","_defineProperty","Array","isArray","RollPitchYaw","_createClass","key","get","set","value","getPosition","getOrientation","equals","pose","exactEquals","getTransformationMatrix","sr","Math","sin","sp","sw","cr","cos","cp","cw","setRowMajor","getTransformationMatrixFromPose","multiplyRight","invert","getTransformationMatrixToPose","default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@math.gl/core/src/classes/pose.ts"],"sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n// MIT License\nimport Matrix4 from './matrix4';\nimport Vector3 from './vector3';\nimport Euler from './euler';\nimport {NumericArray} from '@math.gl/types';\n\ntype PoseOptions = {\n  position?: Readonly<NumericArray>;\n  orientation?: Readonly<NumericArray>;\n  x?: number;\n  y?: number;\n  z?: number;\n  roll?: number;\n  pitch?: number;\n  yaw?: number;\n};\n\nexport default class Pose {\n  readonly position: Vector3;\n  readonly orientation: Euler;\n\n  constructor({\n    x = 0,\n    y = 0,\n    z = 0,\n    roll = 0,\n    pitch = 0,\n    yaw = 0,\n    position,\n    orientation\n  }: PoseOptions = {}) {\n    if (Array.isArray(position) && position.length === 3) {\n      this.position = new Vector3(position);\n    } else {\n      this.position = new Vector3(x, y, z);\n    }\n    if (Array.isArray(orientation) && orientation.length === 4) {\n      // @ts-expect-error\n      this.orientation = new Euler(orientation, orientation[3]);\n    } else {\n      this.orientation = new Euler(roll, pitch, yaw, Euler.RollPitchYaw);\n    }\n  }\n\n  get x(): number {\n    return this.position.x;\n  }\n\n  set x(value: number) {\n    this.position.x = value;\n  }\n\n  get y(): number {\n    return this.position.y;\n  }\n\n  set y(value: number) {\n    this.position.y = value;\n  }\n\n  get z(): number {\n    return this.position.z;\n  }\n\n  set z(value: number) {\n    this.position.z = value;\n  }\n\n  get roll(): number {\n    return this.orientation.roll;\n  }\n\n  set roll(value: number) {\n    this.orientation.roll = value;\n  }\n\n  get pitch(): number {\n    return this.orientation.pitch;\n  }\n  set pitch(value: number) {\n    this.orientation.pitch = value;\n  }\n\n  get yaw(): number {\n    return this.orientation.yaw;\n  }\n\n  set yaw(value: number) {\n    this.orientation.yaw = value;\n  }\n\n  getPosition(): Vector3 {\n    return this.position;\n  }\n\n  getOrientation(): Euler {\n    return this.orientation;\n  }\n\n  equals(pose: Pose): boolean {\n    if (!pose) {\n      return false;\n    }\n    return this.position.equals(pose.position) && this.orientation.equals(pose.orientation);\n  }\n\n  exactEquals(pose: Pose): boolean {\n    if (!pose) {\n      return false;\n    }\n    return (\n      this.position.exactEquals(pose.position) && this.orientation.exactEquals(pose.orientation)\n    );\n  }\n\n  getTransformationMatrix(): Matrix4 {\n    // setup pre computations for the sin/cos of the angles\n    const sr = Math.sin(this.roll);\n    const sp = Math.sin(this.pitch);\n    const sw = Math.sin(this.yaw);\n    const cr = Math.cos(this.roll);\n    const cp = Math.cos(this.pitch);\n    const cw = Math.cos(this.yaw);\n\n    // Create matrix\n    return new Matrix4().setRowMajor(\n      cw * cp, // 0,0\n      -sw * cr + cw * sp * sr, // 0,1\n      sw * sr + cw * sp * cr, // 0,2\n      this.x, // 0,3\n      sw * cp, // 1,0\n      cw * cr + sw * sp * sr, // 1,1\n      -cw * sr + sw * sp * cr, // 1,2\n      this.y, // 1,3\n      -sp, // 2,0\n      cp * sr, // 2,1\n      cp * cr, // 2,2\n      this.z, // 2,3\n      0,\n      0,\n      0,\n      1\n    );\n  }\n\n  getTransformationMatrixFromPose(pose: Pose): Matrix4 {\n    return new Matrix4()\n      .multiplyRight(this.getTransformationMatrix())\n      .multiplyRight(pose.getTransformationMatrix().invert());\n  }\n\n  getTransformationMatrixToPose(pose: Pose): Matrix4 {\n    return new Matrix4()\n      .multiplyRight(pose.getTransformationMatrix())\n      .multiplyRight(this.getTransformationMatrix().invert());\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}