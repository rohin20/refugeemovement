{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _defineProperty2 from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Vector3, Matrix4 } from '@math.gl/core';\nimport { CullingVolume } from '@math.gl/culling';\nimport { load } from '@loaders.gl/core';\nimport { TILE_REFINEMENT, TILE_CONTENT_STATE, TILESET_TYPE } from '../constants';\nimport { createBoundingVolume } from './helpers/bounding-volume';\nimport { getTiles3DScreenSpaceError } from './helpers/tiles-3d-lod';\nimport { getProjectedRadius } from './helpers/i3s-lod';\nimport { get3dTilesOptions } from './helpers/3d-tiles-options';\nimport { TilesetTraverser } from './tileset-traverser';\nvar scratchVector = new Vector3();\nfunction defined(x) {\n  return x !== undefined && x !== null;\n}\nexport var Tile3D = /*#__PURE__*/function () {\n  function Tile3D(tileset, header, parentHeader) {\n    _classCallCheck(this, Tile3D);\n    var extendedId = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n    _defineProperty(this, \"tileset\", void 0);\n    _defineProperty(this, \"header\", void 0);\n    _defineProperty(this, \"id\", void 0);\n    _defineProperty(this, \"url\", void 0);\n    _defineProperty(this, \"parent\", void 0);\n    _defineProperty(this, \"refine\", void 0);\n    _defineProperty(this, \"type\", void 0);\n    _defineProperty(this, \"contentUrl\", void 0);\n    _defineProperty(this, \"lodMetricType\", void 0);\n    _defineProperty(this, \"lodMetricValue\", void 0);\n    _defineProperty(this, \"boundingVolume\", void 0);\n    _defineProperty(this, \"content\", void 0);\n    _defineProperty(this, \"contentState\", void 0);\n    _defineProperty(this, \"gpuMemoryUsageInBytes\", void 0);\n    _defineProperty(this, \"children\", void 0);\n    _defineProperty(this, \"depth\", void 0);\n    _defineProperty(this, \"viewportIds\", void 0);\n    _defineProperty(this, \"transform\", void 0);\n    _defineProperty(this, \"extensions\", void 0);\n    _defineProperty(this, \"implicitTiling\", void 0);\n    _defineProperty(this, \"userData\", void 0);\n    _defineProperty(this, \"computedTransform\", void 0);\n    _defineProperty(this, \"hasEmptyContent\", void 0);\n    _defineProperty(this, \"hasTilesetContent\", void 0);\n    _defineProperty(this, \"traverser\", void 0);\n    _defineProperty(this, \"_cacheNode\", void 0);\n    _defineProperty(this, \"_frameNumber\", void 0);\n    _defineProperty(this, \"_lodJudge\", void 0);\n    _defineProperty(this, \"_expireDate\", void 0);\n    _defineProperty(this, \"_expiredContent\", void 0);\n    _defineProperty(this, \"_shouldRefine\", void 0);\n    _defineProperty(this, \"_distanceToCamera\", void 0);\n    _defineProperty(this, \"_centerZDepth\", void 0);\n    _defineProperty(this, \"_screenSpaceError\", void 0);\n    _defineProperty(this, \"_visibilityPlaneMask\", void 0);\n    _defineProperty(this, \"_visible\", void 0);\n    _defineProperty(this, \"_inRequestVolume\", void 0);\n    _defineProperty(this, \"_stackLength\", void 0);\n    _defineProperty(this, \"_selectionDepth\", void 0);\n    _defineProperty(this, \"_touchedFrame\", void 0);\n    _defineProperty(this, \"_visitedFrame\", void 0);\n    _defineProperty(this, \"_selectedFrame\", void 0);\n    _defineProperty(this, \"_requestedFrame\", void 0);\n    _defineProperty(this, \"_priority\", void 0);\n    _defineProperty(this, \"_contentBoundingVolume\", void 0);\n    _defineProperty(this, \"_viewerRequestVolume\", void 0);\n    _defineProperty(this, \"_initialTransform\", void 0);\n    this.header = header;\n    this.tileset = tileset;\n    this.id = extendedId || header.id;\n    this.url = header.url;\n    this.parent = parentHeader;\n    this.refine = this._getRefine(header.refine);\n    this.type = header.type;\n    this.contentUrl = header.contentUrl;\n    this.lodMetricType = 'geometricError';\n    this.lodMetricValue = 0;\n    this.boundingVolume = null;\n    this.content = null;\n    this.contentState = TILE_CONTENT_STATE.UNLOADED;\n    this.gpuMemoryUsageInBytes = 0;\n    this.children = [];\n    this.hasEmptyContent = false;\n    this.hasTilesetContent = false;\n    this.depth = 0;\n    this.viewportIds = [];\n    this.userData = {};\n    this.extensions = null;\n    this._priority = 0;\n    this._touchedFrame = 0;\n    this._visitedFrame = 0;\n    this._selectedFrame = 0;\n    this._requestedFrame = 0;\n    this._screenSpaceError = 0;\n    this._cacheNode = null;\n    this._frameNumber = null;\n    this._cacheNode = null;\n    this.traverser = new TilesetTraverser({});\n    this._shouldRefine = false;\n    this._distanceToCamera = 0;\n    this._centerZDepth = 0;\n    this._visible = undefined;\n    this._inRequestVolume = false;\n    this._stackLength = 0;\n    this._selectionDepth = 0;\n    this._initialTransform = new Matrix4();\n    this.transform = new Matrix4();\n    this._initializeLodMetric(header);\n    this._initializeTransforms(header);\n    this._initializeBoundingVolumes(header);\n    this._initializeContent(header);\n    this._initializeRenderingState(header);\n    this._lodJudge = null;\n    this._expireDate = null;\n    this._expiredContent = null;\n    this.implicitTiling = null;\n    Object.seal(this);\n  }\n  _createClass(Tile3D, [{\n    key: \"destroy\",\n    value: function destroy() {\n      this.header = null;\n    }\n  }, {\n    key: \"isDestroyed\",\n    value: function isDestroyed() {\n      return this.header === null;\n    }\n  }, {\n    key: \"selected\",\n    get: function get() {\n      return this._selectedFrame === this.tileset._frameNumber;\n    }\n  }, {\n    key: \"isVisible\",\n    get: function get() {\n      return this._visible;\n    }\n  }, {\n    key: \"isVisibleAndInRequestVolume\",\n    get: function get() {\n      return this._visible && this._inRequestVolume;\n    }\n  }, {\n    key: \"hasRenderContent\",\n    get: function get() {\n      return !this.hasEmptyContent && !this.hasTilesetContent;\n    }\n  }, {\n    key: \"hasChildren\",\n    get: function get() {\n      return this.children.length > 0 || this.header.children && this.header.children.length > 0;\n    }\n  }, {\n    key: \"contentReady\",\n    get: function get() {\n      return this.contentState === TILE_CONTENT_STATE.READY || this.hasEmptyContent;\n    }\n  }, {\n    key: \"contentAvailable\",\n    get: function get() {\n      return Boolean(this.contentReady && this.hasRenderContent || this._expiredContent && !this.contentFailed);\n    }\n  }, {\n    key: \"hasUnloadedContent\",\n    get: function get() {\n      return this.hasRenderContent && this.contentUnloaded;\n    }\n  }, {\n    key: \"contentUnloaded\",\n    get: function get() {\n      return this.contentState === TILE_CONTENT_STATE.UNLOADED;\n    }\n  }, {\n    key: \"contentExpired\",\n    get: function get() {\n      return this.contentState === TILE_CONTENT_STATE.EXPIRED;\n    }\n  }, {\n    key: \"contentFailed\",\n    get: function get() {\n      return this.contentState === TILE_CONTENT_STATE.FAILED;\n    }\n  }, {\n    key: \"distanceToCamera\",\n    get: function get() {\n      return this._distanceToCamera;\n    }\n  }, {\n    key: \"screenSpaceError\",\n    get: function get() {\n      return this._screenSpaceError;\n    }\n  }, {\n    key: \"getScreenSpaceError\",\n    value: function getScreenSpaceError(frameState, useParentLodMetric) {\n      switch (this.tileset.type) {\n        case TILESET_TYPE.I3S:\n          return getProjectedRadius(this, frameState);\n        case TILESET_TYPE.TILES3D:\n          return getTiles3DScreenSpaceError(this, frameState, useParentLodMetric);\n        default:\n          throw new Error('Unsupported tileset type');\n      }\n    }\n  }, {\n    key: \"unselect\",\n    value: function unselect() {\n      this._selectedFrame = 0;\n    }\n  }, {\n    key: \"_getPriority\",\n    value: function _getPriority() {\n      var traverser = this.tileset._traverser;\n      var skipLevelOfDetail = traverser.options.skipLevelOfDetail;\n      var maySkipTile = this.refine === TILE_REFINEMENT.ADD || skipLevelOfDetail;\n      if (maySkipTile && !this.isVisible && this._visible !== undefined) {\n        return -1;\n      }\n      if (this.tileset._frameNumber - this._touchedFrame >= 1) {\n        return -1;\n      }\n      if (this.contentState === TILE_CONTENT_STATE.UNLOADED) {\n        return -1;\n      }\n      var parent = this.parent;\n      var useParentScreenSpaceError = parent && (!maySkipTile || this._screenSpaceError === 0.0 || parent.hasTilesetContent);\n      var screenSpaceError = useParentScreenSpaceError ? parent._screenSpaceError : this._screenSpaceError;\n      var rootScreenSpaceError = traverser.root ? traverser.root._screenSpaceError : 0.0;\n      return Math.max(rootScreenSpaceError - screenSpaceError, 0);\n    }\n  }, {\n    key: \"loadContent\",\n    value: function () {\n      var _loadContent = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var expired, requestToken, contentUrl, loader, options;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!this.hasEmptyContent) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\", false);\n            case 2:\n              if (!this.content) {\n                _context.next = 4;\n                break;\n              }\n              return _context.abrupt(\"return\", true);\n            case 4:\n              expired = this.contentExpired;\n              if (expired) {\n                this._expireDate = null;\n              }\n              this.contentState = TILE_CONTENT_STATE.LOADING;\n              _context.next = 9;\n              return this.tileset._requestScheduler.scheduleRequest(this.id, this._getPriority.bind(this));\n            case 9:\n              requestToken = _context.sent;\n              if (requestToken) {\n                _context.next = 13;\n                break;\n              }\n              this.contentState = TILE_CONTENT_STATE.UNLOADED;\n              return _context.abrupt(\"return\", false);\n            case 13:\n              _context.prev = 13;\n              contentUrl = this.tileset.getTileUrl(this.contentUrl);\n              loader = this.tileset.loader;\n              options = _objectSpread(_objectSpread({}, this.tileset.loadOptions), {}, _defineProperty2({}, loader.id, _objectSpread(_objectSpread({}, this.tileset.loadOptions[loader.id]), {}, {\n                isTileset: this.type === 'json'\n              }, this._getLoaderSpecificOptions(loader.id))));\n              _context.next = 19;\n              return load(contentUrl, loader, options);\n            case 19:\n              this.content = _context.sent;\n              if (!this.tileset.options.contentLoader) {\n                _context.next = 23;\n                break;\n              }\n              _context.next = 23;\n              return this.tileset.options.contentLoader(this);\n            case 23:\n              if (this._isTileset()) {\n                this.tileset._initializeTileHeaders(this.content, this);\n              }\n              this.contentState = TILE_CONTENT_STATE.READY;\n              this._onContentLoaded();\n              return _context.abrupt(\"return\", true);\n            case 29:\n              _context.prev = 29;\n              _context.t0 = _context[\"catch\"](13);\n              this.contentState = TILE_CONTENT_STATE.FAILED;\n              throw _context.t0;\n            case 33:\n              _context.prev = 33;\n              requestToken.done();\n              return _context.finish(33);\n            case 36:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[13, 29, 33, 36]]);\n      }));\n      function loadContent() {\n        return _loadContent.apply(this, arguments);\n      }\n      return loadContent;\n    }()\n  }, {\n    key: \"unloadContent\",\n    value: function unloadContent() {\n      if (this.content && this.content.destroy) {\n        this.content.destroy();\n      }\n      this.content = null;\n      if (this.header.content && this.header.content.destroy) {\n        this.header.content.destroy();\n      }\n      this.header.content = null;\n      this.contentState = TILE_CONTENT_STATE.UNLOADED;\n      return true;\n    }\n  }, {\n    key: \"updateVisibility\",\n    value: function updateVisibility(frameState, viewportIds) {\n      if (this._frameNumber === frameState.frameNumber) {\n        return;\n      }\n      var parent = this.parent;\n      var parentVisibilityPlaneMask = parent ? parent._visibilityPlaneMask : CullingVolume.MASK_INDETERMINATE;\n      if (this.tileset._traverser.options.updateTransforms) {\n        var parentTransform = parent ? parent.computedTransform : this.tileset.modelMatrix;\n        this._updateTransform(parentTransform);\n      }\n      this._distanceToCamera = this.distanceToTile(frameState);\n      this._screenSpaceError = this.getScreenSpaceError(frameState, false);\n      this._visibilityPlaneMask = this.visibility(frameState, parentVisibilityPlaneMask);\n      this._visible = this._visibilityPlaneMask !== CullingVolume.MASK_OUTSIDE;\n      this._inRequestVolume = this.insideViewerRequestVolume(frameState);\n      this._frameNumber = frameState.frameNumber;\n      this.viewportIds = viewportIds;\n    }\n  }, {\n    key: \"visibility\",\n    value: function visibility(frameState, parentVisibilityPlaneMask) {\n      var cullingVolume = frameState.cullingVolume;\n      var boundingVolume = this.boundingVolume;\n      return cullingVolume.computeVisibilityWithPlaneMask(boundingVolume, parentVisibilityPlaneMask);\n    }\n  }, {\n    key: \"contentVisibility\",\n    value: function contentVisibility() {\n      return true;\n    }\n  }, {\n    key: \"distanceToTile\",\n    value: function distanceToTile(frameState) {\n      var boundingVolume = this.boundingVolume;\n      return Math.sqrt(Math.max(boundingVolume.distanceSquaredTo(frameState.camera.position), 0));\n    }\n  }, {\n    key: \"cameraSpaceZDepth\",\n    value: function cameraSpaceZDepth(_ref) {\n      var camera = _ref.camera;\n      var boundingVolume = this.boundingVolume;\n      scratchVector.subVectors(boundingVolume.center, camera.position);\n      return camera.direction.dot(scratchVector);\n    }\n  }, {\n    key: \"insideViewerRequestVolume\",\n    value: function insideViewerRequestVolume(frameState) {\n      var viewerRequestVolume = this._viewerRequestVolume;\n      return !viewerRequestVolume || viewerRequestVolume.distanceSquaredTo(frameState.camera.position) <= 0;\n    }\n  }, {\n    key: \"updateExpiration\",\n    value: function updateExpiration() {\n      if (defined(this._expireDate) && this.contentReady && !this.hasEmptyContent) {\n        var now = Date.now();\n        if (Date.lessThan(this._expireDate, now)) {\n          this.contentState = TILE_CONTENT_STATE.EXPIRED;\n          this._expiredContent = this.content;\n        }\n      }\n    }\n  }, {\n    key: \"extras\",\n    get: function get() {\n      return this.header.extras;\n    }\n  }, {\n    key: \"_initializeLodMetric\",\n    value: function _initializeLodMetric(header) {\n      if ('lodMetricType' in header) {\n        this.lodMetricType = header.lodMetricType;\n      } else {\n        this.lodMetricType = this.parent && this.parent.lodMetricType || this.tileset.lodMetricType;\n        console.warn(\"3D Tile: Required prop lodMetricType is undefined. Using parent lodMetricType\");\n      }\n      if ('lodMetricValue' in header) {\n        this.lodMetricValue = header.lodMetricValue;\n      } else {\n        this.lodMetricValue = this.parent && this.parent.lodMetricValue || this.tileset.lodMetricValue;\n        console.warn('3D Tile: Required prop lodMetricValue is undefined. Using parent lodMetricValue');\n      }\n    }\n  }, {\n    key: \"_initializeTransforms\",\n    value: function _initializeTransforms(tileHeader) {\n      this.transform = tileHeader.transform ? new Matrix4(tileHeader.transform) : new Matrix4();\n      var parent = this.parent;\n      var tileset = this.tileset;\n      var parentTransform = parent && parent.computedTransform ? parent.computedTransform.clone() : tileset.modelMatrix.clone();\n      this.computedTransform = new Matrix4(parentTransform).multiplyRight(this.transform);\n      var parentInitialTransform = parent && parent._initialTransform ? parent._initialTransform.clone() : new Matrix4();\n      this._initialTransform = new Matrix4(parentInitialTransform).multiplyRight(this.transform);\n    }\n  }, {\n    key: \"_initializeBoundingVolumes\",\n    value: function _initializeBoundingVolumes(tileHeader) {\n      this._contentBoundingVolume = null;\n      this._viewerRequestVolume = null;\n      this._updateBoundingVolume(tileHeader);\n    }\n  }, {\n    key: \"_initializeContent\",\n    value: function _initializeContent(tileHeader) {\n      this.content = {\n        _tileset: this.tileset,\n        _tile: this\n      };\n      this.hasEmptyContent = true;\n      this.contentState = TILE_CONTENT_STATE.UNLOADED;\n      this.hasTilesetContent = false;\n      if (tileHeader.contentUrl) {\n        this.content = null;\n        this.hasEmptyContent = false;\n      }\n    }\n  }, {\n    key: \"_initializeRenderingState\",\n    value: function _initializeRenderingState(header) {\n      this.depth = header.level || (this.parent ? this.parent.depth + 1 : 0);\n      this._shouldRefine = false;\n      this._distanceToCamera = 0;\n      this._centerZDepth = 0;\n      this._screenSpaceError = 0;\n      this._visibilityPlaneMask = CullingVolume.MASK_INDETERMINATE;\n      this._visible = undefined;\n      this._inRequestVolume = false;\n      this._stackLength = 0;\n      this._selectionDepth = 0;\n      this._frameNumber = 0;\n      this._touchedFrame = 0;\n      this._visitedFrame = 0;\n      this._selectedFrame = 0;\n      this._requestedFrame = 0;\n      this._priority = 0.0;\n    }\n  }, {\n    key: \"_getRefine\",\n    value: function _getRefine(refine) {\n      return refine || this.parent && this.parent.refine || TILE_REFINEMENT.REPLACE;\n    }\n  }, {\n    key: \"_isTileset\",\n    value: function _isTileset() {\n      return this.contentUrl.indexOf('.json') !== -1;\n    }\n  }, {\n    key: \"_onContentLoaded\",\n    value: function _onContentLoaded() {\n      switch (this.content && this.content.type) {\n        case 'vctr':\n        case 'geom':\n          this.tileset._traverser.disableSkipLevelOfDetail = true;\n          break;\n        default:\n      }\n      if (this._isTileset()) {\n        this.hasTilesetContent = true;\n      }\n    }\n  }, {\n    key: \"_updateBoundingVolume\",\n    value: function _updateBoundingVolume(header) {\n      this.boundingVolume = createBoundingVolume(header.boundingVolume, this.computedTransform, this.boundingVolume);\n      var content = header.content;\n      if (!content) {\n        return;\n      }\n      if (content.boundingVolume) {\n        this._contentBoundingVolume = createBoundingVolume(content.boundingVolume, this.computedTransform, this._contentBoundingVolume);\n      }\n      if (header.viewerRequestVolume) {\n        this._viewerRequestVolume = createBoundingVolume(header.viewerRequestVolume, this.computedTransform, this._viewerRequestVolume);\n      }\n    }\n  }, {\n    key: \"_updateTransform\",\n    value: function _updateTransform() {\n      var parentTransform = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Matrix4();\n      var computedTransform = parentTransform.clone().multiplyRight(this.transform);\n      var didTransformChange = !computedTransform.equals(this.computedTransform);\n      if (!didTransformChange) {\n        return;\n      }\n      this.computedTransform = computedTransform;\n      this._updateBoundingVolume(this.header);\n    }\n  }, {\n    key: \"_getLoaderSpecificOptions\",\n    value: function _getLoaderSpecificOptions(loaderId) {\n      switch (loaderId) {\n        case 'i3s':\n          return _objectSpread(_objectSpread({}, this.tileset.options.i3s), {}, {\n            _tileOptions: {\n              attributeUrls: this.header.attributeUrls,\n              textureUrl: this.header.textureUrl,\n              textureFormat: this.header.textureFormat,\n              textureLoaderOptions: this.header.textureLoaderOptions,\n              materialDefinition: this.header.materialDefinition,\n              isDracoGeometry: this.header.isDracoGeometry,\n              mbs: this.header.mbs\n            },\n            _tilesetOptions: {\n              store: this.tileset.tileset.store,\n              attributeStorageInfo: this.tileset.tileset.attributeStorageInfo,\n              fields: this.tileset.tileset.fields\n            },\n            isTileHeader: false\n          });\n        case '3d-tiles':\n        case 'cesium-ion':\n        default:\n          return get3dTilesOptions(this.tileset.tileset);\n      }\n    }\n  }]);\n  return Tile3D;\n}();","map":{"version":3,"names":["Vector3","Matrix4","CullingVolume","load","TILE_REFINEMENT","TILE_CONTENT_STATE","TILESET_TYPE","createBoundingVolume","getTiles3DScreenSpaceError","getProjectedRadius","get3dTilesOptions","TilesetTraverser","scratchVector","defined","x","undefined","Tile3D","tileset","header","parentHeader","_classCallCheck","extendedId","arguments","length","_defineProperty","id","url","parent","refine","_getRefine","type","contentUrl","lodMetricType","lodMetricValue","boundingVolume","content","contentState","UNLOADED","gpuMemoryUsageInBytes","children","hasEmptyContent","hasTilesetContent","depth","viewportIds","userData","extensions","_priority","_touchedFrame","_visitedFrame","_selectedFrame","_requestedFrame","_screenSpaceError","_cacheNode","_frameNumber","traverser","_shouldRefine","_distanceToCamera","_centerZDepth","_visible","_inRequestVolume","_stackLength","_selectionDepth","_initialTransform","transform","_initializeLodMetric","_initializeTransforms","_initializeBoundingVolumes","_initializeContent","_initializeRenderingState","_lodJudge","_expireDate","_expiredContent","implicitTiling","Object","seal","_createClass","key","value","destroy","isDestroyed","get","READY","Boolean","contentReady","hasRenderContent","contentFailed","contentUnloaded","EXPIRED","FAILED","getScreenSpaceError","frameState","useParentLodMetric","I3S","TILES3D","Error","unselect","_getPriority","_traverser","skipLevelOfDetail","options","maySkipTile","ADD","isVisible","useParentScreenSpaceError","screenSpaceError","rootScreenSpaceError","root","Math","max","_loadContent","_asyncToGenerator","_regeneratorRuntime","mark","_callee","expired","requestToken","loader","wrap","_callee$","_context","prev","next","abrupt","contentExpired","LOADING","_requestScheduler","scheduleRequest","bind","sent","getTileUrl","_objectSpread","loadOptions","_defineProperty2","isTileset","_getLoaderSpecificOptions","contentLoader","_isTileset","_initializeTileHeaders","_onContentLoaded","t0","done","finish","stop","loadContent","apply","unloadContent","updateVisibility","frameNumber","parentVisibilityPlaneMask","_visibilityPlaneMask","MASK_INDETERMINATE","updateTransforms","parentTransform","computedTransform","modelMatrix","_updateTransform","distanceToTile","visibility","MASK_OUTSIDE","insideViewerRequestVolume","cullingVolume","computeVisibilityWithPlaneMask","contentVisibility","sqrt","distanceSquaredTo","camera","position","cameraSpaceZDepth","_ref","subVectors","center","direction","dot","viewerRequestVolume","_viewerRequestVolume","updateExpiration","now","Date","lessThan","extras","console","warn","tileHeader","clone","multiplyRight","parentInitialTransform","_contentBoundingVolume","_updateBoundingVolume","_tileset","_tile","level","REPLACE","indexOf","disableSkipLevelOfDetail","didTransformChange","equals","loaderId","i3s","_tileOptions","attributeUrls","textureUrl","textureFormat","textureLoaderOptions","materialDefinition","isDracoGeometry","mbs","_tilesetOptions","store","attributeStorageInfo","fields","isTileHeader"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/geo-layers/node_modules/@loaders.gl/tiles/src/tileset/tile-3d.ts"],"sourcesContent":["// loaders.gl, MIT license\n\n// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {Vector3, Matrix4} from '@math.gl/core';\nimport {CullingVolume} from '@math.gl/culling';\n\nimport {load} from '@loaders.gl/core';\n\n// Note: circular dependency\nimport type {Tileset3D} from './tileset-3d';\nimport {TILE_REFINEMENT, TILE_CONTENT_STATE, TILESET_TYPE} from '../constants';\n\nimport {FrameState} from './helpers/frame-state';\nimport {createBoundingVolume} from './helpers/bounding-volume';\nimport {getTiles3DScreenSpaceError} from './helpers/tiles-3d-lod';\nimport {getProjectedRadius} from './helpers/i3s-lod';\nimport {get3dTilesOptions} from './helpers/3d-tiles-options';\nimport {TilesetTraverser} from './tileset-traverser';\n\nconst scratchVector = new Vector3();\n\nfunction defined(x) {\n  return x !== undefined && x !== null;\n}\n\n/**\n * @param tileset - Tileset3D instance\n * @param header - tile header - JSON loaded from a dataset\n * @param parentHeader - parent Tile3D instance\n * @param extendedId - optional ID to separate copies of a tile for different viewports.\n *                              const extendedId = `${tile.id}-${frameState.viewport.id}`;\n */\nexport type Tile3DProps = {\n  tileset: Tileset3D;\n  header: Object;\n  parentHeader: Tile3D;\n  extendedId: string;\n};\n\n/**\n * A Tile3DHeader represents a tile as Tileset3D. When a tile is first created, its content is not loaded;\n * the content is loaded on-demand when needed based on the view.\n * Do not construct this directly, instead access tiles through {@link Tileset3D#tileVisible}.\n */\nexport class Tile3D {\n  tileset: Tileset3D;\n  header: any;\n  id: string;\n  url: string;\n  parent: Tile3D;\n  refine: number;\n  type: string;\n  contentUrl: string;\n  lodMetricType: string;\n  lodMetricValue: number;\n  boundingVolume: any;\n  content: any;\n  contentState: any;\n  gpuMemoryUsageInBytes: number;\n  children: Tile3D[];\n  depth: number;\n  viewportIds: any[];\n  transform: Matrix4;\n  extensions: any;\n  implicitTiling?: any;\n\n  // Container to store application specific data\n  userData: {[key: string]: any};\n  computedTransform: any;\n  hasEmptyContent: boolean;\n  hasTilesetContent: boolean;\n\n  traverser: object;\n\n  // @ts-ignore\n  private _cacheNode: any;\n  private _frameNumber: any;\n  // TODO i3s specific, needs to remove\n  // @ts-ignore\n  private _lodJudge: any;\n  // TODO Cesium 3d tiles specific\n  private _expireDate: any;\n  private _expiredContent: any;\n  // @ts-ignore\n  private _shouldRefine: boolean;\n\n  // Members this are updated every frame for tree traversal and rendering optimizations:\n  public _distanceToCamera: number;\n  // @ts-ignore\n  private _centerZDepth: number;\n  private _screenSpaceError: number;\n  private _visibilityPlaneMask: any;\n  private _visible?: boolean;\n  private _inRequestVolume: boolean;\n\n  // @ts-ignore\n  private _stackLength: number;\n  // @ts-ignore\n  private _selectionDepth: number;\n\n  // @ts-ignore\n  private _touchedFrame: number;\n  // @ts-ignore\n  private _visitedFrame: number;\n  private _selectedFrame: number;\n  // @ts-ignore\n  private _requestedFrame: number;\n\n  // @ts-ignore\n  private _priority: number;\n\n  private _contentBoundingVolume: any;\n  private _viewerRequestVolume: any;\n\n  _initialTransform: Matrix4;\n\n  /**\n   * @constructs\n   * Create a Tile3D instance\n   * @param tileset - Tileset3D instance\n   * @param header - tile header - JSON loaded from a dataset\n   * @param parentHeader - parent Tile3D instance\n   * @param extendedId - optional ID to separate copies of a tile for different viewports.\n   *    const extendedId = `${tile.id}-${frameState.viewport.id}`;\n   */\n  // eslint-disable-next-line max-statements\n  constructor(\n    tileset: Tileset3D,\n    header: {[key: string]: any},\n    parentHeader?: Tile3D,\n    extendedId = ''\n  ) {\n    // PUBLIC MEMBERS\n    // original tile data\n    this.header = header;\n\n    // The tileset containing this tile.\n    this.tileset = tileset;\n    this.id = extendedId || header.id;\n    this.url = header.url;\n\n    // This tile's parent or `undefined` if this tile is the root.\n    // @ts-ignore\n    this.parent = parentHeader;\n    this.refine = this._getRefine(header.refine);\n    this.type = header.type;\n    this.contentUrl = header.contentUrl;\n\n    // The error, in meters, introduced if this tile is rendered and its children are not.\n    this.lodMetricType = 'geometricError';\n    this.lodMetricValue = 0;\n\n    // Specifies the type of refine that is used when traversing this tile for rendering.\n    this.boundingVolume = null;\n\n    // The tile's content.  This represents the actual tile's payload,\n    // not the content's metadata in the tileset JSON file.\n    this.content = null;\n    this.contentState = TILE_CONTENT_STATE.UNLOADED;\n    this.gpuMemoryUsageInBytes = 0;\n\n    // The tile's children - an array of Tile3D objects.\n    this.children = [];\n\n    this.hasEmptyContent = false;\n    this.hasTilesetContent = false;\n\n    this.depth = 0;\n    this.viewportIds = [];\n\n    // Container to store application specific data\n    this.userData = {};\n    this.extensions = null;\n\n    // PRIVATE MEMBERS\n    this._priority = 0;\n    this._touchedFrame = 0;\n    this._visitedFrame = 0;\n    this._selectedFrame = 0;\n    this._requestedFrame = 0;\n    this._screenSpaceError = 0;\n\n    this._cacheNode = null;\n    this._frameNumber = null;\n    this._cacheNode = null;\n\n    this.traverser = new TilesetTraverser({});\n    this._shouldRefine = false;\n    this._distanceToCamera = 0;\n    this._centerZDepth = 0;\n    this._visible = undefined;\n    this._inRequestVolume = false;\n    this._stackLength = 0;\n    this._selectionDepth = 0;\n    this._initialTransform = new Matrix4();\n    this.transform = new Matrix4();\n\n    this._initializeLodMetric(header);\n    this._initializeTransforms(header);\n    this._initializeBoundingVolumes(header);\n    this._initializeContent(header);\n    this._initializeRenderingState(header);\n\n    // TODO i3s specific, needs to remove\n    this._lodJudge = null;\n\n    // TODO Cesium 3d tiles specific\n    this._expireDate = null;\n    this._expiredContent = null;\n    this.implicitTiling = null;\n\n    Object.seal(this);\n  }\n\n  destroy() {\n    this.header = null;\n  }\n\n  isDestroyed() {\n    return this.header === null;\n  }\n\n  get selected() {\n    return this._selectedFrame === this.tileset._frameNumber;\n  }\n\n  get isVisible() {\n    return this._visible;\n  }\n\n  get isVisibleAndInRequestVolume() {\n    return this._visible && this._inRequestVolume;\n  }\n\n  /** Returns true if tile is not an empty tile and not an external tileset */\n  get hasRenderContent() {\n    return !this.hasEmptyContent && !this.hasTilesetContent;\n  }\n\n  /** Returns true if tile has children */\n  get hasChildren() {\n    return this.children.length > 0 || (this.header.children && this.header.children.length > 0);\n  }\n\n  /**\n   * Determines if the tile's content is ready. This is automatically `true` for\n   * tiles with empty content.\n   */\n  get contentReady() {\n    return this.contentState === TILE_CONTENT_STATE.READY || this.hasEmptyContent;\n  }\n\n  /**\n   * Determines if the tile has available content to render.  `true` if the tile's\n   * content is ready or if it has expired content this renders while new content loads; otherwise,\n   */\n  get contentAvailable() {\n    return Boolean(\n      (this.contentReady && this.hasRenderContent) || (this._expiredContent && !this.contentFailed)\n    );\n  }\n\n  /** Returns true if tile has renderable content but it's unloaded */\n  get hasUnloadedContent() {\n    return this.hasRenderContent && this.contentUnloaded;\n  }\n\n  /**\n   * Determines if the tile's content has not be requested. `true` if tile's\n   * content has not be requested; otherwise, `false`.\n   */\n  get contentUnloaded() {\n    return this.contentState === TILE_CONTENT_STATE.UNLOADED;\n  }\n\n  /**\n   * Determines if the tile's content is expired. `true` if tile's\n   * content is expired; otherwise, `false`.\n   */\n  get contentExpired() {\n    return this.contentState === TILE_CONTENT_STATE.EXPIRED;\n  }\n\n  // Determines if the tile's content failed to load.  `true` if the tile's\n  // content failed to load; otherwise, `false`.\n  get contentFailed() {\n    return this.contentState === TILE_CONTENT_STATE.FAILED;\n  }\n\n  /**\n   * Distance from the tile's bounding volume center to the camera\n   */\n  get distanceToCamera(): number {\n    return this._distanceToCamera;\n  }\n\n  /**\n   * Screen space error for LOD selection\n   */\n  get screenSpaceError(): number {\n    return this._screenSpaceError;\n  }\n\n  /** Get the tile's screen space error. */\n  getScreenSpaceError(frameState, useParentLodMetric) {\n    switch (this.tileset.type) {\n      case TILESET_TYPE.I3S:\n        return getProjectedRadius(this, frameState);\n      case TILESET_TYPE.TILES3D:\n        return getTiles3DScreenSpaceError(this, frameState, useParentLodMetric);\n      default:\n        // eslint-disable-next-line\n        throw new Error('Unsupported tileset type');\n    }\n  }\n\n  /**\n   * Make tile unselected than means it won't be shown\n   * but it can be still loaded in memory\n   */\n  unselect(): void {\n    this._selectedFrame = 0;\n  }\n\n  /*\n   * If skipLevelOfDetail is off try to load child tiles as soon as possible so that their parent can refine sooner.\n   * Tiles are prioritized by screen space error.\n   */\n  // eslint-disable-next-line complexity\n  _getPriority() {\n    const traverser = this.tileset._traverser;\n    const {skipLevelOfDetail} = traverser.options;\n\n    /*\n     * Tiles that are outside of the camera's frustum could be skipped if we are in 'ADD' mode\n     * or if we are using 'Skip Traversal' in 'REPLACE' mode.\n     * Otherewise, all 'touched' child tiles have to be loaded and displayed,\n     * this may include tiles that are outide of the camera frustum (so that we can hide the parent tile).\n     */\n    const maySkipTile = this.refine === TILE_REFINEMENT.ADD || skipLevelOfDetail;\n\n    // Check if any reason to abort\n    if (maySkipTile && !this.isVisible && this._visible !== undefined) {\n      return -1;\n    }\n    // Condition used in `cancelOutOfViewRequests` function in CesiumJS/Cesium3DTileset.js\n    if (this.tileset._frameNumber - this._touchedFrame >= 1) {\n      return -1;\n    }\n    if (this.contentState === TILE_CONTENT_STATE.UNLOADED) {\n      return -1;\n    }\n\n    // Based on the priority function `getPriorityReverseScreenSpaceError` in CesiumJS. Scheduling priority is based on the parent's screen space error when possible.\n    const parent = this.parent;\n    const useParentScreenSpaceError =\n      parent && (!maySkipTile || this._screenSpaceError === 0.0 || parent.hasTilesetContent);\n    const screenSpaceError = useParentScreenSpaceError\n      ? parent._screenSpaceError\n      : this._screenSpaceError;\n\n    const rootScreenSpaceError = traverser.root ? traverser.root._screenSpaceError : 0.0;\n\n    // Map higher SSE to lower values (e.g. root tile is highest priority)\n    return Math.max(rootScreenSpaceError - screenSpaceError, 0);\n  }\n\n  /**\n   *  Requests the tile's content.\n   * The request may not be made if the Request Scheduler can't prioritize it.\n   */\n  // eslint-disable-next-line max-statements, complexity\n  async loadContent(): Promise<boolean> {\n    if (this.hasEmptyContent) {\n      return false;\n    }\n\n    if (this.content) {\n      return true;\n    }\n\n    const expired = this.contentExpired;\n\n    if (expired) {\n      this._expireDate = null;\n    }\n\n    this.contentState = TILE_CONTENT_STATE.LOADING;\n\n    const requestToken = await this.tileset._requestScheduler.scheduleRequest(\n      this.id,\n      this._getPriority.bind(this)\n    );\n\n    if (!requestToken) {\n      // cancelled\n      this.contentState = TILE_CONTENT_STATE.UNLOADED;\n      return false;\n    }\n\n    try {\n      const contentUrl = this.tileset.getTileUrl(this.contentUrl);\n      // The content can be a binary tile ot a JSON tileset\n      const loader = this.tileset.loader;\n      const options = {\n        ...this.tileset.loadOptions,\n        [loader.id]: {\n          ...this.tileset.loadOptions[loader.id],\n          isTileset: this.type === 'json',\n          ...this._getLoaderSpecificOptions(loader.id)\n        }\n      };\n\n      this.content = await load(contentUrl, loader, options);\n\n      if (this.tileset.options.contentLoader) {\n        await this.tileset.options.contentLoader(this);\n      }\n\n      if (this._isTileset()) {\n        // Add tile headers for the nested tilset's subtree\n        // Async update of the tree should be fine since there would never be edits to the same node\n        // TODO - we need to capture the child tileset's URL\n        this.tileset._initializeTileHeaders(this.content, this);\n      }\n\n      this.contentState = TILE_CONTENT_STATE.READY;\n      this._onContentLoaded();\n      return true;\n    } catch (error) {\n      // Tile is unloaded before the content finishes loading\n      this.contentState = TILE_CONTENT_STATE.FAILED;\n      throw error;\n    } finally {\n      requestToken.done();\n    }\n  }\n\n  // Unloads the tile's content.\n  unloadContent() {\n    if (this.content && this.content.destroy) {\n      this.content.destroy();\n    }\n    this.content = null;\n    if (this.header.content && this.header.content.destroy) {\n      this.header.content.destroy();\n    }\n    this.header.content = null;\n    this.contentState = TILE_CONTENT_STATE.UNLOADED;\n    return true;\n  }\n\n  /**\n   * Update the tile's visibility\n   * @param {Object} frameState - frame state for tile culling\n   * @param {string[]} viewportIds - a list of viewport ids that show this tile\n   * @return {void}\n   */\n  updateVisibility(frameState, viewportIds) {\n    if (this._frameNumber === frameState.frameNumber) {\n      // Return early if visibility has already been checked during the traversal.\n      // The visibility may have already been checked if the cullWithChildrenBounds optimization is used.\n      return;\n    }\n\n    const parent = this.parent;\n    const parentVisibilityPlaneMask = parent\n      ? parent._visibilityPlaneMask\n      : CullingVolume.MASK_INDETERMINATE;\n\n    if (this.tileset._traverser.options.updateTransforms) {\n      const parentTransform = parent ? parent.computedTransform : this.tileset.modelMatrix;\n      this._updateTransform(parentTransform);\n    }\n\n    this._distanceToCamera = this.distanceToTile(frameState);\n    this._screenSpaceError = this.getScreenSpaceError(frameState, false);\n    this._visibilityPlaneMask = this.visibility(frameState, parentVisibilityPlaneMask); // Use parent's plane mask to speed up visibility test\n    this._visible = this._visibilityPlaneMask !== CullingVolume.MASK_OUTSIDE;\n    this._inRequestVolume = this.insideViewerRequestVolume(frameState);\n\n    this._frameNumber = frameState.frameNumber;\n    this.viewportIds = viewportIds;\n  }\n\n  // Determines whether the tile's bounding volume intersects the culling volume.\n  // @param {FrameState} frameState The frame state.\n  // @param {Number} parentVisibilityPlaneMask The parent's plane mask to speed up the visibility check.\n  // @returns {Number} A plane mask as described above in {@link CullingVolume#computeVisibilityWithPlaneMask}.\n  visibility(frameState, parentVisibilityPlaneMask) {\n    const {cullingVolume} = frameState;\n    const {boundingVolume} = this;\n\n    // TODO Cesium specific - restore clippingPlanes\n    // const {clippingPlanes, clippingPlanesOriginMatrix} = tileset;\n    // if (clippingPlanes && clippingPlanes.enabled) {\n    //   const intersection = clippingPlanes.computeIntersectionWithBoundingVolume(\n    //     boundingVolume,\n    //     clippingPlanesOriginMatrix\n    //   );\n    //   this._isClipped = intersection !== Intersect.INSIDE;\n    //   if (intersection === Intersect.OUTSIDE) {\n    //     return CullingVolume.MASK_OUTSIDE;\n    //   }\n    // }\n\n    // return cullingVolume.computeVisibilityWithPlaneMask(boundingVolume, parentVisibilityPlaneMask);\n    return cullingVolume.computeVisibilityWithPlaneMask(boundingVolume, parentVisibilityPlaneMask);\n  }\n\n  // Assuming the tile's bounding volume intersects the culling volume, determines\n  // whether the tile's content's bounding volume intersects the culling volume.\n  // @param {FrameState} frameState The frame state.\n  // @returns {Intersect} The result of the intersection: the tile's content is completely outside, completely inside, or intersecting the culling volume.\n  contentVisibility() {\n    return true;\n\n    // TODO restore\n    /*\n    // Assumes the tile's bounding volume intersects the culling volume already, so\n    // just return Intersect.INSIDE if there is no content bounding volume.\n    if (!defined(this.contentBoundingVolume)) {\n      return Intersect.INSIDE;\n    }\n\n    if (this._visibilityPlaneMask === CullingVolume.MASK_INSIDE) {\n      // The tile's bounding volume is completely inside the culling volume so\n      // the content bounding volume must also be inside.\n      return Intersect.INSIDE;\n    }\n\n    // PERFORMANCE_IDEA: is it possible to burn less CPU on this test since we know the\n    // tile's (not the content's) bounding volume intersects the culling volume?\n    const cullingVolume = frameState.cullingVolume;\n    const boundingVolume = tile.contentBoundingVolume;\n\n    const tileset = this.tileset;\n    const clippingPlanes = tileset.clippingPlanes;\n    if (defined(clippingPlanes) && clippingPlanes.enabled) {\n      const intersection = clippingPlanes.computeIntersectionWithBoundingVolume(\n        boundingVolume,\n        tileset.clippingPlanesOriginMatrix\n      );\n      this._isClipped = intersection !== Intersect.INSIDE;\n      if (intersection === Intersect.OUTSIDE) {\n        return Intersect.OUTSIDE;\n      }\n    }\n\n    return cullingVolume.computeVisibility(boundingVolume);\n    */\n  }\n\n  /**\n   * Computes the (potentially approximate) distance from the closest point of the tile's bounding volume to the camera.\n   * @param frameState The frame state.\n   * @returns {Number} The distance, in meters, or zero if the camera is inside the bounding volume.\n   */\n  distanceToTile(frameState: FrameState): number {\n    const boundingVolume = this.boundingVolume;\n    return Math.sqrt(Math.max(boundingVolume.distanceSquaredTo(frameState.camera.position), 0));\n  }\n\n  /**\n   * Computes the tile's camera-space z-depth.\n   * @param frameState The frame state.\n   * @returns The distance, in meters.\n   */\n  cameraSpaceZDepth({camera}): number {\n    const boundingVolume = this.boundingVolume; // Gets the underlying OrientedBoundingBox or BoundingSphere\n    scratchVector.subVectors(boundingVolume.center, camera.position);\n    return camera.direction.dot(scratchVector);\n  }\n\n  /**\n   * Checks if the camera is inside the viewer request volume.\n   * @param {FrameState} frameState The frame state.\n   * @returns {Boolean} Whether the camera is inside the volume.\n   */\n  insideViewerRequestVolume(frameState: FrameState) {\n    const viewerRequestVolume = this._viewerRequestVolume;\n    return (\n      !viewerRequestVolume || viewerRequestVolume.distanceSquaredTo(frameState.camera.position) <= 0\n    );\n  }\n\n  // TODO Cesium specific\n\n  // Update whether the tile has expired.\n  updateExpiration() {\n    if (defined(this._expireDate) && this.contentReady && !this.hasEmptyContent) {\n      const now = Date.now();\n      // @ts-ignore Date.lessThan - replace with ms compare?\n      if (Date.lessThan(this._expireDate, now)) {\n        this.contentState = TILE_CONTENT_STATE.EXPIRED;\n        this._expiredContent = this.content;\n      }\n    }\n  }\n\n  get extras() {\n    return this.header.extras;\n  }\n\n  // INTERNAL METHODS\n\n  _initializeLodMetric(header) {\n    if ('lodMetricType' in header) {\n      this.lodMetricType = header.lodMetricType;\n    } else {\n      this.lodMetricType = (this.parent && this.parent.lodMetricType) || this.tileset.lodMetricType;\n      // eslint-disable-next-line\n      console.warn(`3D Tile: Required prop lodMetricType is undefined. Using parent lodMetricType`);\n    }\n\n    // This is used to compute screen space error, i.e., the error measured in pixels.\n    if ('lodMetricValue' in header) {\n      this.lodMetricValue = header.lodMetricValue;\n    } else {\n      this.lodMetricValue =\n        (this.parent && this.parent.lodMetricValue) || this.tileset.lodMetricValue;\n      // eslint-disable-next-line\n      console.warn(\n        '3D Tile: Required prop lodMetricValue is undefined. Using parent lodMetricValue'\n      );\n    }\n  }\n\n  _initializeTransforms(tileHeader) {\n    // The local transform of this tile.\n    this.transform = tileHeader.transform ? new Matrix4(tileHeader.transform) : new Matrix4();\n\n    const parent = this.parent;\n    const tileset = this.tileset;\n\n    const parentTransform =\n      parent && parent.computedTransform\n        ? parent.computedTransform.clone()\n        : tileset.modelMatrix.clone();\n    this.computedTransform = new Matrix4(parentTransform).multiplyRight(this.transform);\n\n    const parentInitialTransform =\n      parent && parent._initialTransform ? parent._initialTransform.clone() : new Matrix4();\n    this._initialTransform = new Matrix4(parentInitialTransform).multiplyRight(this.transform);\n  }\n\n  _initializeBoundingVolumes(tileHeader) {\n    this._contentBoundingVolume = null;\n    this._viewerRequestVolume = null;\n\n    this._updateBoundingVolume(tileHeader);\n  }\n\n  _initializeContent(tileHeader) {\n    // Empty tile by default\n    this.content = {_tileset: this.tileset, _tile: this};\n    this.hasEmptyContent = true;\n    this.contentState = TILE_CONTENT_STATE.UNLOADED;\n\n    // When `true`, the tile's content points to an external tileset.\n    // This is `false` until the tile's content is loaded.\n    this.hasTilesetContent = false;\n\n    if (tileHeader.contentUrl) {\n      this.content = null;\n      this.hasEmptyContent = false;\n    }\n  }\n\n  // TODO - remove anything not related to basic visibility detection\n  _initializeRenderingState(header) {\n    this.depth = header.level || (this.parent ? this.parent.depth + 1 : 0);\n    this._shouldRefine = false;\n\n    // Members this are updated every frame for tree traversal and rendering optimizations:\n    this._distanceToCamera = 0;\n    this._centerZDepth = 0;\n    this._screenSpaceError = 0;\n    this._visibilityPlaneMask = CullingVolume.MASK_INDETERMINATE;\n    this._visible = undefined;\n    this._inRequestVolume = false;\n\n    this._stackLength = 0;\n    this._selectionDepth = 0;\n\n    this._frameNumber = 0;\n    this._touchedFrame = 0;\n    this._visitedFrame = 0;\n    this._selectedFrame = 0;\n    this._requestedFrame = 0;\n\n    this._priority = 0.0;\n  }\n\n  _getRefine(refine) {\n    // Inherit from parent tile if omitted.\n    return refine || (this.parent && this.parent.refine) || TILE_REFINEMENT.REPLACE;\n  }\n\n  _isTileset() {\n    return this.contentUrl.indexOf('.json') !== -1;\n  }\n\n  _onContentLoaded() {\n    // Vector and Geometry tile rendering do not support the skip LOD optimization.\n    switch (this.content && this.content.type) {\n      case 'vctr':\n      case 'geom':\n        // @ts-ignore\n        this.tileset._traverser.disableSkipLevelOfDetail = true;\n        break;\n      default:\n    }\n\n    // The content may be tileset json\n    if (this._isTileset()) {\n      this.hasTilesetContent = true;\n    }\n  }\n\n  _updateBoundingVolume(header) {\n    // Update the bounding volumes\n    this.boundingVolume = createBoundingVolume(\n      header.boundingVolume,\n      this.computedTransform,\n      this.boundingVolume\n    );\n\n    const content = header.content;\n    if (!content) {\n      return;\n    }\n\n    // TODO Cesium specific\n    // Non-leaf tiles may have a content bounding-volume, which is a tight-fit bounding volume\n    // around only the features in the tile. This box is useful for culling for rendering,\n    // but not for culling for traversing the tree since it does not guarantee spatial coherence, i.e.,\n    // since it only bounds features in the tile, not the entire tile, children may be\n    // outside of this box.\n    if (content.boundingVolume) {\n      this._contentBoundingVolume = createBoundingVolume(\n        content.boundingVolume,\n        this.computedTransform,\n        this._contentBoundingVolume\n      );\n    }\n    if (header.viewerRequestVolume) {\n      this._viewerRequestVolume = createBoundingVolume(\n        header.viewerRequestVolume,\n        this.computedTransform,\n        this._viewerRequestVolume\n      );\n    }\n  }\n\n  // Update the tile's transform. The transform is applied to the tile's bounding volumes.\n  _updateTransform(parentTransform = new Matrix4()) {\n    const computedTransform = parentTransform.clone().multiplyRight(this.transform);\n    const didTransformChange = !computedTransform.equals(this.computedTransform);\n\n    if (!didTransformChange) {\n      return;\n    }\n\n    this.computedTransform = computedTransform;\n\n    this._updateBoundingVolume(this.header);\n  }\n\n  // Get options which are applicable only for the particular loader\n  _getLoaderSpecificOptions(loaderId) {\n    switch (loaderId) {\n      case 'i3s':\n        return {\n          ...this.tileset.options.i3s,\n          _tileOptions: {\n            attributeUrls: this.header.attributeUrls,\n            textureUrl: this.header.textureUrl,\n            textureFormat: this.header.textureFormat,\n            textureLoaderOptions: this.header.textureLoaderOptions,\n            materialDefinition: this.header.materialDefinition,\n            isDracoGeometry: this.header.isDracoGeometry,\n            mbs: this.header.mbs\n          },\n          _tilesetOptions: {\n            store: this.tileset.tileset.store,\n            attributeStorageInfo: this.tileset.tileset.attributeStorageInfo,\n            fields: this.tileset.tileset.fields\n          },\n          isTileHeader: false\n        };\n      case '3d-tiles':\n      case 'cesium-ion':\n      default:\n        return get3dTilesOptions(this.tileset.tileset);\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}