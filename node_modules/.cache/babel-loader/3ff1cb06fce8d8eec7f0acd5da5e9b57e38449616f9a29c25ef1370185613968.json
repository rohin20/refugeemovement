{"ast":null,"code":"import _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { CubeGeometry } from '@luma.gl/core';\nimport { UNIT } from '@deck.gl/core';\nimport ColumnLayer from './column-layer';\nvar defaultProps = {\n  cellSize: {\n    type: 'number',\n    min: 0,\n    value: 1000\n  },\n  offset: {\n    type: 'array',\n    value: [1, 1]\n  }\n};\nvar GridCellLayer = /*#__PURE__*/function (_ColumnLayer) {\n  _inherits(GridCellLayer, _ColumnLayer);\n  var _super = _createSuper(GridCellLayer);\n  function GridCellLayer() {\n    _classCallCheck(this, GridCellLayer);\n    return _super.apply(this, arguments);\n  }\n  _createClass(GridCellLayer, [{\n    key: \"getGeometry\",\n    value: function getGeometry(diskResolution) {\n      return new CubeGeometry();\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(_ref) {\n      var uniforms = _ref.uniforms;\n      var _this$props = this.props,\n        elevationScale = _this$props.elevationScale,\n        extruded = _this$props.extruded,\n        offset = _this$props.offset,\n        coverage = _this$props.coverage,\n        cellSize = _this$props.cellSize,\n        angle = _this$props.angle,\n        radiusUnits = _this$props.radiusUnits;\n      this.state.model.setUniforms(uniforms).setUniforms({\n        radius: cellSize / 2,\n        radiusUnits: UNIT[radiusUnits],\n        angle: angle,\n        offset: offset,\n        extruded: extruded,\n        coverage: coverage,\n        elevationScale: elevationScale,\n        edgeDistance: 1,\n        isWireframe: false\n      }).draw();\n    }\n  }]);\n  return GridCellLayer;\n}(ColumnLayer);\nexport { GridCellLayer as default };\n_defineProperty(GridCellLayer, \"layerName\", 'GridCellLayer');\n_defineProperty(GridCellLayer, \"defaultProps\", defaultProps);","map":{"version":3,"names":["CubeGeometry","UNIT","ColumnLayer","defaultProps","cellSize","type","min","value","offset","GridCellLayer","_ColumnLayer","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","getGeometry","diskResolution","draw","_ref","uniforms","_this$props","props","elevationScale","extruded","coverage","angle","radiusUnits","state","model","setUniforms","radius","edgeDistance","isWireframe","default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/layers/src/column-layer/grid-cell-layer.ts"],"sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {CubeGeometry} from '@luma.gl/core';\nimport {UNIT} from '@deck.gl/core';\nimport ColumnLayer, {ColumnLayerProps} from './column-layer';\n\nimport type {DefaultProps} from '@deck.gl/core';\n\nconst defaultProps: DefaultProps<GridCellLayerProps> = {\n  cellSize: {type: 'number', min: 0, value: 1000},\n  offset: {type: 'array', value: [1, 1]}\n};\n\n/** All properties supported by GridCellLayer. */\nexport type GridCellLayerProps<DataT = any> = _GridCellLayerProps & ColumnLayerProps<DataT>;\n\n/** Properties added by GridCellLayer. */\ntype _GridCellLayerProps = {\n  /**\n   * @default 1000\n   */\n  cellSize?: number;\n};\n\nexport default class GridCellLayer<DataT = any, ExtraPropsT = {}> extends ColumnLayer<\n  DataT,\n  ExtraPropsT & Required<_GridCellLayerProps>\n> {\n  static layerName = 'GridCellLayer';\n  static defaultProps = defaultProps;\n\n  getGeometry(diskResolution) {\n    return new CubeGeometry();\n  }\n\n  draw({uniforms}) {\n    const {elevationScale, extruded, offset, coverage, cellSize, angle, radiusUnits} = this.props;\n    this.state.model\n      .setUniforms(uniforms)\n      .setUniforms({\n        radius: cellSize / 2,\n        radiusUnits: UNIT[radiusUnits],\n        angle,\n        offset,\n        extruded,\n        coverage,\n        elevationScale,\n        edgeDistance: 1,\n        isWireframe: false\n      })\n      .draw();\n  }\n}\n"],"mappings":";;;;;AAoBA,SAAQA,YAAR,QAA2B,eAA3B;AACA,SAAQC,IAAR,QAAmB,eAAnB;AACA,OAAOC,WAAP,MAA4C,gBAA5C;AAIA,IAAMC,YAA8C,GAAG;EACrDC,QAAQ,EAAE;IAACC,IAAI,EAAE,QAAP;IAAiBC,GAAG,EAAE,CAAtB;IAAyBC,KAAK,EAAE;EAAhC,CAD2C;EAErDC,MAAM,EAAE;IAACH,IAAI,EAAE,OAAP;IAAgBE,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ;EAAvB;AAF6C,CAAvD;AAAA,IAgBqBE,aAAN,0BAAAC,YAAA;EAAAC,SAAA,CAAAF,aAAA,EAAAC,YAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,aAAA;EAAA,SAAAA,cAAA;IAAAK,eAAA,OAAAL,aAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,aAAA;IAAAS,GAAA;IAAAX,KAAA,EAOb,SAAAY,YAAYC,cAAD,EAAiB;MAC1B,OAAO,IAAIpB,YAAJ,EAAP;IACD;EAAA;IAAAkB,GAAA;IAAAX,KAAA,EAED,SAAAc,KAAAC,IAAA,EAAiB;MAAA,IAAXC,QAAA,GAAAD,IAAA,CAAAC,QAAA;MACJ,IAAAC,WAAA,GAAmF,KAAKC,KAAxF;QAAOC,cAAD,GAAAF,WAAA,CAACE,cAAD;QAAiBC,QAAjB,GAAAH,WAAA,CAAiBG,QAAjB;QAA2BnB,MAA3B,GAAAgB,WAAA,CAA2BhB,MAA3B;QAAmCoB,QAAnC,GAAAJ,WAAA,CAAmCI,QAAnC;QAA6CxB,QAA7C,GAAAoB,WAAA,CAA6CpB,QAA7C;QAAuDyB,KAAvD,GAAAL,WAAA,CAAuDK,KAAvD;QAA8DC,WAAA,GAAAN,WAAA,CAAAM,WAAA;MACpE,KAAKC,KAAL,CAAWC,KAAX,CACGC,WADH,CACeV,QADf,EAEGU,WAFH,CAEe;QACXC,MAAM,EAAE9B,QAAQ,GAAG,CADR;QAEX0B,WAAW,EAAE7B,IAAI,CAAC6B,WAAD,CAFN;QAGXD,KAHW,EAGXA,KAHW;QAIXrB,MAJW,EAIXA,MAJW;QAKXmB,QALW,EAKXA,QALW;QAMXC,QANW,EAMXA,QANW;QAOXF,cAPW,EAOXA,cAPW;QAQXS,YAAY,EAAE,CARH;QASXC,WAAW,EAAE;MATF,CAFf,EAaGf,IAbH;IAcD;EAAA;EAAA,OAAAZ,aAAA;AAAA,EA3BuEP,WAA3D;AAAA,SAAMO,aAAN,IAAA4B,OAAA;gBAAM5B,a,eAIA,e;gBAJAA,a,kBAKGN,Y"},"metadata":{},"sourceType":"module","externalDependencies":[]}