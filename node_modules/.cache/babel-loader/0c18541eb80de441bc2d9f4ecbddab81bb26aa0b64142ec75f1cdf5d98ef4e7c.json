{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { resolvePath } from '@loaders.gl/loader-utils';\nimport { makeResponse } from '../utils/response-utils';\nimport { getErrorMessageFromResponse } from './fetch-error-message';\nexport function fetchFile(_x) {\n  return _fetchFile.apply(this, arguments);\n}\nfunction _fetchFile() {\n  _fetchFile = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(url) {\n    var options,\n      response,\n      _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            if (!(typeof url !== 'string')) {\n              _context.next = 5;\n              break;\n            }\n            _context.next = 4;\n            return makeResponse(url);\n          case 4:\n            return _context.abrupt(\"return\", _context.sent);\n          case 5:\n            url = resolvePath(url);\n            _context.next = 8;\n            return fetch(url, options);\n          case 8:\n            response = _context.sent;\n            if (!(!response.ok && options[\"throws\"])) {\n              _context.next = 15;\n              break;\n            }\n            _context.t0 = Error;\n            _context.next = 13;\n            return getErrorMessageFromResponse(response);\n          case 13:\n            _context.t1 = _context.sent;\n            throw new _context.t0(_context.t1);\n          case 15:\n            return _context.abrupt(\"return\", response);\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _fetchFile.apply(this, arguments);\n}","map":{"version":3,"names":["resolvePath","makeResponse","getErrorMessageFromResponse","fetchFile","_x","_fetchFile","apply","arguments","_callee","url","options","response","_args","_regeneratorRuntime","wrap","_callee$","_context","prev","next","length","undefined","abrupt","sent","fetch","ok","t0","Error","t1","stop"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/kepler.gl/node_modules/@loaders.gl/core/src/lib/fetch/fetch-file.js"],"sourcesContent":["/* global fetch */\nimport {resolvePath} from '@loaders.gl/loader-utils';\nimport {makeResponse} from '../utils/response-utils';\nimport {getErrorMessageFromResponse} from './fetch-error-message';\n\n// As fetch but respects pathPrefix and file aliases\n// Reads file data from:\n// * data urls\n// * http/http urls\n// * File/Blob objects\nexport async function fetchFile(url, options = {}) {\n  if (typeof url !== 'string') {\n    return await makeResponse(url);\n  }\n\n  url = resolvePath(url);\n\n  const response = await fetch(url, options);\n  if (!response.ok && options.throws) {\n    throw new Error(await getErrorMessageFromResponse(response));\n  }\n\n  return response;\n}\n"],"mappings":";;AACA,SAAQA,WAAR,QAA0B,0BAA1B;AACA,SAAQC,YAAR,QAA2B,yBAA3B;AACA,SAAQC,2BAAR,QAA0C,uBAA1C;AAOA,gBAAsBC,SAAtBA,CAAAC,EAAA;EAAA,OAAAC,UAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;;0DAAO,SAAAC,QAAyBC,GAAzB;IAAA,IAAAC,OAAA;MAAAC,QAAA;MAAAC,KAAA,GAAAL,SAAA;IAAA,OAAAM,mBAAA,CAAAC,IAAA,UAAAC,SAAAC,QAAA;MAAA;QAAA,QAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAA8BR,OAA9B,GAAAE,KAAA,CAAAO,MAAA,QAAAP,KAAA,QAAAQ,SAAA,GAAAR,KAAA,MAAwC,EAAxC;YAAA,MACD,OAAOH,GAAP,KAAe,QADd;cAAAO,QAAA,CAAAE,IAAA;cAAA;YAAA;YAAAF,QAAA,CAAAE,IAAA;YAAA,OAEUjB,YAAY,CAACQ,GAAD,CAFtB;UAAA;YAAA,OAAAO,QAAA,CAAAK,MAAA,WAAAL,QAAA,CAAAM,IAAA;UAAA;YAKLb,GAAG,GAAGT,WAAW,CAACS,GAAD,CAAjB;YALKO,QAAA,CAAAE,IAAA;YAAA,OAOkBK,KAAK,CAACd,GAAD,EAAMC,OAAN,CAPvB;UAAA;YAOCC,QAPD,GAAAK,QAAA,CAAAM,IAAA;YAAA,MAQD,CAACX,QAAQ,CAACa,EAAV,IAAgBd,OAAO,UARtB;cAAAM,QAAA,CAAAE,IAAA;cAAA;YAAA;YAAAF,QAAA,CAAAS,EAAA,GASOC,KATP;YAAAV,QAAA,CAAAE,IAAA;YAAA,OASmBhB,2BAA2B,CAACS,QAAD,CAT9C;UAAA;YAAAK,QAAA,CAAAW,EAAA,GAAAX,QAAA,CAAAM,IAAA;YAAA,UAAAN,QAAA,CAAAS,EAAA,CAAAT,QAAA,CAAAW,EAAA;UAAA;YAAA,OAAAX,QAAA,CAAAK,MAAA,WAYEV,QAZF;UAAA;UAAA;YAAA,OAAAK,QAAA,CAAAY,IAAA;QAAA;MAAA;IAAA,GAAApB,OAAA;EAAA,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}