{"ast":null,"code":"import { VERSION } from './lib/utils/version';\nimport encodeGLBSync from './lib/encoders/encode-glb';\nexport var GLBWriter = {\n  name: 'GLB',\n  id: 'glb',\n  module: 'gltf',\n  version: VERSION,\n  extensions: ['glb'],\n  mimeTypes: ['model/gltf-binary'],\n  binary: true,\n  encodeSync: encodeSync,\n  options: {\n    glb: {}\n  }\n};\nfunction encodeSync(glb, options) {\n  var _options$byteOffset = options.byteOffset,\n    byteOffset = _options$byteOffset === void 0 ? 0 : _options$byteOffset;\n  var byteLength = encodeGLBSync(glb, null, byteOffset, options);\n  var arrayBuffer = new ArrayBuffer(byteLength);\n  var dataView = new DataView(arrayBuffer);\n  encodeGLBSync(glb, dataView, byteOffset, options);\n  return arrayBuffer;\n}\nexport var _TypecheckGLBLoader = GLBWriter;","map":{"version":3,"names":["VERSION","encodeGLBSync","GLBWriter","name","id","module","version","extensions","mimeTypes","binary","encodeSync","options","glb","_options$byteOffset","byteOffset","byteLength","arrayBuffer","ArrayBuffer","dataView","DataView","_TypecheckGLBLoader"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@loaders.gl/gltf/src/glb-writer.ts"],"sourcesContent":["import type {Writer} from '@loaders.gl/loader-utils';\nimport {VERSION} from './lib/utils/version';\nimport encodeGLBSync from './lib/encoders/encode-glb';\n\n/**\n * GLB exporter\n * GLB is the binary container format for GLTF\n */\nexport const GLBWriter = {\n  name: 'GLB',\n  id: 'glb',\n  module: 'gltf',\n  version: VERSION,\n\n  extensions: ['glb'],\n  mimeTypes: ['model/gltf-binary'],\n  binary: true,\n\n  encodeSync,\n\n  options: {\n    glb: {}\n  }\n};\n\nfunction encodeSync(glb, options) {\n  const {byteOffset = 0} = options;\n\n  // Calculate length and allocate buffer\n  const byteLength = encodeGLBSync(glb, null, byteOffset, options);\n  const arrayBuffer = new ArrayBuffer(byteLength);\n\n  // Encode into buffer\n  const dataView = new DataView(arrayBuffer);\n  encodeGLBSync(glb, dataView, byteOffset, options);\n\n  return arrayBuffer;\n}\n\n// TYPE TESTS - TODO find a better way than exporting junk\nexport const _TypecheckGLBLoader: Writer = GLBWriter;\n"],"mappings":"AACA,SAAQA,OAAO,QAAO,qBAAqB;AAC3C,OAAOC,aAAa,MAAM,2BAA2B;AAMrD,OAAO,IAAMC,SAAS,GAAG;EACvBC,IAAI,EAAE,KAAK;EACXC,EAAE,EAAE,KAAK;EACTC,MAAM,EAAE,MAAM;EACdC,OAAO,EAAEN,OAAO;EAEhBO,UAAU,EAAE,CAAC,KAAK,CAAC;EACnBC,SAAS,EAAE,CAAC,mBAAmB,CAAC;EAChCC,MAAM,EAAE,IAAI;EAEZC,UAAU,EAAVA,UAAU;EAEVC,OAAO,EAAE;IACPC,GAAG,EAAE,CAAC;EACR;AACF,CAAC;AAED,SAASF,UAAUA,CAACE,GAAG,EAAED,OAAO,EAAE;EAChC,IAAAE,mBAAA,GAAyBF,OAAO,CAAzBG,UAAU;IAAVA,UAAU,GAAAD,mBAAA,cAAG,IAAAA,mBAAA;EAGpB,IAAME,UAAU,GAAGd,aAAa,CAACW,GAAG,EAAE,IAAI,EAAEE,UAAU,EAAEH,OAAO,CAAC;EAChE,IAAMK,WAAW,GAAG,IAAIC,WAAW,CAACF,UAAU,CAAC;EAG/C,IAAMG,QAAQ,GAAG,IAAIC,QAAQ,CAACH,WAAW,CAAC;EAC1Cf,aAAa,CAACW,GAAG,EAAEM,QAAQ,EAAEJ,UAAU,EAAEH,OAAO,CAAC;EAEjD,OAAOK,WAAW;AACpB;AAGA,OAAO,IAAMI,mBAA2B,GAAGlB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}