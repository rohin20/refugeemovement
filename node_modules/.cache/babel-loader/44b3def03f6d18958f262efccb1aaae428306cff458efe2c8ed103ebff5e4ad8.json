{"ast":null,"code":"import _toConsumableArray from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { getFetchFunction } from './option-utils';\nexport function getLoaderContext(context, options) {\n  var previousContext = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  if (previousContext) {\n    return previousContext;\n  }\n  var resolvedContext = _objectSpread({\n    fetch: getFetchFunction(options, context)\n  }, context);\n  if (!Array.isArray(resolvedContext.loaders)) {\n    resolvedContext.loaders = null;\n  }\n  return resolvedContext;\n}\nexport function getLoadersFromContext(loaders, context) {\n  if (!context && loaders && !Array.isArray(loaders)) {\n    return loaders;\n  }\n  var candidateLoaders;\n  if (loaders) {\n    candidateLoaders = Array.isArray(loaders) ? loaders : [loaders];\n  }\n  if (context && context.loaders) {\n    var contextLoaders = Array.isArray(context.loaders) ? context.loaders : [context.loaders];\n    candidateLoaders = candidateLoaders ? [].concat(_toConsumableArray(candidateLoaders), _toConsumableArray(contextLoaders)) : contextLoaders;\n  }\n  return candidateLoaders && candidateLoaders.length ? candidateLoaders : null;\n}","map":{"version":3,"names":["getFetchFunction","getLoaderContext","context","options","previousContext","arguments","length","undefined","resolvedContext","_objectSpread","fetch","Array","isArray","loaders","getLoadersFromContext","candidateLoaders","contextLoaders","concat","_toConsumableArray"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/layers/node_modules/@loaders.gl/core/src/lib/loader-utils/loader-context.ts"],"sourcesContent":["import type {Loader, LoaderOptions, LoaderContext} from '@loaders.gl/loader-utils';\nimport {getFetchFunction} from './option-utils';\n\n/**\n * \"sub\" loaders invoked by other loaders get a \"context\" injected on `this`\n * The context will inject core methods like `parse` and contain information\n * about loaders and options passed in to the top-level `parse` call.\n *\n * @param context\n * @param options\n * @param previousContext\n */\nexport function getLoaderContext(\n  context: Omit<LoaderContext, 'fetch'> & Partial<Pick<LoaderContext, 'fetch'>>,\n  options?: LoaderOptions,\n  previousContext: LoaderContext | null = null\n): LoaderContext {\n  // For recursive calls, we already have a context\n  // TODO - add any additional loaders to context?\n  if (previousContext) {\n    return previousContext;\n  }\n\n  const resolvedContext: LoaderContext = {\n    fetch: getFetchFunction(options, context),\n    ...context\n  };\n\n  // Recursive loading does not use single loader\n  if (!Array.isArray(resolvedContext.loaders)) {\n    resolvedContext.loaders = null;\n  }\n\n  return resolvedContext;\n}\n\n// eslint-disable-next-line complexity\nexport function getLoadersFromContext(\n  loaders: Loader[] | Loader | undefined,\n  context?: LoaderContext\n) {\n  // A single non-array loader is force selected, but only on top-level (context === null)\n  if (!context && loaders && !Array.isArray(loaders)) {\n    return loaders;\n  }\n\n  // Create a merged list\n  let candidateLoaders;\n  if (loaders) {\n    candidateLoaders = Array.isArray(loaders) ? loaders : [loaders];\n  }\n  if (context && context.loaders) {\n    const contextLoaders = Array.isArray(context.loaders) ? context.loaders : [context.loaders];\n    candidateLoaders = candidateLoaders ? [...candidateLoaders, ...contextLoaders] : contextLoaders;\n  }\n  // If no loaders, return null to look in globally registered loaders\n  return candidateLoaders && candidateLoaders.length ? candidateLoaders : null;\n}\n"],"mappings":";;AACA,SAAQA,gBAAgB,QAAO,gBAAgB;AAW/C,OAAO,SAASC,gBAAgBA,CAC9BC,OAA6E,EAC7EC,OAAuB,EAER;EAAA,IADfC,eAAqC,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAI5C,IAAID,eAAe,EAAE;IACnB,OAAOA,eAAe;EACxB;EAEA,IAAMI,eAA8B,GAAAC,aAAA;IAClCC,KAAK,EAAEV,gBAAgB,CAACG,OAAO,EAAED,OAAO;EAAC,GACtCA,OAAA,CACJ;EAGD,IAAI,CAACS,KAAK,CAACC,OAAO,CAACJ,eAAe,CAACK,OAAO,CAAC,EAAE;IAC3CL,eAAe,CAACK,OAAO,GAAG,IAAI;EAChC;EAEA,OAAOL,eAAe;AACxB;AAGA,OAAO,SAASM,qBAAqBA,CACnCD,OAAsC,EACtCX,OAAuB,EACvB;EAEA,IAAI,CAACA,OAAO,IAAIW,OAAO,IAAI,CAACF,KAAK,CAACC,OAAO,CAACC,OAAO,CAAC,EAAE;IAClD,OAAOA,OAAO;EAChB;EAGA,IAAIE,gBAAgB;EACpB,IAAIF,OAAO,EAAE;IACXE,gBAAgB,GAAGJ,KAAK,CAACC,OAAO,CAACC,OAAO,CAAC,GAAGA,OAAO,GAAG,CAACA,OAAO,CAAC;EACjE;EACA,IAAIX,OAAO,IAAIA,OAAO,CAACW,OAAO,EAAE;IAC9B,IAAMG,cAAc,GAAGL,KAAK,CAACC,OAAO,CAACV,OAAO,CAACW,OAAO,CAAC,GAAGX,OAAO,CAACW,OAAO,GAAG,CAACX,OAAO,CAACW,OAAO,CAAC;IAC3FE,gBAAgB,GAAGA,gBAAgB,MAAAE,MAAA,CAAAC,kBAAA,CAAOH,gBAAgB,GAAAG,kBAAA,CAAKF,cAAc,KAAIA,cAAc;EACjG;EAEA,OAAOD,gBAAgB,IAAIA,gBAAgB,CAACT,MAAM,GAAGS,gBAAgB,GAAG,IAAI;AAC9E"},"metadata":{},"sourceType":"module","externalDependencies":[]}