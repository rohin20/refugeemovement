{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hexToRgb = hexToRgb;\nexports.isHexColor = isHexColor;\nexports.rgbToHex = rgbToHex;\nexports.getColorGroupByName = getColorGroupByName;\nexports.reverseColorRange = reverseColorRange;\nexports.createLinearGradient = createLinearGradient;\nexports.isRgbColor = isRgbColor;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n} /**\n  * get r g b from hex code\n  *\n  * @param hex\n  * @returns array of r g bs\n  */\nfunction hexToRgb(hex) {\n  var result = isHexColor(hex);\n  if (!result) {\n    return [0, 0, 0];\n  }\n  var r = parseInt(result[1], 16);\n  var g = parseInt(result[2], 16);\n  var b = parseInt(result[3], 16);\n  return [r, g, b];\n}\nfunction isHexColor(hex) {\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result;\n}\nfunction PadNum(c) {\n  var hex = c.toString(16);\n  return hex.length === 1 ? \"0\".concat(hex) : hex;\n}\n/**\n * get hex from r g b\n *\n * @param rgb\n * @returns hex string\n */\n\nfunction rgbToHex(_ref) {\n  var _ref2 = (0, _slicedToArray2[\"default\"])(_ref, 3),\n    r = _ref2[0],\n    g = _ref2[1],\n    b = _ref2[2];\n  return \"#\".concat([r, g, b].map(function (n) {\n    return PadNum(n);\n  }).join('')).toUpperCase();\n}\n/**\n * Get color group name by parsing name, discard step in the name\n * e.g. Global Warming 6 -> Global Warming\n *\n * @param {Object} colorRange\n * @return {string | null}\n */\n\nfunction getColorGroupByName(colorRange) {\n  if (!colorRange || typeof colorRange.name !== 'string') {\n    return null;\n  }\n  return colorRange.name.replace(/\\b[^a-zA-Z]+$/, '');\n}\n/**\n * Get a reversed colorRange\n * @param reversed\n * @param colorRange\n */\n\nfunction reverseColorRange(reversed, colorRange) {\n  if (!colorRange) return null; // if (colorRange.reversed) return colorRange;\n\n  return _objectSpread(_objectSpread({}, colorRange), {}, {\n    reversed: reversed,\n    colors: colorRange.colors.slice().reverse()\n  });\n}\n/**\n * given a list of rgb arrays it will generate a linear gradient css rule\n * @param direction\n * @param colors\n * @return\n */\n\nfunction createLinearGradient(direction, colors) {\n  var step = parseFloat((100.0 / colors.length).toFixed(2));\n  var bands = colors.map(function (rgb, index) {\n    return \"rgba(\".concat(rgb.join(','), \", 1) \").concat(step * index, \"%, rgba(\").concat(rgb.join(','), \", 1) \").concat(step * (index + 1), \"%\");\n  });\n  return \"linear-gradient(to \".concat(direction, \", \").concat(bands.join(','), \")\");\n}\n/**\n * Whether color is rgb\n * @returns\n */\n\nfunction isRgbColor(color) {\n  return Boolean(color && Array.isArray(color) && color.length === 3 && color.every(function (n) {\n    return Number.isFinite(n) && n <= 255 && n >= 0;\n  }));\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","hexToRgb","isHexColor","rgbToHex","getColorGroupByName","reverseColorRange","createLinearGradient","isRgbColor","_defineProperty2","_interopRequireDefault","require","_slicedToArray2","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","hex","result","r","parseInt","b","g","PadNum","c","concat","_ref2","map","n","join","toUpperCase","colorRange","name","replace","colors","slice","reverse","bands","rgb","index","step","direction","Number","isFinite"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/utils/src/color-utils.ts"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {ColorRange} from '@kepler.gl/constants';\nimport {HexColor, RGBColor} from '@kepler.gl/types';\n\n/**\n * get r g b from hex code\n *\n * @param hex\n * @returns array of r g bs\n */\nexport function hexToRgb(hex: string): RGBColor {\n  const result = isHexColor(hex);\n\n  if (!result) {\n    return [0, 0, 0];\n  }\n\n  const r = parseInt(result[1], 16);\n  const g = parseInt(result[2], 16);\n  const b = parseInt(result[3], 16);\n\n  return [r, g, b];\n}\n\nexport function isHexColor(hex: string): RegExpExecArray | null {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n  return result;\n}\n\nfunction PadNum(c) {\n  const hex = c.toString(16);\n  return hex.length === 1 ? `0${hex}` : hex;\n}\n\n/**\n * get hex from r g b\n *\n * @param rgb\n * @returns hex string\n */\nexport function rgbToHex([r, g, b]: RGBColor): HexColor {\n  return `#${[r, g, b].map(n => PadNum(n)).join('')}`.toUpperCase();\n}\n\n/**\n * Get color group name by parsing name, discard step in the name\n * e.g. Global Warming 6 -> Global Warming\n *\n * @param {Object} colorRange\n * @return {string | null}\n */\nexport function getColorGroupByName(colorRange: ColorRange): string | null {\n  if (!colorRange || typeof colorRange.name !== 'string') {\n    return null;\n  }\n\n  return colorRange.name.replace(/\\b[^a-zA-Z]+$/, '');\n}\n\n/**\n * Get a reversed colorRange\n * @param reversed\n * @param colorRange\n */\nexport function reverseColorRange(reversed: boolean, colorRange: ColorRange): ColorRange | null {\n  if (!colorRange) return null;\n  // if (colorRange.reversed) return colorRange;\n  return {\n    ...colorRange,\n    reversed,\n    colors: colorRange.colors.slice().reverse()\n  };\n}\n\n/**\n * given a list of rgb arrays it will generate a linear gradient css rule\n * @param direction\n * @param colors\n * @return\n */\nexport function createLinearGradient(direction: string, colors: RGBColor[]) {\n  const step = parseFloat((100.0 / colors.length).toFixed(2));\n  const bands = colors.map((rgb, index) => {\n    return `rgba(${rgb.join(',')}, 1) ${step * index}%, rgba(${rgb.join(',')}, 1) ${step *\n      (index + 1)}%`;\n  });\n\n  return `linear-gradient(to ${direction}, ${bands.join(',')})`;\n}\n\n/**\n * Whether color is rgb\n * @returns\n */\nexport function isRgbColor(color: unknown): boolean {\n  return Boolean(\n    color &&\n      Array.isArray(color) &&\n      color.length === 3 &&\n      color.every(n => Number.isFinite(n) && n <= 255 && n >= 0)\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}