{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.exportData = exportData;\nexports.formatCsv = formatCsv;\nexports[\"default\"] = void 0;\nvar _window = require(\"global/window\");\nvar _d3Dsv = require(\"d3-dsv\");\nvar _constants = require(\"@kepler.gl/constants\");\nvar _utils = require(\"@kepler.gl/utils\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction exportData(state, options) {\n  var visState = state.visState,\n    appName = state.appName;\n  var datasets = visState.datasets;\n  var selectedDataset = options.selectedDataset,\n    dataType = options.dataType,\n    filtered = options.filtered; // get the selected data\n\n  var filename = appName ? appName : _utils.DEFAULT_DATA_NAME;\n  var selectedDatasets = datasets[selectedDataset] ? [datasets[selectedDataset]] : Object.values(datasets);\n  if (!selectedDatasets.length) {\n    // error: selected dataset not found.\n    return;\n  }\n  selectedDatasets.forEach(function (selectedData) {\n    var _ref = selectedData,\n      dataContainer = _ref.dataContainer,\n      fields = _ref.fields,\n      label = _ref.label,\n      _ref$filteredIdxCPU = _ref.filteredIdxCPU,\n      filteredIdxCPU = _ref$filteredIdxCPU === void 0 ? [] : _ref$filteredIdxCPU;\n    var toExport = filtered ? (0, _utils.createIndexedDataContainer)(dataContainer, filteredIdxCPU) : dataContainer; // start to export data according to selected data type\n\n    switch (dataType) {\n      case _constants.EXPORT_DATA_TYPE.CSV:\n        {\n          var csv = formatCsv(toExport, fields);\n          var fileBlob = new _window.Blob([csv], {\n            type: 'text/csv'\n          });\n          (0, _utils.downloadFile)(fileBlob, \"\".concat(filename, \"_\").concat(label, \".csv\"));\n          break;\n        }\n      // TODO: support more file types.\n\n      default:\n        break;\n    }\n  });\n}\n/**\n * On export data to csv\n * @param dataContainer\n * @param fields `dataset.fields`\n * @returns csv string\n */\n\nfunction formatCsv(data, fields) {\n  var columns = fields.map(function (f) {\n    return f.displayName || f.name;\n  });\n  var formattedData = [columns]; // parse geojson object as string\n\n  var _iterator = _createForOfIteratorHelper(data.rows(true)),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var row = _step.value;\n      formattedData.push(row.map(function (d, i) {\n        return (0, _utils.parseFieldValue)(d, fields[i].type);\n      }));\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return (0, _d3Dsv.csvFormatRows)(formattedData);\n}\nvar exporters = {\n  exportData: exportData\n};\nvar _default = exporters;\nexports[\"default\"] = _default;","map":{"version":3,"names":["value","exports","exportData","formatCsv","_window","require","_d3Dsv","_utils","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","normalCompletion","didErr","err","step","next","_e2","selectedDatasets","minLen","_arrayLikeToArray","Object","prototype","toString","call","slice","constructor","name","from","test","dataContainer","arr","len","arr2","label","state","options","visState","appName","datasets","dataType","filtered","filename","DEFAULT_DATA_NAME","selectedDataset","values","_ref","selectedData","fields","_ref$filteredIdxCPU","filteredIdxCPU","toExport","createIndexedDataContainer","_constants","EXPORT_DATA_TYPE","CSV","type","downloadFile","fileBlob","concat","data","displayName","_iterator","rows","_step"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/reducers/src/export-utils.ts"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Blob} from 'global/window';\nimport {csvFormatRows} from 'd3-dsv';\n\nimport {EXPORT_DATA_TYPE} from '@kepler.gl/constants';\nimport {Field} from '@kepler.gl/types';\nimport KeplerTable, {Datasets} from '@kepler.gl/table';\n\nimport {\n  createIndexedDataContainer,\n  DataContainerInterface,\n  parseFieldValue,\n  downloadFile,\n  DEFAULT_DATA_NAME\n} from '@kepler.gl/utils';\n\ninterface StateType {\n  visState: {datasets: Datasets};\n  appName?: string;\n}\n\nexport function exportData(state: StateType, options) {\n  const {visState, appName} = state;\n  const {datasets} = visState;\n  const {selectedDataset, dataType, filtered} = options;\n  // get the selected data\n  const filename = appName ? appName : DEFAULT_DATA_NAME;\n  const selectedDatasets = datasets[selectedDataset]\n    ? [datasets[selectedDataset]]\n    : Object.values(datasets);\n  if (!selectedDatasets.length) {\n    // error: selected dataset not found.\n    return;\n  }\n\n  selectedDatasets.forEach(selectedData => {\n    const {dataContainer, fields, label, filteredIdxCPU = []} = selectedData as KeplerTable;\n    const toExport = filtered\n      ? createIndexedDataContainer(dataContainer, filteredIdxCPU)\n      : dataContainer;\n\n    // start to export data according to selected data type\n    switch (dataType) {\n      case EXPORT_DATA_TYPE.CSV: {\n        const csv = formatCsv(toExport, fields);\n\n        const fileBlob = new Blob([csv], {type: 'text/csv'});\n        downloadFile(fileBlob, `${filename}_${label}.csv`);\n        break;\n      }\n      // TODO: support more file types.\n      default:\n        break;\n    }\n  });\n}\n\n/**\n * On export data to csv\n * @param dataContainer\n * @param fields `dataset.fields`\n * @returns csv string\n */\nexport function formatCsv(data: DataContainerInterface, fields: Field[]): string {\n  const columns = fields.map(f => f.displayName || f.name);\n  const formattedData = [columns];\n\n  // parse geojson object as string\n  for (const row of data.rows(true)) {\n    formattedData.push(row.map((d, i) => parseFieldValue(d, fields[i].type)));\n  }\n\n  return csvFormatRows(formattedData);\n}\n\nconst exporters = {\n  exportData\n};\n\nexport default exporters;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}