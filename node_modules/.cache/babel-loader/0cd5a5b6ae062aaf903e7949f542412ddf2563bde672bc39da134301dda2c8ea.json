{"ast":null,"code":"import _slicedToArray from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar channelHandles = 1;\nvar animationHandles = 1;\nexport var Timeline = /*#__PURE__*/function () {\n  function Timeline() {\n    _classCallCheck(this, Timeline);\n    this.time = 0;\n    this.channels = new Map();\n    this.animations = new Map();\n    this.playing = false;\n    this.lastEngineTime = -1;\n  }\n  _createClass(Timeline, [{\n    key: \"addChannel\",\n    value: function addChannel(props) {\n      var _props$delay = props.delay,\n        delay = _props$delay === void 0 ? 0 : _props$delay,\n        _props$duration = props.duration,\n        duration = _props$duration === void 0 ? Number.POSITIVE_INFINITY : _props$duration,\n        _props$rate = props.rate,\n        rate = _props$rate === void 0 ? 1 : _props$rate,\n        _props$repeat = props.repeat,\n        repeat = _props$repeat === void 0 ? 1 : _props$repeat;\n      var handle = channelHandles++;\n      var channel = {\n        time: 0,\n        delay: delay,\n        duration: duration,\n        rate: rate,\n        repeat: repeat\n      };\n      this._setChannelTime(channel, this.time);\n      this.channels.set(handle, channel);\n      return handle;\n    }\n  }, {\n    key: \"removeChannel\",\n    value: function removeChannel(handle) {\n      this.channels.delete(handle);\n      var _iterator = _createForOfIteratorHelper(this.animations),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n            animationHandle = _step$value[0],\n            animation = _step$value[1];\n          if (animation.channel === handle) {\n            this.detachAnimation(animationHandle);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"isFinished\",\n    value: function isFinished(handle) {\n      var channel = this.channels.get(handle);\n      if (channel === undefined) {\n        return false;\n      }\n      return this.time >= channel.delay + channel.duration * channel.repeat;\n    }\n  }, {\n    key: \"getTime\",\n    value: function getTime(handle) {\n      if (handle === undefined) {\n        return this.time;\n      }\n      var channel = this.channels.get(handle);\n      if (channel === undefined) {\n        return -1;\n      }\n      return channel.time;\n    }\n  }, {\n    key: \"setTime\",\n    value: function setTime(time) {\n      this.time = Math.max(0, time);\n      var channels = this.channels.values();\n      var _iterator2 = _createForOfIteratorHelper(channels),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var channel = _step2.value;\n          this._setChannelTime(channel, this.time);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      var animations = this.animations.values();\n      var _iterator3 = _createForOfIteratorHelper(animations),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var animationData = _step3.value;\n          var animation = animationData.animation,\n            _channel = animationData.channel;\n          animation.setTime(this.getTime(_channel));\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      this.playing = true;\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this.playing = false;\n      this.lastEngineTime = -1;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.setTime(0);\n    }\n  }, {\n    key: \"attachAnimation\",\n    value: function attachAnimation(animation, channelHandle) {\n      var animationHandle = animationHandles++;\n      this.animations.set(animationHandle, {\n        animation: animation,\n        channel: channelHandle\n      });\n      animation.setTime(this.getTime(channelHandle));\n      return animationHandle;\n    }\n  }, {\n    key: \"detachAnimation\",\n    value: function detachAnimation(handle) {\n      this.animations.delete(handle);\n    }\n  }, {\n    key: \"update\",\n    value: function update(engineTime) {\n      if (this.playing) {\n        if (this.lastEngineTime === -1) {\n          this.lastEngineTime = engineTime;\n        }\n        this.setTime(this.time + (engineTime - this.lastEngineTime));\n        this.lastEngineTime = engineTime;\n      }\n    }\n  }, {\n    key: \"_setChannelTime\",\n    value: function _setChannelTime(channel, time) {\n      var offsetTime = time - channel.delay;\n      var totalDuration = channel.duration * channel.repeat;\n      if (offsetTime >= totalDuration) {\n        channel.time = channel.duration * channel.rate;\n      } else {\n        channel.time = Math.max(0, offsetTime) % channel.duration;\n        channel.time *= channel.rate;\n      }\n    }\n  }]);\n  return Timeline;\n}();","map":{"version":3,"names":["channelHandles","animationHandles","Timeline","_classCallCheck","time","channels","Map","animations","playing","lastEngineTime","_createClass","key","value","addChannel","props","_props$delay","delay","_props$duration","duration","Number","POSITIVE_INFINITY","_props$rate","rate","_props$repeat","repeat","handle","channel","_setChannelTime","set","removeChannel","delete","_iterator","_createForOfIteratorHelper","_step","s","n","done","_step$value","_slicedToArray","animationHandle","animation","detachAnimation","err","e","f","isFinished","get","undefined","getTime","setTime","Math","max","values","_iterator2","_step2","_iterator3","_step3","animationData","play","pause","reset","attachAnimation","channelHandle","update","engineTime","offsetTime","totalDuration"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@luma.gl/engine/src/animation/timeline.js"],"sourcesContent":["let channelHandles = 1;\nlet animationHandles = 1;\n\nexport class Timeline {\n  constructor() {\n    this.time = 0;\n    this.channels = new Map();\n    this.animations = new Map();\n    this.playing = false;\n    this.lastEngineTime = -1;\n  }\n\n  addChannel(props) {\n    const {delay = 0, duration = Number.POSITIVE_INFINITY, rate = 1, repeat = 1} = props;\n\n    const handle = channelHandles++;\n    const channel = {\n      time: 0,\n      delay,\n      duration,\n      rate,\n      repeat\n    };\n    this._setChannelTime(channel, this.time);\n    this.channels.set(handle, channel);\n\n    return handle;\n  }\n\n  removeChannel(handle) {\n    this.channels.delete(handle);\n\n    for (const [animationHandle, animation] of this.animations) {\n      if (animation.channel === handle) {\n        this.detachAnimation(animationHandle);\n      }\n    }\n  }\n\n  isFinished(handle) {\n    const channel = this.channels.get(handle);\n    if (channel === undefined) {\n      return false;\n    }\n\n    return this.time >= channel.delay + channel.duration * channel.repeat;\n  }\n\n  getTime(handle) {\n    if (handle === undefined) {\n      return this.time;\n    }\n\n    const channel = this.channels.get(handle);\n\n    if (channel === undefined) {\n      return -1;\n    }\n\n    return channel.time;\n  }\n\n  setTime(time) {\n    this.time = Math.max(0, time);\n\n    const channels = this.channels.values();\n    for (const channel of channels) {\n      this._setChannelTime(channel, this.time);\n    }\n\n    const animations = this.animations.values();\n    for (const animationData of animations) {\n      const {animation, channel} = animationData;\n      animation.setTime(this.getTime(channel));\n    }\n  }\n\n  play() {\n    this.playing = true;\n  }\n\n  pause() {\n    this.playing = false;\n    this.lastEngineTime = -1;\n  }\n\n  reset() {\n    this.setTime(0);\n  }\n\n  attachAnimation(animation, channelHandle) {\n    const animationHandle = animationHandles++;\n\n    this.animations.set(animationHandle, {\n      animation,\n      channel: channelHandle\n    });\n\n    animation.setTime(this.getTime(channelHandle));\n\n    return animationHandle;\n  }\n\n  detachAnimation(handle) {\n    this.animations.delete(handle);\n  }\n\n  update(engineTime) {\n    if (this.playing) {\n      if (this.lastEngineTime === -1) {\n        this.lastEngineTime = engineTime;\n      }\n      this.setTime(this.time + (engineTime - this.lastEngineTime));\n      this.lastEngineTime = engineTime;\n    }\n  }\n\n  _setChannelTime(channel, time) {\n    const offsetTime = time - channel.delay;\n    const totalDuration = channel.duration * channel.repeat;\n    // Note(Tarek): Don't loop on final repeat.\n    if (offsetTime >= totalDuration) {\n      channel.time = channel.duration * channel.rate;\n    } else {\n      channel.time = Math.max(0, offsetTime) % channel.duration;\n      channel.time *= channel.rate;\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}