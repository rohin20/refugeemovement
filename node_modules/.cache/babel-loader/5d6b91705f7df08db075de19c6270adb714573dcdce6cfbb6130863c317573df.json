{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _window = _interopRequireDefault(require(\"global/window\"));\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/** @typedef {import('./file-drop').FileDropProps} FileDropProps */\n\n/** @augments React.PureComponent<FileDropProps> */\nvar FileDrop = /*#__PURE__*/function (_React$PureComponent) {\n  (0, _inherits2[\"default\"])(FileDrop, _React$PureComponent);\n  var _super = _createSuper(FileDrop);\n  function FileDrop() {\n    var _this;\n    (0, _classCallCheck2[\"default\"])(this, FileDrop);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"frameDragCounter\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"state\", {\n      draggingOverFrame: false,\n      draggingOverTarget: false\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"resetDragging\", function () {\n      _this.frameDragCounter = 0;\n      _this.setState({\n        draggingOverFrame: false,\n        draggingOverTarget: false\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"handleWindowDragOverOrDrop\", function (event) {\n      // This prevents the browser from trying to load whatever file the user dropped on the window\n      event.preventDefault();\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"handleFrameDrag\", function (event) {\n      // Only allow dragging of files\n      if (!FileDrop.eventHasFiles(event)) return; // We are listening for events on the 'frame', so every time the user drags over any element in the frame's tree,\n      // the event bubbles up to the frame. By keeping count of how many \"dragenters\" we get, we can tell if they are still\n      // \"draggingOverFrame\" (b/c you get one \"dragenter\" initially, and one \"dragenter\"/one \"dragleave\" for every bubble)\n      // This is far better than a \"dragover\" handler, which would be calling `setState` continuously.\n\n      _this.frameDragCounter += event.type === 'dragenter' ? 1 : -1;\n      if (_this.frameDragCounter === 1) {\n        _this.setState({\n          draggingOverFrame: true\n        });\n        if (_this.props.onFrameDragEnter) _this.props.onFrameDragEnter(event);\n        return;\n      }\n      if (_this.frameDragCounter === 0) {\n        _this.setState({\n          draggingOverFrame: false\n        });\n        if (_this.props.onFrameDragLeave) _this.props.onFrameDragLeave(event);\n        return;\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"handleFrameDrop\", function (event) {\n      event.preventDefault();\n      if (!_this.state.draggingOverTarget) {\n        _this.resetDragging();\n        if (_this.props.onFrameDrop) _this.props.onFrameDrop(event);\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"handleDragOver\", function (event) {\n      if (FileDrop.eventHasFiles(event)) {\n        _this.setState({\n          draggingOverTarget: true\n        });\n        if (!FileDrop.isIE() && _this.props.dropEffect) event.dataTransfer.dropEffect = _this.props.dropEffect;\n        if (_this.props.onDragOver) _this.props.onDragOver(event);\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"handleDragLeave\", function (event) {\n      _this.setState({\n        draggingOverTarget: false\n      });\n      if (_this.props.onDragLeave) _this.props.onDragLeave(event);\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"handleDrop\", function (event) {\n      if (_this.props.onDrop && FileDrop.eventHasFiles(event)) {\n        var files = event.dataTransfer ? event.dataTransfer.files : null;\n        _this.props.onDrop(files, event);\n      }\n      _this.resetDragging();\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"stopFrameListeners\", function (frame) {\n      if (frame) {\n        frame.removeEventListener('dragenter', _this.handleFrameDrag);\n        frame.removeEventListener('dragleave', _this.handleFrameDrag);\n        frame.removeEventListener('drop', _this.handleFrameDrop);\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"startFrameListeners\", function (frame) {\n      if (frame) {\n        frame.addEventListener('dragenter', _this.handleFrameDrag);\n        frame.addEventListener('dragleave', _this.handleFrameDrag);\n        frame.addEventListener('drop', _this.handleFrameDrop);\n      }\n    });\n    return _this;\n  }\n  (0, _createClass2[\"default\"])(FileDrop, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.startFrameListeners(this.props.frame);\n      this.resetDragging();\n      _window[\"default\"].addEventListener('dragover', this.handleWindowDragOverOrDrop);\n      _window[\"default\"].addEventListener('drop', this.handleWindowDragOverOrDrop);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.frame !== this.props.frame) {\n        this.resetDragging();\n        this.stopFrameListeners(prevProps.frame);\n        this.startFrameListeners(this.props.frame);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.stopFrameListeners(this.props.frame);\n      _window[\"default\"].removeEventListener('dragover', this.handleWindowDragOverOrDrop);\n      _window[\"default\"].removeEventListener('drop', this.handleWindowDragOverOrDrop);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        children = _this$props.children,\n        className = _this$props.className,\n        targetClassName = _this$props.targetClassName,\n        draggingOverFrameClassName = _this$props.draggingOverFrameClassName,\n        draggingOverTargetClassName = _this$props.draggingOverTargetClassName;\n      var _this$state = this.state,\n        draggingOverTarget = _this$state.draggingOverTarget,\n        draggingOverFrame = _this$state.draggingOverFrame;\n      var fileDropTargetClassName = targetClassName;\n      if (draggingOverFrame) fileDropTargetClassName += \" \".concat(draggingOverFrameClassName);\n      if (draggingOverTarget) fileDropTargetClassName += \" \".concat(draggingOverTargetClassName);\n      return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: className,\n        onDragOver: this.handleDragOver,\n        onDragLeave: this.handleDragLeave,\n        onDrop: this.handleDrop\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: fileDropTargetClassName\n      }, children));\n    }\n  }]);\n  return FileDrop;\n}(_react[\"default\"].PureComponent);\n(0, _defineProperty2[\"default\"])(FileDrop, \"isIE\", function () {\n  return _window[\"default\"] && _window[\"default\"].navigator && ((_window[\"default\"].navigator.userAgent || []).includes('MSIE') || (_window[\"default\"].navigator.appVersion || []).includes('Trident/'));\n});\n(0, _defineProperty2[\"default\"])(FileDrop, \"eventHasFiles\", function (event) {\n  // In most browsers this is an array, but in IE11 it's an Object :(\n  var hasFiles = false;\n  if (event.dataTransfer) {\n    var types = event.dataTransfer.types;\n    for (var keyOrIndex in types) {\n      if (types[keyOrIndex] === 'Files') {\n        hasFiles = true;\n        break;\n      }\n    }\n  }\n  return hasFiles;\n});\n(0, _defineProperty2[\"default\"])(FileDrop, \"defaultProps\", {\n  dropEffect: 'copy',\n  frame: _window[\"default\"] ? _window[\"default\"].document : undefined,\n  className: 'file-drop',\n  targetClassName: 'file-drop-target',\n  draggingOverFrameClassName: 'file-drop-dragging-over-frame',\n  draggingOverTargetClassName: 'file-drop-dragging-over-target'\n});\nvar _default = FileDrop;\nexports[\"default\"] = _default;","map":{"version":3,"names":["value","_createClass2","_interopRequireDefault","require","_assertThisInitialized2","_inherits2","FileDrop","_React$PureComponent","_super","_createSuper","_this","_len","arguments","length","args","Array","_key","call","apply","concat","_defineProperty2","draggingOverFrame","frameDragCounter","setState","event","preventDefault","props","onFrameDragEnter","onFrameDragLeave","resetDragging","eventHasFiles","onDragOver","onDragLeave","onDrop","frame","removeEventListener","handleFrameDrag","addEventListener","handleFrameDrop","componentDidMount","_window","handleWindowDragOverOrDrop","key","componentDidUpdate","prevProps","stopFrameListeners","startFrameListeners","componentWillUnmount","render","_this$props","targetClassName","draggingOverTargetClassName","_this$state","state","fileDropTargetClassName","draggingOverFrameClassName","_react","createElement","className","handleDragLeave","handleDrop","children","PureComponent","navigator","userAgent","includes","appVersion","hasFiles","dataTransfer"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/components/src/common/file-uploader/file-drop.tsx"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/**\n * Copied from https://github.com/sarink/react-file-drop\n * For React 16.8 compatibility\n */\nimport React from 'react';\nimport window from 'global/window';\n\nexport type FileDropProps = {\n  dropEffect?: 'copy' | 'move' | 'link' | 'none';\n  frame?: typeof document | typeof window | HTMLElement;\n  className?: string;\n  targetClassName?: string;\n  draggingOverFrameClassName?: string;\n  draggingOverTargetClassName?: string;\n  onDragOver?: (event: any) => void;\n  onDragLeave?: (event: any) => void;\n  onDrop?: (fileList: FileList, event: any) => void;\n  onFrameDragEnter?: (event: any) => void;\n  onFrameDragLeave?: (event: any) => void;\n  onFrameDrop?: (event: any) => void;\n};\n\n/** @typedef {import('./file-drop').FileDropProps} FileDropProps */\n\n/** @augments React.PureComponent<FileDropProps> */\nclass FileDrop extends React.PureComponent<FileDropProps> {\n  static isIE = () =>\n    window &&\n    window.navigator &&\n    ((window.navigator.userAgent || []).includes('MSIE') ||\n      (window.navigator.appVersion || []).includes('Trident/'));\n\n  static eventHasFiles = event => {\n    // In most browsers this is an array, but in IE11 it's an Object :(\n\n    let hasFiles = false;\n    if (event.dataTransfer) {\n      const types = event.dataTransfer.types;\n      for (const keyOrIndex in types) {\n        if (types[keyOrIndex] === 'Files') {\n          hasFiles = true;\n          break;\n        }\n      }\n    }\n    return hasFiles;\n  };\n\n  static defaultProps = {\n    dropEffect: 'copy',\n    frame: window ? window.document : undefined,\n    className: 'file-drop',\n    targetClassName: 'file-drop-target',\n    draggingOverFrameClassName: 'file-drop-dragging-over-frame',\n    draggingOverTargetClassName: 'file-drop-dragging-over-target'\n  };\n\n  frameDragCounter = 0;\n  state = {draggingOverFrame: false, draggingOverTarget: false};\n\n  componentDidMount() {\n    this.startFrameListeners(this.props.frame);\n    this.resetDragging();\n    window.addEventListener('dragover', this.handleWindowDragOverOrDrop);\n    window.addEventListener('drop', this.handleWindowDragOverOrDrop);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.frame !== this.props.frame) {\n      this.resetDragging();\n      this.stopFrameListeners(prevProps.frame);\n      this.startFrameListeners(this.props.frame);\n    }\n  }\n\n  componentWillUnmount() {\n    this.stopFrameListeners(this.props.frame);\n    window.removeEventListener('dragover', this.handleWindowDragOverOrDrop);\n    window.removeEventListener('drop', this.handleWindowDragOverOrDrop);\n  }\n\n  resetDragging = () => {\n    this.frameDragCounter = 0;\n    this.setState({draggingOverFrame: false, draggingOverTarget: false});\n  };\n\n  handleWindowDragOverOrDrop = event => {\n    // This prevents the browser from trying to load whatever file the user dropped on the window\n    event.preventDefault();\n  };\n\n  handleFrameDrag = event => {\n    // Only allow dragging of files\n    if (!FileDrop.eventHasFiles(event)) return;\n\n    // We are listening for events on the 'frame', so every time the user drags over any element in the frame's tree,\n    // the event bubbles up to the frame. By keeping count of how many \"dragenters\" we get, we can tell if they are still\n    // \"draggingOverFrame\" (b/c you get one \"dragenter\" initially, and one \"dragenter\"/one \"dragleave\" for every bubble)\n    // This is far better than a \"dragover\" handler, which would be calling `setState` continuously.\n    this.frameDragCounter += event.type === 'dragenter' ? 1 : -1;\n\n    if (this.frameDragCounter === 1) {\n      this.setState({draggingOverFrame: true});\n      if (this.props.onFrameDragEnter) this.props.onFrameDragEnter(event);\n      return;\n    }\n\n    if (this.frameDragCounter === 0) {\n      this.setState({draggingOverFrame: false});\n      if (this.props.onFrameDragLeave) this.props.onFrameDragLeave(event);\n      return;\n    }\n  };\n\n  handleFrameDrop = event => {\n    event.preventDefault();\n    if (!this.state.draggingOverTarget) {\n      this.resetDragging();\n      if (this.props.onFrameDrop) this.props.onFrameDrop(event);\n    }\n  };\n\n  handleDragOver = event => {\n    if (FileDrop.eventHasFiles(event)) {\n      this.setState({draggingOverTarget: true});\n      if (!FileDrop.isIE() && this.props.dropEffect)\n        event.dataTransfer.dropEffect = this.props.dropEffect;\n      if (this.props.onDragOver) this.props.onDragOver(event);\n    }\n  };\n\n  handleDragLeave = event => {\n    this.setState({draggingOverTarget: false});\n    if (this.props.onDragLeave) this.props.onDragLeave(event);\n  };\n\n  handleDrop = event => {\n    if (this.props.onDrop && FileDrop.eventHasFiles(event)) {\n      const files = event.dataTransfer ? event.dataTransfer.files : null;\n      this.props.onDrop(files, event);\n    }\n    this.resetDragging();\n  };\n\n  stopFrameListeners = frame => {\n    if (frame) {\n      frame.removeEventListener('dragenter', this.handleFrameDrag);\n      frame.removeEventListener('dragleave', this.handleFrameDrag);\n      frame.removeEventListener('drop', this.handleFrameDrop);\n    }\n  };\n\n  startFrameListeners = frame => {\n    if (frame) {\n      frame.addEventListener('dragenter', this.handleFrameDrag);\n      frame.addEventListener('dragleave', this.handleFrameDrag);\n      frame.addEventListener('drop', this.handleFrameDrop);\n    }\n  };\n\n  render() {\n    const {\n      children,\n      className,\n      targetClassName,\n      draggingOverFrameClassName,\n      draggingOverTargetClassName\n    } = this.props;\n    const {draggingOverTarget, draggingOverFrame} = this.state;\n\n    let fileDropTargetClassName = targetClassName;\n    if (draggingOverFrame) fileDropTargetClassName += ` ${draggingOverFrameClassName}`;\n    if (draggingOverTarget) fileDropTargetClassName += ` ${draggingOverTargetClassName}`;\n\n    return (\n      <div\n        className={className}\n        onDragOver={this.handleDragOver}\n        onDragLeave={this.handleDragLeave}\n        onDrop={this.handleDrop}\n      >\n        <div className={fileDropTargetClassName}>{children}</div>\n      </div>\n    );\n  }\n}\n\nexport default FileDrop;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}