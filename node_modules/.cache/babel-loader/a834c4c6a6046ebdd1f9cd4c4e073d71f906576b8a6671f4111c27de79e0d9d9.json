{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.StyledLayerName = void 0;\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\nvar _styledComponents2 = require(\"../common/styled-components\");\nvar _icons = require(\"../common/icons\");\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _utils = require(\"@kepler.gl/utils\");\nvar _reducers = require(\"@kepler.gl/reducers\");\nvar _templateObject, _templateObject2;\nvar StyledLayerName = (0, _styledComponents[\"default\"])(_styledComponents2.CenterFlexbox)(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  color: \", \";\\n  font-size: 12px;\\n  letter-spacing: 0.43px;\\n  text-transform: capitalize;\\n\\n  svg {\\n    margin-right: 4px;\\n  }\\n\"])), function (props) {\n  return props.theme.textColorHl;\n});\nexports.StyledLayerName = StyledLayerName;\nvar StyledTable = _styledComponents[\"default\"].table(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  & .row__delta-value {\\n    text-align: right;\\n    margin-left: 6px;\\n\\n    &.positive {\\n      color: \", \";\\n    }\\n\\n    &.negative {\\n      color: \", \";\\n    }\\n  }\\n\"])), function (props) {\n  return props.theme.notificationColors.success;\n}, function (props) {\n  return props.theme.negativeBtnActBgd;\n});\n\n/** @type {import('./layer-hover-info').RowComponent} */\nvar Row = function Row(_ref) {\n  var name = _ref.name,\n    value = _ref.value,\n    deltaValue = _ref.deltaValue,\n    url = _ref.url;\n\n  // Set 'url' to 'value' if it looks like a url\n  if (!url && value && typeof value === 'string' && value.match(/^http/)) {\n    url = value;\n  }\n  var asImg = /<img>/.test(name);\n  return /*#__PURE__*/_react[\"default\"].createElement(\"tr\", {\n    className: \"row\",\n    key: name\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"td\", {\n    className: \"row__name\"\n  }, name), /*#__PURE__*/_react[\"default\"].createElement(\"td\", {\n    className: \"row__value\"\n  }, asImg ? /*#__PURE__*/_react[\"default\"].createElement(\"img\", {\n    src: value\n  }) : url ? /*#__PURE__*/_react[\"default\"].createElement(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: url\n  }, value) : /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(\"span\", null, value), (0, _utils.notNullorUndefined)(deltaValue) ? /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n    className: \"row__delta-value \".concat(deltaValue.toString().charAt(0) === '+' ? 'positive' : 'negative')\n  }, deltaValue) : null)));\n};\nvar EntryInfo = function EntryInfo(_ref2) {\n  var fieldsToShow = _ref2.fieldsToShow,\n    fields = _ref2.fields,\n    data = _ref2.data,\n    primaryData = _ref2.primaryData,\n    compareType = _ref2.compareType;\n  return /*#__PURE__*/_react[\"default\"].createElement(\"tbody\", null, fieldsToShow.map(function (item) {\n    return /*#__PURE__*/_react[\"default\"].createElement(EntryInfoRow, {\n      key: item.name,\n      item: item,\n      fields: fields,\n      data: data,\n      primaryData: primaryData,\n      compareType: compareType\n    });\n  }));\n};\nvar EntryInfoRow = function EntryInfoRow(_ref3) {\n  var item = _ref3.item,\n    fields = _ref3.fields,\n    data = _ref3.data,\n    primaryData = _ref3.primaryData,\n    compareType = _ref3.compareType;\n  var fieldIdx = fields.findIndex(function (f) {\n    return f.name === item.name;\n  });\n  if (fieldIdx < 0) {\n    return null;\n  }\n  var field = fields[fieldIdx];\n  var value = data.valueAt(fieldIdx);\n  var displayValue = (0, _reducers.getTooltipDisplayValue)({\n    item: item,\n    field: field,\n    value: value\n  });\n  var displayDeltaValue = (0, _reducers.getTooltipDisplayDeltaValue)({\n    item: item,\n    field: field,\n    data: data,\n    fieldIdx: fieldIdx,\n    primaryData: primaryData,\n    compareType: compareType\n  });\n  return /*#__PURE__*/_react[\"default\"].createElement(Row, {\n    name: field.displayName || field.name,\n    value: displayValue,\n    deltaValue: displayDeltaValue\n  });\n}; // TODO: supporting comparative value for aggregated cells as well\n\nvar CellInfo = function CellInfo(_ref4) {\n  var fieldsToShow = _ref4.fieldsToShow,\n    data = _ref4.data,\n    layer = _ref4.layer;\n  var _ref5 = layer.config,\n    colorField = _ref5.colorField,\n    sizeField = _ref5.sizeField;\n  var colorValue = (0, _react.useMemo)(function () {\n    if (colorField && layer.visualChannels.color) {\n      var item = fieldsToShow.find(function (field) {\n        return field.name === colorField.name;\n      });\n      return (0, _reducers.getTooltipDisplayValue)({\n        item: item,\n        field: colorField,\n        value: data.colorValue\n      });\n    }\n    return null;\n  }, [fieldsToShow, colorField, layer, data.colorValue]);\n  var elevationValue = (0, _react.useMemo)(function () {\n    if (sizeField && layer.visualChannels.size) {\n      var item = fieldsToShow.find(function (field) {\n        return field.name === sizeField.name;\n      });\n      return (0, _reducers.getTooltipDisplayValue)({\n        item: item,\n        field: sizeField,\n        value: data.elevationValue\n      });\n    }\n    return null;\n  }, [fieldsToShow, sizeField, layer, data.elevationValue]);\n  var colorMeasure = layer.getVisualChannelDescription('color').measure;\n  var sizeMeasure = layer.getVisualChannelDescription('size').measure;\n  return /*#__PURE__*/_react[\"default\"].createElement(\"tbody\", null, /*#__PURE__*/_react[\"default\"].createElement(Row, {\n    name: 'total points',\n    key: \"count\",\n    value: String(data.points && data.points.length)\n  }), colorField && layer.visualChannels.color && colorMeasure ? /*#__PURE__*/_react[\"default\"].createElement(Row, {\n    name: colorMeasure,\n    key: \"color\",\n    value: colorValue || 'N/A'\n  }) : null, sizeField && layer.visualChannels.size && sizeMeasure ? /*#__PURE__*/_react[\"default\"].createElement(Row, {\n    name: sizeMeasure,\n    key: \"size\",\n    value: elevationValue || 'N/A'\n  }) : null);\n};\nvar LayerHoverInfoFactory = function LayerHoverInfoFactory() {\n  var LayerHoverInfo = function LayerHoverInfo(props) {\n    var data = props.data,\n      layer = props.layer;\n    if (!data || !layer) {\n      return null;\n    }\n    return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n      className: \"map-popover__layer-info\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(StyledLayerName, {\n      className: \"map-popover__layer-name\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(_icons.Layers, {\n      height: \"12px\"\n    }), props.layer.config.label), /*#__PURE__*/_react[\"default\"].createElement(StyledTable, null, props.layer.isAggregated ? /*#__PURE__*/_react[\"default\"].createElement(CellInfo, props) : /*#__PURE__*/_react[\"default\"].createElement(EntryInfo, props)));\n  };\n  LayerHoverInfo.propTypes = {\n    fields: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].any),\n    fieldsToShow: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].any),\n    layer: _propTypes[\"default\"].object,\n    data: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].arrayOf(_propTypes[\"default\"].any), _propTypes[\"default\"].object])\n  };\n  return LayerHoverInfo;\n};\nvar _default = LayerHoverInfoFactory;\nexports[\"default\"] = _default;","map":{"version":3,"names":["exports","StyledLayerName","_taggedTemplateLiteral2","_interopRequireDefault","require","_styledComponents","_styledComponents2","_propTypes","_utils","_reducers","_templateObject","_templateObject2","CenterFlexbox","props","theme","textColorHl","StyledTable","table","notificationColors","success","negativeBtnActBgd","Row","_ref","name","value","deltaValue","url","match","asImg","test","_react","createElement","className","key","src","target","rel","href","Fragment","notNullorUndefined","concat","toString","charAt","EntryInfo","fields","_ref2","fieldsToShow","data","primaryData","compareType","map","item","EntryInfoRow","_ref3","fieldIdx","findIndex","f","field","displayDeltaValue","getTooltipDisplayDeltaValue","displayName","displayValue","CellInfo","_ref4","layer","_ref5","config","colorField","sizeField","colorValue","useMemo","visualChannels","color","find","elevationValue","size","getTooltipDisplayValue","colorMeasure","getVisualChannelDescription","measure","sizeMeasure","LayerHoverInfoFactory","LayerHoverInfo","PropTypes"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/components/src/map/layer-hover-info.tsx"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {useMemo} from 'react';\nimport styled from 'styled-components';\nimport {TooltipField} from '@kepler.gl/types';\nimport {CenterFlexbox} from '../common/styled-components';\nimport {Layers} from '../common/icons';\nimport PropTypes from 'prop-types';\nimport {notNullorUndefined} from '@kepler.gl/utils';\nimport {Layer} from '@kepler.gl/layers';\nimport {\n  AggregationLayerHoverData,\n  getTooltipDisplayDeltaValue,\n  getTooltipDisplayValue\n} from '@kepler.gl/reducers';\n\nexport const StyledLayerName = styled(CenterFlexbox)`\n  color: ${props => props.theme.textColorHl};\n  font-size: 12px;\n  letter-spacing: 0.43px;\n  text-transform: capitalize;\n\n  svg {\n    margin-right: 4px;\n  }\n`;\n\nconst StyledTable = styled.table`\n  & .row__delta-value {\n    text-align: right;\n    margin-left: 6px;\n\n    &.positive {\n      color: ${props => props.theme.notificationColors.success};\n    }\n\n    &.negative {\n      color: ${props => props.theme.negativeBtnActBgd};\n    }\n  }\n`;\n\ninterface RowProps {\n  name: string;\n  value: string;\n  deltaValue?: string | null;\n  url?: string;\n}\n\n/** @type {import('./layer-hover-info').RowComponent} */\nconst Row: React.FC<RowProps> = ({name, value, deltaValue, url}) => {\n  // Set 'url' to 'value' if it looks like a url\n  if (!url && value && typeof value === 'string' && value.match(/^http/)) {\n    url = value;\n  }\n\n  const asImg = /<img>/.test(name);\n  return (\n    <tr className=\"row\" key={name}>\n      <td className=\"row__name\">{name}</td>\n      <td className=\"row__value\">\n        {asImg ? (\n          <img src={value} />\n        ) : url ? (\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n            {value}\n          </a>\n        ) : (\n          <>\n            <span>{value}</span>\n            {notNullorUndefined(deltaValue) ? (\n              <span\n                className={`row__delta-value ${\n                  deltaValue.toString().charAt(0) === '+' ? 'positive' : 'negative'\n                }`}\n              >\n                {deltaValue}\n              </span>\n            ) : null}\n          </>\n        )}\n      </td>\n    </tr>\n  );\n};\n\nconst EntryInfo = ({fieldsToShow, fields, data, primaryData, compareType}) => (\n  <tbody>\n    {fieldsToShow.map(item => (\n      <EntryInfoRow\n        key={item.name}\n        item={item}\n        fields={fields}\n        data={data}\n        primaryData={primaryData}\n        compareType={compareType}\n      />\n    ))}\n  </tbody>\n);\n\nconst EntryInfoRow = ({item, fields, data, primaryData, compareType}) => {\n  const fieldIdx = fields.findIndex(f => f.name === item.name);\n  if (fieldIdx < 0) {\n    return null;\n  }\n  const field = fields[fieldIdx];\n  const value = data.valueAt(fieldIdx);\n  const displayValue = getTooltipDisplayValue({item, field, value});\n\n  const displayDeltaValue = getTooltipDisplayDeltaValue({\n    item,\n    field,\n    data,\n    fieldIdx,\n    primaryData,\n    compareType\n  });\n\n  return (\n    <Row\n      name={field.displayName || field.name}\n      value={displayValue}\n      deltaValue={displayDeltaValue}\n    />\n  );\n};\n\n// TODO: supporting comparative value for aggregated cells as well\nconst CellInfo = ({\n  fieldsToShow,\n  data,\n  layer\n}: {\n  data: AggregationLayerHoverData;\n  fieldsToShow: TooltipField[];\n  layer: Layer;\n}) => {\n  const {colorField, sizeField} = layer.config as any;\n\n  const colorValue = useMemo(() => {\n    if (colorField && layer.visualChannels.color) {\n      const item = fieldsToShow.find(field => field.name === colorField.name);\n      return getTooltipDisplayValue({item, field: colorField, value: data.colorValue});\n    }\n    return null;\n  }, [fieldsToShow, colorField, layer, data.colorValue]);\n\n  const elevationValue = useMemo(() => {\n    if (sizeField && layer.visualChannels.size) {\n      const item = fieldsToShow.find(field => field.name === sizeField.name);\n      return getTooltipDisplayValue({item, field: sizeField, value: data.elevationValue});\n    }\n    return null;\n  }, [fieldsToShow, sizeField, layer, data.elevationValue]);\n\n  const colorMeasure = layer.getVisualChannelDescription('color').measure;\n  const sizeMeasure = layer.getVisualChannelDescription('size').measure;\n  return (\n    <tbody>\n      <Row name={'total points'} key=\"count\" value={String(data.points && data.points.length)} />\n      {colorField && layer.visualChannels.color && colorMeasure ? (\n        <Row name={colorMeasure} key=\"color\" value={colorValue || 'N/A'} />\n      ) : null}\n      {sizeField && layer.visualChannels.size && sizeMeasure ? (\n        <Row name={sizeMeasure} key=\"size\" value={elevationValue || 'N/A'} />\n      ) : null}\n    </tbody>\n  );\n};\n\nconst LayerHoverInfoFactory = () => {\n  const LayerHoverInfo = props => {\n    const {data, layer} = props;\n\n    if (!data || !layer) {\n      return null;\n    }\n\n    return (\n      <div className=\"map-popover__layer-info\">\n        <StyledLayerName className=\"map-popover__layer-name\">\n          <Layers height=\"12px\" />\n          {props.layer.config.label}\n        </StyledLayerName>\n        <StyledTable>\n          {props.layer.isAggregated ? <CellInfo {...props} /> : <EntryInfo {...props} />}\n        </StyledTable>\n      </div>\n    );\n  };\n\n  LayerHoverInfo.propTypes = {\n    fields: PropTypes.arrayOf(PropTypes.any),\n    fieldsToShow: PropTypes.arrayOf(PropTypes.any),\n    layer: PropTypes.object,\n    data: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.any), PropTypes.object])\n  };\n  return LayerHoverInfo;\n};\n\nexport default LayerHoverInfoFactory;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}