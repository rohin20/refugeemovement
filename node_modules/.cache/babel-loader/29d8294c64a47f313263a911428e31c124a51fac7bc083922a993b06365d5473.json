{"ast":null,"code":"import _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport FormattedMessage from './message';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nvar FormattedHTMLMessage = /*#__PURE__*/function (_FormattedMessage) {\n  _inherits(FormattedHTMLMessage, _FormattedMessage);\n  var _super = _createSuper(FormattedHTMLMessage);\n  function FormattedHTMLMessage() {\n    _classCallCheck(this, FormattedHTMLMessage);\n    return _super.apply(this, arguments);\n  }\n  _createClass(FormattedHTMLMessage, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n      return React.createElement(Context.Consumer, null, function (intl) {\n        if (!_this.props.defaultMessage) {\n          invariantIntlContext(intl);\n        }\n        var formatHTMLMessage = intl.formatHTMLMessage,\n          textComponent = intl.textComponent;\n        var _this$props = _this.props,\n          id = _this$props.id,\n          description = _this$props.description,\n          defaultMessage = _this$props.defaultMessage,\n          rawValues = _this$props.values,\n          children = _this$props.children;\n        var Component = _this.props.tagName;\n        // This is bc of TS3.3 doesn't recognize `defaultProps`\n        if (!Component) {\n          Component = textComponent || 'span';\n        }\n        var descriptor = {\n          id: id,\n          description: description,\n          defaultMessage: defaultMessage\n        };\n        var formattedHTMLMessage = formatHTMLMessage(descriptor, rawValues);\n        if (typeof children === 'function') {\n          return children(formattedHTMLMessage);\n        }\n        // Since the message presumably has HTML in it, we need to set\n        // `innerHTML` in order for it to be rendered and not escaped by React.\n        // To be safe, all string prop values were escaped when formatting the\n        // message. It is assumed that the message is not UGC, and came from the\n        // developer making it more like a template.\n        //\n        // Note: There's a perf impact of using this component since there's no\n        // way for React to do its virtual DOM diffing.\n        var html = {\n          __html: formattedHTMLMessage\n        };\n        return React.createElement(Component, {\n          dangerouslySetInnerHTML: html\n        });\n      });\n    }\n  }]);\n  return FormattedHTMLMessage;\n}(FormattedMessage);\nFormattedHTMLMessage.displayName = 'FormattedHTMLMessage';\nFormattedHTMLMessage.defaultProps = Object.assign(Object.assign({}, FormattedMessage.defaultProps), {\n  tagName: 'span'\n});\nexport default FormattedHTMLMessage;","map":{"version":3,"names":["React","FormattedMessage","Context","invariantIntlContext","FormattedHTMLMessage","_FormattedMessage","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","render","_this","createElement","Consumer","intl","props","defaultMessage","formatHTMLMessage","textComponent","_this$props","id","description","rawValues","values","children","Component","tagName","descriptor","formattedHTMLMessage","html","__html","dangerouslySetInnerHTML","displayName","defaultProps","Object","assign"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/react-intl/lib/components/html-message.js"],"sourcesContent":["/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport FormattedMessage from './message';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nclass FormattedHTMLMessage extends FormattedMessage {\n    render() {\n        return (React.createElement(Context.Consumer, null, (intl) => {\n            if (!this.props.defaultMessage) {\n                invariantIntlContext(intl);\n            }\n            const { formatHTMLMessage, textComponent } = intl;\n            const { id, description, defaultMessage, values: rawValues, children, } = this.props;\n            let { tagName: Component } = this.props;\n            // This is bc of TS3.3 doesn't recognize `defaultProps`\n            if (!Component) {\n                Component = textComponent || 'span';\n            }\n            const descriptor = { id, description, defaultMessage };\n            const formattedHTMLMessage = formatHTMLMessage(descriptor, rawValues);\n            if (typeof children === 'function') {\n                return children(formattedHTMLMessage);\n            }\n            // Since the message presumably has HTML in it, we need to set\n            // `innerHTML` in order for it to be rendered and not escaped by React.\n            // To be safe, all string prop values were escaped when formatting the\n            // message. It is assumed that the message is not UGC, and came from the\n            // developer making it more like a template.\n            //\n            // Note: There's a perf impact of using this component since there's no\n            // way for React to do its virtual DOM diffing.\n            const html = { __html: formattedHTMLMessage };\n            return React.createElement(Component, { dangerouslySetInnerHTML: html });\n        }));\n    }\n}\nFormattedHTMLMessage.displayName = 'FormattedHTMLMessage';\nFormattedHTMLMessage.defaultProps = Object.assign(Object.assign({}, FormattedMessage.defaultProps), { tagName: 'span' });\nexport default FormattedHTMLMessage;\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,gBAAgB,MAAM,WAAW;AACxC,SAASC,OAAO,QAAQ,cAAc;AACtC,SAASC,oBAAoB,QAAQ,UAAU;AAAC,IAC1CC,oBAAoB,0BAAAC,iBAAA;EAAAC,SAAA,CAAAF,oBAAA,EAAAC,iBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,oBAAA;EAAA,SAAAA,qBAAA;IAAAK,eAAA,OAAAL,oBAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,oBAAA;IAAAS,GAAA;IAAAC,KAAA,EACtB,SAAAC,OAAA,EAAS;MAAA,IAAAC,KAAA;MACL,OAAQhB,KAAK,CAACiB,aAAa,CAACf,OAAO,CAACgB,QAAQ,EAAE,IAAI,EAAE,UAACC,IAAI,EAAK;QAC1D,IAAI,CAACH,KAAI,CAACI,KAAK,CAACC,cAAc,EAAE;UAC5BlB,oBAAoB,CAACgB,IAAI,CAAC;QAC9B;QACA,IAAQG,iBAAiB,GAAoBH,IAAI,CAAzCG,iBAAiB;UAAEC,aAAa,GAAKJ,IAAI,CAAtBI,aAAa;QACxC,IAAAC,WAAA,GAA0ER,KAAI,CAACI,KAAK;UAA5EK,EAAE,GAAAD,WAAA,CAAFC,EAAE;UAAEC,WAAW,GAAAF,WAAA,CAAXE,WAAW;UAAEL,cAAc,GAAAG,WAAA,CAAdH,cAAc;UAAUM,SAAS,GAAAH,WAAA,CAAjBI,MAAM;UAAaC,QAAQ,GAAAL,WAAA,CAARK,QAAQ;QACpE,IAAeC,SAAS,GAAKd,KAAI,CAACI,KAAK,CAAjCW,OAAO;QACb;QACA,IAAI,CAACD,SAAS,EAAE;UACZA,SAAS,GAAGP,aAAa,IAAI,MAAM;QACvC;QACA,IAAMS,UAAU,GAAG;UAAEP,EAAE,EAAFA,EAAE;UAAEC,WAAW,EAAXA,WAAW;UAAEL,cAAc,EAAdA;QAAe,CAAC;QACtD,IAAMY,oBAAoB,GAAGX,iBAAiB,CAACU,UAAU,EAAEL,SAAS,CAAC;QACrE,IAAI,OAAOE,QAAQ,KAAK,UAAU,EAAE;UAChC,OAAOA,QAAQ,CAACI,oBAAoB,CAAC;QACzC;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,IAAMC,IAAI,GAAG;UAAEC,MAAM,EAAEF;QAAqB,CAAC;QAC7C,OAAOjC,KAAK,CAACiB,aAAa,CAACa,SAAS,EAAE;UAAEM,uBAAuB,EAAEF;QAAK,CAAC,CAAC;MAC5E,CAAC,CAAC;IACN;EAAC;EAAA,OAAA9B,oBAAA;AAAA,EA7B8BH,gBAAgB;AA+BnDG,oBAAoB,CAACiC,WAAW,GAAG,sBAAsB;AACzDjC,oBAAoB,CAACkC,YAAY,GAAGC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEvC,gBAAgB,CAACqC,YAAY,CAAC,EAAE;EAAEP,OAAO,EAAE;AAAO,CAAC,CAAC;AACxH,eAAe3B,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}