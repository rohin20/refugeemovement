{"ast":null,"code":"import _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { LayerExtension, _mergeShaders as mergeShaders } from '@deck.gl/core';\nimport { dashShaders, offsetShaders } from './shaders.glsl';\nimport { dist } from 'gl-matrix/vec3';\nvar defaultProps = {\n  getDashArray: {\n    type: 'accessor',\n    value: [0, 0]\n  },\n  getOffset: {\n    type: 'accessor',\n    value: 0\n  },\n  dashJustified: false,\n  dashGapPickable: false\n};\nvar PathStyleExtension = /*#__PURE__*/function (_LayerExtension) {\n  _inherits(PathStyleExtension, _LayerExtension);\n  var _super = _createSuper(PathStyleExtension);\n  function PathStyleExtension() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$dash = _ref.dash,\n      dash = _ref$dash === void 0 ? false : _ref$dash,\n      _ref$offset = _ref.offset,\n      offset = _ref$offset === void 0 ? false : _ref$offset,\n      _ref$highPrecisionDas = _ref.highPrecisionDash,\n      highPrecisionDash = _ref$highPrecisionDas === void 0 ? false : _ref$highPrecisionDas;\n    _classCallCheck(this, PathStyleExtension);\n    return _super.call(this, {\n      dash: dash || highPrecisionDash,\n      offset: offset,\n      highPrecisionDash: highPrecisionDash\n    });\n  }\n  _createClass(PathStyleExtension, [{\n    key: \"isEnabled\",\n    value: function isEnabled(layer) {\n      return 'pathTesselator' in layer.state;\n    }\n  }, {\n    key: \"getShaders\",\n    value: function getShaders(extension) {\n      if (!extension.isEnabled(this)) {\n        return null;\n      }\n      var result = {};\n      if (extension.opts.dash) {\n        result = mergeShaders(result, dashShaders);\n      }\n      if (extension.opts.offset) {\n        result = mergeShaders(result, offsetShaders);\n      }\n      return result;\n    }\n  }, {\n    key: \"initializeState\",\n    value: function initializeState(context, extension) {\n      var attributeManager = this.getAttributeManager();\n      if (!attributeManager || !extension.isEnabled(this)) {\n        return;\n      }\n      if (extension.opts.dash) {\n        attributeManager.addInstanced({\n          instanceDashArrays: {\n            size: 2,\n            accessor: 'getDashArray'\n          }\n        });\n      }\n      if (extension.opts.highPrecisionDash) {\n        attributeManager.addInstanced({\n          instanceDashOffsets: {\n            size: 1,\n            accessor: 'getPath',\n            transform: extension.getDashOffsets.bind(this)\n          }\n        });\n      }\n      if (extension.opts.offset) {\n        attributeManager.addInstanced({\n          instanceOffsets: {\n            size: 1,\n            accessor: 'getOffset'\n          }\n        });\n      }\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(params, extension) {\n      if (!extension.isEnabled(this)) {\n        return;\n      }\n      var uniforms = {};\n      if (extension.opts.dash) {\n        uniforms.dashAlignMode = this.props.dashJustified ? 1 : 0;\n        uniforms.dashGapPickable = Boolean(this.props.dashGapPickable);\n      }\n      this.state.model.setUniforms(uniforms);\n    }\n  }, {\n    key: \"getDashOffsets\",\n    value: function getDashOffsets(path) {\n      var result = [0];\n      var positionSize = this.props.positionFormat === 'XY' ? 2 : 3;\n      var isNested = Array.isArray(path[0]);\n      var geometrySize = isNested ? path.length : path.length / positionSize;\n      var p;\n      var prevP;\n      for (var i = 0; i < geometrySize - 1; i++) {\n        p = isNested ? path[i] : path.slice(i * positionSize, i * positionSize + positionSize);\n        p = this.projectPosition(p);\n        if (i > 0) {\n          result[i] = result[i - 1] + dist(prevP, p);\n        }\n        prevP = p;\n      }\n      return result;\n    }\n  }]);\n  return PathStyleExtension;\n}(LayerExtension);\nexport { PathStyleExtension as default };\n_defineProperty(PathStyleExtension, \"defaultProps\", defaultProps);\n_defineProperty(PathStyleExtension, \"extensionName\", 'PathStyleExtension');","map":{"version":3,"names":["LayerExtension","_mergeShaders","mergeShaders","dashShaders","offsetShaders","dist","defaultProps","getDashArray","type","value","getOffset","dashJustified","dashGapPickable","PathStyleExtension","_LayerExtension","_inherits","_super","_createSuper","_ref","arguments","length","undefined","_ref$dash","dash","_ref$offset","offset","_ref$highPrecisionDas","highPrecisionDash","_classCallCheck","call","_createClass","key","isEnabled","layer","state","getShaders","extension","result","opts","initializeState","context","attributeManager","getAttributeManager","addInstanced","instanceDashArrays","size","accessor","instanceDashOffsets","transform","getDashOffsets","bind","instanceOffsets","updateState","params","uniforms","dashAlignMode","props","Boolean","model","setUniforms","path","positionSize","positionFormat","isNested","Array","isArray","geometrySize","p","prevP","i","slice","projectPosition","default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/extensions/src/path-style/path-style.ts"],"sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {LayerExtension, _mergeShaders as mergeShaders} from '@deck.gl/core';\nimport {dashShaders, offsetShaders} from './shaders.glsl';\nimport {dist} from 'gl-matrix/vec3';\n\nimport type {Layer, LayerContext, Accessor, UpdateParameters} from '@deck.gl/core';\n\nconst defaultProps = {\n  getDashArray: {type: 'accessor', value: [0, 0]},\n  getOffset: {type: 'accessor', value: 0},\n  dashJustified: false,\n  dashGapPickable: false\n};\n\nexport type PathStyleExtensionProps<DataT = any> = {\n  /**\n   * Accessor for the dash array to draw each path with: `[dashSize, gapSize]` relative to the width of the path.\n   * Requires the `dash` option to be on.\n   */\n  getDashArray?: Accessor<DataT, [number, number]>;\n  /**\n   * Accessor for the offset to draw each path with, relative to the width of the path.\n   * Negative offset is to the left hand side, and positive offset is to the right hand side.\n   * @default 0\n   */\n  getOffset?: Accessor<DataT, number>;\n  /**\n   * If `true`, adjust gaps for the dashes to align at both ends.\n   * @default false\n   */\n  dashJustified?: boolean;\n  /**\n   * If `true`, gaps between solid strokes are pickable. If `false`, only the solid strokes are pickable.\n   * @default false\n   */\n  dashGapPickable?: boolean;\n};\n\ntype PathStyleExtensionOptions = {\n  /**\n   * Add capability to render dashed lines.\n   * @default false\n   */\n  dash: boolean;\n  /**\n   * Add capability to offset lines.\n   * @default false\n   */\n  offset: boolean;\n  /**\n   * Improve dash rendering quality in certain circumstances. Note that this option introduces additional performance overhead.\n   * @default false\n   */\n  highPrecisionDash: boolean;\n};\n\n/** Adds selected features to the `PathLayer` and composite layers that render the `PathLayer`. */\nexport default class PathStyleExtension extends LayerExtension<PathStyleExtensionOptions> {\n  static defaultProps = defaultProps;\n  static extensionName = 'PathStyleExtension';\n\n  constructor({\n    dash = false,\n    offset = false,\n    highPrecisionDash = false\n  }: Partial<PathStyleExtensionOptions> = {}) {\n    super({dash: dash || highPrecisionDash, offset, highPrecisionDash});\n  }\n\n  isEnabled(layer: Layer<PathStyleExtensionProps>): boolean {\n    return 'pathTesselator' in layer.state;\n  }\n\n  getShaders(this: Layer<PathStyleExtensionProps>, extension: this): any {\n    if (!extension.isEnabled(this)) {\n      return null;\n    }\n\n    // Merge shader injection\n    let result = {};\n    if (extension.opts.dash) {\n      result = mergeShaders(result, dashShaders);\n    }\n    if (extension.opts.offset) {\n      result = mergeShaders(result, offsetShaders);\n    }\n\n    return result;\n  }\n\n  initializeState(this: Layer<PathStyleExtensionProps>, context: LayerContext, extension: this) {\n    const attributeManager = this.getAttributeManager();\n    if (!attributeManager || !extension.isEnabled(this)) {\n      // This extension only works with the PathLayer\n      return;\n    }\n\n    if (extension.opts.dash) {\n      attributeManager.addInstanced({\n        instanceDashArrays: {size: 2, accessor: 'getDashArray'}\n      });\n    }\n    if (extension.opts.highPrecisionDash) {\n      attributeManager.addInstanced({\n        instanceDashOffsets: {\n          size: 1,\n          accessor: 'getPath',\n          transform: extension.getDashOffsets.bind(this)\n        }\n      });\n    }\n    if (extension.opts.offset) {\n      attributeManager.addInstanced({\n        instanceOffsets: {size: 1, accessor: 'getOffset'}\n      });\n    }\n  }\n\n  updateState(\n    this: Layer<PathStyleExtensionProps>,\n    params: UpdateParameters<Layer<PathStyleExtensionProps>>,\n    extension: this\n  ) {\n    if (!extension.isEnabled(this)) {\n      return;\n    }\n\n    const uniforms: any = {};\n\n    if (extension.opts.dash) {\n      uniforms.dashAlignMode = this.props.dashJustified ? 1 : 0;\n      uniforms.dashGapPickable = Boolean(this.props.dashGapPickable);\n    }\n\n    this.state.model.setUniforms(uniforms);\n  }\n\n  getDashOffsets(this: Layer<PathStyleExtensionProps>, path: number[] | number[][]): number[] {\n    const result = [0];\n    const positionSize = this.props.positionFormat === 'XY' ? 2 : 3;\n    const isNested = Array.isArray(path[0]);\n    const geometrySize = isNested ? path.length : path.length / positionSize;\n\n    let p;\n    let prevP;\n    for (let i = 0; i < geometrySize - 1; i++) {\n      p = isNested ? path[i] : path.slice(i * positionSize, i * positionSize + positionSize);\n      p = this.projectPosition(p);\n\n      if (i > 0) {\n        result[i] = result[i - 1] + dist(prevP, p);\n      }\n\n      prevP = p;\n    }\n    return result;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}