{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar _styledComponents = require(\"../common/styled-components\");\nvar _icons = require(\"../common/icons\");\nvar _mapControlTooltip = _interopRequireDefault(require(\"./map-control-tooltip\"));\nSplitMapButtonFactory.deps = [_mapControlTooltip[\"default\"]];\nfunction SplitMapButtonFactory(MapControlTooltip) {\n  var defaultActionIcons = {\n    \"delete\": _icons.Delete,\n    split: _icons.Split\n  };\n  /** @type {import('./split-map-button').SplitMapButtonComponent} */\n\n  var SplitMapButton = function SplitMapButton(_ref) {\n    var isSplit = _ref.isSplit,\n      mapIndex = _ref.mapIndex,\n      onToggleSplitMap = _ref.onToggleSplitMap,\n      _ref$actionIcons = _ref.actionIcons,\n      actionIcons = _ref$actionIcons === void 0 ? defaultActionIcons : _ref$actionIcons,\n      mapControls = _ref.mapControls,\n      readOnly = _ref.readOnly;\n    var splitMap = (mapControls === null || mapControls === void 0 ? void 0 : mapControls.splitMap) || {};\n    var onClick = (0, _react.useCallback)(function (event) {\n      event.preventDefault();\n      onToggleSplitMap(isSplit ? mapIndex : undefined);\n    }, [isSplit, mapIndex, onToggleSplitMap]);\n    var isVisible = (0, _react.useMemo)(function () {\n      return splitMap.show && readOnly !== true;\n    }, [splitMap.show, readOnly]);\n    if (!splitMap.show) {\n      return null;\n    }\n    return isVisible ? /*#__PURE__*/_react[\"default\"].createElement(MapControlTooltip, {\n      id: \"action-toggle\",\n      message: isSplit ? 'tooltip.closePanel' : 'tooltip.switchToDualView'\n    }, /*#__PURE__*/_react[\"default\"].createElement(_styledComponents.MapControlButton, {\n      active: isSplit,\n      onClick: onClick,\n      className: (0, _classnames[\"default\"])('map-control-button', 'split-map', {\n        'close-map': isSplit\n      })\n    }, isSplit ? /*#__PURE__*/_react[\"default\"].createElement(actionIcons[\"delete\"], {\n      height: \"18px\"\n    }) : /*#__PURE__*/_react[\"default\"].createElement(actionIcons.split, {\n      height: \"18px\"\n    }))) : null;\n  };\n  SplitMapButton.displayName = 'SplitMapButton';\n  return /*#__PURE__*/_react[\"default\"].memo(SplitMapButton);\n}\nvar _default = SplitMapButtonFactory;\nexports[\"default\"] = _default;","map":{"version":3,"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","_react","_classnames","_styledComponents","_icons","_mapControlTooltip","SplitMapButtonFactory","deps","defaultActionIcons","Delete","split","Split","isSplit","_ref","mapIndex","onToggleSplitMap","_ref$actionIcons","actionIcons","mapControls","readOnly","splitMap","onClick","useCallback","event","preventDefault","undefined","isVisible","useMemo","show","id","message","createElement","MapControlButton","active","className","height","memo","SplitMapButton","_default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/components/src/map/split-map-button.tsx"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {ComponentType, useCallback, useMemo} from 'react';\nimport classnames from 'classnames';\nimport {MapControlButton} from '../common/styled-components';\nimport {Delete, Split} from '../common/icons';\nimport MapControlTooltipFactory from './map-control-tooltip';\nimport {MapControl, MapControls} from '@kepler.gl/types';\n\nSplitMapButtonFactory.deps = [MapControlTooltipFactory];\n\ninterface SplitMapButtonIcons {\n  delete: ComponentType<any>;\n  split: ComponentType<any>;\n}\n\nexport type SplitMapButtonProps = {\n  isSplit: boolean;\n  mapIndex: number;\n  onToggleSplitMap: (index?: number) => void;\n  actionIcons: SplitMapButtonIcons;\n  readOnly: boolean;\n  mapControls: MapControls;\n};\n\nfunction SplitMapButtonFactory(MapControlTooltip) {\n  const defaultActionIcons = {\n    delete: Delete,\n    split: Split\n  };\n\n  /** @type {import('./split-map-button').SplitMapButtonComponent} */\n  const SplitMapButton: React.FC<SplitMapButtonProps> = ({\n    isSplit,\n    mapIndex,\n    onToggleSplitMap,\n    actionIcons = defaultActionIcons,\n    mapControls,\n    readOnly\n  }) => {\n    const splitMap = mapControls?.splitMap || ({} as MapControl);\n    const onClick = useCallback(\n      event => {\n        event.preventDefault();\n        onToggleSplitMap(isSplit ? mapIndex : undefined);\n      },\n      [isSplit, mapIndex, onToggleSplitMap]\n    );\n\n    const isVisible = useMemo(() => splitMap.show && readOnly !== true, [splitMap.show, readOnly]);\n\n    if (!splitMap.show) {\n      return null;\n    }\n    return isVisible ? (\n      <MapControlTooltip\n        id=\"action-toggle\"\n        message={isSplit ? 'tooltip.closePanel' : 'tooltip.switchToDualView'}\n      >\n        <MapControlButton\n          active={isSplit}\n          onClick={onClick}\n          className={classnames('map-control-button', 'split-map', {'close-map': isSplit})}\n        >\n          {isSplit ? <actionIcons.delete height=\"18px\" /> : <actionIcons.split height=\"18px\" />}\n        </MapControlButton>\n      </MapControlTooltip>\n    ) : null;\n  };\n\n  SplitMapButton.displayName = 'SplitMapButton';\n  return React.memo(SplitMapButton);\n}\n\nexport default SplitMapButtonFactory;\n"],"mappings":";;;;;;;;;;;AAoBA;;AACA;;AACA;;AACA;;;;;AAtBA,IAAAA,sBAAA,GAAAC,OAAA;AAEA,IAAAC,uBAAA,GAAAD,OAAA;AAEAE,MAAA,CAAAC,cAAA,CAAAC,OAAA;EACAC,KAAA;AACA;AACAD,OAAA;AAEA,IAAAE,MAAA,GAAAL,uBAAA,CAAAD,OAAA;AAEA,IAAAO,WAAA,GAAAR,sBAAA,CAAAC,OAAA;AAEA,IAAAQ,iBAAA,GAAAR,OAAA;AAEA,IAAAS,MAAA,GAAAT,OAAA;AAEA,IAAAU,kBAAA,GAAAX,sBAAA,CAAAC,OAAA;AAAAW,qBAAA,CAAAC,IAAA,IAAAF,kBAAA;;EAyBA,IAAAG,kBAAS;IACP,QAAM,EAAAJ,MAAA,CAAAK,MAAqB;IACzBC,KAAA,EAAAN,MAAQ,CAAAO;EACR;EAFyB;;;IAM3B,IAAMC,OAAA,GAAAC,IAA6C,CAAGD,OAAA;MACpDE,QAMI,GAAAD,IANJ,CAAAC,QAMI;MALJC,gBAAA,GAAAF,IAAA,CAKIE,gBAAA;MAJJC,gBAII,GAAAH,IAAA,CAJJI,WAAA;MAIIA,WAAA,GAAAD,gBAHJ,KAGI,SAAAR,kBAAA,GAAAQ,gBAAA;MAHJE,WAGI,GAAAL,IAAA,CAAAK,WAAA;MAFJC,QAAA,GAEIN,IAAA,CAAAM,QAFJ;IAEI,IADJC,QACI,IAAAF,WADJ,KACI,QAAAA,WAAA,uBAAAA,WAAA,CAAAE,QAAA;IACJ,IAAMC,OAAA,GAAQ,CAAG,GAAApB,MAAA,CAAAqB,WAAA,YAAAC,KAAW;MAC5BA,KAAM,CAAAC,cAAU;MAEZT,gBAAM,CAAAH,OAAN,GAAAE,QAAA,GAAAW,SAAA;IACA,IAAAb,OAAA,EAAAE,QAAiB,EAAAC,gBAAO,CAAc;IACvC,IACAW,SAAS,OAAAzB,MAAU,CAAA0B,OAAA,cALtB;MAQA,OAAMP,QAAY,CAAAQ,IAAA,IAAAT,QAAA,KAAQ;IAAA,IAAAC,QAAM,CAAAQ,IAAQ,EAACT,QAAQ;;MAEjD,OAAK,IAAQ;IACX;;MAEFU,EAAA,iBAAgB;MAEZC,OAAG,EAAAlB,OAAA,GADL;IAEE,gBAASX,MAAU,YAAA8B,aAAuB,CAAA5B,iBAAA,CAAA6B,gBAAA;MAF5CC,MAAA,EAAArB,OAIE;MACES,OAAM,EAAEA,OADV;MAEEa,SAAS,MAAAhC,WAFX;QAGE,WAAW,EAAAU;MAA+C;IAAD,GAA9CA,OAAA,gBAAAX,MAAA,YAAA8B,aAAA,CAAAd,WAAA;MAHbkB,MAKG,EAAO;IAAuB,kBAAOlC,MAAA,YAAA8B,aAAA,CAAAd,WAAA,CAAAP,KAAA;MAA9ByB,MAAA;IAA6D,WAAO;EAA1B;;EAM1D,oBAAelC,MAAf,UAA6B,EAAAmC,IAAA,CAAAC,cAA7B;AACA;;iBAGa,IAAAC,QAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}