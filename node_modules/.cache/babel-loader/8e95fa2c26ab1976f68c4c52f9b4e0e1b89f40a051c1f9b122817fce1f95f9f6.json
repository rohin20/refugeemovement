{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nvar JSONPath = function () {\n  function JSONPath() {\n    var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    _classCallCheck(this, JSONPath);\n    this.path = ['$'];\n    if (path instanceof JSONPath) {\n      this.path = _toConsumableArray(path.path);\n      return;\n    }\n    if (Array.isArray(path)) {\n      var _this$path;\n      (_this$path = this.path).push.apply(_this$path, _toConsumableArray(path));\n      return;\n    }\n    if (typeof path === 'string') {\n      this.path = path.split('.');\n      if (this.path[0] !== '$') {\n        throw new Error('JSONPaths must start with $');\n      }\n    }\n  }\n  _createClass(JSONPath, [{\n    key: \"clone\",\n    value: function clone() {\n      return new JSONPath(this);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.path.join('.');\n    }\n  }, {\n    key: \"push\",\n    value: function push(name) {\n      this.path.push(name);\n    }\n  }, {\n    key: \"pop\",\n    value: function pop() {\n      return this.path.pop();\n    }\n  }, {\n    key: \"set\",\n    value: function set(name) {\n      this.path[this.path.length - 1] = name;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      if (!this || !other || this.path.length !== other.path.length) {\n        return false;\n      }\n      for (var i = 0; i < this.path.length; ++i) {\n        if (this.path[i] !== other.path[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }, {\n    key: \"setFieldAtPath\",\n    value: function setFieldAtPath(object, value) {\n      var path = _toConsumableArray(this.path);\n      path.shift();\n      var field = path.pop();\n      var _iterator = _createForOfIteratorHelper(path),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var component = _step.value;\n          object = object[component];\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      object[field] = value;\n    }\n  }, {\n    key: \"getFieldAtPath\",\n    value: function getFieldAtPath(object) {\n      var path = _toConsumableArray(this.path);\n      path.shift();\n      var field = path.pop();\n      var _iterator2 = _createForOfIteratorHelper(path),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var component = _step2.value;\n          object = object[component];\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      return object[field];\n    }\n  }]);\n  return JSONPath;\n}();\nexport { JSONPath as default };","map":{"version":3,"names":["JSONPath","path","arguments","length","undefined","_classCallCheck","_toConsumableArray","Array","isArray","_this$path","push","apply","split","Error","join","name","pop","other","i","object","value","shift","field","_iterator","_createForOfIteratorHelper","_step","s","n","done","component","err","e","f","_iterator2","_step2"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@loaders.gl/json/src/lib/jsonpath/jsonpath.js"],"sourcesContent":["/**\n * A parser for a minimal subset of the jsonpath standard\n * Full JSON path parsers for JS exist but are quite large (bundle size)\n *\n * Supports\n *\n *   `$.component.component.component`\n */\nexport default class JSONPath {\n  constructor(path = null) {\n    this.path = ['$'];\n\n    if (path instanceof JSONPath) {\n      this.path = [...path.path];\n      return;\n    }\n\n    if (Array.isArray(path)) {\n      this.path.push(...path);\n      return;\n    }\n\n    // Parse a string as a JSONPath\n    if (typeof path === 'string') {\n      this.path = path.split('.');\n      if (this.path[0] !== '$') {\n        throw new Error('JSONPaths must start with $');\n      }\n    }\n  }\n\n  clone() {\n    return new JSONPath(this);\n  }\n\n  toString() {\n    return this.path.join('.');\n  }\n\n  push(name) {\n    this.path.push(name);\n  }\n\n  pop() {\n    return this.path.pop();\n  }\n\n  set(name) {\n    this.path[this.path.length - 1] = name;\n  }\n\n  equals(other) {\n    if (!this || !other || this.path.length !== other.path.length) {\n      return false;\n    }\n\n    for (let i = 0; i < this.path.length; ++i) {\n      if (this.path[i] !== other.path[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Sets the value pointed at by path\n   * TODO - handle root path\n   * @param {*} object\n   * @param {*} value\n   */\n  setFieldAtPath(object, value) {\n    const path = [...this.path];\n    path.shift();\n    const field = path.pop();\n    for (const component of path) {\n      object = object[component];\n    }\n    object[field] = value;\n  }\n\n  /**\n   * Gets the value pointed at by path\n   * TODO - handle root path\n   * @param {*} object\n   */\n  getFieldAtPath(object) {\n    const path = [...this.path];\n    path.shift();\n    const field = path.pop();\n    for (const component of path) {\n      object = object[component];\n    }\n    return object[field];\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}