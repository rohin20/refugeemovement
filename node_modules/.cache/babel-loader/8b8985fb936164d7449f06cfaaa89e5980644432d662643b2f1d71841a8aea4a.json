{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MAP_CONTROLS = exports.DATASET_FORMATS = exports.LOADING_METHODS = exports.MAP_INFO_CHARACTER = exports.MAP_THUMBNAIL_DIMENSION = exports.MAX_GPU_FILTERS = exports.EDITOR_AVAILABLE_LAYERS = exports.EDITOR_MODES = exports.GEOCODER_ICON_SIZE = exports.GEOCODER_ICON_COLOR = exports.GEOCODER_GEO_OFFSET = exports.GEOCODER_LAYER_ID = exports.GEOCODER_DATASET_NAME = exports.SPEED_CONTROL_STEP = exports.SPEED_CONTROL_RANGE = exports.DEFAULT_TIME_FORMAT = exports.ANIMATION_WINDOW = exports.FPS = exports.BASE_SPEED = exports.THROTTLE_NOTIFICATION_TIME = exports.DEFAULT_NOTIFICATION_TOPICS = exports.DEFAULT_NOTIFICATION_TYPES = exports.DEFAULT_NOTIFICATION_MESSAGE = exports.DEFAULT_UUID_COUNT = exports.EXPORT_HTML_MAP_MODE_OPTIONS = exports.EXPORT_MAP_FORMAT_OPTIONS = exports.EXPORT_HTML_MAP_MODES = exports.EXPORT_MAP_FORMATS = exports.EXPORT_DATA_TYPE_OPTIONS = exports.EXPORT_DATA_TYPE = exports.EXPORT_IMG_RESOLUTION_OPTIONS = exports.EXPORT_IMG_RATIO_OPTIONS = exports.EXPORT_IMG_RATIOS = exports.RESOLUTIONS = exports.MAX_DEFAULT_TOOLTIPS = exports.LAYER_BLENDINGS = exports.NO_VALUE_COLOR = exports.DEFAULT_TOOLTIP_FIELDS = exports.DEFAULT_LAYER_COLOR = exports.CHANNEL_SCALE_SUPPORTED_FIELDS = exports.FIELD_OPTS = exports.DEFAULT_AGGREGATION = exports.notSupportAggrOpts = exports.notSupportedScaleOpts = exports.ordinalFieldAggrScaleFunctions = exports.ordinalFieldScaleFunctions = exports.linearFieldAggrScaleFunctions = exports.linearFieldScaleFunctions = exports.AGGREGATION_TYPES = exports.CHANNEL_SCALES = exports.HIGHLIGH_COLOR_3D = exports.FIELD_COLORS = exports.FILED_TYPE_DISPLAY = exports.TABLE_OPTION_LIST = exports.TABLE_OPTION = exports.SORT_ORDER = exports.ALL_FIELD_TYPES = exports.SCALE_FUNC = exports.SCALE_TYPES = exports.FILTER_TYPES = exports.TRIP_ARC_FIELDS = exports.TRIP_POINT_FIELDS = exports.ICON_FIELDS = exports.GEOJSON_FIELDS = exports.DEFAULT_MAP_STYLES = exports.DEFAULT_LAYER_GROUPS = exports.PANELS = exports.SIDEBAR_PANELS = exports.THEME = exports.DIMENSIONS = exports.KEPLER_GL_WEBSITE = exports.KEPLER_GL_VERSION = exports.KEPLER_GL_NAME = exports.SHARE_MAP_ID = exports.OVERWRITE_MAP_ID = exports.SAVE_MAP_ID = exports.EXPORT_MAP_ID = exports.ADD_MAP_STYLE_ID = exports.EXPORT_DATA_ID = exports.EXPORT_IMAGE_ID = exports.ADD_DATA_ID = exports.DELETE_DATA_ID = exports.DATA_TABLE_ID = exports.DEFAULT_MAPBOX_API_URL = exports.ICON_PREFIX = exports.CLOUDFRONT = exports.ACTION_PREFIX = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _keymirror = _interopRequireDefault(require(\"keymirror\"));\nvar _reactMapGlDraw = require(\"react-map-gl-draw\");\nvar _d3Scale = require(\"d3-scale\");\nvar _icons = require(\"../components/common/icons\");\nvar _utils = require(\"../utils/utils\");\nvar _tooltip = require(\"./tooltip\");\nvar _types = require(\"../layers/types\");\nvar _SCALE_FUNC, _FILED_TYPE_DISPLAY, _linearFieldScaleFunc, _CHANNEL_SCALES$color, _CHANNEL_SCALES$sizeA, _linearFieldAggrScale, _ordinalFieldScaleFun, _CHANNEL_SCALES$color2, _ordinalFieldAggrScal, _notSupportedScaleOpt, _notSupportAggrOpts, _DEFAULT_AGGREGATION;\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nvar ACTION_PREFIX = '@@kepler.gl/';\nexports.ACTION_PREFIX = ACTION_PREFIX;\nvar CLOUDFRONT = 'https://d1a3f4spazzrp4.cloudfront.net/kepler.gl';\nexports.CLOUDFRONT = CLOUDFRONT;\nvar ICON_PREFIX = \"\".concat(CLOUDFRONT, \"/geodude\");\nexports.ICON_PREFIX = ICON_PREFIX;\nvar DEFAULT_MAPBOX_API_URL = 'https://api.mapbox.com'; // Modal Ids\n\n/**\n * Modal id: data table\n * @constant\n * @type {string}\n * @public\n */\n\nexports.DEFAULT_MAPBOX_API_URL = DEFAULT_MAPBOX_API_URL;\nvar DATA_TABLE_ID = 'dataTable';\n/**\n * Modal id: delete dataset confirm dialog\n * @constant\n * @type {string}\n * @public\n */\n\nexports.DATA_TABLE_ID = DATA_TABLE_ID;\nvar DELETE_DATA_ID = 'deleteData';\n/**\n * Modal id: add data modal\n * @constant\n * @type {string}\n * @public\n */\n\nexports.DELETE_DATA_ID = DELETE_DATA_ID;\nvar ADD_DATA_ID = 'addData';\n/**\n * Modal id: export image modal\n * @constant\n * @type {string}\n * @public\n */\n\nexports.ADD_DATA_ID = ADD_DATA_ID;\nvar EXPORT_IMAGE_ID = 'exportImage';\n/**\n * Modal id: export data modal\n * @constant\n * @type {string}\n * @public\n */\n\nexports.EXPORT_IMAGE_ID = EXPORT_IMAGE_ID;\nvar EXPORT_DATA_ID = 'exportData';\n/**\n * Modal id: add custom map style modal\n * @constant\n * @type {string}\n * @public\n */\n\nexports.EXPORT_DATA_ID = EXPORT_DATA_ID;\nvar ADD_MAP_STYLE_ID = 'addMapStyle';\n/**\n * Modal id: export map modal\n * @constant\n * @type {string}\n * @public\n */\n\nexports.ADD_MAP_STYLE_ID = ADD_MAP_STYLE_ID;\nvar EXPORT_MAP_ID = 'exportMap';\n/**\n * Modal id: save map modal\n * @constant\n * @type {string}\n * @public\n */\n\nexports.EXPORT_MAP_ID = EXPORT_MAP_ID;\nvar SAVE_MAP_ID = 'saveMap';\n/**\n * Modal id: confirm to overwrite saved map\n * @constant\n * @type {string}\n * @public\n */\n\nexports.SAVE_MAP_ID = SAVE_MAP_ID;\nvar OVERWRITE_MAP_ID = 'overwriteMap';\n/**\n * Modal id: share map url modal\n * @constant\n * @type {string}\n * @public\n */\n\nexports.OVERWRITE_MAP_ID = OVERWRITE_MAP_ID;\nvar SHARE_MAP_ID = 'shareMap';\nexports.SHARE_MAP_ID = SHARE_MAP_ID;\nvar KEPLER_GL_NAME = 'kepler.gl'; // __PACKAGE_VERSION__ is automatically injected by Babel/Webpack during the building process\n// Since we are injecting this during the build process with babel\n// while developing VERSION is not defined, we capture the exception and return\n// an empty string which will allow us to retrieve the latest umd version\n\nexports.KEPLER_GL_NAME = KEPLER_GL_NAME;\nvar KEPLER_GL_VERSION = \"2.5.5\";\nexports.KEPLER_GL_VERSION = KEPLER_GL_VERSION;\nvar KEPLER_GL_WEBSITE = 'http://kepler.gl/';\nexports.KEPLER_GL_WEBSITE = KEPLER_GL_WEBSITE;\nvar DIMENSIONS = {\n  sidePanel: {\n    width: 300,\n    margin: {\n      top: 20,\n      left: 20,\n      bottom: 30,\n      right: 20\n    },\n    headerHeight: 96\n  },\n  mapControl: {\n    width: 184,\n    padding: 12\n  }\n};\n/**\n * Theme name that can be passed to `KeplerGl` `prop.theme`.\n * Available themes are `THEME.light` and `THEME.dark`. Default theme is `THEME.dark`\n * @constant\n * @type {object}\n * @public\n * @example\n * ```js\n * const Map = () => <KeplerGl theme={THEME.light} id=\"map\"/>\n * ```\n */\n\nexports.DIMENSIONS = DIMENSIONS;\nvar THEME = (0, _keymirror[\"default\"])({\n  light: null,\n  dark: null,\n  base: null\n});\nexports.THEME = THEME;\nvar SIDEBAR_PANELS = [{\n  id: 'layer',\n  label: 'sidebar.panels.layer',\n  iconComponent: _icons.Layers,\n  onClick: null\n}, {\n  id: 'filter',\n  label: 'sidebar.panels.filter',\n  iconComponent: _icons.FilterFunnel,\n  onClick: null\n}, {\n  id: 'interaction',\n  label: 'sidebar.panels.interaction',\n  iconComponent: _icons.CursorClick,\n  onClick: null\n}, {\n  id: 'map',\n  label: 'sidebar.panels.basemap',\n  iconComponent: _icons.Settings,\n  onClick: null\n}]; // backward compatibility\n\nexports.SIDEBAR_PANELS = SIDEBAR_PANELS;\nvar PANELS = SIDEBAR_PANELS; // MAP STYLES\n\nexports.PANELS = PANELS;\nvar DEFAULT_LAYER_GROUPS = [{\n  slug: 'label',\n  filter: function filter(_ref) {\n    var id = _ref.id;\n    return id.match(/(?=(label|place-|poi-))/);\n  },\n  defaultVisibility: true\n}, {\n  slug: 'road',\n  filter: function filter(_ref2) {\n    var id = _ref2.id;\n    return id.match(/(?=(road|railway|tunnel|street|bridge))(?!.*label)/);\n  },\n  defaultVisibility: true\n}, {\n  slug: 'border',\n  filter: function filter(_ref3) {\n    var id = _ref3.id;\n    return id.match(/border|boundaries/);\n  },\n  defaultVisibility: false\n}, {\n  slug: 'building',\n  filter: function filter(_ref4) {\n    var id = _ref4.id;\n    return id.match(/building/);\n  },\n  defaultVisibility: true\n}, {\n  slug: 'water',\n  filter: function filter(_ref5) {\n    var id = _ref5.id;\n    return id.match(/(?=(water|stream|ferry))/);\n  },\n  defaultVisibility: true\n}, {\n  slug: 'land',\n  filter: function filter(_ref6) {\n    var id = _ref6.id;\n    return id.match(/(?=(parks|landcover|industrial|sand|hillshade))/);\n  },\n  defaultVisibility: true\n}, {\n  slug: '3d building',\n  filter: function filter() {\n    return false;\n  },\n  defaultVisibility: false\n}];\nexports.DEFAULT_LAYER_GROUPS = DEFAULT_LAYER_GROUPS;\nvar DEFAULT_MAP_STYLES = [{\n  id: 'dark',\n  label: 'Dark',\n  url: 'mapbox://styles/uberdata/cjoqbbf6l9k302sl96tyvka09',\n  icon: \"\".concat(ICON_PREFIX, \"/UBER_DARK_V2.png\"),\n  layerGroups: DEFAULT_LAYER_GROUPS\n}, {\n  id: 'light',\n  label: 'Light',\n  url: 'mapbox://styles/uberdata/cjoqb9j339k1f2sl9t5ic5bn4',\n  icon: \"\".concat(ICON_PREFIX, \"/UBER_LIGHT_V2.png\"),\n  layerGroups: DEFAULT_LAYER_GROUPS\n}, {\n  id: 'muted',\n  label: 'Muted Light',\n  url: 'mapbox://styles/uberdata/cjfyl03kp1tul2smf5v2tbdd4',\n  icon: \"\".concat(ICON_PREFIX, \"/UBER_MUTED_LIGHT.png\"),\n  layerGroups: DEFAULT_LAYER_GROUPS\n}, {\n  id: 'muted_night',\n  label: 'Muted Night',\n  url: 'mapbox://styles/uberdata/cjfxhlikmaj1b2soyzevnywgs',\n  icon: \"\".concat(ICON_PREFIX, \"/UBER_MUTED_NIGHT.png\"),\n  layerGroups: DEFAULT_LAYER_GROUPS\n}, {\n  id: 'satellite',\n  label: 'Satellite',\n  url: \"mapbox://styles/mapbox/satellite-v9\",\n  icon: \"\".concat(ICON_PREFIX, \"/UBER_SATELLITE.png\")\n}];\nexports.DEFAULT_MAP_STYLES = DEFAULT_MAP_STYLES;\nvar GEOJSON_FIELDS = {\n  geojson: ['_geojson', 'all_points', 'geojson']\n};\nexports.GEOJSON_FIELDS = GEOJSON_FIELDS;\nvar ICON_FIELDS = {\n  icon: ['icon']\n};\nexports.ICON_FIELDS = ICON_FIELDS;\nvar TRIP_POINT_FIELDS = [['lat', 'lng'], ['lat', 'lon'], ['latitude', 'longitude']];\nexports.TRIP_POINT_FIELDS = TRIP_POINT_FIELDS;\nvar TRIP_ARC_FIELDS = {\n  lat0: 'begintrip',\n  lng0: 'begintrip',\n  lat1: 'dropoff',\n  lng1: 'dropoff'\n};\nexports.TRIP_ARC_FIELDS = TRIP_ARC_FIELDS;\nvar FILTER_TYPES = (0, _keymirror[\"default\"])({\n  range: null,\n  select: null,\n  input: null,\n  timeRange: null,\n  multiSelect: null,\n  polygon: null\n});\nexports.FILTER_TYPES = FILTER_TYPES;\nvar SCALE_TYPES = (0, _keymirror[\"default\"])({\n  ordinal: null,\n  quantile: null,\n  quantize: null,\n  linear: null,\n  sqrt: null,\n  log: null,\n  // ordinal domain to linear range\n  point: null\n});\nexports.SCALE_TYPES = SCALE_TYPES;\nvar SCALE_FUNC = (_SCALE_FUNC = {}, (0, _defineProperty2[\"default\"])(_SCALE_FUNC, SCALE_TYPES.linear, _d3Scale.scaleLinear), (0, _defineProperty2[\"default\"])(_SCALE_FUNC, SCALE_TYPES.quantize, _d3Scale.scaleQuantize), (0, _defineProperty2[\"default\"])(_SCALE_FUNC, SCALE_TYPES.quantile, _d3Scale.scaleQuantile), (0, _defineProperty2[\"default\"])(_SCALE_FUNC, SCALE_TYPES.ordinal, _d3Scale.scaleOrdinal), (0, _defineProperty2[\"default\"])(_SCALE_FUNC, SCALE_TYPES.sqrt, _d3Scale.scaleSqrt), (0, _defineProperty2[\"default\"])(_SCALE_FUNC, SCALE_TYPES.log, _d3Scale.scaleLog), (0, _defineProperty2[\"default\"])(_SCALE_FUNC, SCALE_TYPES.point, _d3Scale.scalePoint), _SCALE_FUNC);\nexports.SCALE_FUNC = SCALE_FUNC;\nvar ALL_FIELD_TYPES = (0, _keymirror[\"default\"])({\n  \"boolean\": null,\n  date: null,\n  geojson: null,\n  integer: null,\n  real: null,\n  string: null,\n  timestamp: null,\n  point: null\n}); // Data Table\n\nexports.ALL_FIELD_TYPES = ALL_FIELD_TYPES;\nvar SORT_ORDER = (0, _keymirror[\"default\"])({\n  ASCENDING: null,\n  DESCENDING: null,\n  UNSORT: null\n});\nexports.SORT_ORDER = SORT_ORDER;\nvar TABLE_OPTION = (0, _keymirror[\"default\"])({\n  SORT_ASC: null,\n  SORT_DES: null,\n  UNSORT: null,\n  PIN: null,\n  UNPIN: null,\n  COPY: null\n});\nexports.TABLE_OPTION = TABLE_OPTION;\nvar TABLE_OPTION_LIST = [{\n  value: TABLE_OPTION.SORT_ASC,\n  display: 'Sort Ascending',\n  icon: _icons.ArrowUp,\n  condition: function condition(props) {\n    return props.sortMode !== SORT_ORDER.ASCENDING;\n  }\n}, {\n  value: TABLE_OPTION.SORT_DES,\n  display: 'Sort Descending',\n  icon: _icons.ArrowDown,\n  condition: function condition(props) {\n    return props.sortMode !== SORT_ORDER.DESCENDING;\n  }\n}, {\n  value: TABLE_OPTION.UNSORT,\n  display: 'Unsort Column',\n  icon: _icons.Cancel,\n  condition: function condition(props) {\n    return props.isSorted;\n  }\n}, {\n  value: TABLE_OPTION.PIN,\n  display: 'Pin Column',\n  icon: _icons.Pin,\n  condition: function condition(props) {\n    return !props.isPinned;\n  }\n}, {\n  value: TABLE_OPTION.UNPIN,\n  display: 'Unpin Column',\n  icon: _icons.Cancel,\n  condition: function condition(props) {\n    return props.isPinned;\n  }\n}, {\n  value: TABLE_OPTION.COPY,\n  display: 'Copy Column',\n  icon: _icons.Clipboard\n}];\nexports.TABLE_OPTION_LIST = TABLE_OPTION_LIST;\nvar ORANGE = '248, 194, 28';\nvar PINK = '231, 189, 194';\nvar PURPLE = '160, 106, 206';\nvar BLUE = '140, 210, 205';\nvar BLUE2 = '106, 160, 206';\nvar BLUE3 = '0, 172, 237';\nvar GREEN = '106, 160, 56';\nvar RED = '237, 88, 106';\nvar FILED_TYPE_DISPLAY = (_FILED_TYPE_DISPLAY = {}, (0, _defineProperty2[\"default\"])(_FILED_TYPE_DISPLAY, ALL_FIELD_TYPES[\"boolean\"], {\n  label: 'bool',\n  color: PINK\n}), (0, _defineProperty2[\"default\"])(_FILED_TYPE_DISPLAY, ALL_FIELD_TYPES.date, {\n  label: 'date',\n  color: PURPLE\n}), (0, _defineProperty2[\"default\"])(_FILED_TYPE_DISPLAY, ALL_FIELD_TYPES.geojson, {\n  label: 'geo',\n  color: BLUE2\n}), (0, _defineProperty2[\"default\"])(_FILED_TYPE_DISPLAY, ALL_FIELD_TYPES.integer, {\n  label: 'int',\n  color: ORANGE\n}), (0, _defineProperty2[\"default\"])(_FILED_TYPE_DISPLAY, ALL_FIELD_TYPES.real, {\n  label: 'float',\n  color: ORANGE\n}), (0, _defineProperty2[\"default\"])(_FILED_TYPE_DISPLAY, ALL_FIELD_TYPES.string, {\n  label: 'string',\n  color: BLUE\n}), (0, _defineProperty2[\"default\"])(_FILED_TYPE_DISPLAY, ALL_FIELD_TYPES.timestamp, {\n  label: 'time',\n  color: GREEN\n}), (0, _defineProperty2[\"default\"])(_FILED_TYPE_DISPLAY, ALL_FIELD_TYPES.point, {\n  label: 'point',\n  color: BLUE3\n}), _FILED_TYPE_DISPLAY);\nexports.FILED_TYPE_DISPLAY = FILED_TYPE_DISPLAY;\nvar FIELD_COLORS = {\n  \"default\": RED\n};\nexports.FIELD_COLORS = FIELD_COLORS;\nvar HIGHLIGH_COLOR_3D = [255, 255, 255, 60];\nexports.HIGHLIGH_COLOR_3D = HIGHLIGH_COLOR_3D;\nvar CHANNEL_SCALES = (0, _keymirror[\"default\"])({\n  color: null,\n  radius: null,\n  size: null,\n  colorAggr: null,\n  sizeAggr: null\n});\nexports.CHANNEL_SCALES = CHANNEL_SCALES;\nvar AGGREGATION_TYPES = {\n  // default\n  count: 'count',\n  // linear\n  average: 'average',\n  maximum: 'maximum',\n  minimum: 'minimum',\n  median: 'median',\n  stdev: 'stdev',\n  sum: 'sum',\n  variance: 'variance',\n  // ordinal\n  mode: 'mode',\n  countUnique: 'count unique'\n};\nexports.AGGREGATION_TYPES = AGGREGATION_TYPES;\nvar linearFieldScaleFunctions = (_linearFieldScaleFunc = {}, (0, _defineProperty2[\"default\"])(_linearFieldScaleFunc, CHANNEL_SCALES.color, [SCALE_TYPES.quantize, SCALE_TYPES.quantile]), (0, _defineProperty2[\"default\"])(_linearFieldScaleFunc, CHANNEL_SCALES.radius, [SCALE_TYPES.sqrt]), (0, _defineProperty2[\"default\"])(_linearFieldScaleFunc, CHANNEL_SCALES.size, [SCALE_TYPES.linear, SCALE_TYPES.sqrt, SCALE_TYPES.log]), _linearFieldScaleFunc);\nexports.linearFieldScaleFunctions = linearFieldScaleFunctions;\nvar linearFieldAggrScaleFunctions = (_linearFieldAggrScale = {}, (0, _defineProperty2[\"default\"])(_linearFieldAggrScale, CHANNEL_SCALES.colorAggr, (_CHANNEL_SCALES$color = {}, (0, _defineProperty2[\"default\"])(_CHANNEL_SCALES$color, AGGREGATION_TYPES.average, [SCALE_TYPES.quantize, SCALE_TYPES.quantile]), (0, _defineProperty2[\"default\"])(_CHANNEL_SCALES$color, AGGREGATION_TYPES.maximum, [SCALE_TYPES.quantize, SCALE_TYPES.quantile]), (0, _defineProperty2[\"default\"])(_CHANNEL_SCALES$color, AGGREGATION_TYPES.minimum, [SCALE_TYPES.quantize, SCALE_TYPES.quantile]), (0, _defineProperty2[\"default\"])(_CHANNEL_SCALES$color, AGGREGATION_TYPES.median, [SCALE_TYPES.quantize, SCALE_TYPES.quantile]), (0, _defineProperty2[\"default\"])(_CHANNEL_SCALES$color, AGGREGATION_TYPES.stdev, [SCALE_TYPES.quantize, SCALE_TYPES.quantile]), (0, _defineProperty2[\"default\"])(_CHANNEL_SCALES$color, AGGREGATION_TYPES.sum, [SCALE_TYPES.quantize, SCALE_TYPES.quantile]), (0, _defineProperty2[\"default\"])(_CHANNEL_SCALES$color, AGGREGATION_TYPES.variance, [SCALE_TYPES.quantize, SCALE_TYPES.quantile]), _CHANNEL_SCALES$color)), (0, _defineProperty2[\"default\"])(_linearFieldAggrScale, CHANNEL_SCALES.sizeAggr, (_CHANNEL_SCALES$sizeA = {}, (0, _defineProperty2[\"default\"])(_CHANNEL_SCALES$sizeA, AGGREGATION_TYPES.average, [SCALE_TYPES.linear, SCALE_TYPES.sqrt, SCALE_TYPES.log]), (0, _defineProperty2[\"default\"])(_CHANNEL_SCALES$sizeA, AGGREGATION_TYPES.maximum, [SCALE_TYPES.linear, SCALE_TYPES.sqrt, SCALE_TYPES.log]), (0, _defineProperty2[\"default\"])(_CHANNEL_SCALES$sizeA, AGGREGATION_TYPES.minimum, [SCALE_TYPES.linear, SCALE_TYPES.sqrt, SCALE_TYPES.log]), (0, _defineProperty2[\"default\"])(_CHANNEL_SCALES$sizeA, AGGREGATION_TYPES.median, [SCALE_TYPES.linear, SCALE_TYPES.sqrt, SCALE_TYPES.log]), (0, _defineProperty2[\"default\"])(_CHANNEL_SCALES$sizeA, AGGREGATION_TYPES.stdev, [SCALE_TYPES.linear, SCALE_TYPES.sqrt, SCALE_TYPES.log]), (0, _defineProperty2[\"default\"])(_CHANNEL_SCALES$sizeA, AGGREGATION_TYPES.sum, [SCALE_TYPES.linear, SCALE_TYPES.sqrt, SCALE_TYPES.log]), (0, _defineProperty2[\"default\"])(_CHANNEL_SCALES$sizeA, AGGREGATION_TYPES.variance, [SCALE_TYPES.linear, SCALE_TYPES.sqrt, SCALE_TYPES.log]), _CHANNEL_SCALES$sizeA)), _linearFieldAggrScale);\nexports.linearFieldAggrScaleFunctions = linearFieldAggrScaleFunctions;\nvar ordinalFieldScaleFunctions = (_ordinalFieldScaleFun = {}, (0, _defineProperty2[\"default\"])(_ordinalFieldScaleFun, CHANNEL_SCALES.color, [SCALE_TYPES.ordinal]), (0, _defineProperty2[\"default\"])(_ordinalFieldScaleFun, CHANNEL_SCALES.radius, [SCALE_TYPES.point]), (0, _defineProperty2[\"default\"])(_ordinalFieldScaleFun, CHANNEL_SCALES.size, [SCALE_TYPES.point]), _ordinalFieldScaleFun);\nexports.ordinalFieldScaleFunctions = ordinalFieldScaleFunctions;\nvar ordinalFieldAggrScaleFunctions = (_ordinalFieldAggrScal = {}, (0, _defineProperty2[\"default\"])(_ordinalFieldAggrScal, CHANNEL_SCALES.colorAggr, (_CHANNEL_SCALES$color2 = {}, (0, _defineProperty2[\"default\"])(_CHANNEL_SCALES$color2, AGGREGATION_TYPES.mode, [SCALE_TYPES.ordinal]), (0, _defineProperty2[\"default\"])(_CHANNEL_SCALES$color2, AGGREGATION_TYPES.countUnique, [SCALE_TYPES.quantize, SCALE_TYPES.quantile]), _CHANNEL_SCALES$color2)), (0, _defineProperty2[\"default\"])(_ordinalFieldAggrScal, CHANNEL_SCALES.sizeAggr, {}), _ordinalFieldAggrScal);\nexports.ordinalFieldAggrScaleFunctions = ordinalFieldAggrScaleFunctions;\nvar notSupportedScaleOpts = (_notSupportedScaleOpt = {}, (0, _defineProperty2[\"default\"])(_notSupportedScaleOpt, CHANNEL_SCALES.color, []), (0, _defineProperty2[\"default\"])(_notSupportedScaleOpt, CHANNEL_SCALES.radius, []), (0, _defineProperty2[\"default\"])(_notSupportedScaleOpt, CHANNEL_SCALES.size, []), _notSupportedScaleOpt);\nexports.notSupportedScaleOpts = notSupportedScaleOpts;\nvar notSupportAggrOpts = (_notSupportAggrOpts = {}, (0, _defineProperty2[\"default\"])(_notSupportAggrOpts, CHANNEL_SCALES.colorAggr, {}), (0, _defineProperty2[\"default\"])(_notSupportAggrOpts, CHANNEL_SCALES.sizeAggr, {}), _notSupportAggrOpts);\n/**\n * Default aggregation are based on ocunt\n */\n\nexports.notSupportAggrOpts = notSupportAggrOpts;\nvar DEFAULT_AGGREGATION = (_DEFAULT_AGGREGATION = {}, (0, _defineProperty2[\"default\"])(_DEFAULT_AGGREGATION, CHANNEL_SCALES.colorAggr, (0, _defineProperty2[\"default\"])({}, AGGREGATION_TYPES.count, [SCALE_TYPES.quantize, SCALE_TYPES.quantile])), (0, _defineProperty2[\"default\"])(_DEFAULT_AGGREGATION, CHANNEL_SCALES.sizeAggr, (0, _defineProperty2[\"default\"])({}, AGGREGATION_TYPES.count, [SCALE_TYPES.linear, SCALE_TYPES.sqrt, SCALE_TYPES.log])), _DEFAULT_AGGREGATION);\n/**\n * Define what type of scale operation is allowed on each type of fields\n */\n\nexports.DEFAULT_AGGREGATION = DEFAULT_AGGREGATION;\nvar FIELD_OPTS = {\n  string: {\n    type: 'categorical',\n    scale: _objectSpread(_objectSpread({}, ordinalFieldScaleFunctions), ordinalFieldAggrScaleFunctions),\n    format: {\n      legend: function legend(d) {\n        return d;\n      },\n      tooltip: []\n    }\n  },\n  real: {\n    type: 'numerical',\n    scale: _objectSpread(_objectSpread({}, linearFieldScaleFunctions), linearFieldAggrScaleFunctions),\n    format: {\n      legend: function legend(d) {\n        return d;\n      },\n      tooltip: [_tooltip.TOOLTIP_FORMAT_TYPES.NONE, _tooltip.TOOLTIP_FORMAT_TYPES.DECIMAL, _tooltip.TOOLTIP_FORMAT_TYPES.PERCENTAGE]\n    }\n  },\n  timestamp: {\n    type: 'time',\n    scale: _objectSpread(_objectSpread({}, linearFieldScaleFunctions), notSupportAggrOpts),\n    format: {\n      legend: function legend(d) {\n        return d;\n      },\n      tooltip: [_tooltip.TOOLTIP_FORMAT_TYPES.NONE, _tooltip.TOOLTIP_FORMAT_TYPES.DATE, _tooltip.TOOLTIP_FORMAT_TYPES.DATE_TIME]\n    }\n  },\n  integer: {\n    type: 'numerical',\n    scale: _objectSpread(_objectSpread({}, linearFieldScaleFunctions), linearFieldAggrScaleFunctions),\n    format: {\n      legend: function legend(d) {\n        return d;\n      },\n      tooltip: [_tooltip.TOOLTIP_FORMAT_TYPES.NONE, _tooltip.TOOLTIP_FORMAT_TYPES.DECIMAL, _tooltip.TOOLTIP_FORMAT_TYPES.PERCENTAGE]\n    }\n  },\n  \"boolean\": {\n    type: 'boolean',\n    scale: _objectSpread(_objectSpread({}, ordinalFieldScaleFunctions), ordinalFieldAggrScaleFunctions),\n    format: {\n      legend: function legend(d) {\n        return d;\n      },\n      tooltip: [_tooltip.TOOLTIP_FORMAT_TYPES.NONE, _tooltip.TOOLTIP_FORMAT_TYPES.BOOLEAN]\n    }\n  },\n  date: {\n    scale: _objectSpread(_objectSpread({}, ordinalFieldScaleFunctions), ordinalFieldAggrScaleFunctions),\n    format: {\n      legend: function legend(d) {\n        return d;\n      },\n      tooltip: [_tooltip.TOOLTIP_FORMAT_TYPES.NONE, _tooltip.TOOLTIP_FORMAT_TYPES.DATE]\n    }\n  },\n  geojson: {\n    type: 'geometry',\n    scale: _objectSpread(_objectSpread({}, notSupportedScaleOpts), notSupportAggrOpts),\n    format: {\n      legend: function legend(d) {\n        return '...';\n      },\n      tooltip: []\n    }\n  }\n};\nexports.FIELD_OPTS = FIELD_OPTS;\nvar CHANNEL_SCALE_SUPPORTED_FIELDS = Object.keys(CHANNEL_SCALES).reduce(function (accu, key) {\n  return _objectSpread(_objectSpread({}, accu), {}, (0, _defineProperty2[\"default\"])({}, key, Object.keys(FIELD_OPTS).filter(function (ft) {\n    return Object.keys(FIELD_OPTS[ft].scale[key]).length;\n  })));\n}, {});\nexports.CHANNEL_SCALE_SUPPORTED_FIELDS = CHANNEL_SCALE_SUPPORTED_FIELDS;\nvar DEFAULT_LAYER_COLOR = {\n  tripArc: '#9226C6',\n  begintrip_lat: '#1E96BE',\n  dropoff_lat: '#FF991F',\n  request_lat: '#52A353'\n}; // let user pass in default tooltip fields\n\nexports.DEFAULT_LAYER_COLOR = DEFAULT_LAYER_COLOR;\nvar DEFAULT_TOOLTIP_FIELDS = [];\nexports.DEFAULT_TOOLTIP_FIELDS = DEFAULT_TOOLTIP_FIELDS;\nvar NO_VALUE_COLOR = [0, 0, 0, 0];\nexports.NO_VALUE_COLOR = NO_VALUE_COLOR;\nvar LAYER_BLENDINGS = {\n  additive: {\n    label: 'layerBlending.additive',\n    blendFunc: ['SRC_ALPHA', 'DST_ALPHA'],\n    blendEquation: 'FUNC_ADD'\n  },\n  normal: {\n    // reference to\n    // https://limnu.com/webgl-blending-youre-probably-wrong/\n    label: 'layerBlending.normal',\n    blendFunc: ['SRC_ALPHA', 'ONE_MINUS_SRC_ALPHA', 'ONE', 'ONE_MINUS_SRC_ALPHA'],\n    blendEquation: ['FUNC_ADD', 'FUNC_ADD']\n  },\n  subtractive: {\n    label: 'layerBlending.subtractive',\n    blendFunc: ['ONE', 'ONE_MINUS_DST_COLOR', 'SRC_ALPHA', 'DST_ALPHA'],\n    blendEquation: ['FUNC_SUBTRACT', 'FUNC_ADD']\n  }\n};\nexports.LAYER_BLENDINGS = LAYER_BLENDINGS;\nvar MAX_DEFAULT_TOOLTIPS = 5;\nexports.MAX_DEFAULT_TOOLTIPS = MAX_DEFAULT_TOOLTIPS;\nvar RESOLUTIONS = (0, _keymirror[\"default\"])({\n  ONE_X: null,\n  TWO_X: null\n});\nexports.RESOLUTIONS = RESOLUTIONS;\nvar EXPORT_IMG_RATIOS = (0, _keymirror[\"default\"])({\n  SCREEN: null,\n  FOUR_BY_THREE: null,\n  SIXTEEN_BY_NINE: null,\n  CUSTOM: null\n});\nexports.EXPORT_IMG_RATIOS = EXPORT_IMG_RATIOS;\nvar EXPORT_IMG_RATIO_OPTIONS = [{\n  id: EXPORT_IMG_RATIOS.SCREEN,\n  label: 'modal.exportImage.ratioOriginalScreen',\n  getSize: function getSize(screenW, screenH) {\n    return {\n      width: screenW,\n      height: screenH\n    };\n  }\n}, {\n  id: EXPORT_IMG_RATIOS.CUSTOM,\n  hidden: true,\n  label: 'modal.exportImage.ratioCustom',\n  getSize: function getSize(mapW, mapH) {\n    return {\n      width: mapW,\n      height: mapH\n    };\n  }\n}, {\n  id: EXPORT_IMG_RATIOS.FOUR_BY_THREE,\n  label: 'modal.exportImage.ratio4_3',\n  getSize: function getSize(screenW, screenH) {\n    return {\n      width: screenW,\n      height: Math.round(screenW * 0.75)\n    };\n  }\n}, {\n  id: EXPORT_IMG_RATIOS.SIXTEEN_BY_NINE,\n  label: 'modal.exportImage.ratio16_9',\n  getSize: function getSize(screenW, screenH) {\n    return {\n      width: screenW,\n      height: Math.round(screenW * 0.5625)\n    };\n  }\n}];\nexports.EXPORT_IMG_RATIO_OPTIONS = EXPORT_IMG_RATIO_OPTIONS;\nvar EXPORT_IMG_RESOLUTION_OPTIONS = [{\n  id: RESOLUTIONS.ONE_X,\n  label: '1x',\n  available: true,\n  scale: 1,\n  getSize: function getSize(screenW, screenH) {\n    return {\n      width: screenW,\n      height: screenH\n    };\n  }\n}, {\n  id: RESOLUTIONS.TWO_X,\n  label: '2x',\n  available: true,\n  scale: 2,\n  getSize: function getSize(screenW, screenH) {\n    return {\n      width: screenW * 2,\n      height: screenH * 2\n    };\n  }\n}];\nexports.EXPORT_IMG_RESOLUTION_OPTIONS = EXPORT_IMG_RESOLUTION_OPTIONS;\nvar EXPORT_DATA_TYPE = (0, _keymirror[\"default\"])({\n  CSV: null // SHAPEFILE: null,\n  // JSON: null,\n  // GEOJSON: null,\n  // TOPOJSON: null\n});\n\nexports.EXPORT_DATA_TYPE = EXPORT_DATA_TYPE;\nvar EXPORT_DATA_TYPE_OPTIONS = [{\n  id: EXPORT_DATA_TYPE.CSV,\n  label: EXPORT_DATA_TYPE.CSV.toLowerCase(),\n  available: true\n} // {\n//   id: EXPORT_DATA_TYPE.SHAPEFILE,\n//   label: 'shapefile',\n//   available: false\n// },\n// {\n//   id: EXPORT_DATA_TYPE.JSON,\n//   label: 'json',\n//   available: false\n// },\n// {\n//   id: EXPORT_DATA_TYPE.GEOJSON,\n//   label: 'geojson',\n//   available: false\n// },\n// {\n//   id: EXPORT_DATA_TYPE.TOPOJSON,\n//   label: 'topojson',\n//   available: false\n// }\n]; // Export map types\n\nexports.EXPORT_DATA_TYPE_OPTIONS = EXPORT_DATA_TYPE_OPTIONS;\nvar EXPORT_MAP_FORMATS = (0, _keymirror[\"default\"])({\n  HTML: null,\n  JSON: null\n});\nexports.EXPORT_MAP_FORMATS = EXPORT_MAP_FORMATS;\nvar EXPORT_HTML_MAP_MODES = (0, _keymirror[\"default\"])({\n  READ: null,\n  EDIT: null\n}); // Export map options\n\nexports.EXPORT_HTML_MAP_MODES = EXPORT_HTML_MAP_MODES;\nvar EXPORT_MAP_FORMAT_OPTIONS = Object.entries(EXPORT_MAP_FORMATS).map(function (entry) {\n  return {\n    id: entry[0],\n    label: entry[1].toLowerCase(),\n    available: true\n  };\n});\nexports.EXPORT_MAP_FORMAT_OPTIONS = EXPORT_MAP_FORMAT_OPTIONS;\nvar EXPORT_HTML_MAP_MODE_OPTIONS = Object.entries(EXPORT_HTML_MAP_MODES).map(function (entry) {\n  return {\n    id: entry[0],\n    label: \"modal.exportMap.html.\".concat(entry[1].toLowerCase()),\n    available: true,\n    url: (0, _utils.getHTMLMapModeTileUrl)(entry[1])\n  };\n});\nexports.EXPORT_HTML_MAP_MODE_OPTIONS = EXPORT_HTML_MAP_MODE_OPTIONS;\nvar DEFAULT_UUID_COUNT = 6;\nexports.DEFAULT_UUID_COUNT = DEFAULT_UUID_COUNT;\nvar DEFAULT_NOTIFICATION_MESSAGE = 'MESSAGE_NOT_PROVIDED';\nexports.DEFAULT_NOTIFICATION_MESSAGE = DEFAULT_NOTIFICATION_MESSAGE;\nvar DEFAULT_NOTIFICATION_TYPES = (0, _keymirror[\"default\"])({\n  info: null,\n  error: null,\n  warning: null,\n  success: null\n});\nexports.DEFAULT_NOTIFICATION_TYPES = DEFAULT_NOTIFICATION_TYPES;\nvar DEFAULT_NOTIFICATION_TOPICS = (0, _keymirror[\"default\"])({\n  global: null,\n  file: null\n}); // Minimum time between identical notifications about deck.gl errors\n\nexports.DEFAULT_NOTIFICATION_TOPICS = DEFAULT_NOTIFICATION_TOPICS;\nvar THROTTLE_NOTIFICATION_TIME = 2500; // Animation\n\nexports.THROTTLE_NOTIFICATION_TIME = THROTTLE_NOTIFICATION_TIME;\nvar BASE_SPEED = 600;\nexports.BASE_SPEED = BASE_SPEED;\nvar FPS = 60;\n/**\n * 4 Animation Window Types\n * 1. free\n *  |->  |->\n * Current time is a fixed range, animation controller calls next animation frames continuously to animation a moving window\n * The increment id based on domain / BASE_SPEED * SPEED\n *\n * 2. incremental\n * |    |->\n * Same as free, current time is a growing range, only the max value of range increment during animation.\n * The increment is also based on domain / BASE_SPEED * SPEED\n *\n * 3. point\n * o -> o\n * Current time is a point, animation controller calls next animation frame continuously to animation a moving point\n * The increment is based on domain / BASE_SPEED * SPEED\n *\n * 4. interval\n * o ~> o\n * Current time is a point. An array of sorted time steps need to be provided.\n * animation controller calls next animation at a interval when the point jumps to the next step\n */\n\nexports.FPS = FPS;\nvar ANIMATION_WINDOW = (0, _keymirror[\"default\"])({\n  free: null,\n  incremental: null,\n  point: null,\n  interval: null\n});\nexports.ANIMATION_WINDOW = ANIMATION_WINDOW;\nvar DEFAULT_TIME_FORMAT = 'MM/DD/YY HH:mm:ssa';\nexports.DEFAULT_TIME_FORMAT = DEFAULT_TIME_FORMAT;\nvar SPEED_CONTROL_RANGE = [0, 10];\nexports.SPEED_CONTROL_RANGE = SPEED_CONTROL_RANGE;\nvar SPEED_CONTROL_STEP = 0.001; // Geocoder\n\nexports.SPEED_CONTROL_STEP = SPEED_CONTROL_STEP;\nvar GEOCODER_DATASET_NAME = 'geocoder_dataset';\nexports.GEOCODER_DATASET_NAME = GEOCODER_DATASET_NAME;\nvar GEOCODER_LAYER_ID = 'geocoder_layer';\nexports.GEOCODER_LAYER_ID = GEOCODER_LAYER_ID;\nvar GEOCODER_GEO_OFFSET = 0.05;\nexports.GEOCODER_GEO_OFFSET = GEOCODER_GEO_OFFSET;\nvar GEOCODER_ICON_COLOR = [255, 0, 0];\nexports.GEOCODER_ICON_COLOR = GEOCODER_ICON_COLOR;\nvar GEOCODER_ICON_SIZE = 80; // We could use directly react-map-gl-draw EditorMode but this would\n// create a direct dependency with react-map-gl-draw\n// Created this map to be independent from react-map-gl-draw\n\nexports.GEOCODER_ICON_SIZE = GEOCODER_ICON_SIZE;\nvar EDITOR_MODES = {\n  READ_ONLY: _reactMapGlDraw.EditorModes.READ_ONLY,\n  DRAW_POLYGON: _reactMapGlDraw.EditorModes.DRAW_POLYGON,\n  DRAW_RECTANGLE: _reactMapGlDraw.EditorModes.DRAW_RECTANGLE,\n  EDIT: _reactMapGlDraw.EditorModes.EDIT_VERTEX\n};\nexports.EDITOR_MODES = EDITOR_MODES;\nvar EDITOR_AVAILABLE_LAYERS = [_types.LAYER_TYPES.point, _types.LAYER_TYPES.hexagon, _types.LAYER_TYPES.arc, _types.LAYER_TYPES.line, _types.LAYER_TYPES.hexagonId]; // GPU Filtering\n\n/**\n * Max number of filter value buffers that deck.gl provides\n */\n\nexports.EDITOR_AVAILABLE_LAYERS = EDITOR_AVAILABLE_LAYERS;\nvar MAX_GPU_FILTERS = 4;\nexports.MAX_GPU_FILTERS = MAX_GPU_FILTERS;\nvar MAP_THUMBNAIL_DIMENSION = {\n  width: 300,\n  height: 200\n};\nexports.MAP_THUMBNAIL_DIMENSION = MAP_THUMBNAIL_DIMENSION;\nvar MAP_INFO_CHARACTER = {\n  title: 100,\n  description: 100\n}; // Load data\n\nexports.MAP_INFO_CHARACTER = MAP_INFO_CHARACTER;\nvar LOADING_METHODS = (0, _keymirror[\"default\"])({\n  upload: null,\n  storage: null\n});\nexports.LOADING_METHODS = LOADING_METHODS;\nvar DATASET_FORMATS = (0, _keymirror[\"default\"])({\n  row: null,\n  geojson: null,\n  csv: null,\n  keplergl: null\n});\nexports.DATASET_FORMATS = DATASET_FORMATS;\nvar MAP_CONTROLS = (0, _keymirror[\"default\"])({\n  visibleLayers: null,\n  mapLegend: null,\n  toggle3d: null,\n  splitMap: null,\n  mapDraw: null,\n  mapLocale: null\n});\nexports.MAP_CONTROLS = MAP_CONTROLS;","map":{"version":3,"names":["_keymirror","_interopRequireDefault","require","_reactMapGlDraw","_d3Scale","_icons","_utils","_tooltip","_types","ACTION_PREFIX","CLOUDFRONT","ICON_PREFIX","concat","DEFAULT_MAPBOX_API_URL","DATA_TABLE_ID","DELETE_DATA_ID","ADD_DATA_ID","EXPORT_IMAGE_ID","EXPORT_DATA_ID","ADD_MAP_STYLE_ID","EXPORT_MAP_ID","SAVE_MAP_ID","OVERWRITE_MAP_ID","SHARE_MAP_ID","KEPLER_GL_NAME","KEPLER_GL_VERSION","KEPLER_GL_WEBSITE","DIMENSIONS","sidePanel","width","margin","top","left","bottom","right","headerHeight","mapControl","padding","THEME","light","dark","base","SIDEBAR_PANELS","id","label","iconComponent","Layers","onClick","FilterFunnel","CursorClick","Settings","PANELS","DEFAULT_LAYER_GROUPS","slug","filter","_ref","match","defaultVisibility","_ref2","_ref3","_ref4","_ref5","_ref6","DEFAULT_MAP_STYLES","url","icon","layerGroups","GEOJSON_FIELDS","geojson","ICON_FIELDS","TRIP_POINT_FIELDS","TRIP_ARC_FIELDS","lat0","lng0","lat1","lng1","FILTER_TYPES","range","select","input","timeRange","multiSelect","polygon","SCALE_TYPES","ordinal","quantile","quantize","linear","sqrt","log","point","SCALE_FUNC","_SCALE_FUNC","_defineProperty2","scaleLinear","scaleQuantize","scaleQuantile","scaleOrdinal","scaleSqrt","scaleLog","scalePoint","ALL_FIELD_TYPES","date","integer","real","string","timestamp","SORT_ORDER","ASCENDING","DESCENDING","UNSORT","TABLE_OPTION","SORT_ASC","SORT_DES","PIN","UNPIN","COPY","TABLE_OPTION_LIST","value","display","ArrowUp","condition","props","sortMode","ArrowDown","Cancel","isSorted","Pin","isPinned","Clipboard","ORANGE","PINK","PURPLE","BLUE","BLUE2","BLUE3","GREEN","RED","FILED_TYPE_DISPLAY","_FILED_TYPE_DISPLAY","color","FIELD_COLORS","HIGHLIGH_COLOR_3D","CHANNEL_SCALES","radius","size","colorAggr","sizeAggr","AGGREGATION_TYPES","count","average","maximum","minimum","median","stdev","sum","variance","mode","countUnique","linearFieldScaleFunctions","_linearFieldScaleFunc","linearFieldAggrScaleFunctions","_linearFieldAggrScale","_CHANNEL_SCALES$color","_CHANNEL_SCALES$sizeA","ordinalFieldScaleFunctions","_ordinalFieldScaleFun","ordinalFieldAggrScaleFunctions","_ordinalFieldAggrScal","_CHANNEL_SCALES$color2","notSupportedScaleOpts","_notSupportedScaleOpt","notSupportAggrOpts","_notSupportAggrOpts","DEFAULT_AGGREGATION","_DEFAULT_AGGREGATION","FIELD_OPTS","type","scale","_objectSpread","format","legend","d","tooltip","TOOLTIP_FORMAT_TYPES","NONE","DECIMAL","PERCENTAGE","DATE","DATE_TIME","BOOLEAN","CHANNEL_SCALE_SUPPORTED_FIELDS","Object","keys","reduce","accu","key","ft","length","DEFAULT_LAYER_COLOR","tripArc","begintrip_lat","dropoff_lat","request_lat","DEFAULT_TOOLTIP_FIELDS","NO_VALUE_COLOR","LAYER_BLENDINGS","additive","blendFunc","blendEquation","normal","subtractive","MAX_DEFAULT_TOOLTIPS","RESOLUTIONS","ONE_X","TWO_X","EXPORT_IMG_RATIOS","SCREEN","FOUR_BY_THREE","SIXTEEN_BY_NINE","CUSTOM","EXPORT_IMG_RATIO_OPTIONS","getSize","screenW","screenH","height","hidden","mapW","mapH","Math","round","EXPORT_IMG_RESOLUTION_OPTIONS","available","EXPORT_DATA_TYPE","CSV","EXPORT_DATA_TYPE_OPTIONS","toLowerCase","EXPORT_MAP_FORMATS","HTML","JSON","EXPORT_HTML_MAP_MODES","READ","EDIT","EXPORT_MAP_FORMAT_OPTIONS","entries","map","entry","EXPORT_HTML_MAP_MODE_OPTIONS","getHTMLMapModeTileUrl","DEFAULT_UUID_COUNT","DEFAULT_NOTIFICATION_MESSAGE","DEFAULT_NOTIFICATION_TYPES","info","error","warning","success","DEFAULT_NOTIFICATION_TOPICS","global","file","THROTTLE_NOTIFICATION_TIME","BASE_SPEED","FPS","ANIMATION_WINDOW","free","incremental","interval","DEFAULT_TIME_FORMAT","SPEED_CONTROL_RANGE","SPEED_CONTROL_STEP","GEOCODER_DATASET_NAME","GEOCODER_LAYER_ID","GEOCODER_GEO_OFFSET","GEOCODER_ICON_COLOR","GEOCODER_ICON_SIZE","EDITOR_MODES","READ_ONLY","EditorModes","DRAW_POLYGON","DRAW_RECTANGLE","EDIT_VERTEX","EDITOR_AVAILABLE_LAYERS","LAYER_TYPES","hexagon","arc","line","hexagonId","MAX_GPU_FILTERS","MAP_THUMBNAIL_DIMENSION","MAP_INFO_CHARACTER","title","description","LOADING_METHODS","upload","storage","DATASET_FORMATS","row","csv","keplergl","MAP_CONTROLS","visibleLayers","mapLegend","toggle3d","splitMap","mapDraw","mapLocale"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/kepler.gl/src/constants/default-settings.js"],"sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport keyMirror from 'keymirror';\nimport {EditorModes} from 'react-map-gl-draw';\n\nimport {\n  scaleLinear,\n  scaleQuantize,\n  scaleQuantile,\n  scaleOrdinal,\n  scaleSqrt,\n  scaleLog,\n  scalePoint\n} from 'd3-scale';\nimport {\n  Layers,\n  FilterFunnel,\n  Settings,\n  CursorClick,\n  Pin,\n  ArrowDown,\n  ArrowUp,\n  Clipboard,\n  Cancel\n} from 'components/common/icons';\nimport {getHTMLMapModeTileUrl} from 'utils/utils';\nimport {TOOLTIP_FORMAT_TYPES} from './tooltip';\nimport {LAYER_TYPES} from 'layers/types';\n\nexport const ACTION_PREFIX = '@@kepler.gl/';\nexport const CLOUDFRONT = 'https://d1a3f4spazzrp4.cloudfront.net/kepler.gl';\nexport const ICON_PREFIX = `${CLOUDFRONT}/geodude`;\nexport const DEFAULT_MAPBOX_API_URL = 'https://api.mapbox.com';\n\n// Modal Ids\n/**\n * Modal id: data table\n * @constant\n * @type {string}\n * @public\n */\nexport const DATA_TABLE_ID = 'dataTable';\n/**\n * Modal id: delete dataset confirm dialog\n * @constant\n * @type {string}\n * @public\n */\nexport const DELETE_DATA_ID = 'deleteData';\n/**\n * Modal id: add data modal\n * @constant\n * @type {string}\n * @public\n */\nexport const ADD_DATA_ID = 'addData';\n/**\n * Modal id: export image modal\n * @constant\n * @type {string}\n * @public\n */\nexport const EXPORT_IMAGE_ID = 'exportImage';\n/**\n * Modal id: export data modal\n * @constant\n * @type {string}\n * @public\n */\nexport const EXPORT_DATA_ID = 'exportData';\n/**\n * Modal id: add custom map style modal\n * @constant\n * @type {string}\n * @public\n */\nexport const ADD_MAP_STYLE_ID = 'addMapStyle';\n/**\n * Modal id: export map modal\n * @constant\n * @type {string}\n * @public\n */\nexport const EXPORT_MAP_ID = 'exportMap';\n/**\n * Modal id: save map modal\n * @constant\n * @type {string}\n * @public\n */\nexport const SAVE_MAP_ID = 'saveMap';\n/**\n * Modal id: confirm to overwrite saved map\n * @constant\n * @type {string}\n * @public\n */\nexport const OVERWRITE_MAP_ID = 'overwriteMap';\n/**\n * Modal id: share map url modal\n * @constant\n * @type {string}\n * @public\n */\nexport const SHARE_MAP_ID = 'shareMap';\n\nexport const KEPLER_GL_NAME = 'kepler.gl';\n\n// __PACKAGE_VERSION__ is automatically injected by Babel/Webpack during the building process\n// Since we are injecting this during the build process with babel\n// while developing VERSION is not defined, we capture the exception and return\n// an empty string which will allow us to retrieve the latest umd version\nexport const KEPLER_GL_VERSION = '__PACKAGE_VERSION__';\nexport const KEPLER_GL_WEBSITE = 'http://kepler.gl/';\n\nexport const DIMENSIONS = {\n  sidePanel: {\n    width: 300,\n    margin: {top: 20, left: 20, bottom: 30, right: 20},\n    headerHeight: 96\n  },\n  mapControl: {\n    width: 184,\n    padding: 12\n  }\n};\n\n/**\n * Theme name that can be passed to `KeplerGl` `prop.theme`.\n * Available themes are `THEME.light` and `THEME.dark`. Default theme is `THEME.dark`\n * @constant\n * @type {object}\n * @public\n * @example\n * ```js\n * const Map = () => <KeplerGl theme={THEME.light} id=\"map\"/>\n * ```\n */\nexport const THEME = keyMirror({\n  light: null,\n  dark: null,\n  base: null\n});\n\nexport const SIDEBAR_PANELS = [\n  {\n    id: 'layer',\n    label: 'sidebar.panels.layer',\n    iconComponent: Layers,\n    onClick: null\n  },\n  {\n    id: 'filter',\n    label: 'sidebar.panels.filter',\n    iconComponent: FilterFunnel,\n    onClick: null\n  },\n  {\n    id: 'interaction',\n    label: 'sidebar.panels.interaction',\n    iconComponent: CursorClick,\n    onClick: null\n  },\n  {\n    id: 'map',\n    label: 'sidebar.panels.basemap',\n    iconComponent: Settings,\n    onClick: null\n  }\n];\n\n// backward compatibility\nexport const PANELS = SIDEBAR_PANELS;\n\n// MAP STYLES\n\nexport const DEFAULT_LAYER_GROUPS = [\n  {\n    slug: 'label',\n    filter: ({id}) => id.match(/(?=(label|place-|poi-))/),\n    defaultVisibility: true\n  },\n  {\n    slug: 'road',\n    filter: ({id}) => id.match(/(?=(road|railway|tunnel|street|bridge))(?!.*label)/),\n    defaultVisibility: true\n  },\n  {\n    slug: 'border',\n    filter: ({id}) => id.match(/border|boundaries/),\n    defaultVisibility: false\n  },\n  {\n    slug: 'building',\n    filter: ({id}) => id.match(/building/),\n    defaultVisibility: true\n  },\n  {\n    slug: 'water',\n    filter: ({id}) => id.match(/(?=(water|stream|ferry))/),\n    defaultVisibility: true\n  },\n  {\n    slug: 'land',\n    filter: ({id}) => id.match(/(?=(parks|landcover|industrial|sand|hillshade))/),\n    defaultVisibility: true\n  },\n  {\n    slug: '3d building',\n    filter: () => false,\n    defaultVisibility: false\n  }\n];\n\nexport const DEFAULT_MAP_STYLES = [\n  {\n    id: 'dark',\n    label: 'Dark',\n    url: 'mapbox://styles/uberdata/cjoqbbf6l9k302sl96tyvka09',\n    icon: `${ICON_PREFIX}/UBER_DARK_V2.png`,\n    layerGroups: DEFAULT_LAYER_GROUPS\n  },\n  {\n    id: 'light',\n    label: 'Light',\n    url: 'mapbox://styles/uberdata/cjoqb9j339k1f2sl9t5ic5bn4',\n    icon: `${ICON_PREFIX}/UBER_LIGHT_V2.png`,\n    layerGroups: DEFAULT_LAYER_GROUPS\n  },\n  {\n    id: 'muted',\n    label: 'Muted Light',\n    url: 'mapbox://styles/uberdata/cjfyl03kp1tul2smf5v2tbdd4',\n    icon: `${ICON_PREFIX}/UBER_MUTED_LIGHT.png`,\n    layerGroups: DEFAULT_LAYER_GROUPS\n  },\n  {\n    id: 'muted_night',\n    label: 'Muted Night',\n    url: 'mapbox://styles/uberdata/cjfxhlikmaj1b2soyzevnywgs',\n    icon: `${ICON_PREFIX}/UBER_MUTED_NIGHT.png`,\n    layerGroups: DEFAULT_LAYER_GROUPS\n  },\n  {\n    id: 'satellite',\n    label: 'Satellite',\n    url: `mapbox://styles/mapbox/satellite-v9`,\n    icon: `${ICON_PREFIX}/UBER_SATELLITE.png`\n  }\n];\n\nexport const GEOJSON_FIELDS = {\n  geojson: ['_geojson', 'all_points', 'geojson']\n};\n\nexport const ICON_FIELDS = {\n  icon: ['icon']\n};\n\nexport const TRIP_POINT_FIELDS = [\n  ['lat', 'lng'],\n  ['lat', 'lon'],\n  ['latitude', 'longitude']\n];\n\nexport const TRIP_ARC_FIELDS = {\n  lat0: 'begintrip',\n  lng0: 'begintrip',\n  lat1: 'dropoff',\n  lng1: 'dropoff'\n};\n\nexport const FILTER_TYPES = keyMirror({\n  range: null,\n  select: null,\n  input: null,\n  timeRange: null,\n  multiSelect: null,\n  polygon: null\n});\n\nexport const SCALE_TYPES = keyMirror({\n  ordinal: null,\n  quantile: null,\n  quantize: null,\n  linear: null,\n  sqrt: null,\n  log: null,\n\n  // ordinal domain to linear range\n  point: null\n});\n\nexport const SCALE_FUNC = {\n  [SCALE_TYPES.linear]: scaleLinear,\n  [SCALE_TYPES.quantize]: scaleQuantize,\n  [SCALE_TYPES.quantile]: scaleQuantile,\n  [SCALE_TYPES.ordinal]: scaleOrdinal,\n  [SCALE_TYPES.sqrt]: scaleSqrt,\n  [SCALE_TYPES.log]: scaleLog,\n  [SCALE_TYPES.point]: scalePoint\n};\n\nexport const ALL_FIELD_TYPES = keyMirror({\n  boolean: null,\n  date: null,\n  geojson: null,\n  integer: null,\n  real: null,\n  string: null,\n  timestamp: null,\n  point: null\n});\n\n// Data Table\nexport const SORT_ORDER = keyMirror({\n  ASCENDING: null,\n  DESCENDING: null,\n  UNSORT: null\n});\n\nexport const TABLE_OPTION = keyMirror({\n  SORT_ASC: null,\n  SORT_DES: null,\n  UNSORT: null,\n  PIN: null,\n  UNPIN: null,\n  COPY: null\n});\n\nexport const TABLE_OPTION_LIST = [\n  {\n    value: TABLE_OPTION.SORT_ASC,\n    display: 'Sort Ascending',\n    icon: ArrowUp,\n    condition: props => props.sortMode !== SORT_ORDER.ASCENDING\n  },\n  {\n    value: TABLE_OPTION.SORT_DES,\n    display: 'Sort Descending',\n    icon: ArrowDown,\n    condition: props => props.sortMode !== SORT_ORDER.DESCENDING\n  },\n  {\n    value: TABLE_OPTION.UNSORT,\n    display: 'Unsort Column',\n    icon: Cancel,\n    condition: props => props.isSorted\n  },\n  {value: TABLE_OPTION.PIN, display: 'Pin Column', icon: Pin, condition: props => !props.isPinned},\n  {\n    value: TABLE_OPTION.UNPIN,\n    display: 'Unpin Column',\n    icon: Cancel,\n    condition: props => props.isPinned\n  },\n  {value: TABLE_OPTION.COPY, display: 'Copy Column', icon: Clipboard}\n];\n\nconst ORANGE = '248, 194, 28';\nconst PINK = '231, 189, 194';\nconst PURPLE = '160, 106, 206';\nconst BLUE = '140, 210, 205';\nconst BLUE2 = '106, 160, 206';\nconst BLUE3 = '0, 172, 237';\nconst GREEN = '106, 160, 56';\nconst RED = '237, 88, 106';\n\nexport const FILED_TYPE_DISPLAY = {\n  [ALL_FIELD_TYPES.boolean]: {\n    label: 'bool',\n    color: PINK\n  },\n  [ALL_FIELD_TYPES.date]: {\n    label: 'date',\n    color: PURPLE\n  },\n  [ALL_FIELD_TYPES.geojson]: {\n    label: 'geo',\n    color: BLUE2\n  },\n  [ALL_FIELD_TYPES.integer]: {\n    label: 'int',\n    color: ORANGE\n  },\n  [ALL_FIELD_TYPES.real]: {\n    label: 'float',\n    color: ORANGE\n  },\n  [ALL_FIELD_TYPES.string]: {\n    label: 'string',\n    color: BLUE\n  },\n  [ALL_FIELD_TYPES.timestamp]: {\n    label: 'time',\n    color: GREEN\n  },\n  // field pairs\n  [ALL_FIELD_TYPES.point]: {\n    label: 'point',\n    color: BLUE3\n  }\n};\n\nexport const FIELD_COLORS = {\n  default: RED\n};\nexport const HIGHLIGH_COLOR_3D = [255, 255, 255, 60];\nexport const CHANNEL_SCALES = keyMirror({\n  color: null,\n  radius: null,\n  size: null,\n  colorAggr: null,\n  sizeAggr: null\n});\n\nexport const AGGREGATION_TYPES = {\n  // default\n  count: 'count',\n  // linear\n  average: 'average',\n  maximum: 'maximum',\n  minimum: 'minimum',\n  median: 'median',\n  stdev: 'stdev',\n  sum: 'sum',\n  variance: 'variance',\n  // ordinal\n  mode: 'mode',\n  countUnique: 'count unique'\n};\n\nexport const linearFieldScaleFunctions = {\n  [CHANNEL_SCALES.color]: [SCALE_TYPES.quantize, SCALE_TYPES.quantile],\n  [CHANNEL_SCALES.radius]: [SCALE_TYPES.sqrt],\n  [CHANNEL_SCALES.size]: [SCALE_TYPES.linear, SCALE_TYPES.sqrt, SCALE_TYPES.log]\n};\n\nexport const linearFieldAggrScaleFunctions = {\n  [CHANNEL_SCALES.colorAggr]: {\n    [AGGREGATION_TYPES.average]: [SCALE_TYPES.quantize, SCALE_TYPES.quantile],\n    [AGGREGATION_TYPES.maximum]: [SCALE_TYPES.quantize, SCALE_TYPES.quantile],\n    [AGGREGATION_TYPES.minimum]: [SCALE_TYPES.quantize, SCALE_TYPES.quantile],\n    [AGGREGATION_TYPES.median]: [SCALE_TYPES.quantize, SCALE_TYPES.quantile],\n    [AGGREGATION_TYPES.stdev]: [SCALE_TYPES.quantize, SCALE_TYPES.quantile],\n    [AGGREGATION_TYPES.sum]: [SCALE_TYPES.quantize, SCALE_TYPES.quantile],\n    [AGGREGATION_TYPES.variance]: [SCALE_TYPES.quantize, SCALE_TYPES.quantile]\n  },\n\n  [CHANNEL_SCALES.sizeAggr]: {\n    [AGGREGATION_TYPES.average]: [SCALE_TYPES.linear, SCALE_TYPES.sqrt, SCALE_TYPES.log],\n    [AGGREGATION_TYPES.maximum]: [SCALE_TYPES.linear, SCALE_TYPES.sqrt, SCALE_TYPES.log],\n    [AGGREGATION_TYPES.minimum]: [SCALE_TYPES.linear, SCALE_TYPES.sqrt, SCALE_TYPES.log],\n    [AGGREGATION_TYPES.median]: [SCALE_TYPES.linear, SCALE_TYPES.sqrt, SCALE_TYPES.log],\n    [AGGREGATION_TYPES.stdev]: [SCALE_TYPES.linear, SCALE_TYPES.sqrt, SCALE_TYPES.log],\n    [AGGREGATION_TYPES.sum]: [SCALE_TYPES.linear, SCALE_TYPES.sqrt, SCALE_TYPES.log],\n    [AGGREGATION_TYPES.variance]: [SCALE_TYPES.linear, SCALE_TYPES.sqrt, SCALE_TYPES.log]\n  }\n};\n\nexport const ordinalFieldScaleFunctions = {\n  [CHANNEL_SCALES.color]: [SCALE_TYPES.ordinal],\n  [CHANNEL_SCALES.radius]: [SCALE_TYPES.point],\n  [CHANNEL_SCALES.size]: [SCALE_TYPES.point]\n};\n\nexport const ordinalFieldAggrScaleFunctions = {\n  // [CHANNEL_SCALES.colorAggr]: [SCALE_TYPES.ordinal, SCALE_TYPES.linear],\n  [CHANNEL_SCALES.colorAggr]: {\n    [AGGREGATION_TYPES.mode]: [SCALE_TYPES.ordinal],\n    [AGGREGATION_TYPES.countUnique]: [SCALE_TYPES.quantize, SCALE_TYPES.quantile]\n  },\n\n  // Currently doesn't support yet\n  [CHANNEL_SCALES.sizeAggr]: {}\n};\n\nexport const notSupportedScaleOpts = {\n  [CHANNEL_SCALES.color]: [],\n  [CHANNEL_SCALES.radius]: [],\n  [CHANNEL_SCALES.size]: []\n};\n\nexport const notSupportAggrOpts = {\n  [CHANNEL_SCALES.colorAggr]: {},\n  [CHANNEL_SCALES.sizeAggr]: {}\n};\n\n/**\n * Default aggregation are based on ocunt\n */\nexport const DEFAULT_AGGREGATION = {\n  [CHANNEL_SCALES.colorAggr]: {\n    [AGGREGATION_TYPES.count]: [SCALE_TYPES.quantize, SCALE_TYPES.quantile]\n  },\n  [CHANNEL_SCALES.sizeAggr]: {\n    [AGGREGATION_TYPES.count]: [SCALE_TYPES.linear, SCALE_TYPES.sqrt, SCALE_TYPES.log]\n  }\n};\n\n/**\n * Define what type of scale operation is allowed on each type of fields\n */\nexport const FIELD_OPTS = {\n  string: {\n    type: 'categorical',\n    scale: {\n      ...ordinalFieldScaleFunctions,\n      ...ordinalFieldAggrScaleFunctions\n    },\n    format: {\n      legend: d => d,\n      tooltip: []\n    }\n  },\n  real: {\n    type: 'numerical',\n    scale: {\n      ...linearFieldScaleFunctions,\n      ...linearFieldAggrScaleFunctions\n    },\n    format: {\n      legend: d => d,\n      tooltip: [\n        TOOLTIP_FORMAT_TYPES.NONE,\n        TOOLTIP_FORMAT_TYPES.DECIMAL,\n        TOOLTIP_FORMAT_TYPES.PERCENTAGE\n      ]\n    }\n  },\n  timestamp: {\n    type: 'time',\n    scale: {\n      ...linearFieldScaleFunctions,\n      ...notSupportAggrOpts\n    },\n    format: {\n      legend: d => d,\n      tooltip: [\n        TOOLTIP_FORMAT_TYPES.NONE,\n        TOOLTIP_FORMAT_TYPES.DATE,\n        TOOLTIP_FORMAT_TYPES.DATE_TIME\n      ]\n    }\n  },\n  integer: {\n    type: 'numerical',\n    scale: {\n      ...linearFieldScaleFunctions,\n      ...linearFieldAggrScaleFunctions\n    },\n    format: {\n      legend: d => d,\n      tooltip: [\n        TOOLTIP_FORMAT_TYPES.NONE,\n        TOOLTIP_FORMAT_TYPES.DECIMAL,\n        TOOLTIP_FORMAT_TYPES.PERCENTAGE\n      ]\n    }\n  },\n  boolean: {\n    type: 'boolean',\n    scale: {\n      ...ordinalFieldScaleFunctions,\n      ...ordinalFieldAggrScaleFunctions\n    },\n    format: {\n      legend: d => d,\n      tooltip: [TOOLTIP_FORMAT_TYPES.NONE, TOOLTIP_FORMAT_TYPES.BOOLEAN]\n    }\n  },\n  date: {\n    scale: {\n      ...ordinalFieldScaleFunctions,\n      ...ordinalFieldAggrScaleFunctions\n    },\n    format: {\n      legend: d => d,\n      tooltip: [TOOLTIP_FORMAT_TYPES.NONE, TOOLTIP_FORMAT_TYPES.DATE]\n    }\n  },\n  geojson: {\n    type: 'geometry',\n    scale: {\n      ...notSupportedScaleOpts,\n      ...notSupportAggrOpts\n    },\n    format: {\n      legend: d => '...',\n      tooltip: []\n    }\n  }\n};\n\nexport const CHANNEL_SCALE_SUPPORTED_FIELDS = Object.keys(CHANNEL_SCALES).reduce(\n  (accu, key) => ({\n    ...accu,\n    [key]: Object.keys(FIELD_OPTS).filter(ft => Object.keys(FIELD_OPTS[ft].scale[key]).length)\n  }),\n  {}\n);\n\nexport const DEFAULT_LAYER_COLOR = {\n  tripArc: '#9226C6',\n  begintrip_lat: '#1E96BE',\n  dropoff_lat: '#FF991F',\n  request_lat: '#52A353'\n};\n\n// let user pass in default tooltip fields\nexport const DEFAULT_TOOLTIP_FIELDS = [];\n\nexport const NO_VALUE_COLOR = [0, 0, 0, 0];\n\nexport const LAYER_BLENDINGS = {\n  additive: {\n    label: 'layerBlending.additive',\n    blendFunc: ['SRC_ALPHA', 'DST_ALPHA'],\n    blendEquation: 'FUNC_ADD'\n  },\n  normal: {\n    // reference to\n    // https://limnu.com/webgl-blending-youre-probably-wrong/\n    label: 'layerBlending.normal',\n    blendFunc: ['SRC_ALPHA', 'ONE_MINUS_SRC_ALPHA', 'ONE', 'ONE_MINUS_SRC_ALPHA'],\n    blendEquation: ['FUNC_ADD', 'FUNC_ADD']\n  },\n  subtractive: {\n    label: 'layerBlending.subtractive',\n    blendFunc: ['ONE', 'ONE_MINUS_DST_COLOR', 'SRC_ALPHA', 'DST_ALPHA'],\n    blendEquation: ['FUNC_SUBTRACT', 'FUNC_ADD']\n  }\n};\n\nexport const MAX_DEFAULT_TOOLTIPS = 5;\n\nexport const RESOLUTIONS = keyMirror({\n  ONE_X: null,\n  TWO_X: null\n});\n\nexport const EXPORT_IMG_RATIOS = keyMirror({\n  SCREEN: null,\n  FOUR_BY_THREE: null,\n  SIXTEEN_BY_NINE: null,\n  CUSTOM: null\n});\n\nexport const EXPORT_IMG_RATIO_OPTIONS = [\n  {\n    id: EXPORT_IMG_RATIOS.SCREEN,\n    label: 'modal.exportImage.ratioOriginalScreen',\n    getSize: (screenW, screenH) => ({width: screenW, height: screenH})\n  },\n  {\n    id: EXPORT_IMG_RATIOS.CUSTOM,\n    hidden: true,\n    label: 'modal.exportImage.ratioCustom',\n    getSize: (mapW, mapH) => ({width: mapW, height: mapH})\n  },\n  {\n    id: EXPORT_IMG_RATIOS.FOUR_BY_THREE,\n    label: 'modal.exportImage.ratio4_3',\n    getSize: (screenW, screenH) => ({\n      width: screenW,\n      height: Math.round(screenW * 0.75)\n    })\n  },\n  {\n    id: EXPORT_IMG_RATIOS.SIXTEEN_BY_NINE,\n    label: 'modal.exportImage.ratio16_9',\n    getSize: (screenW, screenH) => ({\n      width: screenW,\n      height: Math.round(screenW * 0.5625)\n    })\n  }\n];\n\nexport const EXPORT_IMG_RESOLUTION_OPTIONS = [\n  {\n    id: RESOLUTIONS.ONE_X,\n    label: '1x',\n    available: true,\n    scale: 1,\n    getSize: (screenW, screenH) => ({\n      width: screenW,\n      height: screenH\n    })\n  },\n  {\n    id: RESOLUTIONS.TWO_X,\n    label: '2x',\n    available: true,\n    scale: 2,\n    getSize: (screenW, screenH) => ({\n      width: screenW * 2,\n      height: screenH * 2\n    })\n  }\n];\n\nexport const EXPORT_DATA_TYPE = keyMirror({\n  CSV: null\n  // SHAPEFILE: null,\n  // JSON: null,\n  // GEOJSON: null,\n  // TOPOJSON: null\n});\n\nexport const EXPORT_DATA_TYPE_OPTIONS = [\n  {\n    id: EXPORT_DATA_TYPE.CSV,\n    label: EXPORT_DATA_TYPE.CSV.toLowerCase(),\n    available: true\n  }\n  // {\n  //   id: EXPORT_DATA_TYPE.SHAPEFILE,\n  //   label: 'shapefile',\n  //   available: false\n  // },\n  // {\n  //   id: EXPORT_DATA_TYPE.JSON,\n  //   label: 'json',\n  //   available: false\n  // },\n  // {\n  //   id: EXPORT_DATA_TYPE.GEOJSON,\n  //   label: 'geojson',\n  //   available: false\n  // },\n  // {\n  //   id: EXPORT_DATA_TYPE.TOPOJSON,\n  //   label: 'topojson',\n  //   available: false\n  // }\n];\n\n// Export map types\nexport const EXPORT_MAP_FORMATS = keyMirror({\n  HTML: null,\n  JSON: null\n});\n\nexport const EXPORT_HTML_MAP_MODES = keyMirror({\n  READ: null,\n  EDIT: null\n});\n\n// Export map options\nexport const EXPORT_MAP_FORMAT_OPTIONS = Object.entries(EXPORT_MAP_FORMATS).map(entry => ({\n  id: entry[0],\n  label: entry[1].toLowerCase(),\n  available: true\n}));\n\nexport const EXPORT_HTML_MAP_MODE_OPTIONS = Object.entries(EXPORT_HTML_MAP_MODES).map(entry => ({\n  id: entry[0],\n  label: `modal.exportMap.html.${entry[1].toLowerCase()}`,\n  available: true,\n  url: getHTMLMapModeTileUrl(entry[1])\n}));\n\nexport const DEFAULT_UUID_COUNT = 6;\n\nexport const DEFAULT_NOTIFICATION_MESSAGE = 'MESSAGE_NOT_PROVIDED';\n\nexport const DEFAULT_NOTIFICATION_TYPES = keyMirror({\n  info: null,\n  error: null,\n  warning: null,\n  success: null\n});\n\nexport const DEFAULT_NOTIFICATION_TOPICS = keyMirror({\n  global: null,\n  file: null\n});\n\n// Minimum time between identical notifications about deck.gl errors\nexport const THROTTLE_NOTIFICATION_TIME = 2500;\n\n// Animation\nexport const BASE_SPEED = 600;\nexport const FPS = 60;\n\n/**\n * 4 Animation Window Types\n * 1. free\n *  |->  |->\n * Current time is a fixed range, animation controller calls next animation frames continuously to animation a moving window\n * The increment id based on domain / BASE_SPEED * SPEED\n *\n * 2. incremental\n * |    |->\n * Same as free, current time is a growing range, only the max value of range increment during animation.\n * The increment is also based on domain / BASE_SPEED * SPEED\n *\n * 3. point\n * o -> o\n * Current time is a point, animation controller calls next animation frame continuously to animation a moving point\n * The increment is based on domain / BASE_SPEED * SPEED\n *\n * 4. interval\n * o ~> o\n * Current time is a point. An array of sorted time steps need to be provided.\n * animation controller calls next animation at a interval when the point jumps to the next step\n */\nexport const ANIMATION_WINDOW = keyMirror({\n  free: null,\n  incremental: null,\n  point: null,\n  interval: null\n});\nexport const DEFAULT_TIME_FORMAT = 'MM/DD/YY HH:mm:ssa';\nexport const SPEED_CONTROL_RANGE = [0, 10];\nexport const SPEED_CONTROL_STEP = 0.001;\n\n// Geocoder\nexport const GEOCODER_DATASET_NAME = 'geocoder_dataset';\nexport const GEOCODER_LAYER_ID = 'geocoder_layer';\nexport const GEOCODER_GEO_OFFSET = 0.05;\nexport const GEOCODER_ICON_COLOR = [255, 0, 0];\nexport const GEOCODER_ICON_SIZE = 80;\n\n// We could use directly react-map-gl-draw EditorMode but this would\n// create a direct dependency with react-map-gl-draw\n// Created this map to be independent from react-map-gl-draw\nexport const EDITOR_MODES = {\n  READ_ONLY: EditorModes.READ_ONLY,\n  DRAW_POLYGON: EditorModes.DRAW_POLYGON,\n  DRAW_RECTANGLE: EditorModes.DRAW_RECTANGLE,\n  EDIT: EditorModes.EDIT_VERTEX\n};\n\nexport const EDITOR_AVAILABLE_LAYERS = [\n  LAYER_TYPES.point,\n  LAYER_TYPES.hexagon,\n  LAYER_TYPES.arc,\n  LAYER_TYPES.line,\n  LAYER_TYPES.hexagonId\n];\n// GPU Filtering\n/**\n * Max number of filter value buffers that deck.gl provides\n */\nexport const MAX_GPU_FILTERS = 4;\nexport const MAP_THUMBNAIL_DIMENSION = {\n  width: 300,\n  height: 200\n};\n\nexport const MAP_INFO_CHARACTER = {\n  title: 100,\n  description: 100\n};\n\n// Load data\nexport const LOADING_METHODS = keyMirror({\n  upload: null,\n  storage: null\n});\n\nexport const DATASET_FORMATS = keyMirror({\n  row: null,\n  geojson: null,\n  csv: null,\n  keplergl: null\n});\n\nexport const MAP_CONTROLS = keyMirror({\n  visibleLayers: null,\n  mapLegend: null,\n  toggle3d: null,\n  splitMap: null,\n  mapDraw: null,\n  mapLocale: null\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}