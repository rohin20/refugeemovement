{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setLayerBlending = setLayerBlending;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _core = require(\"@luma.gl/core\");\nvar _constants = require(\"@kepler.gl/constants\");\nvar _constants2 = _interopRequireDefault(require(\"@luma.gl/constants\"));\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nvar getGlConst = function getGlConst(d) {\n  return _constants2[\"default\"][d];\n};\nfunction setLayerBlending(gl, layerBlending) {\n  var blending = _constants.LAYER_BLENDINGS[layerBlending];\n  var blendFunc = blending.blendFunc,\n    blendEquation = blending.blendEquation;\n  (0, _core.setParameters)(gl, _objectSpread((0, _defineProperty2[\"default\"])({}, _constants2[\"default\"].BLEND, true), blendFunc ? {\n    blendFunc: blendFunc.map(getGlConst),\n    blendEquation: Array.isArray(blendEquation) ? blendEquation.map(getGlConst) : getGlConst(blendEquation)\n  } : {}));\n}","map":{"version":3,"names":["_interopRequireDefault","require","value","exports","setLayerBlending","_defineProperty2","_core","_constants"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/utils/src/gl-utils.ts"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {setParameters} from '@luma.gl/core';\nimport {LAYER_BLENDINGS} from '@kepler.gl/constants';\nimport GL from '@luma.gl/constants';\n\nconst getGlConst = d => GL[d];\n\nexport function setLayerBlending(gl, layerBlending) {\n  const blending = LAYER_BLENDINGS[layerBlending];\n  const {blendFunc, blendEquation} = blending;\n\n  setParameters(gl, {\n    [GL.BLEND]: true,\n    ...(blendFunc\n      ? {\n          blendFunc: blendFunc.map(getGlConst),\n          blendEquation: Array.isArray(blendEquation)\n            ? blendEquation.map(getGlConst)\n            : getGlConst(blendEquation)\n        }\n      : {})\n  });\n}\n"],"mappings":";;;;;;;;;;;AAoBA;;AACA;;AACA;;;;;;;AAEoB,IAAAA,sBAAI,GAAAC,OAAJ;;EAEbC,KAAA,EAAS;AACd;AADkDC,OAE3C,CAAAC,gBAA4B,GAA5BA,gBAF2C;AAIlD,IAAAC,gBAAA,GAAAL,sBAAA,CAAAC,OAAA,wCACG;AAIK,IAAAK,KAAA,GAAAL,OAAe,gBAAc;AAMtC,IAAAM,UAAA,GAAAN,OAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}