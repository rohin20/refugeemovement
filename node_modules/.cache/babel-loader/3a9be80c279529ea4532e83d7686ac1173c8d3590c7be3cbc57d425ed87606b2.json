{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nimport { getTransferList } from '../worker-utils/get-transfer-list';\nimport { validateLoaderVersion } from './validate-loader-version';\nexport default function createWorker(loader) {\n  if (typeof self === 'undefined') {\n    return;\n  }\n  var requestId = 0;\n  var parse = function parse(arraybuffer) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var url = arguments.length > 2 ? arguments[2] : undefined;\n    return new Promise(function (resolve, reject) {\n      var id = requestId++;\n      var onMessage = function onMessage(_ref) {\n        var data = _ref.data;\n        if (!data || data.id !== id) {\n          return;\n        }\n        switch (data.type) {\n          case 'parse-done':\n            self.removeEventListener('message', onMessage);\n            resolve(data.result);\n            break;\n          case 'parse-error':\n            self.removeEventListener('message', onMessage);\n            reject(data.message);\n            break;\n          default:\n        }\n      };\n      self.addEventListener('message', onMessage);\n      self.postMessage({\n        type: 'parse',\n        id: id,\n        arraybuffer: arraybuffer,\n        options: options,\n        url: url\n      }, [arraybuffer]);\n    });\n  };\n  self.onmessage = function () {\n    var _ref2 = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(evt) {\n      var data, arraybuffer, _data$byteOffset, byteOffset, _data$byteLength, byteLength, _data$options, options, result, transferList;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              data = evt.data;\n              _context.prev = 1;\n              if (isKnownMessage(data, loader.name)) {\n                _context.next = 4;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 4:\n              validateLoaderVersion(loader, data.source.split('@')[1]);\n              arraybuffer = data.arraybuffer, _data$byteOffset = data.byteOffset, byteOffset = _data$byteOffset === void 0 ? 0 : _data$byteOffset, _data$byteLength = data.byteLength, byteLength = _data$byteLength === void 0 ? 0 : _data$byteLength, _data$options = data.options, options = _data$options === void 0 ? {} : _data$options;\n              _context.next = 8;\n              return parseData({\n                loader: loader,\n                arraybuffer: arraybuffer,\n                byteOffset: byteOffset,\n                byteLength: byteLength,\n                options: options,\n                context: {\n                  parse: parse\n                }\n              });\n            case 8:\n              result = _context.sent;\n              transferList = getTransferList(result);\n              self.postMessage({\n                type: 'done',\n                result: result\n              }, transferList);\n              _context.next = 16;\n              break;\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](1);\n              self.postMessage({\n                type: 'error',\n                message: _context.t0.message\n              });\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 13]]);\n    }));\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}\nfunction parseData(_x2) {\n  return _parseData.apply(this, arguments);\n}\nfunction _parseData() {\n  _parseData = _asyncToGenerator(_regeneratorRuntime.mark(function _callee2(_ref3) {\n    var loader, arraybuffer, byteOffset, byteLength, options, context, data, parser, textDecoder;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            loader = _ref3.loader, arraybuffer = _ref3.arraybuffer, byteOffset = _ref3.byteOffset, byteLength = _ref3.byteLength, options = _ref3.options, context = _ref3.context;\n            if (!(loader.parseSync || loader.parse)) {\n              _context2.next = 6;\n              break;\n            }\n            data = arraybuffer;\n            parser = loader.parseSync || loader.parse;\n            _context2.next = 13;\n            break;\n          case 6:\n            if (!loader.parseTextSync) {\n              _context2.next = 12;\n              break;\n            }\n            textDecoder = new TextDecoder();\n            data = textDecoder.decode(arraybuffer);\n            parser = loader.parseTextSync;\n            _context2.next = 13;\n            break;\n          case 12:\n            throw new Error(\"Could not load data with \".concat(loader.name, \" loader\"));\n          case 13:\n            options = _objectSpread(_objectSpread({}, options), {}, {\n              modules: loader && loader.options && loader.options.modules || {},\n              worker: false\n            });\n            _context2.next = 16;\n            return parser(data, _objectSpread({}, options), context, loader);\n          case 16:\n            return _context2.abrupt(\"return\", _context2.sent);\n          case 17:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _parseData.apply(this, arguments);\n}\nfunction isKnownMessage(data, name) {\n  return data && data.type === 'parse' && data.source && data.source.startsWith('loaders.gl');\n}","map":{"version":3,"names":["getTransferList","validateLoaderVersion","createWorker","loader","self","requestId","parse","arraybuffer","options","arguments","length","undefined","url","Promise","resolve","reject","id","onMessage","_ref","data","type","removeEventListener","result","message","addEventListener","postMessage","onmessage","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","evt","_data$byteOffset","byteOffset","_data$byteLength","byteLength","_data$options","transferList","wrap","_callee$","_context","prev","next","isKnownMessage","name","abrupt","source","split","parseData","context","sent","t0","stop","_x","apply","_callee2","_ref3","parser","textDecoder","_callee2$","_context2","parseSync","parseTextSync","TextDecoder","decode","Error","concat","_objectSpread","modules","worker","startsWith"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/kepler.gl/node_modules/@loaders.gl/loader-utils/src/lib/worker-loader-utils/create-worker.js"],"sourcesContent":["/* eslint-disable no-restricted-globals */\n/* global TextDecoder, self */\n\nimport {getTransferList} from '../worker-utils/get-transfer-list';\nimport {validateLoaderVersion} from './validate-loader-version';\n\nexport default function createWorker(loader) {\n  // TODO - explain when this happens? Just a sanity check? Throw an error or log a warning?\n  if (typeof self === 'undefined') {\n    return;\n  }\n\n  let requestId = 0;\n  const parse = (arraybuffer, options = {}, url) =>\n    new Promise((resolve, reject) => {\n      const id = requestId++;\n\n      const onMessage = ({data}) => {\n        if (!data || data.id !== id) {\n          // not ours\n          return;\n        }\n        switch (data.type) {\n          case 'parse-done':\n            self.removeEventListener('message', onMessage);\n            resolve(data.result);\n            break;\n\n          case 'parse-error':\n            self.removeEventListener('message', onMessage);\n            reject(data.message);\n            break;\n\n          default:\n          // ignore\n        }\n      };\n      self.addEventListener('message', onMessage);\n      // Ask the main thread to decode data\n      // @ts-ignore self is WorkerGlobalScope\n      self.postMessage({type: 'parse', id, arraybuffer, options, url}, [arraybuffer]);\n    });\n\n  self.onmessage = async evt => {\n    const {data} = evt;\n\n    try {\n      if (!isKnownMessage(data, loader.name)) {\n        return;\n      }\n\n      validateLoaderVersion(loader, data.source.split('@')[1]);\n\n      const {arraybuffer, byteOffset = 0, byteLength = 0, options = {}} = data;\n\n      const result = await parseData({\n        loader,\n        arraybuffer,\n        byteOffset,\n        byteLength,\n        options,\n        context: {parse}\n      });\n      const transferList = getTransferList(result);\n      // @ts-ignore self is WorkerGlobalScope\n      self.postMessage({type: 'done', result}, transferList);\n    } catch (error) {\n      // @ts-ignore self is WorkerGlobalScope\n      self.postMessage({type: 'error', message: error.message});\n    }\n  };\n}\n\n// TODO - Support byteOffset and byteLength (enabling parsing of embedded binaries without copies)\n// TODO - Why not support async loader.parse* funcs here?\n// TODO - Why not reuse a common function instead of reimplementing loader.parse* selection logic? Keeping loader small?\n// TODO - Lack of appropriate parser functions can be detected when we create worker, no need to wait until parse\nasync function parseData({loader, arraybuffer, byteOffset, byteLength, options, context}) {\n  let data;\n  let parser;\n  if (loader.parseSync || loader.parse) {\n    data = arraybuffer;\n    parser = loader.parseSync || loader.parse;\n  } else if (loader.parseTextSync) {\n    const textDecoder = new TextDecoder();\n    data = textDecoder.decode(arraybuffer);\n    parser = loader.parseTextSync;\n  } else {\n    throw new Error(`Could not load data with ${loader.name} loader`);\n  }\n\n  // TODO - proper merge in of loader options...\n  options = {\n    ...options,\n    modules: (loader && loader.options && loader.options.modules) || {},\n    worker: false\n  };\n\n  return await parser(data, {...options}, context, loader);\n}\n\n// Filter out noise messages sent to workers\nfunction isKnownMessage(data, name) {\n  return data && data.type === 'parse' && data.source && data.source.startsWith('loaders.gl');\n}\n\n/*\nfunction checkMessage(evt, name) {\n  switch (evt.data && evt.data.source) {\n    // Ignore known noise event from react-dev-tools bridge, webpack build progress etc...\n    case 'react-devtools-bridge':\n    case 'react-devtools-content-script':\n    case 'react-devtools-detector':\n      return false;\n    default:\n      // fall through\n  }\n\n  switch (evt.data && evt.data.type) {\n    case 'webpackProgress':\n    case 'webpackOk':\n      return false;\n    default:\n      // Enable to debug messages\n      // const message = `${name.toLowerCase()}-worker: ignoring unknown message`;\n      // console.log(message, evt.data, evt); // eslint-disable-line\n      return false;\n  }\n}\n*/\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}