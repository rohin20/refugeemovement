{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { WorkerBody } from '@loaders.gl/worker-utils';\nvar requestId = 0;\nexport function createLoaderWorker(loader) {\n  if (!WorkerBody.inWorkerThread()) {\n    return;\n  }\n  WorkerBody.onmessage = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(type, payload) {\n      var input, _payload$options, options, _payload$context, context, result, message;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.t0 = type;\n            _context.next = _context.t0 === 'process' ? 3 : 16;\n            break;\n          case 3:\n            _context.prev = 3;\n            input = payload.input, _payload$options = payload.options, options = _payload$options === void 0 ? {} : _payload$options, _payload$context = payload.context, context = _payload$context === void 0 ? {} : _payload$context;\n            _context.next = 7;\n            return parseData({\n              loader: loader,\n              arrayBuffer: input,\n              options: options,\n              context: _objectSpread(_objectSpread({}, context), {}, {\n                parse: parseOnMainThread\n              })\n            });\n          case 7:\n            result = _context.sent;\n            WorkerBody.postMessage('done', {\n              result: result\n            });\n            _context.next = 15;\n            break;\n          case 11:\n            _context.prev = 11;\n            _context.t1 = _context[\"catch\"](3);\n            message = _context.t1 instanceof Error ? _context.t1.message : '';\n            WorkerBody.postMessage('error', {\n              error: message\n            });\n          case 15:\n            return _context.abrupt(\"break\", 16);\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[3, 11]]);\n    }));\n    return function (_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}\nfunction parseOnMainThread(arrayBuffer, options) {\n  return new Promise(function (resolve, reject) {\n    var id = requestId++;\n    var onMessage = function onMessage(type, payload) {\n      if (payload.id !== id) {\n        return;\n      }\n      switch (type) {\n        case 'done':\n          WorkerBody.removeEventListener(onMessage);\n          resolve(payload.result);\n          break;\n        case 'error':\n          WorkerBody.removeEventListener(onMessage);\n          reject(payload.error);\n          break;\n        default:\n      }\n    };\n    WorkerBody.addEventListener(onMessage);\n    var payload = {\n      id: id,\n      input: arrayBuffer,\n      options: options\n    };\n    WorkerBody.postMessage('process', payload);\n  });\n}\nfunction parseData(_x3) {\n  return _parseData.apply(this, arguments);\n}\nfunction _parseData() {\n  _parseData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(_ref) {\n    var loader, arrayBuffer, options, context, data, parser, textDecoder;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          loader = _ref.loader, arrayBuffer = _ref.arrayBuffer, options = _ref.options, context = _ref.context;\n          if (!(loader.parseSync || loader.parse)) {\n            _context2.next = 6;\n            break;\n          }\n          data = arrayBuffer;\n          parser = loader.parseSync || loader.parse;\n          _context2.next = 13;\n          break;\n        case 6:\n          if (!loader.parseTextSync) {\n            _context2.next = 12;\n            break;\n          }\n          textDecoder = new TextDecoder();\n          data = textDecoder.decode(arrayBuffer);\n          parser = loader.parseTextSync;\n          _context2.next = 13;\n          break;\n        case 12:\n          throw new Error(\"Could not load data with \".concat(loader.name, \" loader\"));\n        case 13:\n          options = _objectSpread(_objectSpread({}, options), {}, {\n            modules: loader && loader.options && loader.options.modules || {},\n            worker: false\n          });\n          _context2.next = 16;\n          return parser(data, _objectSpread({}, options), context, loader);\n        case 16:\n          return _context2.abrupt(\"return\", _context2.sent);\n        case 17:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _parseData.apply(this, arguments);\n}","map":{"version":3,"names":["WorkerBody","requestId","createLoaderWorker","loader","inWorkerThread","onmessage","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","type","payload","input","_payload$options","options","_payload$context","context","result","message","wrap","_callee$","_context","prev","next","t0","parseData","arrayBuffer","_objectSpread","parse","parseOnMainThread","sent","postMessage","t1","Error","error","abrupt","stop","_x","_x2","apply","arguments","Promise","resolve","reject","id","onMessage","removeEventListener","addEventListener","_x3","_parseData","_callee2","_ref","data","parser","textDecoder","_callee2$","_context2","parseSync","parseTextSync","TextDecoder","decode","concat","name","modules","worker"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@loaders.gl/loader-utils/src/lib/worker-loader-utils/create-loader-worker.ts"],"sourcesContent":["/* eslint-disable no-restricted-globals */\nimport type {LoaderWithParser} from '../../types';\nimport {WorkerBody} from '@loaders.gl/worker-utils';\n// import {validateLoaderVersion} from './validate-loader-version';\n\nlet requestId = 0;\n\n/**\n * Set up a WebWorkerGlobalScope to talk with the main thread\n * @param loader\n */\nexport function createLoaderWorker(loader: LoaderWithParser) {\n  // Check that we are actually in a worker thread\n  if (!WorkerBody.inWorkerThread()) {\n    return;\n  }\n\n  WorkerBody.onmessage = async (type, payload) => {\n    switch (type) {\n      case 'process':\n        try {\n          // validateLoaderVersion(loader, data.source.split('@')[1]);\n\n          const {input, options = {}, context = {}} = payload;\n\n          const result = await parseData({\n            loader,\n            arrayBuffer: input,\n            options,\n            context: {\n              ...context,\n              parse: parseOnMainThread\n            }\n          });\n          WorkerBody.postMessage('done', {result});\n        } catch (error) {\n          const message = error instanceof Error ? error.message : '';\n          WorkerBody.postMessage('error', {error: message});\n        }\n        break;\n      default:\n    }\n  };\n}\n\nfunction parseOnMainThread(arrayBuffer: ArrayBuffer, options: {[key: string]: any}): Promise<void> {\n  return new Promise((resolve, reject) => {\n    const id = requestId++;\n\n    /**\n     */\n    const onMessage = (type, payload) => {\n      if (payload.id !== id) {\n        // not ours\n        return;\n      }\n\n      switch (type) {\n        case 'done':\n          WorkerBody.removeEventListener(onMessage);\n          resolve(payload.result);\n          break;\n\n        case 'error':\n          WorkerBody.removeEventListener(onMessage);\n          reject(payload.error);\n          break;\n\n        default:\n        // ignore\n      }\n    };\n\n    WorkerBody.addEventListener(onMessage);\n\n    // Ask the main thread to decode data\n    const payload = {id, input: arrayBuffer, options};\n    WorkerBody.postMessage('process', payload);\n  });\n}\n\n// TODO - Support byteOffset and byteLength (enabling parsing of embedded binaries without copies)\n// TODO - Why not support async loader.parse* funcs here?\n// TODO - Why not reuse a common function instead of reimplementing loader.parse* selection logic? Keeping loader small?\n// TODO - Lack of appropriate parser functions can be detected when we create worker, no need to wait until parse\nasync function parseData({loader, arrayBuffer, options, context}) {\n  let data;\n  let parser;\n  if (loader.parseSync || loader.parse) {\n    data = arrayBuffer;\n    parser = loader.parseSync || loader.parse;\n  } else if (loader.parseTextSync) {\n    const textDecoder = new TextDecoder();\n    data = textDecoder.decode(arrayBuffer);\n    parser = loader.parseTextSync;\n  } else {\n    throw new Error(`Could not load data with ${loader.name} loader`);\n  }\n\n  // TODO - proper merge in of loader options...\n  options = {\n    ...options,\n    modules: (loader && loader.options && loader.options.modules) || {},\n    worker: false\n  };\n\n  return await parser(data, {...options}, context, loader);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}