{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { equals } from '@math.gl/core';\nimport assert from '../utils/assert';\nvar TransitionInterpolator = /*#__PURE__*/function () {\n  function TransitionInterpolator(opts) {\n    _classCallCheck(this, TransitionInterpolator);\n    _defineProperty(this, \"_propsToCompare\", void 0);\n    _defineProperty(this, \"_propsToExtract\", void 0);\n    _defineProperty(this, \"_requiredProps\", void 0);\n    var compare = opts.compare,\n      extract = opts.extract,\n      required = opts.required;\n    this._propsToCompare = compare;\n    this._propsToExtract = extract || compare;\n    this._requiredProps = required;\n  }\n  _createClass(TransitionInterpolator, [{\n    key: \"arePropsEqual\",\n    value: function arePropsEqual(currentProps, nextProps) {\n      var _iterator = _createForOfIteratorHelper(this._propsToCompare),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var key = _step.value;\n          if (!(key in currentProps) || !(key in nextProps) || !equals(currentProps[key], nextProps[key])) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return true;\n    }\n  }, {\n    key: \"initializeProps\",\n    value: function initializeProps(startProps, endProps) {\n      var startViewStateProps = {};\n      var endViewStateProps = {};\n      var _iterator2 = _createForOfIteratorHelper(this._propsToExtract),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var key = _step2.value;\n          if (key in startProps || key in endProps) {\n            startViewStateProps[key] = startProps[key];\n            endViewStateProps[key] = endProps[key];\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      this._checkRequiredProps(startViewStateProps);\n      this._checkRequiredProps(endViewStateProps);\n      return {\n        start: startViewStateProps,\n        end: endViewStateProps\n      };\n    }\n  }, {\n    key: \"getDuration\",\n    value: function getDuration(startProps, endProps) {\n      return endProps.transitionDuration;\n    }\n  }, {\n    key: \"_checkRequiredProps\",\n    value: function _checkRequiredProps(props) {\n      if (!this._requiredProps) {\n        return;\n      }\n      this._requiredProps.forEach(function (propName) {\n        var value = props[propName];\n        assert(Number.isFinite(value) || Array.isArray(value), \"\".concat(propName, \" is required for transition\"));\n      });\n    }\n  }]);\n  return TransitionInterpolator;\n}();\nexport { TransitionInterpolator as default };","map":{"version":3,"names":["equals","assert","TransitionInterpolator","opts","_classCallCheck","_defineProperty","compare","extract","required","_propsToCompare","_propsToExtract","_requiredProps","_createClass","key","value","arePropsEqual","currentProps","nextProps","_iterator","_createForOfIteratorHelper","_step","s","n","done","err","e","f","initializeProps","startProps","endProps","startViewStateProps","endViewStateProps","_iterator2","_step2","_checkRequiredProps","start","end","getDuration","transitionDuration","props","forEach","propName","Number","isFinite","Array","isArray","concat","default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/core/src/transitions/transition-interpolator.ts"],"sourcesContent":["import {equals} from '@math.gl/core';\nimport assert from '../utils/assert';\n\nexport default abstract class TransitionInterpolator {\n  protected _propsToCompare: string[];\n  protected _propsToExtract: string[];\n  protected _requiredProps?: string[];\n\n  /**\n   * @param opts {array|object}\n   * @param opts.compare {array} - prop names used in equality check\n   * @param opts.extract {array} - prop names needed for interpolation\n   * @param opts.required {array} - prop names that must be supplied\n   * alternatively, supply one list of prop names as `opts` if all of the above are the same.\n   */\n  constructor(opts: {compare: string[]; extract?: string[]; required?: string[]}) {\n    const {compare, extract, required} = opts;\n\n    this._propsToCompare = compare;\n    this._propsToExtract = extract || compare;\n    this._requiredProps = required;\n  }\n\n  /**\n   * Checks if two sets of props need transition in between\n   * @param currentProps {object} - a list of viewport props\n   * @param nextProps {object} - a list of viewport props\n   * @returns {bool} - true if two props are equivalent\n   */\n  arePropsEqual(currentProps: Record<string, any>, nextProps: Record<string, any>): boolean {\n    for (const key of this._propsToCompare) {\n      if (\n        !(key in currentProps) ||\n        !(key in nextProps) ||\n        !equals(currentProps[key], nextProps[key])\n      ) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Called before transition starts to validate/pre-process start and end props\n   * @param startProps {object} - a list of starting viewport props\n   * @param endProps {object} - a list of target viewport props\n   * @returns {Object} {start, end} - start and end props to be passed\n   *   to `interpolateProps`\n   */\n  initializeProps(\n    startProps: Record<string, any>,\n    endProps: Record<string, any>\n  ): {\n    start: Record<string, any>;\n    end: Record<string, any>;\n  } {\n    const startViewStateProps = {};\n    const endViewStateProps = {};\n\n    for (const key of this._propsToExtract) {\n      if (key in startProps || key in endProps) {\n        startViewStateProps[key] = startProps[key];\n        endViewStateProps[key] = endProps[key];\n      }\n    }\n\n    this._checkRequiredProps(startViewStateProps);\n    this._checkRequiredProps(endViewStateProps);\n\n    return {start: startViewStateProps, end: endViewStateProps};\n  }\n\n  /**\n   * Returns viewport props in transition\n   * @param startProps {object} - a list of starting viewport props\n   * @param endProps {object} - a list of target viewport props\n   * @param t {number} - a time factor between [0, 1]\n   * @returns {object} - a list of interpolated viewport props\n   */\n  abstract interpolateProps(\n    startProps: Record<string, any>,\n    endProps: Record<string, any>,\n    t: number\n  ): Record<string, any>;\n\n  /**\n   * Returns transition duration\n   * @param startProps {object} - a list of starting viewport props\n   * @param endProps {object} - a list of target viewport props\n   * @returns {Number} - transition duration in milliseconds\n   */\n  getDuration(startProps: Record<string, any>, endProps: Record<string, any>): number {\n    return endProps.transitionDuration;\n  }\n\n  _checkRequiredProps(props) {\n    if (!this._requiredProps) {\n      return;\n    }\n\n    this._requiredProps.forEach(propName => {\n      const value = props[propName];\n      assert(\n        Number.isFinite(value) || Array.isArray(value),\n        `${propName} is required for transition`\n      );\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}