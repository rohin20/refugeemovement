{"ast":null,"code":"import _slicedToArray from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _regeneratorRuntime from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar VERSION = typeof \"3.3.1\" !== 'undefined' ? \"3.3.1\" : 'beta';\nimport { loadLibrary } from '@loaders.gl/worker-utils';\nvar BASIS_CDN_ENCODER_WASM = \"https://unpkg.com/@loaders.gl/textures@\".concat(VERSION, \"/dist/libs/basis_encoder.wasm\");\nvar BASIS_CDN_ENCODER_JS = \"https://unpkg.com/@loaders.gl/textures@\".concat(VERSION, \"/dist/libs/basis_encoder.js\");\nvar loadBasisTranscoderPromise;\nexport function loadBasisTrascoderModule(_x) {\n  return _loadBasisTrascoderModule.apply(this, arguments);\n}\nfunction _loadBasisTrascoderModule() {\n  _loadBasisTrascoderModule = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(options) {\n    var modules;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          modules = options.modules || {};\n          if (!modules.basis) {\n            _context.next = 3;\n            break;\n          }\n          return _context.abrupt(\"return\", modules.basis);\n        case 3:\n          loadBasisTranscoderPromise = loadBasisTranscoderPromise || loadBasisTrascoder(options);\n          _context.next = 6;\n          return loadBasisTranscoderPromise;\n        case 6:\n          return _context.abrupt(\"return\", _context.sent);\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _loadBasisTrascoderModule.apply(this, arguments);\n}\nfunction loadBasisTrascoder(_x2) {\n  return _loadBasisTrascoder.apply(this, arguments);\n}\nfunction _loadBasisTrascoder() {\n  _loadBasisTrascoder = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(options) {\n    var BASIS, wasmBinary, _yield$Promise$all, _yield$Promise$all2;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          BASIS = null;\n          wasmBinary = null;\n          _context2.t0 = Promise;\n          _context2.next = 5;\n          return loadLibrary('basis_transcoder.js', 'textures', options);\n        case 5:\n          _context2.t1 = _context2.sent;\n          _context2.next = 8;\n          return loadLibrary('basis_transcoder.wasm', 'textures', options);\n        case 8:\n          _context2.t2 = _context2.sent;\n          _context2.t3 = [_context2.t1, _context2.t2];\n          _context2.next = 12;\n          return _context2.t0.all.call(_context2.t0, _context2.t3);\n        case 12:\n          _yield$Promise$all = _context2.sent;\n          _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n          BASIS = _yield$Promise$all2[0];\n          wasmBinary = _yield$Promise$all2[1];\n          BASIS = BASIS || globalThis.BASIS;\n          _context2.next = 19;\n          return initializeBasisTrascoderModule(BASIS, wasmBinary);\n        case 19:\n          return _context2.abrupt(\"return\", _context2.sent);\n        case 20:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _loadBasisTrascoder.apply(this, arguments);\n}\nfunction initializeBasisTrascoderModule(BasisModule, wasmBinary) {\n  var options = {};\n  if (wasmBinary) {\n    options.wasmBinary = wasmBinary;\n  }\n  return new Promise(function (resolve) {\n    BasisModule(options).then(function (module) {\n      var BasisFile = module.BasisFile,\n        initializeBasis = module.initializeBasis;\n      initializeBasis();\n      resolve({\n        BasisFile: BasisFile\n      });\n    });\n  });\n}\nvar loadBasisEncoderPromise;\nexport function loadBasisEncoderModule(_x3) {\n  return _loadBasisEncoderModule.apply(this, arguments);\n}\nfunction _loadBasisEncoderModule() {\n  _loadBasisEncoderModule = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(options) {\n    var modules;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          modules = options.modules || {};\n          if (!modules.basisEncoder) {\n            _context3.next = 3;\n            break;\n          }\n          return _context3.abrupt(\"return\", modules.basisEncoder);\n        case 3:\n          loadBasisEncoderPromise = loadBasisEncoderPromise || loadBasisEncoder(options);\n          _context3.next = 6;\n          return loadBasisEncoderPromise;\n        case 6:\n          return _context3.abrupt(\"return\", _context3.sent);\n        case 7:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return _loadBasisEncoderModule.apply(this, arguments);\n}\nfunction loadBasisEncoder(_x4) {\n  return _loadBasisEncoder.apply(this, arguments);\n}\nfunction _loadBasisEncoder() {\n  _loadBasisEncoder = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(options) {\n    var BASIS_ENCODER, wasmBinary, _yield$Promise$all3, _yield$Promise$all4;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          BASIS_ENCODER = null;\n          wasmBinary = null;\n          _context4.t0 = Promise;\n          _context4.next = 5;\n          return loadLibrary(BASIS_CDN_ENCODER_JS, 'textures', options);\n        case 5:\n          _context4.t1 = _context4.sent;\n          _context4.next = 8;\n          return loadLibrary(BASIS_CDN_ENCODER_WASM, 'textures', options);\n        case 8:\n          _context4.t2 = _context4.sent;\n          _context4.t3 = [_context4.t1, _context4.t2];\n          _context4.next = 12;\n          return _context4.t0.all.call(_context4.t0, _context4.t3);\n        case 12:\n          _yield$Promise$all3 = _context4.sent;\n          _yield$Promise$all4 = _slicedToArray(_yield$Promise$all3, 2);\n          BASIS_ENCODER = _yield$Promise$all4[0];\n          wasmBinary = _yield$Promise$all4[1];\n          BASIS_ENCODER = BASIS_ENCODER || globalThis.BASIS;\n          _context4.next = 19;\n          return initializeBasisEncoderModule(BASIS_ENCODER, wasmBinary);\n        case 19:\n          return _context4.abrupt(\"return\", _context4.sent);\n        case 20:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }));\n  return _loadBasisEncoder.apply(this, arguments);\n}\nfunction initializeBasisEncoderModule(BasisEncoderModule, wasmBinary) {\n  var options = {};\n  if (wasmBinary) {\n    options.wasmBinary = wasmBinary;\n  }\n  return new Promise(function (resolve) {\n    BasisEncoderModule(options).then(function (module) {\n      var BasisFile = module.BasisFile,\n        KTX2File = module.KTX2File,\n        initializeBasis = module.initializeBasis,\n        BasisEncoder = module.BasisEncoder;\n      initializeBasis();\n      resolve({\n        BasisFile: BasisFile,\n        KTX2File: KTX2File,\n        BasisEncoder: BasisEncoder\n      });\n    });\n  });\n}","map":{"version":3,"names":["VERSION","loadLibrary","BASIS_CDN_ENCODER_WASM","concat","BASIS_CDN_ENCODER_JS","loadBasisTranscoderPromise","loadBasisTrascoderModule","_x","_loadBasisTrascoderModule","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","options","modules","wrap","_callee$","_context","prev","next","basis","abrupt","loadBasisTrascoder","sent","stop","_x2","_loadBasisTrascoder","_callee2","BASIS","wasmBinary","_yield$Promise$all","_yield$Promise$all2","_callee2$","_context2","t0","Promise","t1","t2","t3","all","call","_slicedToArray","globalThis","initializeBasisTrascoderModule","BasisModule","resolve","then","module","BasisFile","initializeBasis","loadBasisEncoderPromise","loadBasisEncoderModule","_x3","_loadBasisEncoderModule","_callee3","_callee3$","_context3","basisEncoder","loadBasisEncoder","_x4","_loadBasisEncoder","_callee4","BASIS_ENCODER","_yield$Promise$all3","_yield$Promise$all4","_callee4$","_context4","initializeBasisEncoderModule","BasisEncoderModule","KTX2File","BasisEncoder"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@loaders.gl/textures/src/lib/parsers/basis-module-loader.ts"],"sourcesContent":["// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'beta';\n\n// @ts-nocheck\nimport {loadLibrary} from '@loaders.gl/worker-utils';\n\nconst BASIS_CDN_ENCODER_WASM = `https://unpkg.com/@loaders.gl/textures@${VERSION}/dist/libs/basis_encoder.wasm`;\nconst BASIS_CDN_ENCODER_JS = `https://unpkg.com/@loaders.gl/textures@${VERSION}/dist/libs/basis_encoder.js`;\n\nlet loadBasisTranscoderPromise;\n\n/**\n * Loads wasm transcoder module\n * @param options\n * @returns {BasisFile} promise\n */\nexport async function loadBasisTrascoderModule(options) {\n  const modules = options.modules || {};\n  if (modules.basis) {\n    return modules.basis;\n  }\n\n  loadBasisTranscoderPromise = loadBasisTranscoderPromise || loadBasisTrascoder(options);\n  return await loadBasisTranscoderPromise;\n}\n\n/**\n * Loads wasm transcoder module\n * @param options\n * @returns {BasisFile} promise\n */\nasync function loadBasisTrascoder(options) {\n  let BASIS = null;\n  let wasmBinary = null;\n\n  [BASIS, wasmBinary] = await Promise.all([\n    await loadLibrary('basis_transcoder.js', 'textures', options),\n    await loadLibrary('basis_transcoder.wasm', 'textures', options)\n  ]);\n\n  // Depends on how import happened...\n  // @ts-ignore TS2339: Property does not exist on type\n  BASIS = BASIS || globalThis.BASIS;\n  return await initializeBasisTrascoderModule(BASIS, wasmBinary);\n}\n\n/**\n * Initialize wasm transcoder module\n * @param BasisModule - js part of the module\n * @param wasmBinary - wasm part of the module\n * @returns {BasisFile} promise\n */\nfunction initializeBasisTrascoderModule(BasisModule, wasmBinary) {\n  const options: {wasmBinary?} = {};\n\n  if (wasmBinary) {\n    options.wasmBinary = wasmBinary;\n  }\n\n  return new Promise((resolve) => {\n    // if you try to return BasisModule the browser crashes!\n    BasisModule(options).then((module) => {\n      const {BasisFile, initializeBasis} = module;\n      initializeBasis();\n      resolve({BasisFile});\n    });\n  });\n}\n\nlet loadBasisEncoderPromise;\n\n/**\n * Loads wasm encoder module\n * @param options\n * @returns {BasisFile, KTX2File} promise\n */\nexport async function loadBasisEncoderModule(options) {\n  const modules = options.modules || {};\n  if (modules.basisEncoder) {\n    return modules.basisEncoder;\n  }\n\n  loadBasisEncoderPromise = loadBasisEncoderPromise || loadBasisEncoder(options);\n  return await loadBasisEncoderPromise;\n}\n\n/**\n * Loads wasm encoder module\n * @param options\n * @returns {BasisFile, KTX2File} promise\n */\nasync function loadBasisEncoder(options) {\n  let BASIS_ENCODER = null;\n  let wasmBinary = null;\n\n  [BASIS_ENCODER, wasmBinary] = await Promise.all([\n    await loadLibrary(BASIS_CDN_ENCODER_JS, 'textures', options),\n    await loadLibrary(BASIS_CDN_ENCODER_WASM, 'textures', options)\n  ]);\n\n  // Depends on how import happened...\n  // @ts-ignore TS2339: Property does not exist on type\n  BASIS_ENCODER = BASIS_ENCODER || globalThis.BASIS;\n  return await initializeBasisEncoderModule(BASIS_ENCODER, wasmBinary);\n}\n\n/**\n * Initialize wasm transcoder module\n * @param BasisEncoderModule - js part of the module\n * @param wasmBinary - wasm part of the module\n * @returns {BasisFile, KTX2File} promise\n */\nfunction initializeBasisEncoderModule(BasisEncoderModule, wasmBinary) {\n  const options: {wasmBinary?} = {};\n\n  if (wasmBinary) {\n    options.wasmBinary = wasmBinary;\n  }\n\n  return new Promise((resolve) => {\n    // if you try to return BasisModule the browser crashes!\n    BasisEncoderModule(options).then((module) => {\n      const {BasisFile, KTX2File, initializeBasis, BasisEncoder} = module;\n      initializeBasis();\n      resolve({BasisFile, KTX2File, BasisEncoder});\n    });\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}