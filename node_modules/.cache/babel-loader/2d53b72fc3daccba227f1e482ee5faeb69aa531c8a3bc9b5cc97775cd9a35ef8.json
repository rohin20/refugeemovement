{"ast":null,"code":"import _slicedToArray from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport Viewport from '../viewports/viewport';\nimport { Matrix4 } from '@math.gl/core';\nimport { pixelsToWorld, fovyToAltitude } from '@math.gl/web-mercator';\nvar DEGREES_TO_RADIANS = Math.PI / 180;\nfunction getViewMatrix(_ref) {\n  var height = _ref.height,\n    focalDistance = _ref.focalDistance,\n    orbitAxis = _ref.orbitAxis,\n    rotationX = _ref.rotationX,\n    rotationOrbit = _ref.rotationOrbit,\n    zoom = _ref.zoom;\n  var up = orbitAxis === 'Z' ? [0, 0, 1] : [0, 1, 0];\n  var eye = orbitAxis === 'Z' ? [0, -focalDistance, 0] : [0, 0, focalDistance];\n  var viewMatrix = new Matrix4().lookAt({\n    eye: eye,\n    up: up\n  });\n  viewMatrix.rotateX(rotationX * DEGREES_TO_RADIANS);\n  if (orbitAxis === 'Z') {\n    viewMatrix.rotateZ(rotationOrbit * DEGREES_TO_RADIANS);\n  } else {\n    viewMatrix.rotateY(rotationOrbit * DEGREES_TO_RADIANS);\n  }\n  var projectionScale = Math.pow(2, zoom) / height;\n  viewMatrix.scale(projectionScale);\n  return viewMatrix;\n}\nvar OrbitViewport = /*#__PURE__*/function (_Viewport) {\n  _inherits(OrbitViewport, _Viewport);\n  var _super = _createSuper(OrbitViewport);\n  function OrbitViewport(props) {\n    var _this;\n    _classCallCheck(this, OrbitViewport);\n    var height = props.height,\n      projectionMatrix = props.projectionMatrix,\n      _props$fovy = props.fovy,\n      fovy = _props$fovy === void 0 ? 50 : _props$fovy,\n      _props$orbitAxis = props.orbitAxis,\n      orbitAxis = _props$orbitAxis === void 0 ? 'Z' : _props$orbitAxis,\n      _props$target = props.target,\n      target = _props$target === void 0 ? [0, 0, 0] : _props$target,\n      _props$rotationX = props.rotationX,\n      rotationX = _props$rotationX === void 0 ? 0 : _props$rotationX,\n      _props$rotationOrbit = props.rotationOrbit,\n      rotationOrbit = _props$rotationOrbit === void 0 ? 0 : _props$rotationOrbit,\n      _props$zoom = props.zoom,\n      zoom = _props$zoom === void 0 ? 0 : _props$zoom;\n    var focalDistance = projectionMatrix ? projectionMatrix[5] / 2 : fovyToAltitude(fovy);\n    _this = _super.call(this, _objectSpread(_objectSpread({}, props), {}, {\n      longitude: undefined,\n      viewMatrix: getViewMatrix({\n        height: height || 1,\n        focalDistance: focalDistance,\n        orbitAxis: orbitAxis,\n        rotationX: rotationX,\n        rotationOrbit: rotationOrbit,\n        zoom: zoom\n      }),\n      fovy: fovy,\n      focalDistance: focalDistance,\n      position: target,\n      zoom: zoom\n    }));\n    _defineProperty(_assertThisInitialized(_this), \"projectedCenter\", void 0);\n    _this.projectedCenter = _this.project(_this.center);\n    return _this;\n  }\n  _createClass(OrbitViewport, [{\n    key: \"unproject\",\n    value: function unproject(xyz) {\n      var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref2$topLeft = _ref2.topLeft,\n        topLeft = _ref2$topLeft === void 0 ? true : _ref2$topLeft;\n      var _xyz = _slicedToArray(xyz, 3),\n        x = _xyz[0],\n        y = _xyz[1],\n        _xyz$ = _xyz[2],\n        z = _xyz$ === void 0 ? this.projectedCenter[2] : _xyz$;\n      var y2 = topLeft ? y : this.height - y;\n      var _pixelsToWorld = pixelsToWorld([x, y2, z], this.pixelUnprojectionMatrix),\n        _pixelsToWorld2 = _slicedToArray(_pixelsToWorld, 3),\n        X = _pixelsToWorld2[0],\n        Y = _pixelsToWorld2[1],\n        Z = _pixelsToWorld2[2];\n      return [X, Y, Z];\n    }\n  }, {\n    key: \"panByPosition\",\n    value: function panByPosition(coords, pixel) {\n      var p0 = this.project(coords);\n      var nextCenter = [this.width / 2 + p0[0] - pixel[0], this.height / 2 + p0[1] - pixel[1], this.projectedCenter[2]];\n      return {\n        target: this.unproject(nextCenter)\n      };\n    }\n  }]);\n  return OrbitViewport;\n}(Viewport);\nexport { OrbitViewport as default };","map":{"version":3,"names":["Viewport","Matrix4","pixelsToWorld","fovyToAltitude","DEGREES_TO_RADIANS","Math","PI","getViewMatrix","_ref","height","focalDistance","orbitAxis","rotationX","rotationOrbit","zoom","up","eye","viewMatrix","lookAt","rotateX","rotateZ","rotateY","projectionScale","pow","scale","OrbitViewport","_Viewport","_inherits","_super","_createSuper","props","_this","_classCallCheck","projectionMatrix","_props$fovy","fovy","_props$orbitAxis","_props$target","target","_props$rotationX","_props$rotationOrbit","_props$zoom","call","_objectSpread","longitude","undefined","position","_defineProperty","_assertThisInitialized","projectedCenter","project","center","_createClass","key","value","unproject","xyz","_ref2","arguments","length","_ref2$topLeft","topLeft","_xyz","_slicedToArray","x","y","_xyz$","z","y2","_pixelsToWorld","pixelUnprojectionMatrix","_pixelsToWorld2","X","Y","Z","panByPosition","coords","pixel","p0","nextCenter","width","default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/core/src/viewports/orbit-viewport.ts"],"sourcesContent":["import Viewport from '../viewports/viewport';\n\nimport {Matrix4} from '@math.gl/core';\nimport {pixelsToWorld, fovyToAltitude} from '@math.gl/web-mercator';\n\nconst DEGREES_TO_RADIANS = Math.PI / 180;\n\nfunction getViewMatrix({\n  height,\n  focalDistance,\n  orbitAxis,\n  rotationX,\n  rotationOrbit,\n  zoom\n}: {\n  height: number;\n  focalDistance: number;\n  orbitAxis: 'Y' | 'Z';\n  rotationX: number;\n  rotationOrbit: number;\n  zoom: number;\n}): Matrix4 {\n  // We position the camera so that one common space unit (world space unit scaled by zoom)\n  // at the target maps to one screen pixel.\n  // This is a similar technique to that used in web mercator projection\n  // By doing so we are able to convert between common space and screen space sizes efficiently\n  // in the vertex shader.\n  const up = orbitAxis === 'Z' ? [0, 0, 1] : [0, 1, 0];\n  const eye = orbitAxis === 'Z' ? [0, -focalDistance, 0] : [0, 0, focalDistance];\n\n  const viewMatrix = new Matrix4().lookAt({eye, up});\n\n  viewMatrix.rotateX(rotationX * DEGREES_TO_RADIANS);\n  if (orbitAxis === 'Z') {\n    viewMatrix.rotateZ(rotationOrbit * DEGREES_TO_RADIANS);\n  } else {\n    viewMatrix.rotateY(rotationOrbit * DEGREES_TO_RADIANS);\n  }\n\n  // When height increases, we need to increase the distance from the camera to the target to\n  // keep the 1:1 mapping. However, this also changes the projected depth of each position by\n  // moving them further away between the near/far plane.\n  // Without modifying the default near/far planes, we instead scale down the common space to\n  // remove the distortion to the depth field.\n  const projectionScale = Math.pow(2, zoom) / height;\n  viewMatrix.scale(projectionScale);\n\n  return viewMatrix;\n}\n\nexport type OrbitViewportOptions = {\n  /** Name of the viewport */\n  id?: string;\n  /** Left offset from the canvas edge, in pixels */\n  x?: number;\n  /** Top offset from the canvas edge, in pixels */\n  y?: number;\n  /** Viewport width in pixels */\n  width?: number;\n  /** Viewport height in pixels */\n  height?: number;\n  /** Axis with 360 degrees rotating freedom, either `'Y'` or `'Z'`, default to `'Z'`. */\n  orbitAxis?: 'Y' | 'Z';\n  /** The world position at the center of the viewport. Default `[0, 0, 0]`. */\n  target?: [number, number, number];\n  /** The zoom level of the viewport. `zoom: 0` maps one unit distance to one pixel on screen, and increasing `zoom` by `1` scales the same object to twice as large. Default `0`. */\n  zoom?: number;\n  /** Rotating angle around orbit axis. Default `0`. */\n  rotationOrbit?: number;\n  /** Rotating angle around orbit axis. Default `0`. */\n  rotationX?: number;\n  /** Custom projection matrix */\n  projectionMatrix?: number[];\n  /** Field of view covered by camera, in the perspective case. In degrees. Default `50`. */\n  fovy?: number;\n  /** Distance of near clipping plane. Default `0.1`. */\n  near?: number;\n  /** Distance of far clipping plane. Default `1000`. */\n  far?: number;\n  /** Whether to create an orthographic or perspective projection matrix. Default is `false` (perspective projection). */\n  orthographic?: boolean;\n};\n\nexport default class OrbitViewport extends Viewport {\n  projectedCenter: number[];\n\n  constructor(props: OrbitViewportOptions) {\n    const {\n      height,\n\n      projectionMatrix,\n\n      fovy = 50, // For setting camera position\n      orbitAxis = 'Z', // Orbit axis with 360 degrees rotating freedom, can only be 'Y' or 'Z'\n      target = [0, 0, 0], // Which point is camera looking at, default origin\n\n      rotationX = 0, // Rotating angle around X axis\n      rotationOrbit = 0, // Rotating angle around orbit axis\n\n      zoom = 0\n    } = props;\n\n    const focalDistance = projectionMatrix ? projectionMatrix[5] / 2 : fovyToAltitude(fovy);\n\n    super({\n      ...props,\n      // in case viewState contains longitude/latitude values,\n      // make sure that the base Viewport class does not treat this as a geospatial viewport\n      longitude: undefined,\n      viewMatrix: getViewMatrix({\n        height: height || 1,\n        focalDistance,\n        orbitAxis,\n        rotationX,\n        rotationOrbit,\n        zoom\n      }),\n      fovy,\n      focalDistance,\n      position: target,\n      zoom\n    });\n\n    this.projectedCenter = this.project(this.center);\n  }\n\n  unproject(xyz: number[], {topLeft = true}: {topLeft?: boolean} = {}): [number, number, number] {\n    const [x, y, z = this.projectedCenter[2]] = xyz;\n\n    const y2 = topLeft ? y : this.height - y;\n    const [X, Y, Z] = pixelsToWorld([x, y2, z], this.pixelUnprojectionMatrix);\n    return [X, Y, Z];\n  }\n\n  panByPosition(coords: number[], pixel: number[]): OrbitViewportOptions {\n    const p0 = this.project(coords);\n    const nextCenter = [\n      this.width / 2 + p0[0] - pixel[0],\n      this.height / 2 + p0[1] - pixel[1],\n      this.projectedCenter[2]\n    ];\n    return {\n      target: this.unproject(nextCenter)\n    };\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}