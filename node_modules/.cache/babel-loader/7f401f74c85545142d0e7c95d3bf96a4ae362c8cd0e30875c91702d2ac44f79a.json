{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getVertices = getVertices;\nexports.getCentroid = getCentroid;\nexports.idToPolygonGeo = idToPolygonGeo;\nObject.defineProperty(exports, \"h3GetResolution\", {\n  enumerable: true,\n  get: function get() {\n    return _h3Js.h3GetResolution;\n  }\n});\nObject.defineProperty(exports, \"h3IsValid\", {\n  enumerable: true,\n  get: function get() {\n    return _h3Js.h3IsValid;\n  }\n});\nexports.getHexFields = exports.isHexField = void 0;\nvar _h3Js = require(\"h3-js\");\nvar _constants = require(\"@kepler.gl/constants\");\nvar _dataUtils = require(\"./data-utils\"); // get vertices should return [lon, lat]\nfunction getVertices(_ref) {\n  var id = _ref.id;\n  // always reverse it\n  return (0, _h3Js.h3ToGeoBoundary)(id, true);\n} // get centroid should return [lon, lat]\n\nfunction getCentroid(_ref2) {\n  var id = _ref2.id;\n  // always reverse it to [lng, lat]\n  return (0, _h3Js.h3ToGeo)(id).reverse();\n}\nfunction idToPolygonGeo(object, properties) {\n  if (!(object !== null && object !== void 0 && object.id)) {\n    return null;\n  }\n  var vertices = getVertices(object);\n  return {\n    geometry: {\n      coordinates: vertices,\n      type: 'LineString'\n    },\n    properties: properties\n  };\n}\nvar isHexField = function isHexField(field, fieldIdx, dataContainer) {\n  if (field.type !== _constants.ALL_FIELD_TYPES.string) {\n    return false;\n  }\n  var firstDP = dataContainer.find(function (d) {\n    return (0, _dataUtils.notNullorUndefined)(d.valueAt(fieldIdx));\n  }, true);\n  return firstDP && (0, _h3Js.h3IsValid)(firstDP.valueAt(fieldIdx));\n};\nexports.isHexField = isHexField;\nvar getHexFields = function getHexFields(fields, dataContainer) {\n  return fields.filter(function (f, i) {\n    return isHexField(f, i, dataContainer);\n  });\n};\nexports.getHexFields = getHexFields;","map":{"version":3,"names":["Object","defineProperty","exports","getCentroid","enumerable","get","_h3Js","h3GetResolution","h3IsValid","getHexFields","isHexField","require","_constants","_dataUtils","getVertices","_ref","id","h3ToGeoBoundary","_ref2","h3ToGeo","reverse","object","geometry","coordinates","vertices","type","properties","field","ALL_FIELD_TYPES","string","notNullorUndefined","d","valueAt","fieldIdx","firstDP","fields","filter","f","i","dataContainer"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/utils/src/h3-utils.ts"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {h3GetResolution, H3Index, h3IsValid, h3ToGeo, h3ToGeoBoundary} from 'h3-js';\nimport {ALL_FIELD_TYPES} from '@kepler.gl/constants';\nimport {notNullorUndefined} from './data-utils';\n\nexport {h3GetResolution, h3IsValid};\n\nexport type Centroid = [number, number];\n\n// get vertices should return [lon, lat]\nexport function getVertices({id}: {id: H3Index}) {\n  // always reverse it\n  return h3ToGeoBoundary(id, true);\n}\n\n// get centroid should return [lon, lat]\nexport function getCentroid({id}: {id: H3Index}): Centroid {\n  // always reverse it to [lng, lat]\n  return h3ToGeo(id).reverse() as Centroid;\n}\n\nexport function idToPolygonGeo(object?: {id: H3Index}, properties?: any) {\n  if (!object?.id) {\n    return null;\n  }\n\n  const vertices = getVertices(object);\n\n  return {\n    geometry: {\n      coordinates: vertices,\n      type: 'LineString'\n    },\n    properties\n  };\n}\n\nexport const isHexField = (field, fieldIdx, dataContainer) => {\n  if (field.type !== ALL_FIELD_TYPES.string) {\n    return false;\n  }\n\n  const firstDP = dataContainer.find(d => notNullorUndefined(d.valueAt(fieldIdx)), true);\n  return firstDP && h3IsValid(firstDP.valueAt(fieldIdx));\n};\n\nexport const getHexFields = (fields, dataContainer) =>\n  fields.filter((f, i) => isHexField(f, i, dataContainer));\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAoBAA,MAAA,CAAAC,cAAA,CAAAC,OAAA;;AACA;;AACAA,OAAA,CAAAC,WAAA,GAAAA,WAAA;;AAtBAH,MAAA,CAAAC,cAAA,CAAAC,OAAA;EACAE,UAAA;EACAC,GAAA,WAAAA,IAAA;IACA,OAAAC,KAAA,CAAAC,eAAA;EACA;AACA;AACAP,MAAA,CAAAC,cAAA,CAAAC,OAAA;EACAE,UAAA;EACAC,GAAA,WAAAA,IAAA;IACA,OAAAC,KAAA,CAAAE,SAAA;EACA;AACA;AACAN,OAAA,CAAAO,YAAA,GAAAP,OAAA,CAAAQ,UAAA;AAEA,IAAAJ,KAAA,GAAAK,OAAA;AAEA,IAAAC,UAAA,GAAAD,OAAA;AAEA,IAAAE,UAAA,GAAAF,OAAA;AAUA,SAAAG,YAAAC,IAAA;EACO,IAAAC,EAAA,GAASD,IAAA,CAAAC,EAAA;EAAiC;EAC/C,WAAAV,KAAA,CAAAW,eAAA,EAAAD,EAAA;AACA;;;EAIK,IAAAA,EAAA,GAASE,KAAA,CAAAF,EAAA;EAA2C;EACzD,WAAAV,KAAA,CAAAa,OAAA,EAAAH,EAAA,EAAAI,OAAA;AACA;;EAGK,MAAAC,MAAS,SAAT,IAAwBA,MAAwB,UAAhD,CAAkE,IAAAA,MAAA,CAAAL,EAAA;IACvE,OAAK,IAAD;EACF;;EAGF,OAAM;IAENM,QAAO;MACLC,WAAU,EAAAC,QAAA;MACRC,IAAA;IACA;IAFQC,UADL,EAAAA;EAKL;AALK;;EASF,IAAMC,KAAA,CAAAF,IAAU,KAAGb,UAAb,CAAAgB,eAAqB,CAAAC,MAAU;IAC1C,OAAS,KAAL;EACF;;IAGF,OAAM,EAAO,EAAAhB,UAAG,CAAAiB,kBAAmB,EAACC,CAAA,CAAAC,OAAA,CAAAC,QAAA;EAAA;EAAA,OAApBC,OAAhB,QAAA5B,KAAA,CAAAE,SAAA,EAAA0B,OAAA,CAAAF,OAAA,CAAAC,QAAA;AACA;;;EAGK,OAAME,MAAA,CAAYC,MAAG,WAAfC,CAAA,EAAAC,CAAA;IAAe,OAC1B5B,UAAO,CAAP2B,CAAc,EAAAC,CAAA,EAAAC,aAAA;EAAA;AAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}