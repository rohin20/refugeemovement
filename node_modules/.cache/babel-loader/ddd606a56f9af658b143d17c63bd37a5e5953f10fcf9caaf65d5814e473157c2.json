{"ast":null,"code":"import _slicedToArray from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { worldToLngLat } from '@math.gl/web-mercator';\nvar TILE_SIZE = 512;\nexport function quadkeyToWorldBounds(quadkey) {\n  var x = 0;\n  var y = 0;\n  var mask = 1 << quadkey.length;\n  var scale = mask / TILE_SIZE;\n  for (var i = 0; i < quadkey.length; i++) {\n    mask >>= 1;\n    var q = parseInt(quadkey[i]);\n    if (q % 2) x |= mask;\n    if (q > 1) y |= mask;\n  }\n  return [[x / scale, TILE_SIZE - y / scale], [(x + 0.99) / scale, TILE_SIZE - (y + 0.99) / scale]];\n}\nexport function getQuadkeyPolygon(quadkey) {\n  var _quadkeyToWorldBounds = quadkeyToWorldBounds(quadkey),\n    _quadkeyToWorldBounds2 = _slicedToArray(_quadkeyToWorldBounds, 2),\n    topLeft = _quadkeyToWorldBounds2[0],\n    bottomRight = _quadkeyToWorldBounds2[1];\n  var _worldToLngLat = worldToLngLat(topLeft),\n    _worldToLngLat2 = _slicedToArray(_worldToLngLat, 2),\n    w = _worldToLngLat2[0],\n    n = _worldToLngLat2[1];\n  var _worldToLngLat3 = worldToLngLat(bottomRight),\n    _worldToLngLat4 = _slicedToArray(_worldToLngLat3, 2),\n    e = _worldToLngLat4[0],\n    s = _worldToLngLat4[1];\n  return [e, n, e, s, w, s, w, n, e, n];\n}","map":{"version":3,"names":["worldToLngLat","TILE_SIZE","quadkeyToWorldBounds","quadkey","x","y","mask","length","scale","i","q","parseInt","getQuadkeyPolygon","_quadkeyToWorldBounds","_quadkeyToWorldBounds2","_slicedToArray","topLeft","bottomRight","_worldToLngLat","_worldToLngLat2","w","n","_worldToLngLat3","_worldToLngLat4","e","s"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/geo-layers/src/quadkey-layer/quadkey-utils.ts"],"sourcesContent":["import {worldToLngLat} from '@math.gl/web-mercator';\n\nconst TILE_SIZE = 512;\n\nexport function quadkeyToWorldBounds(quadkey: string): [number[], number[]] {\n  let x = 0;\n  let y = 0;\n  let mask = 1 << quadkey.length;\n  const scale = mask / TILE_SIZE;\n\n  for (let i = 0; i < quadkey.length; i++) {\n    mask >>= 1;\n    const q = parseInt(quadkey[i]);\n    if (q % 2) x |= mask;\n    if (q > 1) y |= mask;\n  }\n  return [\n    [x / scale, TILE_SIZE - y / scale],\n    [(x + 0.99) / scale, TILE_SIZE - (y + 0.99) / scale]\n  ];\n}\n\nexport function getQuadkeyPolygon(quadkey: string): number[] {\n  const [topLeft, bottomRight] = quadkeyToWorldBounds(quadkey);\n  const [w, n] = worldToLngLat(topLeft);\n  const [e, s] = worldToLngLat(bottomRight);\n  return [e, n, e, s, w, s, w, n, e, n];\n}\n"],"mappings":";AAAA,SAAQA,aAAR,QAA4B,uBAA5B;AAEA,IAAMC,SAAS,GAAG,GAAlB;AAEA,OAAO,SAASC,oBAATA,CAA8BC,OAA9B,EAAqE;EAC1E,IAAIC,CAAC,GAAG,CAAR;EACA,IAAIC,CAAC,GAAG,CAAR;EACA,IAAIC,IAAI,GAAG,KAAKH,OAAO,CAACI,MAAxB;EACA,IAAMC,KAAK,GAAGF,IAAI,GAAGL,SAArB;EAEA,KAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,OAAO,CAACI,MAA5B,EAAoCE,CAAC,EAArC,EAAyC;IACvCH,IAAI,KAAK,CAAT;IACA,IAAMI,CAAC,GAAGC,QAAQ,CAACR,OAAO,CAACM,CAAD,CAAR,CAAlB;IACA,IAAIC,CAAC,GAAG,CAAR,EAAWN,CAAC,IAAIE,IAAL;IACX,IAAII,CAAC,GAAG,CAAR,EAAWL,CAAC,IAAIC,IAAL;EACZ;EACD,OAAO,CACL,CAACF,CAAC,GAAGI,KAAL,EAAYP,SAAS,GAAGI,CAAC,GAAGG,KAA5B,CADK,EAEL,CAAC,CAACJ,CAAC,GAAG,IAAL,IAAaI,KAAd,EAAqBP,SAAS,GAAG,CAACI,CAAC,GAAG,IAAL,IAAaG,KAA9C,CAFK,CAAP;AAID;AAED,OAAO,SAASI,iBAATA,CAA2BT,OAA3B,EAAsD;EAC3D,IAAAU,qBAAA,GAA+BX,oBAAoB,CAACC,OAAD,CAAnD;IAAAW,sBAAA,GAAAC,cAAA,CAAAF,qBAAA;IAAOG,OAAD,GAAAF,sBAAA;IAAUG,WAAV,GAAAH,sBAAA;EACN,IAAAI,cAAA,GAAelB,aAAa,CAACgB,OAAD,CAA5B;IAAAG,eAAA,GAAAJ,cAAA,CAAAG,cAAA;IAAOE,CAAD,GAAAD,eAAA;IAAIE,CAAJ,GAAAF,eAAA;EACN,IAAAG,eAAA,GAAetB,aAAa,CAACiB,WAAD,CAA5B;IAAAM,eAAA,GAAAR,cAAA,CAAAO,eAAA;IAAOE,CAAD,GAAAD,eAAA;IAAIE,CAAJ,GAAAF,eAAA;EACN,OAAO,CAACC,CAAD,EAAIH,CAAJ,EAAOG,CAAP,EAAUC,CAAV,EAAaL,CAAb,EAAgBK,CAAhB,EAAmBL,CAAnB,EAAsBC,CAAtB,EAAyBG,CAAzB,EAA4BH,CAA5B,CAAP;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}