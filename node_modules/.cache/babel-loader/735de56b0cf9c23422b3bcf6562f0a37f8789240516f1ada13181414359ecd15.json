{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport lightingShader from './lights.glsl';\nvar INITIAL_MODULE_OPTIONS = {\n  lightSources: {}\n};\nfunction convertColor() {\n  var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n    _ref2$color = _ref2.color,\n    color = _ref2$color === void 0 ? [0, 0, 0] : _ref2$color,\n    _ref2$intensity = _ref2.intensity,\n    intensity = _ref2$intensity === void 0 ? 1.0 : _ref2$intensity;\n  return color.map(function (component) {\n    return component * intensity / 255.0;\n  });\n}\nfunction getLightSourceUniforms(_ref) {\n  var ambientLight = _ref.ambientLight,\n    _ref$pointLights = _ref.pointLights,\n    pointLights = _ref$pointLights === void 0 ? [] : _ref$pointLights,\n    _ref$directionalLight = _ref.directionalLights,\n    directionalLights = _ref$directionalLight === void 0 ? [] : _ref$directionalLight;\n  var lightSourceUniforms = {};\n  if (ambientLight) {\n    lightSourceUniforms['lighting_uAmbientLight.color'] = convertColor(ambientLight);\n  } else {\n    lightSourceUniforms['lighting_uAmbientLight.color'] = [0, 0, 0];\n  }\n  pointLights.forEach(function (pointLight, index) {\n    lightSourceUniforms[\"lighting_uPointLight[\".concat(index, \"].color\")] = convertColor(pointLight);\n    lightSourceUniforms[\"lighting_uPointLight[\".concat(index, \"].position\")] = pointLight.position;\n    lightSourceUniforms[\"lighting_uPointLight[\".concat(index, \"].attenuation\")] = pointLight.attenuation || [1, 0, 0];\n  });\n  lightSourceUniforms.lighting_uPointLightCount = pointLights.length;\n  directionalLights.forEach(function (directionalLight, index) {\n    lightSourceUniforms[\"lighting_uDirectionalLight[\".concat(index, \"].color\")] = convertColor(directionalLight);\n    lightSourceUniforms[\"lighting_uDirectionalLight[\".concat(index, \"].direction\")] = directionalLight.direction;\n  });\n  lightSourceUniforms.lighting_uDirectionalLightCount = directionalLights.length;\n  return lightSourceUniforms;\n}\nfunction getUniforms() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_MODULE_OPTIONS;\n  if ('lightSources' in opts) {\n    var _ref3 = opts.lightSources || {},\n      ambientLight = _ref3.ambientLight,\n      pointLights = _ref3.pointLights,\n      directionalLights = _ref3.directionalLights;\n    var hasLights = ambientLight || pointLights && pointLights.length > 0 || directionalLights && directionalLights.length > 0;\n    if (!hasLights) {\n      return {\n        lighting_uEnabled: false\n      };\n    }\n    return Object.assign({}, getLightSourceUniforms({\n      ambientLight: ambientLight,\n      pointLights: pointLights,\n      directionalLights: directionalLights\n    }), {\n      lighting_uEnabled: true\n    });\n  }\n  if ('lights' in opts) {\n    var lightSources = {\n      pointLights: [],\n      directionalLights: []\n    };\n    var _iterator = _createForOfIteratorHelper(opts.lights || []),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var light = _step.value;\n        switch (light.type) {\n          case 'ambient':\n            lightSources.ambientLight = light;\n            break;\n          case 'directional':\n            lightSources.directionalLights.push(light);\n            break;\n          case 'point':\n            lightSources.pointLights.push(light);\n            break;\n          default:\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    return getUniforms({\n      lightSources: lightSources\n    });\n  }\n  return {};\n}\nexport var lights = {\n  name: 'lights',\n  vs: lightingShader,\n  fs: lightingShader,\n  getUniforms: getUniforms,\n  defines: {\n    MAX_LIGHTS: 3\n  }\n};","map":{"version":3,"names":["lightingShader","INITIAL_MODULE_OPTIONS","lightSources","convertColor","_ref2","arguments","length","undefined","_ref2$color","color","_ref2$intensity","intensity","map","component","getLightSourceUniforms","_ref","ambientLight","_ref$pointLights","pointLights","_ref$directionalLight","directionalLights","lightSourceUniforms","forEach","pointLight","index","concat","position","attenuation","lighting_uPointLightCount","directionalLight","direction","lighting_uDirectionalLightCount","getUniforms","opts","_ref3","hasLights","lighting_uEnabled","Object","assign","_iterator","_createForOfIteratorHelper","lights","_step","s","n","done","light","value","type","push","err","e","f","name","vs","fs","defines","MAX_LIGHTS"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@luma.gl/shadertools/src/modules/lights/lights.js"],"sourcesContent":["/** @typedef {import('../../types').ShaderModule} ShaderModule */\n\nimport lightingShader from './lights.glsl';\n\nconst INITIAL_MODULE_OPTIONS = {\n  lightSources: {}\n};\n\n// Take color 0-255 and intensity as input and output 0.0-1.0 range\nfunction convertColor({color = [0, 0, 0], intensity = 1.0} = {}) {\n  return color.map(component => (component * intensity) / 255.0);\n}\n\nfunction getLightSourceUniforms({ambientLight, pointLights = [], directionalLights = []}) {\n  const lightSourceUniforms = {};\n\n  if (ambientLight) {\n    lightSourceUniforms['lighting_uAmbientLight.color'] = convertColor(ambientLight);\n  } else {\n    lightSourceUniforms['lighting_uAmbientLight.color'] = [0, 0, 0];\n  }\n\n  pointLights.forEach((pointLight, index) => {\n    lightSourceUniforms[`lighting_uPointLight[${index}].color`] = convertColor(pointLight);\n    lightSourceUniforms[`lighting_uPointLight[${index}].position`] = pointLight.position;\n    lightSourceUniforms[`lighting_uPointLight[${index}].attenuation`] = pointLight.attenuation || [\n      1,\n      0,\n      0\n    ];\n  });\n  lightSourceUniforms.lighting_uPointLightCount = pointLights.length;\n\n  directionalLights.forEach((directionalLight, index) => {\n    lightSourceUniforms[`lighting_uDirectionalLight[${index}].color`] = convertColor(\n      directionalLight\n    );\n    lightSourceUniforms[`lighting_uDirectionalLight[${index}].direction`] =\n      directionalLight.direction;\n  });\n  lightSourceUniforms.lighting_uDirectionalLightCount = directionalLights.length;\n\n  return lightSourceUniforms;\n}\n\n// eslint-disable-next-line complexity\nfunction getUniforms(opts = INITIAL_MODULE_OPTIONS) {\n  // Specify lights separately\n  if ('lightSources' in opts) {\n    const {ambientLight, pointLights, directionalLights} = opts.lightSources || {};\n    const hasLights =\n      ambientLight ||\n      (pointLights && pointLights.length > 0) ||\n      (directionalLights && directionalLights.length > 0);\n\n    if (!hasLights) {\n      return {lighting_uEnabled: false};\n    }\n\n    return Object.assign(\n      {},\n      getLightSourceUniforms({ambientLight, pointLights, directionalLights}),\n      {\n        lighting_uEnabled: true\n      }\n    );\n  }\n\n  // Support for array of lights. Type of light is detected by type field\n  if ('lights' in opts) {\n    const lightSources = {pointLights: [], directionalLights: []};\n    // @ts-ignore\n    for (const light of opts.lights || []) {\n      switch (light.type) {\n        case 'ambient':\n          // Note: Only uses last ambient light\n          // TODO - add ambient light sources on CPU?\n          lightSources.ambientLight = light;\n          break;\n        case 'directional':\n          lightSources.directionalLights.push(light);\n          break;\n        case 'point':\n          lightSources.pointLights.push(light);\n          break;\n        default:\n        // eslint-disable-next-line\n        // console.warn(light.type);\n      }\n    }\n\n    // Call the `opts.lightSources`` version\n    return getUniforms({lightSources});\n  }\n\n  return {};\n}\n\n/** @type {ShaderModule} */\nexport const lights = {\n  name: 'lights',\n  vs: lightingShader,\n  fs: lightingShader,\n  getUniforms,\n  defines: {\n    MAX_LIGHTS: 3\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}