{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = FloatingTimeDisplayFactory;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar _icons = require(\"../icons\");\nvar _constants = require(\"@kepler.gl/constants\");\nvar _styledComponents2 = require(\"../../common/styled-components\");\nvar _utils = require(\"@kepler.gl/utils\");\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8;\nvar StyledTimeDisplayWrapper = _styledComponents[\"default\"].div.attrs({\n  className: 'floating-time-display'\n})(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  bottom: \", \";\\n  display: flex;\\n  position: absolute;\\n  width: 100%;\\n  margin-left: -\", \"px;\\n  justify-content: center;\\n  pointer-events: none; /* prevent padding from blocking input */\\n  & > * {\\n    /* all children should allow input */\\n    pointer-events: all;\\n  }\\n\"])), function (props) {\n  return \"calc(100% + \".concat(props.theme.bottomPanelGap, \"px)\");\n}, function (props) {\n  return props.theme.bottomInnerPdSide;\n});\nvar StyledTimeDisplay = _styledComponents[\"default\"].div.attrs(function (props) {\n  return {\n    className: (0, _classnames[\"default\"])('floating-time-display__inner', props.className)\n  };\n})(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  background-color: \", \";\\n  border-radius: \", \"px;\\n  color: \", \";\\n  display: flex;\\n  height: \", \"px;\\n  justify-content: center;\\n  min-width: \", \"px;\\n  opacity: \", \";\\n  padding: \", \";\\n\"])), function (props) {\n  return props.theme.panelBackground;\n}, function (props) {\n  return props.theme.timeDisplayBorderRadius;\n}, function (props) {\n  return props.theme.titleTextColor;\n}, function (props) {\n  return props.theme.timeDisplayHeight;\n}, function (props) {\n  return props.theme.timeDisplayMinWidth;\n}, function (props) {\n  return props.theme.timeDisplayOpacity;\n}, function (props) {\n  return props.theme.timeDisplayPadding;\n});\nvar StyledTimeDisplayGroups = _styledComponents[\"default\"].div(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  align-items: center;\\n  display: flex;\\n  flex-direction: row;\\n\"])));\nvar StyledTimeDisplayRows = _styledComponents[\"default\"].div(_templateObject4 || (_templateObject4 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n\"])));\nvar StyledTimeDisplayTop = _styledComponents[\"default\"].div.attrs({\n  className: 'animation-control__time-display__top'\n})(_templateObject5 || (_templateObject5 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  color: \", \";\\n  display: flex;\\n  font-size: 12px;\\n  font-weight: 500;\\n  justify-content: center;\\n\"])), function (props) {\n  return props.theme.textColor;\n});\nvar StyledTimeDisplayBottom = _styledComponents[\"default\"].div.attrs({\n  className: 'animation-control__time-display__bottom'\n})(_templateObject6 || (_templateObject6 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  color: \", \";\\n  display: flex;\\n  font-size: 14px;\\n  font-weight: 500;\\n  justify-content: center;\\n\"])), function (props) {\n  return props.theme.titleTextColor;\n});\nvar StyledTimeValueGroup = _styledComponents[\"default\"].div.attrs({\n  className: 'animation-control__time-value-group'\n})(_templateObject7 || (_templateObject7 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  display: flex;\\n  flex-direction: column;\\n\"])));\nvar StyledHorizontalBar = _styledComponents[\"default\"].div.attrs({\n  className: 'animation-control__horizontal-bar'\n})(_templateObject8 || (_templateObject8 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  margin: 0 12px;\\n\"])));\nvar TimeDivider = function TimeDivider() {\n  return /*#__PURE__*/_react[\"default\"].createElement(StyledHorizontalBar, null, /*#__PURE__*/_react[\"default\"].createElement(_icons.Minus, {\n    height: \"12px\"\n  }));\n};\nvar TimeDisplayRow = function TimeDisplayRow(_ref) {\n  var _ref$timeValues = _ref.timeValues,\n    timeValues = _ref$timeValues === void 0 ? [] : _ref$timeValues;\n  return /*#__PURE__*/_react[\"default\"].createElement(_styledComponents2.CenterFlexbox, null, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"time-value\"\n  }, timeValues[0]), timeValues[1] ? /*#__PURE__*/_react[\"default\"].createElement(TimeDivider, null) : null, timeValues[1] ? /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"time-value\"\n  }, timeValues[1]) : null);\n};\nfunction FloatingTimeDisplayFactory() {\n  var FloatingTimeDisplay = function FloatingTimeDisplay(_ref2) {\n    var currentTime = _ref2.currentTime,\n      defaultTimeFormat = _ref2.defaultTimeFormat,\n      timeFormat = _ref2.timeFormat,\n      timezone = _ref2.timezone;\n    var _useMemo = (0, _react.useMemo)(function () {\n        var groupTime = Array.isArray(currentTime) ? currentTime : [currentTime];\n        var hasUserFormat = typeof timeFormat === 'string';\n        var currentFormat = (hasUserFormat ? timeFormat : defaultTimeFormat) || _constants.DEFAULT_TIME_FORMAT;\n        var dateFunc = (0, _utils.datetimeFormatter)(timezone);\n        if (hasUserFormat) {\n          // dont split time if user defined it\n          return {\n            displayDate: groupTime.map(dateFunc(currentFormat)),\n            displayTime: []\n          };\n        }\n        return groupTime.reduce(function (accu, curr) {\n          var _currentFormat$split = currentFormat.split(' '),\n            _currentFormat$split2 = (0, _slicedToArray2[\"default\"])(_currentFormat$split, 2),\n            dateFormat = _currentFormat$split2[0],\n            datetimeFormat = _currentFormat$split2[1];\n          var dateString = dateFunc(dateFormat)(curr);\n          var timeString = datetimeFormat ? dateFunc(datetimeFormat)(curr) : null;\n          if (!accu.displayDate.includes(dateString)) {\n            accu.displayDate.push(dateString);\n          }\n          if (timeString) {\n            accu.displayTime.push(timeString);\n          }\n          return accu;\n        }, {\n          displayDate: [],\n          displayTime: []\n        });\n      }, [currentTime, timeFormat, defaultTimeFormat, timezone]),\n      displayDate = _useMemo.displayDate,\n      displayTime = _useMemo.displayTime;\n    var twoGroups = displayDate.length === 2 && displayTime.length === 2;\n    var bottomRow = displayTime.length ? displayTime : displayDate.length ? displayDate : null;\n    var topRow = displayDate.length && displayTime.length ? displayDate : null;\n    return /*#__PURE__*/_react[\"default\"].createElement(StyledTimeDisplayWrapper, null, /*#__PURE__*/_react[\"default\"].createElement(StyledTimeDisplay, {\n      className: \"animation-control__time-display\"\n    }, twoGroups ? /*#__PURE__*/_react[\"default\"].createElement(StyledTimeDisplayGroups, null, /*#__PURE__*/_react[\"default\"].createElement(StyledTimeValueGroup, null, /*#__PURE__*/_react[\"default\"].createElement(StyledTimeDisplayTop, null, displayDate[0]), /*#__PURE__*/_react[\"default\"].createElement(StyledTimeDisplayBottom, null, displayTime[0])), /*#__PURE__*/_react[\"default\"].createElement(TimeDivider, null), /*#__PURE__*/_react[\"default\"].createElement(StyledTimeValueGroup, null, /*#__PURE__*/_react[\"default\"].createElement(StyledTimeDisplayTop, null, displayDate[1]), /*#__PURE__*/_react[\"default\"].createElement(StyledTimeDisplayBottom, null, displayTime[1]))) : /*#__PURE__*/_react[\"default\"].createElement(StyledTimeDisplayRows, null, topRow ? /*#__PURE__*/_react[\"default\"].createElement(StyledTimeDisplayTop, null, /*#__PURE__*/_react[\"default\"].createElement(TimeDisplayRow, {\n      timeValues: topRow\n    })) : null, bottomRow ? /*#__PURE__*/_react[\"default\"].createElement(StyledTimeDisplayBottom, null, /*#__PURE__*/_react[\"default\"].createElement(TimeDisplayRow, {\n      timeValues: bottomRow\n    })) : null)));\n  };\n  return FloatingTimeDisplay;\n}","map":{"version":3,"names":["value","_slicedToArray2","_interopRequireDefault","require","_taggedTemplateLiteral2","_react","_interopRequireWildcard","_styledComponents","_classnames","_icons","_constants","_styledComponents2","_utils","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","StyledTimeDisplayWrapper","div","attrs","className","props","concat","theme","bottomPanelGap","bottomInnerPdSide","StyledTimeDisplay","panelBackground","timeDisplayBorderRadius","timeDisplayHeight","timeDisplayMinWidth","timeDisplayPadding","StyledTimeDisplayGroups","StyledTimeDisplayRows","StyledTimeDisplayTop","textColor","StyledTimeDisplayBottom","titleTextColor","StyledTimeValueGroup","StyledHorizontalBar","TimeDivider","timeFormat","createElement","Minus","TimeDisplayRow","_ref","_ref$timeValues","timeValues","CenterFlexbox","FloatingTimeDisplay","_ref2","currentTime","defaultTimeFormat","timezone","_useMemo","useMemo","groupTime","Array","isArray","currentFormat","hasUserFormat","DEFAULT_TIME_FORMAT","dateFunc","datetimeFormatter","displayDate","map","reduce","accu","curr","_currentFormat$split","split","_currentFormat$split2","dateFormat","datetimeFormat","dateString","timeString","includes","push","displayTime"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/components/src/common/animation-control/floating-time-display.tsx"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {useMemo} from 'react';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\nimport {Minus} from '../icons';\nimport {DEFAULT_TIME_FORMAT} from '@kepler.gl/constants';\nimport {CenterFlexbox} from '../../common/styled-components';\nimport {datetimeFormatter} from '@kepler.gl/utils';\n\nconst StyledTimeDisplayWrapper = styled.div.attrs({\n  className: 'floating-time-display'\n})`\n  bottom: ${props => `calc(100% + ${props.theme.bottomPanelGap}px)`};\n  display: flex;\n  position: absolute;\n  width: 100%;\n  margin-left: -${props => props.theme.bottomInnerPdSide}px;\n  justify-content: center;\n  pointer-events: none; /* prevent padding from blocking input */\n  & > * {\n    /* all children should allow input */\n    pointer-events: all;\n  }\n`;\n\nconst StyledTimeDisplay = styled.div.attrs(props => ({\n  className: classnames('floating-time-display__inner', props.className)\n}))`\n  background-color: ${props => props.theme.panelBackground};\n  border-radius: ${props => props.theme.timeDisplayBorderRadius}px;\n  color: ${props => props.theme.titleTextColor};\n  display: flex;\n  height: ${props => props.theme.timeDisplayHeight}px;\n  justify-content: center;\n  min-width: ${props => props.theme.timeDisplayMinWidth}px;\n  opacity: ${props => props.theme.timeDisplayOpacity};\n  padding: ${props => props.theme.timeDisplayPadding};\n`;\n\nconst StyledTimeDisplayGroups = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n`;\n\nconst StyledTimeDisplayRows = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst StyledTimeDisplayTop = styled.div.attrs({\n  className: 'animation-control__time-display__top'\n})`\n  color: ${props => props.theme.textColor};\n  display: flex;\n  font-size: 12px;\n  font-weight: 500;\n  justify-content: center;\n`;\n\nconst StyledTimeDisplayBottom = styled.div.attrs({\n  className: 'animation-control__time-display__bottom'\n})`\n  color: ${props => props.theme.titleTextColor};\n  display: flex;\n  font-size: 14px;\n  font-weight: 500;\n  justify-content: center;\n`;\n\nconst StyledTimeValueGroup = styled.div.attrs({\n  className: 'animation-control__time-value-group'\n})`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledHorizontalBar = styled.div.attrs({\n  className: 'animation-control__horizontal-bar'\n})`\n  margin: 0 12px;\n`;\n\nconst TimeDivider = () => (\n  <StyledHorizontalBar>\n    <Minus height=\"12px\" />\n  </StyledHorizontalBar>\n);\n\ninterface TimeDisplayRowProps {\n  timeValues?: string[];\n}\n\nconst TimeDisplayRow = ({timeValues = []}: TimeDisplayRowProps) => (\n  <CenterFlexbox>\n    <div className=\"time-value\">{timeValues[0]}</div>\n    {timeValues[1] ? <TimeDivider /> : null}\n    {timeValues[1] ? <div className=\"time-value\">{timeValues[1]}</div> : null}\n  </CenterFlexbox>\n);\n\ninterface FloatingTimeDisplayProps {\n  currentTime: number | number[];\n  defaultTimeFormat?: string | null;\n  timeFormat?: string | null;\n  timezone?: string | null;\n}\n\nexport default function FloatingTimeDisplayFactory() {\n  const FloatingTimeDisplay = ({\n    currentTime,\n    defaultTimeFormat,\n    timeFormat,\n    timezone\n  }: FloatingTimeDisplayProps) => {\n    const {displayDate, displayTime} = useMemo(() => {\n      const groupTime = Array.isArray(currentTime) ? currentTime : [currentTime];\n      const hasUserFormat = typeof timeFormat === 'string';\n      const currentFormat = (hasUserFormat ? timeFormat : defaultTimeFormat) || DEFAULT_TIME_FORMAT;\n      const dateFunc = datetimeFormatter(timezone);\n\n      if (hasUserFormat) {\n        // dont split time if user defined it\n        return {\n          displayDate: groupTime.map(dateFunc(currentFormat)),\n          displayTime: []\n        };\n      }\n      return groupTime.reduce<{displayDate: string[]; displayTime: string[]}>(\n        (accu, curr) => {\n          const [dateFormat, datetimeFormat] = currentFormat.split(' ');\n          const dateString = dateFunc(dateFormat)(curr);\n          const timeString = datetimeFormat ? dateFunc(datetimeFormat)(curr) : null;\n\n          if (!accu.displayDate.includes(dateString)) {\n            accu.displayDate.push(dateString);\n          }\n          if (timeString) {\n            accu.displayTime.push(timeString);\n          }\n\n          return accu;\n        },\n        {displayDate: [], displayTime: []}\n      );\n    }, [currentTime, timeFormat, defaultTimeFormat, timezone]);\n\n    const twoGroups = displayDate.length === 2 && displayTime.length === 2;\n    const bottomRow = displayTime.length ? displayTime : displayDate.length ? displayDate : null;\n    const topRow = displayDate.length && displayTime.length ? displayDate : null;\n\n    return (\n      <StyledTimeDisplayWrapper>\n        <StyledTimeDisplay className=\"animation-control__time-display\">\n          {twoGroups ? (\n            <StyledTimeDisplayGroups>\n              <StyledTimeValueGroup>\n                {/* Time Start */}\n                <StyledTimeDisplayTop>{displayDate[0]}</StyledTimeDisplayTop>\n                <StyledTimeDisplayBottom>{displayTime[0]}</StyledTimeDisplayBottom>\n              </StyledTimeValueGroup>\n              <TimeDivider />\n              <StyledTimeValueGroup>\n                {/* Time End */}\n                <StyledTimeDisplayTop>{displayDate[1]}</StyledTimeDisplayTop>\n                <StyledTimeDisplayBottom>{displayTime[1]}</StyledTimeDisplayBottom>\n              </StyledTimeValueGroup>\n            </StyledTimeDisplayGroups>\n          ) : (\n            <StyledTimeDisplayRows>\n              {topRow ? (\n                <StyledTimeDisplayTop>\n                  <TimeDisplayRow timeValues={topRow} />\n                </StyledTimeDisplayTop>\n              ) : null}\n              {bottomRow ? (\n                <StyledTimeDisplayBottom>\n                  <TimeDisplayRow timeValues={bottomRow} />\n                </StyledTimeDisplayBottom>\n              ) : null}\n            </StyledTimeDisplayRows>\n          )}\n        </StyledTimeDisplay>\n      </StyledTimeDisplayWrapper>\n    );\n  };\n\n  return FloatingTimeDisplay;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}