{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.injector = injector;\nexports.flattenDeps = flattenDeps;\nexports.provideRecipesToInjector = provideRecipesToInjector;\nexports.typeCheckRecipe = typeCheckRecipe;\nexports.withState = withState;\nexports.ERROR_MSG = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactRedux = require(\"react-redux\");\nvar _redux = require(\"redux\");\nvar _window = require(\"global/window\");\nvar _context = _interopRequireDefault(require(\"./context\"));\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nvar MissingComp = function MissingComp() {\n  return /*#__PURE__*/_react[\"default\"].createElement(\"div\", null);\n};\nvar ERROR_MSG = {\n  wrongRecipeType: \"injectComponents takes an array of factories replacement pairs as input, \" + \"each pair be a array as [originalFactory, replacement].\",\n  noDep: function noDep(fac, parent) {\n    return \"\".concat(fac.name, \" is required as a dependency of \").concat(parent.name, \", \") + \"but is not provided to injectComponents. It will not be rendered.\";\n  },\n  notFunc: 'factory and its replacement should be a function'\n};\nexports.ERROR_MSG = ERROR_MSG;\nfunction injector() {\n  var map = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Map();\n  var cache = new Map(); // map<factory, factory -> ?>\n\n  var get = function get(fac, parent) {\n    var factory = map.get(fac); // factory is not injected\n\n    if (!factory) {\n      _window.console.error(ERROR_MSG.noDep(fac, parent));\n      return MissingComp;\n    } // check if custom factory deps is declared\n\n    var instances = cache.get(factory) || factory.apply(void 0, (0, _toConsumableArray2[\"default\"])(factory.deps ? factory.deps.map(function (dep) {\n      return get(dep, factory);\n    }) : []));\n    cache.set(fac, instances);\n    return instances;\n  }; // if you have two functions that happen to have the exactly same text\n  // it will be override: 2018-02-05\n\n  return {\n    provide: function provide(factory, replacement) {\n      if (!typeCheckRecipe([factory, replacement])) {\n        return injector(map);\n      }\n      return injector(new Map(map).set(factory, replacement));\n    },\n    get: get\n  };\n} // entryPoint\n\nfunction flattenDeps(allDeps, factory) {\n  var addToDeps = allDeps.concat([factory]);\n  return Array.isArray(factory.deps) && factory.deps.length ? factory.deps.reduce(function (accu, dep) {\n    return flattenDeps(accu, dep);\n  }, addToDeps) : addToDeps;\n}\nfunction provideRecipesToInjector(recipes, appInjector) {\n  var provided = new Map();\n  return recipes.reduce(function (inj, recipe) {\n    var _inj;\n    if (!typeCheckRecipe(recipe)) {\n      return inj;\n    } // collect dependencies of custom factories, if there is any.\n    // Add them to the appInjector\n\n    var customDependencies = flattenDeps([], recipe[1]);\n    inj = customDependencies.reduce(function (ij, factory) {\n      if (provided.get(factory)) {\n        _window.console.warn(\"\".concat(factory.name, \" already injected from \").concat(provided.get(factory).name, \", injecting \").concat(recipe[0].name, \" after \").concat(provided.get(factory).name, \" will override it\"));\n      }\n      return ij.provide(factory, factory);\n    }, inj);\n    provided.set(recipe[0], recipe[1]);\n    return (_inj = inj).provide.apply(_inj, (0, _toConsumableArray2[\"default\"])(recipe));\n  }, appInjector);\n}\nfunction typeCheckRecipe(recipe) {\n  if (!Array.isArray(recipe) || recipe.length < 2) {\n    _window.console.error('Error injecting [factory, replacement]', recipe);\n    _window.console.error(ERROR_MSG.wrongRecipeType);\n    return false;\n  }\n  var _recipe = (0, _slicedToArray2[\"default\"])(recipe, 2),\n    factory = _recipe[0],\n    replacement = _recipe[1];\n  if (typeof factory !== 'function') {\n    _window.console.error('Error injecting factory: ', factory);\n    _window.console.error(ERROR_MSG.notFunc);\n    return false;\n  } else if (typeof replacement !== 'function') {\n    _window.console.error('Error injecting replacement for: ', factory);\n    _window.console.error(ERROR_MSG.notFunc);\n    return false;\n  }\n  return true;\n}\nvar identity = function identity(state) {\n  return state;\n}; // Helper to add reducer state to custom component\n\nfunction withState() {\n  var lenses = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var mapStateToProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : identity;\n  var actions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return function (Component) {\n    var WrappedComponent = function WrappedComponent(_ref) {\n      var state = _ref.state,\n        props = (0, _objectWithoutProperties2[\"default\"])(_ref, [\"state\"]);\n      return /*#__PURE__*/_react[\"default\"].createElement(_context[\"default\"].Consumer, null, function (context) {\n        return /*#__PURE__*/_react[\"default\"].createElement(Component, lenses.reduce(function (totalState, lens) {\n          return _objectSpread(_objectSpread({}, totalState), lens(context.selector(state)));\n        }, props));\n      });\n    };\n    return (0, _reactRedux.connect)(function (state) {\n      return _objectSpread(_objectSpread({}, mapStateToProps(state)), {}, {\n        state: state\n      });\n    }, function (dispatch) {\n      return Object.keys(actions).reduce(function (accu, key) {\n        return _objectSpread(_objectSpread({}, accu), {}, (0, _defineProperty2[\"default\"])({}, key, (0, _redux.bindActionCreators)(actions[key], dispatch)));\n      }, {});\n    })(WrappedComponent);\n  };\n}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","flattenDeps","typeCheckRecipe","_objectWithoutProperties2","_slicedToArray2","_toConsumableArray2","_react","_reactRedux","_redux","_context","_objectSpread","target","i","arguments","length","source","ownKeys","forEach","key","_defineProperty2","getOwnPropertyDescriptors","defineProperties","getOwnPropertyDescriptor","MissingComp","createElement","ERROR_MSG","concat","fac","name","parent","notFunc","injector","get","factory","map","cache","set","instances","provide","Map","replacement","allDeps","addToDeps","Array","isArray","deps","reduce","accu","dep","provideRecipesToInjector","recipes","appInjector","provided","inj","recipe","customDependencies","_window","console","warn","ij","_inj","apply","error","wrongRecipeType","_recipe","identity","state","withState","lenses","undefined","mapStateToProps","actions","Component","WrappedComponent","_ref"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/components/src/injector.tsx"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {\n  MapStateToPropsParam,\n  MapDispatchToPropsParam,\n  InferableComponentEnhancerWithProps\n} from 'react-redux';\nimport {console as Console} from 'global/window';\nimport KeplerGlContext from './context';\n\nexport type FactoryElement = (...args) => React.ComponentType;\nexport type Factory = FactoryElement & {\n  deps: FactoryElement[];\n};\n\nexport type InjectorType = {\n  provide: (factory: any, replacement: any) => InjectorType;\n  get: (fac: any, parent?: any) => any;\n};\n\nconst MissingComp = () => <div />;\n\nexport const ERROR_MSG = {\n  wrongRecipeType:\n    `injectComponents takes an array of factories replacement pairs as input, ` +\n    `each pair be a array as [originalFactory, replacement].`,\n\n  noDep: (fac, parent) =>\n    `${fac.name} is required as a dependency of ${parent.name}, ` +\n    `but is not provided to injectComponents. It will not be rendered.`,\n\n  notFunc: 'factory and its replacement should be a function'\n};\n\nexport function injector(map = new Map()): InjectorType {\n  const cache = new Map(); // map<factory, factory -> ?>\n  const get = (fac, parent) => {\n    const factory = map.get(fac);\n    // factory is not injected\n    if (!factory) {\n      Console.error(ERROR_MSG.noDep(fac, parent));\n      return MissingComp;\n    }\n\n    // check if custom factory deps is declared\n    const instances =\n      cache.get(factory) ||\n      factory(...(factory.deps ? factory.deps.map(dep => get(dep, factory)) : []));\n\n    cache.set(fac, instances);\n    return instances;\n  };\n\n  // if you have two functions that happen to have the exactly same text\n  // it will be override: 2018-02-05\n  return {\n    provide: (factory, replacement) => {\n      if (!typeCheckRecipe([factory, replacement])) {\n        return injector(map);\n      }\n      return injector(new Map(map).set(factory, replacement));\n    },\n    get\n  };\n}\n\n// entryPoint\nexport function flattenDeps(allDeps: Factory[], factory: any): Factory[] {\n  const addToDeps = allDeps.concat([factory]);\n  return Array.isArray(factory.deps) && factory.deps.length\n    ? factory.deps.reduce((accu, dep) => flattenDeps(accu, dep), addToDeps)\n    : addToDeps;\n}\n\nexport function provideRecipesToInjector(recipes: [Factory, Factory][], appInjector: InjectorType) {\n  const provided = new Map();\n\n  return recipes.reduce((inj, recipe) => {\n    if (!typeCheckRecipe(recipe)) {\n      return inj;\n    }\n\n    // collect dependencies of custom factories, if there is any.\n    // Add them to the appInjector\n    const customDependencies = flattenDeps([], recipe[1]);\n    inj = customDependencies.reduce((ij, factory) => {\n      if (provided.get(factory)) {\n        Console.warn(\n          `${factory.name} already injected from ${provided.get(factory).name}, injecting ${\n            recipe[0].name\n          } after ${provided.get(factory).name} will override it`\n        );\n      }\n      return ij.provide(factory, factory);\n    }, inj);\n\n    provided.set(recipe[0], recipe[1]);\n    return inj.provide(...recipe);\n  }, appInjector);\n}\n\nexport function typeCheckRecipe(recipe) {\n  if (!Array.isArray(recipe) || recipe.length < 2) {\n    Console.error('Error injecting [factory, replacement]', recipe);\n    Console.error(ERROR_MSG.wrongRecipeType);\n    return false;\n  }\n\n  const [factory, replacement] = recipe;\n  if (typeof factory !== 'function') {\n    Console.error('Error injecting factory: ', factory);\n    Console.error(ERROR_MSG.notFunc);\n    return false;\n  } else if (typeof replacement !== 'function') {\n    Console.error('Error injecting replacement for: ', factory);\n    Console.error(ERROR_MSG.notFunc);\n    return false;\n  }\n\n  return true;\n}\n\nexport interface WithState<RootState> {\n  <TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, State = RootState>(\n    lenses: any[],\n    mapStateToProps: MapStateToPropsParam<TStateProps, TOwnProps, State>,\n    mapDispatchToProps?: MapDispatchToPropsParam<TDispatchProps, TOwnProps>\n  ): InferableComponentEnhancerWithProps<TStateProps & TDispatchProps, TOwnProps>;\n}\n\nconst identity = state => state;\n// Helper to add reducer state to custom component\nexport function withState(lenses: any[] = [], mapStateToProps = identity, actions = {}) {\n  return Component => {\n    const WrappedComponent = ({state, ...props}) => (\n      <KeplerGlContext.Consumer>\n        {context => (\n          <Component\n            {...lenses.reduce(\n              (totalState, lens) => ({\n                ...totalState,\n                ...lens(context.selector(state))\n              }),\n              props\n            )}\n          />\n        )}\n      </KeplerGlContext.Consumer>\n    );\n\n    return connect(\n      state => ({...mapStateToProps(state), state}),\n      dispatch =>\n        Object.keys(actions).reduce(\n          (accu, key) => ({\n            ...accu,\n            [key]: bindActionCreators(actions[key], dispatch)\n          }),\n          {}\n        )\n    )(WrappedComponent);\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}