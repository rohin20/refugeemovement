{"ast":null,"code":"import _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { GL, GLType } from '@loaders.gl/math';\nvar Tile3DFeatureTable = /*#__PURE__*/function () {\n  function Tile3DFeatureTable(featureTableJson, featureTableBinary) {\n    _classCallCheck(this, Tile3DFeatureTable);\n    _defineProperty(this, \"json\", void 0);\n    _defineProperty(this, \"buffer\", void 0);\n    _defineProperty(this, \"featuresLength\", 0);\n    _defineProperty(this, \"_cachedTypedArrays\", {});\n    this.json = featureTableJson;\n    this.buffer = featureTableBinary;\n  }\n  _createClass(Tile3DFeatureTable, [{\n    key: \"getExtension\",\n    value: function getExtension(extensionName) {\n      return this.json.extensions && this.json.extensions[extensionName];\n    }\n  }, {\n    key: \"hasProperty\",\n    value: function hasProperty(propertyName) {\n      return Boolean(this.json[propertyName]);\n    }\n  }, {\n    key: \"getGlobalProperty\",\n    value: function getGlobalProperty(propertyName) {\n      var componentType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : GL.UNSIGNED_INT;\n      var componentLength = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      var jsonValue = this.json[propertyName];\n      if (jsonValue && Number.isFinite(jsonValue.byteOffset)) {\n        return this._getTypedArrayFromBinary(propertyName, componentType, componentLength, 1, jsonValue.byteOffset);\n      }\n      return jsonValue;\n    }\n  }, {\n    key: \"getPropertyArray\",\n    value: function getPropertyArray(propertyName, componentType, componentLength) {\n      var jsonValue = this.json[propertyName];\n      if (jsonValue && Number.isFinite(jsonValue.byteOffset)) {\n        if ('componentType' in jsonValue) {\n          componentType = GLType.fromName(jsonValue.componentType);\n        }\n        return this._getTypedArrayFromBinary(propertyName, componentType, componentLength, this.featuresLength, jsonValue.byteOffset);\n      }\n      return this._getTypedArrayFromArray(propertyName, componentType, jsonValue);\n    }\n  }, {\n    key: \"getProperty\",\n    value: function getProperty(propertyName, componentType, componentLength, featureId, result) {\n      var jsonValue = this.json[propertyName];\n      if (!jsonValue) {\n        return jsonValue;\n      }\n      var typedArray = this.getPropertyArray(propertyName, componentType, componentLength);\n      if (componentLength === 1) {\n        return typedArray[featureId];\n      }\n      for (var i = 0; i < componentLength; ++i) {\n        result[i] = typedArray[componentLength * featureId + i];\n      }\n      return result;\n    }\n  }, {\n    key: \"_getTypedArrayFromBinary\",\n    value: function _getTypedArrayFromBinary(propertyName, componentType, componentLength, count, byteOffset) {\n      var cachedTypedArrays = this._cachedTypedArrays;\n      var typedArray = cachedTypedArrays[propertyName];\n      if (!typedArray) {\n        typedArray = GLType.createTypedArray(componentType, this.buffer.buffer, this.buffer.byteOffset + byteOffset, count * componentLength);\n        cachedTypedArrays[propertyName] = typedArray;\n      }\n      return typedArray;\n    }\n  }, {\n    key: \"_getTypedArrayFromArray\",\n    value: function _getTypedArrayFromArray(propertyName, componentType, array) {\n      var cachedTypedArrays = this._cachedTypedArrays;\n      var typedArray = cachedTypedArrays[propertyName];\n      if (!typedArray) {\n        typedArray = GLType.createTypedArray(componentType, array);\n        cachedTypedArrays[propertyName] = typedArray;\n      }\n      return typedArray;\n    }\n  }]);\n  return Tile3DFeatureTable;\n}();\nexport { Tile3DFeatureTable as default };","map":{"version":3,"names":["GL","GLType","Tile3DFeatureTable","featureTableJson","featureTableBinary","_classCallCheck","_defineProperty","json","buffer","_createClass","key","value","getExtension","extensionName","extensions","hasProperty","propertyName","Boolean","getGlobalProperty","componentType","arguments","length","undefined","UNSIGNED_INT","componentLength","jsonValue","Number","isFinite","byteOffset","_getTypedArrayFromBinary","getPropertyArray","fromName","featuresLength","_getTypedArrayFromArray","getProperty","featureId","result","typedArray","i","count","cachedTypedArrays","_cachedTypedArrays","createTypedArray","array","default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/geo-layers/node_modules/@loaders.gl/3d-tiles/src/lib/classes/tile-3d-feature-table.ts"],"sourcesContent":["// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {GL, GLType} from '@loaders.gl/math';\n\n// Reference:\n// https://github.com/AnalyticalGraphicsInc/cesium/blob/1de96d087f0b17575eb1a3f736407b348c765d59/Source/Scene/Cesium3DTileFeatureTable.js\nexport default class Tile3DFeatureTable {\n  json;\n  buffer;\n  featuresLength = 0;\n  _cachedTypedArrays = {};\n\n  constructor(featureTableJson, featureTableBinary) {\n    this.json = featureTableJson;\n    this.buffer = featureTableBinary;\n  }\n\n  getExtension(extensionName) {\n    return this.json.extensions && this.json.extensions[extensionName];\n  }\n\n  hasProperty(propertyName) {\n    return Boolean(this.json[propertyName]);\n  }\n\n  getGlobalProperty(propertyName, componentType = GL.UNSIGNED_INT, componentLength = 1) {\n    const jsonValue = this.json[propertyName];\n\n    if (jsonValue && Number.isFinite(jsonValue.byteOffset)) {\n      return this._getTypedArrayFromBinary(\n        propertyName,\n        componentType,\n        componentLength,\n        1,\n        jsonValue.byteOffset\n      );\n    }\n\n    return jsonValue;\n  }\n\n  getPropertyArray(propertyName, componentType, componentLength) {\n    const jsonValue = this.json[propertyName];\n\n    if (jsonValue && Number.isFinite(jsonValue.byteOffset)) {\n      if ('componentType' in jsonValue) {\n        componentType = GLType.fromName(jsonValue.componentType);\n      }\n      return this._getTypedArrayFromBinary(\n        propertyName,\n        componentType,\n        componentLength,\n        this.featuresLength,\n        jsonValue.byteOffset\n      );\n    }\n\n    return this._getTypedArrayFromArray(propertyName, componentType, jsonValue);\n  }\n\n  getProperty(propertyName, componentType, componentLength, featureId, result) {\n    const jsonValue = this.json[propertyName];\n    if (!jsonValue) {\n      return jsonValue;\n    }\n\n    const typedArray = this.getPropertyArray(propertyName, componentType, componentLength);\n\n    if (componentLength === 1) {\n      return typedArray[featureId];\n    }\n\n    for (let i = 0; i < componentLength; ++i) {\n      result[i] = typedArray[componentLength * featureId + i];\n    }\n\n    return result;\n  }\n\n  // HELPERS\n\n  _getTypedArrayFromBinary(propertyName, componentType, componentLength, count, byteOffset) {\n    const cachedTypedArrays = this._cachedTypedArrays;\n    let typedArray = cachedTypedArrays[propertyName];\n    if (!typedArray) {\n      typedArray = GLType.createTypedArray(\n        componentType,\n        this.buffer.buffer,\n        this.buffer.byteOffset + byteOffset,\n        count * componentLength\n      );\n      cachedTypedArrays[propertyName] = typedArray;\n    }\n    return typedArray;\n  }\n\n  _getTypedArrayFromArray(propertyName, componentType, array) {\n    const cachedTypedArrays = this._cachedTypedArrays;\n    let typedArray = cachedTypedArrays[propertyName];\n    if (!typedArray) {\n      typedArray = GLType.createTypedArray(componentType, array);\n      cachedTypedArrays[propertyName] = typedArray;\n    }\n    return typedArray;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}