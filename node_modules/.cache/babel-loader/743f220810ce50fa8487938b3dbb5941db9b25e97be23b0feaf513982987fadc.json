{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport * as PropTypes from 'prop-types';\nimport useDraggableControl, { draggableControlDefaultProps, draggableControlPropTypes } from './draggable-control';\nimport { crispPixel } from '../utils/crisp-pixel';\nvar propTypes = Object.assign({}, draggableControlPropTypes, {\n  className: PropTypes.string,\n  longitude: PropTypes.number.isRequired,\n  latitude: PropTypes.number.isRequired,\n  style: PropTypes.object\n});\nvar defaultProps = Object.assign({}, draggableControlDefaultProps, {\n  className: ''\n});\nfunction getPosition(_ref) {\n  var props = _ref.props,\n    state = _ref.state,\n    context = _ref.context;\n  var longitude = props.longitude,\n    latitude = props.latitude,\n    offsetLeft = props.offsetLeft,\n    offsetTop = props.offsetTop;\n  var dragPos = state.dragPos,\n    dragOffset = state.dragOffset;\n  if (dragPos && dragOffset) {\n    return [dragPos[0] + dragOffset[0], dragPos[1] + dragOffset[1]];\n  }\n  var _context$viewport$pro = context.viewport.project([longitude, latitude]),\n    _context$viewport$pro2 = _slicedToArray(_context$viewport$pro, 2),\n    x = _context$viewport$pro2[0],\n    y = _context$viewport$pro2[1];\n  x += offsetLeft;\n  y += offsetTop;\n  return [x, y];\n}\nfunction Marker(props) {\n  var thisRef = useDraggableControl(props);\n  var state = thisRef.state,\n    containerRef = thisRef.containerRef;\n  var children = props.children,\n    className = props.className,\n    draggable = props.draggable,\n    style = props.style;\n  var dragPos = state.dragPos;\n  var _getPosition = getPosition(thisRef),\n    _getPosition2 = _slicedToArray(_getPosition, 2),\n    x = _getPosition2[0],\n    y = _getPosition2[1];\n  var transform = \"translate(\".concat(crispPixel(x), \"px, \").concat(crispPixel(y), \"px)\");\n  var cursor = draggable ? dragPos ? 'grabbing' : 'grab' : 'auto';\n  var control = useMemo(function () {\n    var containerStyle = _objectSpread({\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      transform: transform,\n      cursor: cursor\n    }, style);\n    return React.createElement(\"div\", {\n      className: \"mapboxgl-marker \".concat(className),\n      ref: thisRef.containerRef,\n      style: containerStyle\n    }, children);\n  }, [children, className]);\n  var container = containerRef.current;\n  if (container) {\n    container.style.transform = transform;\n    container.style.cursor = cursor;\n  }\n  return control;\n}\nMarker.defaultProps = defaultProps;\nMarker.propTypes = propTypes;\nexport default React.memo(Marker);","map":{"version":3,"names":["React","useMemo","PropTypes","useDraggableControl","draggableControlDefaultProps","draggableControlPropTypes","crispPixel","propTypes","Object","assign","className","string","longitude","number","isRequired","latitude","style","object","defaultProps","getPosition","_ref","props","state","context","offsetLeft","offsetTop","dragPos","dragOffset","_context$viewport$pro","viewport","project","_context$viewport$pro2","_slicedToArray","x","y","Marker","thisRef","containerRef","children","draggable","_getPosition","_getPosition2","transform","concat","cursor","control","containerStyle","_objectSpread","position","left","top","createElement","ref","container","current","memo"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/react-map-gl/src/components/marker.js"],"sourcesContent":["// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport * as React from 'react';\nimport {useMemo} from 'react';\nimport * as PropTypes from 'prop-types';\nimport useDraggableControl, {\n  draggableControlDefaultProps,\n  draggableControlPropTypes\n} from './draggable-control';\nimport {crispPixel} from '../utils/crisp-pixel';\n\nconst propTypes = Object.assign({}, draggableControlPropTypes, {\n  // Custom className\n  className: PropTypes.string,\n  // Longitude of the anchor point\n  longitude: PropTypes.number.isRequired,\n  // Latitude of the anchor point\n  latitude: PropTypes.number.isRequired,\n  // Custom style\n  style: PropTypes.object\n});\n\nconst defaultProps = Object.assign({}, draggableControlDefaultProps, {\n  className: ''\n});\n\nfunction getPosition({props, state, context}) {\n  const {longitude, latitude, offsetLeft, offsetTop} = props;\n  const {dragPos, dragOffset} = state;\n\n  // If dragging, just return the current drag position\n  if (dragPos && dragOffset) {\n    return [dragPos[0] + dragOffset[0], dragPos[1] + dragOffset[1]];\n  }\n\n  // Otherwise return the projected lat/lng with offset\n  let [x, y] = context.viewport.project([longitude, latitude]);\n  x += offsetLeft;\n  y += offsetTop;\n  return [x, y];\n}\n\n/*\n * PureComponent doesn't update when context changes.\n * The only way is to implement our own shouldComponentUpdate here. Considering\n * the parent component (StaticMap or InteractiveMap) is pure, and map re-render\n * is almost always triggered by a viewport change, we almost definitely need to\n * recalculate the marker's position when the parent re-renders.\n */\nfunction Marker(props) {\n  const thisRef = useDraggableControl(props);\n  const {state, containerRef} = thisRef;\n\n  const {children, className, draggable, style} = props;\n  const {dragPos} = state;\n\n  const [x, y] = getPosition(thisRef);\n  const transform = `translate(${crispPixel(x)}px, ${crispPixel(y)}px)`;\n  const cursor = draggable ? (dragPos ? 'grabbing' : 'grab') : 'auto';\n\n  // Perf: avoid rerendering if only the viewport changed\n  const control = useMemo(() => {\n    const containerStyle = {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      transform,\n      cursor,\n      ...style\n    };\n\n    return (\n      <div\n        className={`mapboxgl-marker ${className}`}\n        ref={thisRef.containerRef}\n        // @ts-ignore\n        style={containerStyle}\n      >\n        {children}\n      </div>\n    );\n  }, [children, className]);\n\n  const container = containerRef.current;\n  if (container) {\n    container.style.transform = transform;\n    container.style.cursor = cursor;\n  }\n\n  return control;\n}\n\nMarker.defaultProps = defaultProps;\nMarker.propTypes = propTypes;\n\nexport default React.memo(Marker);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,OAAOC,mBAAP,IACEC,4BADF,EAEEC,yBAFF,QAGO,qBAHP;AAIA,SAAQC,UAAR,QAAyB,sBAAzB;AAEA,IAAMC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,yBAAlB,EAA6C;EAE7DK,SAAS,EAAER,SAAS,CAACS,MAFwC;EAI7DC,SAAS,EAAEV,SAAS,CAACW,MAAV,CAAiBC,UAJiC;EAM7DC,QAAQ,EAAEb,SAAS,CAACW,MAAV,CAAiBC,UANkC;EAQ7DE,KAAK,EAAEd,SAAS,CAACe;AAR4C,CAA7C,CAAlB;AAWA,IAAMC,YAAY,GAAGV,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,4BAAlB,EAAgD;EACnEM,SAAS,EAAE;AADwD,CAAhD,CAArB;AAIA,SAASS,WAATA,CAAAC,IAAA,EAA8C;EAAA,IAAxBC,KAAwB,GAAAD,IAAA,CAAxBC,KAAwB;IAAjBC,KAAiB,GAAAF,IAAA,CAAjBE,KAAiB;IAAVC,OAAU,GAAAH,IAAA,CAAVG,OAAU;EAAA,IACrCX,SADqC,GACSS,KADT,CACrCT,SADqC;IAC1BG,QAD0B,GACSM,KADT,CAC1BN,QAD0B;IAChBS,UADgB,GACSH,KADT,CAChBG,UADgB;IACJC,SADI,GACSJ,KADT,CACJI,SADI;EAAA,IAErCC,OAFqC,GAEdJ,KAFc,CAErCI,OAFqC;IAE5BC,UAF4B,GAEdL,KAFc,CAE5BK,UAF4B;EAK5C,IAAID,OAAO,IAAIC,UAAf,EAA2B;IACzB,OAAO,CAACD,OAAO,CAAC,CAAD,CAAP,GAAaC,UAAU,CAAC,CAAD,CAAxB,EAA6BD,OAAO,CAAC,CAAD,CAAP,GAAaC,UAAU,CAAC,CAAD,CAApD,CAAP;EACD;EAP2C,IAAAC,qBAAA,GAU/BL,OAAO,CAACM,QAAR,CAAiBC,OAAjB,CAAyB,CAAClB,SAAD,EAAYG,QAAZ,CAAzB,CAV+B;IAAAgB,sBAAA,GAAAC,cAAA,CAAAJ,qBAAA;IAUvCK,CAVuC,GAAAF,sBAAA;IAUpCG,CAVoC,GAAAH,sBAAA;EAW5CE,CAAC,IAAIT,UAAL;EACAU,CAAC,IAAIT,SAAL;EACA,OAAO,CAACQ,CAAD,EAAIC,CAAJ,CAAP;AACD;AASD,SAASC,MAATA,CAAgBd,KAAhB,EAAuB;EACrB,IAAMe,OAAO,GAAGjC,mBAAmB,CAACkB,KAAD,CAAnC;EADqB,IAEdC,KAFc,GAESc,OAFT,CAEdd,KAFc;IAEPe,YAFO,GAESD,OAFT,CAEPC,YAFO;EAAA,IAIdC,QAJc,GAI2BjB,KAJ3B,CAIdiB,QAJc;IAIJ5B,SAJI,GAI2BW,KAJ3B,CAIJX,SAJI;IAIO6B,SAJP,GAI2BlB,KAJ3B,CAIOkB,SAJP;IAIkBvB,KAJlB,GAI2BK,KAJ3B,CAIkBL,KAJlB;EAAA,IAKdU,OALc,GAKHJ,KALG,CAKdI,OALc;EAAA,IAAAc,YAAA,GAONrB,WAAW,CAACiB,OAAD,CAPL;IAAAK,aAAA,GAAAT,cAAA,CAAAQ,YAAA;IAOdP,CAPc,GAAAQ,aAAA;IAOXP,CAPW,GAAAO,aAAA;EAQrB,IAAMC,SAAS,gBAAAC,MAAA,CAAgBrC,UAAU,CAAC2B,CAAD,CAA1B,UAAAU,MAAA,CAAoCrC,UAAU,CAAC4B,CAAD,CAA9C,QAAf;EACA,IAAMU,MAAM,GAAGL,SAAS,GAAIb,OAAO,GAAG,UAAH,GAAgB,MAA3B,GAAqC,MAA7D;EAGA,IAAMmB,OAAO,GAAG5C,OAAO,CAAC,YAAM;IAC5B,IAAM6C,cAAc,GAAAC,aAAA;MAClBC,QAAQ,EAAE,UADQ;MAElBC,IAAI,EAAE,CAFY;MAGlBC,GAAG,EAAE,CAHa;MAIlBR,SAAS,EAATA,SAJkB;MAKlBE,MAAM,EAANA;IALkB,GAMf5B,KANe,CAApB;IASA,OACEhB,KAAA,CAAAmD,aAAA;MACEzC,SAAS,qBAAAiC,MAAA,CAAqBjC,SAArB,CADX;MAEE0C,GAAG,EAAEhB,OAAO,CAACC,YAFf;MAIErB,KAAK,EAAE8B;IAJT,GAMGR,QANH,CADF;EAUD,CApBsB,EAoBpB,CAACA,QAAD,EAAW5B,SAAX,CApBoB,CAAvB;EAsBA,IAAM2C,SAAS,GAAGhB,YAAY,CAACiB,OAA/B;EACA,IAAID,SAAJ,EAAe;IACbA,SAAS,CAACrC,KAAV,CAAgB0B,SAAhB,GAA4BA,SAA5B;IACAW,SAAS,CAACrC,KAAV,CAAgB4B,MAAhB,GAAyBA,MAAzB;EACD;EAED,OAAOC,OAAP;AACD;AAEDV,MAAM,CAACjB,YAAP,GAAsBA,YAAtB;AACAiB,MAAM,CAAC5B,SAAP,GAAmBA,SAAnB;AAEA,eAAeP,KAAK,CAACuD,IAAN,CAAWpB,MAAX,CAAf"},"metadata":{},"sourceType":"module","externalDependencies":[]}