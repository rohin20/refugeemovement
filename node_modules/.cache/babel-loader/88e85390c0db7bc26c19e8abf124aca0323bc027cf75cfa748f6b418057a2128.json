{"ast":null,"code":"import { isBrowser, resolvePath } from '@loaders.gl/loader-utils';\nimport * as node from '../../node/read-file-sync.node';\nimport { readFileSyncBrowser } from './read-file.browser';\nexport function readFileSync(url) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  url = resolvePath(url);\n  if (!isBrowser && node.readFileSync) {\n    return node.readFileSync(url, options);\n  }\n  return readFileSyncBrowser(url, options);\n}","map":{"version":3,"names":["isBrowser","resolvePath","node","readFileSyncBrowser","readFileSync","url","options","arguments","length","undefined"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/kepler.gl/node_modules/@loaders.gl/core/src/lib/fetch/read-file.js"],"sourcesContent":["import {isBrowser, resolvePath} from '@loaders.gl/loader-utils';\nimport * as node from '../../node/read-file-sync.node';\nimport {readFileSyncBrowser} from './read-file.browser';\n\n// In a few cases (data URIs, node.js) \"files\" can be read synchronously\nexport function readFileSync(url, options = {}) {\n  url = resolvePath(url);\n  if (!isBrowser && node.readFileSync) {\n    return node.readFileSync(url, options);\n  }\n  return readFileSyncBrowser(url, options);\n}\n"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,WAAnB,QAAqC,0BAArC;AACA,OAAO,KAAKC,IAAZ,MAAsB,gCAAtB;AACA,SAAQC,mBAAR,QAAkC,qBAAlC;AAGA,OAAO,SAASC,YAATA,CAAsBC,GAAtB,EAAyC;EAAA,IAAdC,OAAc,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAJ,EAAI;EAC9CF,GAAG,GAAGJ,WAAW,CAACI,GAAD,CAAjB;EACA,IAAI,CAACL,SAAD,IAAcE,IAAI,CAACE,YAAvB,EAAqC;IACnC,OAAOF,IAAI,CAACE,YAAL,CAAkBC,GAAlB,EAAuBC,OAAvB,CAAP;EACD;EACD,OAAOH,mBAAmB,CAACE,GAAD,EAAMC,OAAN,CAA1B;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}