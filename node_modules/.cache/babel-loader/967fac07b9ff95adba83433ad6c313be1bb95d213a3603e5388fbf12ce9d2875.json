{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\nvar _icons = require(\"../common/icons\");\nvar _styledComponents2 = require(\"../common/styled-components\");\nvar _mapControlTooltip = _interopRequireDefault(require(\"./map-control-tooltip\"));\nvar _mapControlPanel = _interopRequireDefault(require(\"./map-control-panel\"));\nvar _mapLegend = _interopRequireDefault(require(\"./map-legend\"));\nvar _lazyTippy = _interopRequireDefault(require(\"./lazy-tippy\"));\nvar _reactDom = require(\"react-dom\");\nvar _constants = require(\"@kepler.gl/constants\");\nvar _styles = require(\"@kepler.gl/styles\");\nvar _templateObject, _templateObject2;\nMapLegendPanelFactory.deps = [_mapControlTooltip[\"default\"], _mapControlPanel[\"default\"], _mapLegend[\"default\"]];\nvar PinToBottom = _styledComponents[\"default\"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  position: absolute;\\n  bottom: \", \"px;\\n  right: \", \"px;\\n  \", \";\\n\"])), _constants.DIMENSIONS.mapControl.mapLegend.pinned.bottom, _constants.DIMENSIONS.mapControl.mapLegend.pinned.right, _styles.media.portable(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n    bottom: 0px;\\n    right: 0px;\\n    min-width: \", \"px;\\n    .map-control-panel {\\n      min-height: 215px;\\n      margin-bottom: 0px;\\n    };\\n  \"])), _constants.DIMENSIONS.mapControl.width + _constants.DIMENSIONS.mapControl.mapLegend.pinned.right));\nfunction MapLegendPanelFactory(MapControlTooltip, MapControlPanel, MapLegend) {\n  var defaultActionIcons = {\n    legend: _icons.Legend\n  };\n  /** @type {import('./map-legend-panel').MapLegendPanelComponent} */\n\n  var MapLegendPanel = function MapLegendPanel(_ref) {\n    var layers = _ref.layers,\n      mapControls = _ref.mapControls,\n      scale = _ref.scale,\n      onToggleMapControl = _ref.onToggleMapControl,\n      isExport = _ref.isExport,\n      logoComponent = _ref.logoComponent,\n      _ref$actionIcons = _ref.actionIcons,\n      actionIcons = _ref$actionIcons === void 0 ? defaultActionIcons : _ref$actionIcons,\n      mapHeight = _ref.mapHeight;\n    var mapLegend = (mapControls === null || mapControls === void 0 ? void 0 : mapControls.mapLegend) || {};\n    var _ref2 = mapLegend || {},\n      isPinned = _ref2.active;\n    var onClick = function onClick() {\n      var _mapControls$mapDraw;\n      if (mapControls !== null && mapControls !== void 0 && (_mapControls$mapDraw = mapControls.mapDraw) !== null && _mapControls$mapDraw !== void 0 && _mapControls$mapDraw.active) {\n        onToggleMapControl('mapDraw');\n      }\n    };\n    var _useState = (0, _react.useState)(null),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      tippyInstance = _useState2[0],\n      setTippyInstance = _useState2[1];\n    var onCloseClick = function onCloseClick(e) {\n      e.preventDefault();\n      onToggleMapControl('mapLegend');\n    };\n    var onPinClick = function onPinClick(e) {\n      e.preventDefault();\n      if (tippyInstance) {\n        // @ts-ignore\n        tippyInstance.hide();\n      }\n      onToggleMapControl('mapLegend');\n    };\n    if (!mapLegend.show) {\n      return null;\n    }\n    var mapControlPanel = /*#__PURE__*/_react[\"default\"].createElement(MapControlPanel, (0, _extends2[\"default\"])({\n      scale: scale,\n      header: 'header.layerLegend',\n      isPinned: true\n    }, isPinned ? {\n      onClick: onCloseClick,\n      pinnable: false,\n      disableClose: false\n    } : {\n      onPinClick: onPinClick,\n      pinnable: true,\n      disableClose: true\n    }, {\n      isExport: isExport,\n      logoComponent: logoComponent\n    }), /*#__PURE__*/_react[\"default\"].createElement(MapLegend, {\n      layers: layers,\n      mapHeight: mapHeight\n    }));\n    if (isPinned) {\n      // Pinned panel is not supported in export mode\n      if (isExport) {\n        return mapControlPanel;\n      }\n      var pinnedPanel = /*#__PURE__*/_react[\"default\"].createElement(PinToBottom, null, mapControlPanel);\n      return /*#__PURE__*/(0, _reactDom.createPortal)(pinnedPanel, document.body);\n    }\n    return /*#__PURE__*/(\n      // The outer div is to prevent an accessibility warning from Tippy\n      _react[\"default\"].createElement(\"div\", null, /*#__PURE__*/_react[\"default\"].createElement(_lazyTippy[\"default\"], {\n        interactive: true,\n        trigger: \"click\",\n        placement: \"left-start\",\n        onCreate: setTippyInstance,\n        render: function render(attrs) {\n          return /*#__PURE__*/_react[\"default\"].createElement(\"div\", attrs, mapControlPanel);\n        },\n        appendTo: \"parent\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", null, /*#__PURE__*/_react[\"default\"].createElement(MapControlTooltip, {\n        id: \"show-legend\",\n        message: \"tooltip.showLegend\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(_styledComponents2.MapControlButton, {\n        className: \"map-control-button show-legend\",\n        onClick: onClick\n      }, /*#__PURE__*/_react[\"default\"].createElement(actionIcons.legend, {\n        height: \"22px\"\n      }))))))\n    );\n  };\n  MapLegendPanel.displayName = 'MapLegendPanel';\n  return MapLegendPanel;\n}\nvar _default = MapLegendPanelFactory;\nexports[\"default\"] = _default;","map":{"version":3,"names":["value","exports","_extends2","_interopRequireDefault","require","_slicedToArray2","_taggedTemplateLiteral2","_react","_interopRequireWildcard","_icons","_styledComponents2","_mapControlTooltip","_mapControlPanel","_mapLegend","_lazyTippy","_reactDom","_constants","_styles","_templateObject","_templateObject2","MapLegendPanelFactory","deps","PinToBottom","_styledComponents","div","DIMENSIONS","mapControl","mapLegend","pinned","bottom","right","media","portable","width","defaultActionIcons","legend","Legend","MapLegendPanel","_ref","layers","scale","onToggleMapControl","isExport","logoComponent","actionIcons","_ref$actionIcons","mapHeight","mapControls","isPinned","_ref2","active","_mapControls$mapDraw","mapDraw","_useState2","_useState","tippyInstance","setTippyInstance","onCloseClick","e","preventDefault","onPinClick","hide","show","mapControlPanel","createElement","MapControlPanel","header","pinnable","disableClose","MapLegend","pinnedPanel","createPortal","document","body","interactive","trigger","placement","render","attrs"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/components/src/map/map-legend-panel.tsx"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {ComponentType, useState} from 'react';\nimport styled from 'styled-components';\n\nimport {Legend} from '../common/icons';\nimport {MapControlButton} from '../common/styled-components';\nimport MapControlTooltipFactory from './map-control-tooltip';\nimport MapControlPanelFactory from './map-control-panel';\nimport MapLegendFactory from './map-legend';\nimport LazyTippy from './lazy-tippy';\nimport {createPortal} from 'react-dom';\nimport {DIMENSIONS} from '@kepler.gl/constants';\nimport {MapControl, MapControls} from '@kepler.gl/types';\nimport {Layer} from '@kepler.gl/layers';\nimport {media} from '@kepler.gl/styles';\n\nMapLegendPanelFactory.deps = [MapControlTooltipFactory, MapControlPanelFactory, MapLegendFactory];\n\nconst PinToBottom = styled.div`\n  position: absolute;\n  bottom: ${DIMENSIONS.mapControl.mapLegend.pinned.bottom}px;\n  right: ${DIMENSIONS.mapControl.mapLegend.pinned.right}px;\n  ${media.portable`\n    bottom: 0px;\n    right: 0px;\n    min-width: ${DIMENSIONS.mapControl.width + DIMENSIONS.mapControl.mapLegend.pinned.right}px;\n    .map-control-panel {\n      min-height: 215px;\n      margin-bottom: 0px;\n    };\n  `};\n`;\n\ninterface MapLegendPanelIcons {\n  legend: ComponentType<any>;\n}\n\nexport type MapLegendPanelProps = {\n  layers: ReadonlyArray<Layer>;\n  scale: number;\n  onToggleMapControl: (control: string) => void;\n  isExport: boolean;\n  logoComponent: Element;\n  actionIcons: MapLegendPanelIcons;\n  mapControls: MapControls;\n  mapHeight?: number;\n};\n\nfunction MapLegendPanelFactory(MapControlTooltip, MapControlPanel, MapLegend) {\n  const defaultActionIcons = {\n    legend: Legend\n  };\n\n  /** @type {import('./map-legend-panel').MapLegendPanelComponent} */\n  const MapLegendPanel: React.FC<MapLegendPanelProps> = ({\n    layers,\n    mapControls,\n    scale,\n    onToggleMapControl,\n    isExport,\n    logoComponent,\n    actionIcons = defaultActionIcons,\n    mapHeight\n  }) => {\n    const mapLegend = mapControls?.mapLegend || ({} as MapControl);\n    const {active: isPinned} = mapLegend || {};\n\n    const onClick = () => {\n      if (mapControls?.mapDraw?.active) {\n        onToggleMapControl('mapDraw');\n      }\n    };\n    const [tippyInstance, setTippyInstance] = useState(null);\n    const onCloseClick = e => {\n      e.preventDefault();\n      onToggleMapControl('mapLegend');\n    };\n    const onPinClick = e => {\n      e.preventDefault();\n      if (tippyInstance) {\n        // @ts-ignore\n        tippyInstance.hide();\n      }\n      onToggleMapControl('mapLegend');\n    };\n\n    if (!mapLegend.show) {\n      return null;\n    }\n    const mapControlPanel = (\n      <MapControlPanel\n        scale={scale}\n        header={'header.layerLegend'}\n        isPinned={true}\n        {...(isPinned\n          ? {\n              onClick: onCloseClick,\n              pinnable: false,\n              disableClose: false\n            }\n          : {\n              onPinClick,\n              pinnable: true,\n              disableClose: true\n            })}\n        isExport={isExport}\n        logoComponent={logoComponent}\n      >\n        <MapLegend layers={layers} mapHeight={mapHeight} />\n      </MapControlPanel>\n    );\n\n    if (isPinned) {\n      // Pinned panel is not supported in export mode\n      if (isExport) {\n        return mapControlPanel;\n      }\n      const pinnedPanel = <PinToBottom>{mapControlPanel}</PinToBottom>;\n      return createPortal(pinnedPanel, document.body);\n    }\n\n    return (\n      // The outer div is to prevent an accessibility warning from Tippy\n      <div>\n        {/* \n  // @ts-ignore */}\n        <LazyTippy\n          interactive={true}\n          trigger=\"click\"\n          placement=\"left-start\"\n          onCreate={setTippyInstance}\n          render={attrs => <div {...attrs}>{mapControlPanel}</div>}\n          appendTo=\"parent\"\n        >\n          <div>\n            <MapControlTooltip id=\"show-legend\" message=\"tooltip.showLegend\">\n              <MapControlButton className=\"map-control-button show-legend\" onClick={onClick}>\n                <actionIcons.legend height=\"22px\" />\n              </MapControlButton>\n            </MapControlTooltip>\n          </div>\n        </LazyTippy>\n      </div>\n    );\n  };\n\n  MapLegendPanel.displayName = 'MapLegendPanel';\n  return MapLegendPanel;\n}\n\nexport default MapLegendPanelFactory;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}