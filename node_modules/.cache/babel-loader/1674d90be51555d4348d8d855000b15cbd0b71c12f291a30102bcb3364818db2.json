{"ast":null,"code":"import _get from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _objectSpread from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { clamp } from '@math.gl/core';\nimport Controller from './controller';\nimport ViewState from './view-state';\nimport { normalizeViewportProps } from '@math.gl/web-mercator';\nimport assert from '../utils/assert';\nimport LinearInterpolator from '../transitions/linear-interpolator';\nvar PITCH_MOUSE_THRESHOLD = 5;\nvar PITCH_ACCEL = 1.2;\nexport var MapState = /*#__PURE__*/function (_ViewState) {\n  _inherits(MapState, _ViewState);\n  var _super = _createSuper(MapState);\n  function MapState(options) {\n    var _this;\n    _classCallCheck(this, MapState);\n    var width = options.width,\n      height = options.height,\n      latitude = options.latitude,\n      longitude = options.longitude,\n      zoom = options.zoom,\n      _options$bearing = options.bearing,\n      bearing = _options$bearing === void 0 ? 0 : _options$bearing,\n      _options$pitch = options.pitch,\n      pitch = _options$pitch === void 0 ? 0 : _options$pitch,\n      _options$altitude = options.altitude,\n      altitude = _options$altitude === void 0 ? 1.5 : _options$altitude,\n      _options$position = options.position,\n      position = _options$position === void 0 ? [0, 0, 0] : _options$position,\n      _options$maxZoom = options.maxZoom,\n      maxZoom = _options$maxZoom === void 0 ? 20 : _options$maxZoom,\n      _options$minZoom = options.minZoom,\n      minZoom = _options$minZoom === void 0 ? 0 : _options$minZoom,\n      _options$maxPitch = options.maxPitch,\n      maxPitch = _options$maxPitch === void 0 ? 60 : _options$maxPitch,\n      _options$minPitch = options.minPitch,\n      minPitch = _options$minPitch === void 0 ? 0 : _options$minPitch,\n      startPanLngLat = options.startPanLngLat,\n      startZoomLngLat = options.startZoomLngLat,\n      startRotatePos = options.startRotatePos,\n      startBearing = options.startBearing,\n      startPitch = options.startPitch,\n      startZoom = options.startZoom,\n      _options$normalize = options.normalize,\n      normalize = _options$normalize === void 0 ? true : _options$normalize;\n    assert(Number.isFinite(longitude));\n    assert(Number.isFinite(latitude));\n    assert(Number.isFinite(zoom));\n    _this = _super.call(this, {\n      width: width,\n      height: height,\n      latitude: latitude,\n      longitude: longitude,\n      zoom: zoom,\n      bearing: bearing,\n      pitch: pitch,\n      altitude: altitude,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n      maxPitch: maxPitch,\n      minPitch: minPitch,\n      normalize: normalize,\n      position: position\n    }, {\n      startPanLngLat: startPanLngLat,\n      startZoomLngLat: startZoomLngLat,\n      startRotatePos: startRotatePos,\n      startBearing: startBearing,\n      startPitch: startPitch,\n      startZoom: startZoom\n    });\n    _defineProperty(_assertThisInitialized(_this), \"makeViewport\", void 0);\n    _this.makeViewport = options.makeViewport;\n    return _this;\n  }\n  _createClass(MapState, [{\n    key: \"panStart\",\n    value: function panStart(_ref) {\n      var pos = _ref.pos;\n      return this._getUpdatedState({\n        startPanLngLat: this._unproject(pos)\n      });\n    }\n  }, {\n    key: \"pan\",\n    value: function pan(_ref2) {\n      var pos = _ref2.pos,\n        startPos = _ref2.startPos;\n      var startPanLngLat = this.getState().startPanLngLat || this._unproject(startPos);\n      if (!startPanLngLat) {\n        return this;\n      }\n      var viewport = this.makeViewport(this.getViewportProps());\n      var newProps = viewport.panByPosition(startPanLngLat, pos);\n      return this._getUpdatedState(newProps);\n    }\n  }, {\n    key: \"panEnd\",\n    value: function panEnd() {\n      return this._getUpdatedState({\n        startPanLngLat: null\n      });\n    }\n  }, {\n    key: \"rotateStart\",\n    value: function rotateStart(_ref3) {\n      var pos = _ref3.pos;\n      return this._getUpdatedState({\n        startRotatePos: pos,\n        startBearing: this.getViewportProps().bearing,\n        startPitch: this.getViewportProps().pitch\n      });\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(_ref4) {\n      var pos = _ref4.pos,\n        _ref4$deltaAngleX = _ref4.deltaAngleX,\n        deltaAngleX = _ref4$deltaAngleX === void 0 ? 0 : _ref4$deltaAngleX,\n        _ref4$deltaAngleY = _ref4.deltaAngleY,\n        deltaAngleY = _ref4$deltaAngleY === void 0 ? 0 : _ref4$deltaAngleY;\n      var _this$getState = this.getState(),\n        startRotatePos = _this$getState.startRotatePos,\n        startBearing = _this$getState.startBearing,\n        startPitch = _this$getState.startPitch;\n      if (!startRotatePos || startBearing === undefined || startPitch === undefined) {\n        return this;\n      }\n      var newRotation;\n      if (pos) {\n        newRotation = this._getNewRotation(pos, startRotatePos, startPitch, startBearing);\n      } else {\n        newRotation = {\n          bearing: startBearing + deltaAngleX,\n          pitch: startPitch + deltaAngleY\n        };\n      }\n      return this._getUpdatedState(newRotation);\n    }\n  }, {\n    key: \"rotateEnd\",\n    value: function rotateEnd() {\n      return this._getUpdatedState({\n        startBearing: null,\n        startPitch: null\n      });\n    }\n  }, {\n    key: \"zoomStart\",\n    value: function zoomStart(_ref5) {\n      var pos = _ref5.pos;\n      return this._getUpdatedState({\n        startZoomLngLat: this._unproject(pos),\n        startZoom: this.getViewportProps().zoom\n      });\n    }\n  }, {\n    key: \"zoom\",\n    value: function zoom(_ref6) {\n      var pos = _ref6.pos,\n        startPos = _ref6.startPos,\n        scale = _ref6.scale;\n      var _this$getState2 = this.getState(),\n        startZoom = _this$getState2.startZoom,\n        startZoomLngLat = _this$getState2.startZoomLngLat;\n      if (!startZoomLngLat) {\n        startZoom = this.getViewportProps().zoom;\n        startZoomLngLat = this._unproject(startPos) || this._unproject(pos);\n      }\n      if (!startZoomLngLat) {\n        return this;\n      }\n      var _this$getViewportProp = this.getViewportProps(),\n        maxZoom = _this$getViewportProp.maxZoom,\n        minZoom = _this$getViewportProp.minZoom;\n      var zoom = startZoom + Math.log2(scale);\n      zoom = clamp(zoom, minZoom, maxZoom);\n      var zoomedViewport = this.makeViewport(_objectSpread(_objectSpread({}, this.getViewportProps()), {}, {\n        zoom: zoom\n      }));\n      return this._getUpdatedState(_objectSpread({\n        zoom: zoom\n      }, zoomedViewport.panByPosition(startZoomLngLat, pos)));\n    }\n  }, {\n    key: \"zoomEnd\",\n    value: function zoomEnd() {\n      return this._getUpdatedState({\n        startZoomLngLat: null,\n        startZoom: null\n      });\n    }\n  }, {\n    key: \"zoomIn\",\n    value: function zoomIn() {\n      var speed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2;\n      return this._zoomFromCenter(speed);\n    }\n  }, {\n    key: \"zoomOut\",\n    value: function zoomOut() {\n      var speed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2;\n      return this._zoomFromCenter(1 / speed);\n    }\n  }, {\n    key: \"moveLeft\",\n    value: function moveLeft() {\n      var speed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;\n      return this._panFromCenter([speed, 0]);\n    }\n  }, {\n    key: \"moveRight\",\n    value: function moveRight() {\n      var speed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;\n      return this._panFromCenter([-speed, 0]);\n    }\n  }, {\n    key: \"moveUp\",\n    value: function moveUp() {\n      var speed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;\n      return this._panFromCenter([0, speed]);\n    }\n  }, {\n    key: \"moveDown\",\n    value: function moveDown() {\n      var speed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;\n      return this._panFromCenter([0, -speed]);\n    }\n  }, {\n    key: \"rotateLeft\",\n    value: function rotateLeft() {\n      var speed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 15;\n      return this._getUpdatedState({\n        bearing: this.getViewportProps().bearing - speed\n      });\n    }\n  }, {\n    key: \"rotateRight\",\n    value: function rotateRight() {\n      var speed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 15;\n      return this._getUpdatedState({\n        bearing: this.getViewportProps().bearing + speed\n      });\n    }\n  }, {\n    key: \"rotateUp\",\n    value: function rotateUp() {\n      var speed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n      return this._getUpdatedState({\n        pitch: this.getViewportProps().pitch + speed\n      });\n    }\n  }, {\n    key: \"rotateDown\",\n    value: function rotateDown() {\n      var speed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n      return this._getUpdatedState({\n        pitch: this.getViewportProps().pitch - speed\n      });\n    }\n  }, {\n    key: \"shortestPathFrom\",\n    value: function shortestPathFrom(viewState) {\n      var fromProps = viewState.getViewportProps();\n      var props = _objectSpread({}, this.getViewportProps());\n      var bearing = props.bearing,\n        longitude = props.longitude;\n      if (Math.abs(bearing - fromProps.bearing) > 180) {\n        props.bearing = bearing < 0 ? bearing + 360 : bearing - 360;\n      }\n      if (Math.abs(longitude - fromProps.longitude) > 180) {\n        props.longitude = longitude < 0 ? longitude + 360 : longitude - 360;\n      }\n      return props;\n    }\n  }, {\n    key: \"applyConstraints\",\n    value: function applyConstraints(props) {\n      var maxZoom = props.maxZoom,\n        minZoom = props.minZoom,\n        zoom = props.zoom;\n      props.zoom = clamp(zoom, minZoom, maxZoom);\n      var maxPitch = props.maxPitch,\n        minPitch = props.minPitch,\n        pitch = props.pitch;\n      props.pitch = clamp(pitch, minPitch, maxPitch);\n      var _props$normalize = props.normalize,\n        normalize = _props$normalize === void 0 ? true : _props$normalize;\n      if (normalize) {\n        Object.assign(props, normalizeViewportProps(props));\n      }\n      return props;\n    }\n  }, {\n    key: \"_zoomFromCenter\",\n    value: function _zoomFromCenter(scale) {\n      var _this$getViewportProp2 = this.getViewportProps(),\n        width = _this$getViewportProp2.width,\n        height = _this$getViewportProp2.height;\n      return this.zoom({\n        pos: [width / 2, height / 2],\n        scale: scale\n      });\n    }\n  }, {\n    key: \"_panFromCenter\",\n    value: function _panFromCenter(offset) {\n      var _this$getViewportProp3 = this.getViewportProps(),\n        width = _this$getViewportProp3.width,\n        height = _this$getViewportProp3.height;\n      return this.pan({\n        startPos: [width / 2, height / 2],\n        pos: [width / 2 + offset[0], height / 2 + offset[1]]\n      });\n    }\n  }, {\n    key: \"_getUpdatedState\",\n    value: function _getUpdatedState(newProps) {\n      return new this.constructor(_objectSpread(_objectSpread(_objectSpread({\n        makeViewport: this.makeViewport\n      }, this.getViewportProps()), this.getState()), newProps));\n    }\n  }, {\n    key: \"_unproject\",\n    value: function _unproject(pos) {\n      var viewport = this.makeViewport(this.getViewportProps());\n      return pos && viewport.unproject(pos);\n    }\n  }, {\n    key: \"_getNewRotation\",\n    value: function _getNewRotation(pos, startPos, startPitch, startBearing) {\n      var deltaX = pos[0] - startPos[0];\n      var deltaY = pos[1] - startPos[1];\n      var centerY = pos[1];\n      var startY = startPos[1];\n      var _this$getViewportProp4 = this.getViewportProps(),\n        width = _this$getViewportProp4.width,\n        height = _this$getViewportProp4.height;\n      var deltaScaleX = deltaX / width;\n      var deltaScaleY = 0;\n      if (deltaY > 0) {\n        if (Math.abs(height - startY) > PITCH_MOUSE_THRESHOLD) {\n          deltaScaleY = deltaY / (startY - height) * PITCH_ACCEL;\n        }\n      } else if (deltaY < 0) {\n        if (startY > PITCH_MOUSE_THRESHOLD) {\n          deltaScaleY = 1 - centerY / startY;\n        }\n      }\n      deltaScaleY = clamp(deltaScaleY, -1, 1);\n      var _this$getViewportProp5 = this.getViewportProps(),\n        minPitch = _this$getViewportProp5.minPitch,\n        maxPitch = _this$getViewportProp5.maxPitch;\n      var bearing = startBearing + 180 * deltaScaleX;\n      var pitch = startPitch;\n      if (deltaScaleY > 0) {\n        pitch = startPitch + deltaScaleY * (maxPitch - startPitch);\n      } else if (deltaScaleY < 0) {\n        pitch = startPitch - deltaScaleY * (minPitch - startPitch);\n      }\n      return {\n        pitch: pitch,\n        bearing: bearing\n      };\n    }\n  }]);\n  return MapState;\n}(ViewState);\nvar MapController = /*#__PURE__*/function (_Controller) {\n  _inherits(MapController, _Controller);\n  var _super2 = _createSuper(MapController);\n  function MapController() {\n    var _this2;\n    _classCallCheck(this, MapController);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this2 = _super2.call.apply(_super2, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this2), \"ControllerState\", MapState);\n    _defineProperty(_assertThisInitialized(_this2), \"transition\", {\n      transitionDuration: 300,\n      transitionInterpolator: new LinearInterpolator({\n        transitionProps: {\n          compare: ['longitude', 'latitude', 'zoom', 'bearing', 'pitch', 'position'],\n          required: ['longitude', 'latitude', 'zoom']\n        }\n      })\n    });\n    _defineProperty(_assertThisInitialized(_this2), \"dragMode\", 'pan');\n    return _this2;\n  }\n  _createClass(MapController, [{\n    key: \"setProps\",\n    value: function setProps(props) {\n      props.position = props.position || [0, 0, 0];\n      var oldProps = this.props;\n      _get(_getPrototypeOf(MapController.prototype), \"setProps\", this).call(this, props);\n      var dimensionChanged = !oldProps || oldProps.height !== props.height;\n      if (dimensionChanged) {\n        this.updateViewport(new this.ControllerState(_objectSpread(_objectSpread({\n          makeViewport: this.makeViewport\n        }, props), this.state)));\n      }\n    }\n  }]);\n  return MapController;\n}(Controller);\nexport { MapController as default };","map":{"version":3,"names":["clamp","Controller","ViewState","normalizeViewportProps","assert","LinearInterpolator","PITCH_MOUSE_THRESHOLD","PITCH_ACCEL","MapState","_ViewState","_inherits","_super","_createSuper","options","_this","_classCallCheck","width","height","latitude","longitude","zoom","_options$bearing","bearing","_options$pitch","pitch","_options$altitude","altitude","_options$position","position","_options$maxZoom","maxZoom","_options$minZoom","minZoom","_options$maxPitch","maxPitch","_options$minPitch","minPitch","startPanLngLat","startZoomLngLat","startRotatePos","startBearing","startPitch","startZoom","_options$normalize","normalize","Number","isFinite","call","_defineProperty","_assertThisInitialized","makeViewport","_createClass","key","value","panStart","_ref","pos","_getUpdatedState","_unproject","pan","_ref2","startPos","getState","viewport","getViewportProps","newProps","panByPosition","panEnd","rotateStart","_ref3","rotate","_ref4","_ref4$deltaAngleX","deltaAngleX","_ref4$deltaAngleY","deltaAngleY","_this$getState","undefined","newRotation","_getNewRotation","rotateEnd","zoomStart","_ref5","_ref6","scale","_this$getState2","_this$getViewportProp","Math","log2","zoomedViewport","_objectSpread","zoomEnd","zoomIn","speed","arguments","length","_zoomFromCenter","zoomOut","moveLeft","_panFromCenter","moveRight","moveUp","moveDown","rotateLeft","rotateRight","rotateUp","rotateDown","shortestPathFrom","viewState","fromProps","props","abs","applyConstraints","_props$normalize","Object","assign","_this$getViewportProp2","offset","_this$getViewportProp3","constructor","unproject","deltaX","deltaY","centerY","startY","_this$getViewportProp4","deltaScaleX","deltaScaleY","_this$getViewportProp5","MapController","_Controller","_super2","_this2","_len","args","Array","_key","apply","concat","transitionDuration","transitionInterpolator","transitionProps","compare","required","setProps","oldProps","_get","_getPrototypeOf","prototype","dimensionChanged","updateViewport","ControllerState","state","default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/core/src/controllers/map-controller.ts"],"sourcesContent":["import {clamp} from '@math.gl/core';\nimport Controller, {ControllerProps} from './controller';\nimport ViewState from './view-state';\nimport {normalizeViewportProps} from '@math.gl/web-mercator';\nimport assert from '../utils/assert';\n\nimport LinearInterpolator from '../transitions/linear-interpolator';\nimport type Viewport from '../viewports/viewport';\n\nconst PITCH_MOUSE_THRESHOLD = 5;\nconst PITCH_ACCEL = 1.2;\n\nexport type MapStateProps = {\n  /** Mapbox viewport properties */\n  /** The width of the viewport */\n  width: number;\n  /** The height of the viewport */\n  height: number;\n  /** The latitude at the center of the viewport */\n  latitude: number;\n  /** The longitude at the center of the viewport */\n  longitude: number;\n  /** The tile zoom level of the map. */\n  zoom: number;\n  /** The bearing of the viewport in degrees */\n  bearing?: number;\n  /** The pitch of the viewport in degrees */\n  pitch?: number;\n  /**\n   * Specify the altitude of the viewport camera\n   * Unit: map heights, default 1.5\n   * Non-public API, see https://github.com/mapbox/mapbox-gl-js/issues/1137\n   */\n  altitude?: number;\n  /** Viewport position */\n  position?: [number, number, number];\n\n  /** Viewport constraints */\n  maxZoom?: number;\n  minZoom?: number;\n  maxPitch?: number;\n  minPitch?: number;\n\n  /** Normalize viewport props to fit map height into viewport. Default `true` */\n  normalize?: boolean;\n};\n\ntype MapStateInternal = {\n  /** Interaction states, required to calculate change during transform */\n  /* The point on map being grabbed when the operation first started */\n  startPanLngLat?: [number, number];\n  /* Center of the zoom when the operation first started */\n  startZoomLngLat?: [number, number];\n  /* Pointer position when rotation started */\n  startRotatePos?: [number, number];\n  /** Bearing when current perspective rotate operation started */\n  startBearing?: number;\n  /** Pitch when current perspective rotate operation started */\n  startPitch?: number;\n  /** Zoom when current zoom operation started */\n  startZoom?: number;\n};\n\n/* Utils */\n\nexport class MapState extends ViewState<MapState, MapStateProps, MapStateInternal> {\n  makeViewport: (props: Record<string, any>) => Viewport;\n\n  constructor(\n    options: MapStateProps &\n      MapStateInternal & {\n        makeViewport: (props: Record<string, any>) => Viewport;\n      }\n  ) {\n    const {\n      /** Mapbox viewport properties */\n      /** The width of the viewport */\n      width,\n      /** The height of the viewport */\n      height,\n      /** The latitude at the center of the viewport */\n      latitude,\n      /** The longitude at the center of the viewport */\n      longitude,\n      /** The tile zoom level of the map. */\n      zoom,\n      /** The bearing of the viewport in degrees */\n      bearing = 0,\n      /** The pitch of the viewport in degrees */\n      pitch = 0,\n      /**\n       * Specify the altitude of the viewport camera\n       * Unit: map heights, default 1.5\n       * Non-public API, see https://github.com/mapbox/mapbox-gl-js/issues/1137\n       */\n      altitude = 1.5,\n      /** Viewport position */\n      position = [0, 0, 0],\n\n      /** Viewport constraints */\n      maxZoom = 20,\n      minZoom = 0,\n      maxPitch = 60,\n      minPitch = 0,\n\n      /** Interaction states, required to calculate change during transform */\n      /* The point on map being grabbed when the operation first started */\n      startPanLngLat,\n      /* Center of the zoom when the operation first started */\n      startZoomLngLat,\n      /* Pointer position when rotation started */\n      startRotatePos,\n      /** Bearing when current perspective rotate operation started */\n      startBearing,\n      /** Pitch when current perspective rotate operation started */\n      startPitch,\n      /** Zoom when current zoom operation started */\n      startZoom,\n\n      /** Normalize viewport props to fit map height into viewport */\n      normalize = true\n    } = options;\n\n    assert(Number.isFinite(longitude)); // `longitude` must be supplied\n    assert(Number.isFinite(latitude)); // `latitude` must be supplied\n    assert(Number.isFinite(zoom)); // `zoom` must be supplied\n\n    super(\n      {\n        width,\n        height,\n        latitude,\n        longitude,\n        zoom,\n        bearing,\n        pitch,\n        altitude,\n        maxZoom,\n        minZoom,\n        maxPitch,\n        minPitch,\n        normalize,\n        position\n      },\n      {\n        startPanLngLat,\n        startZoomLngLat,\n        startRotatePos,\n        startBearing,\n        startPitch,\n        startZoom\n      }\n    );\n\n    this.makeViewport = options.makeViewport;\n  }\n\n  /**\n   * Start panning\n   * @param {[Number, Number]} pos - position on screen where the pointer grabs\n   */\n  panStart({pos}: {pos: [number, number]}): MapState {\n    return this._getUpdatedState({\n      startPanLngLat: this._unproject(pos)\n    });\n  }\n\n  /**\n   * Pan\n   * @param {[Number, Number]} pos - position on screen where the pointer is\n   * @param {[Number, Number], optional} startPos - where the pointer grabbed at\n   *   the start of the operation. Must be supplied of `panStart()` was not called\n   */\n  pan({pos, startPos}: {pos: [number, number]; startPos?: [number, number]}): MapState {\n    const startPanLngLat = this.getState().startPanLngLat || this._unproject(startPos);\n\n    if (!startPanLngLat) {\n      return this;\n    }\n\n    const viewport = this.makeViewport(this.getViewportProps());\n    const newProps = viewport.panByPosition(startPanLngLat, pos);\n\n    return this._getUpdatedState(newProps);\n  }\n\n  /**\n   * End panning\n   * Must call if `panStart()` was called\n   */\n  panEnd(): MapState {\n    return this._getUpdatedState({\n      startPanLngLat: null\n    });\n  }\n\n  /**\n   * Start rotating\n   * @param {[Number, Number]} pos - position on screen where the center is\n   */\n  rotateStart({pos}: {pos: [number, number]}): MapState {\n    return this._getUpdatedState({\n      startRotatePos: pos,\n      startBearing: this.getViewportProps().bearing,\n      startPitch: this.getViewportProps().pitch\n    });\n  }\n\n  /**\n   * Rotate\n   * @param {[Number, Number]} pos - position on screen where the center is\n   */\n  rotate({\n    pos,\n    deltaAngleX = 0,\n    deltaAngleY = 0\n  }: {\n    pos?: [number, number];\n    deltaAngleX?: number;\n    deltaAngleY?: number;\n  }): MapState {\n    const {startRotatePos, startBearing, startPitch} = this.getState();\n\n    if (!startRotatePos || startBearing === undefined || startPitch === undefined) {\n      return this;\n    }\n    let newRotation;\n    if (pos) {\n      newRotation = this._getNewRotation(pos, startRotatePos, startPitch, startBearing);\n    } else {\n      newRotation = {\n        bearing: startBearing + deltaAngleX,\n        pitch: startPitch + deltaAngleY\n      };\n    }\n    return this._getUpdatedState(newRotation);\n  }\n\n  /**\n   * End rotating\n   * Must call if `rotateStart()` was called\n   */\n  rotateEnd(): MapState {\n    return this._getUpdatedState({\n      startBearing: null,\n      startPitch: null\n    });\n  }\n\n  /**\n   * Start zooming\n   * @param {[Number, Number]} pos - position on screen where the center is\n   */\n  zoomStart({pos}: {pos: [number, number]}): MapState {\n    return this._getUpdatedState({\n      startZoomLngLat: this._unproject(pos),\n      startZoom: this.getViewportProps().zoom\n    });\n  }\n\n  /**\n   * Zoom\n   * @param {[Number, Number]} pos - position on screen where the current center is\n   * @param {[Number, Number]} startPos - the center position at\n   *   the start of the operation. Must be supplied of `zoomStart()` was not called\n   * @param {Number} scale - a number between [0, 1] specifying the accumulated\n   *   relative scale.\n   */\n  zoom({\n    pos,\n    startPos,\n    scale\n  }: {\n    pos: [number, number];\n    startPos?: [number, number];\n    scale: number;\n  }): MapState {\n    // Make sure we zoom around the current mouse position rather than map center\n    let {startZoom, startZoomLngLat} = this.getState();\n\n    if (!startZoomLngLat) {\n      // We have two modes of zoom:\n      // scroll zoom that are discrete events (transform from the current zoom level),\n      // and pinch zoom that are continuous events (transform from the zoom level when\n      // pinch started).\n      // If startZoom state is defined, then use the startZoom state;\n      // otherwise assume discrete zooming\n      startZoom = this.getViewportProps().zoom;\n      startZoomLngLat = this._unproject(startPos) || this._unproject(pos);\n    }\n    if (!startZoomLngLat) {\n      return this;\n    }\n\n    const {maxZoom, minZoom} = this.getViewportProps();\n    let zoom = (startZoom as number) + Math.log2(scale);\n    zoom = clamp(zoom, minZoom, maxZoom);\n\n    const zoomedViewport = this.makeViewport({...this.getViewportProps(), zoom});\n\n    return this._getUpdatedState({\n      zoom,\n      ...zoomedViewport.panByPosition(startZoomLngLat, pos)\n    });\n  }\n\n  /**\n   * End zooming\n   * Must call if `zoomStart()` was called\n   */\n  zoomEnd(): MapState {\n    return this._getUpdatedState({\n      startZoomLngLat: null,\n      startZoom: null\n    });\n  }\n\n  zoomIn(speed: number = 2): MapState {\n    return this._zoomFromCenter(speed);\n  }\n\n  zoomOut(speed: number = 2): MapState {\n    return this._zoomFromCenter(1 / speed);\n  }\n\n  moveLeft(speed: number = 100): MapState {\n    return this._panFromCenter([speed, 0]);\n  }\n\n  moveRight(speed: number = 100): MapState {\n    return this._panFromCenter([-speed, 0]);\n  }\n\n  moveUp(speed: number = 100): MapState {\n    return this._panFromCenter([0, speed]);\n  }\n\n  moveDown(speed: number = 100): MapState {\n    return this._panFromCenter([0, -speed]);\n  }\n\n  rotateLeft(speed: number = 15): MapState {\n    return this._getUpdatedState({\n      bearing: this.getViewportProps().bearing - speed\n    });\n  }\n\n  rotateRight(speed: number = 15): MapState {\n    return this._getUpdatedState({\n      bearing: this.getViewportProps().bearing + speed\n    });\n  }\n\n  rotateUp(speed: number = 10): MapState {\n    return this._getUpdatedState({\n      pitch: this.getViewportProps().pitch + speed\n    });\n  }\n\n  rotateDown(speed: number = 10): MapState {\n    return this._getUpdatedState({\n      pitch: this.getViewportProps().pitch - speed\n    });\n  }\n\n  shortestPathFrom(viewState: MapState): MapStateProps {\n    // const endViewStateProps = new this.ControllerState(endProps).shortestPathFrom(startViewstate);\n    const fromProps = viewState.getViewportProps();\n    const props = {...this.getViewportProps()};\n    const {bearing, longitude} = props;\n\n    if (Math.abs(bearing - fromProps.bearing) > 180) {\n      props.bearing = bearing < 0 ? bearing + 360 : bearing - 360;\n    }\n    if (Math.abs(longitude - fromProps.longitude) > 180) {\n      props.longitude = longitude < 0 ? longitude + 360 : longitude - 360;\n    }\n    return props;\n  }\n\n  // Apply any constraints (mathematical or defined by _viewportProps) to map state\n  applyConstraints(props: Required<MapStateProps>): Required<MapStateProps> {\n    // Ensure zoom is within specified range\n    const {maxZoom, minZoom, zoom} = props;\n    props.zoom = clamp(zoom, minZoom, maxZoom);\n\n    // Ensure pitch is within specified range\n    const {maxPitch, minPitch, pitch} = props;\n    props.pitch = clamp(pitch, minPitch, maxPitch);\n\n    // Normalize viewport props to fit map height into viewport\n    const {normalize = true} = props;\n    if (normalize) {\n      Object.assign(props, normalizeViewportProps(props));\n    }\n\n    return props;\n  }\n\n  /* Private methods */\n\n  _zoomFromCenter(scale) {\n    const {width, height} = this.getViewportProps();\n    return this.zoom({\n      pos: [width / 2, height / 2],\n      scale\n    });\n  }\n\n  _panFromCenter(offset) {\n    const {width, height} = this.getViewportProps();\n    return this.pan({\n      startPos: [width / 2, height / 2],\n      pos: [width / 2 + offset[0], height / 2 + offset[1]]\n    });\n  }\n\n  _getUpdatedState(newProps): MapState {\n    // @ts-ignore\n    return new this.constructor({\n      makeViewport: this.makeViewport,\n      ...this.getViewportProps(),\n      ...this.getState(),\n      ...newProps\n    });\n  }\n\n  _unproject(pos?: [number, number]): [number, number] | undefined {\n    const viewport = this.makeViewport(this.getViewportProps());\n    // @ts-ignore\n    return pos && viewport.unproject(pos);\n  }\n\n  _getNewRotation(\n    pos: [number, number],\n    startPos: [number, number],\n    startPitch: number,\n    startBearing: number\n  ): {\n    pitch: number;\n    bearing: number;\n  } {\n    const deltaX = pos[0] - startPos[0];\n    const deltaY = pos[1] - startPos[1];\n    const centerY = pos[1];\n    const startY = startPos[1];\n    const {width, height} = this.getViewportProps();\n\n    const deltaScaleX = deltaX / width;\n    let deltaScaleY = 0;\n\n    if (deltaY > 0) {\n      if (Math.abs(height - startY) > PITCH_MOUSE_THRESHOLD) {\n        // Move from 0 to -1 as we drag upwards\n        deltaScaleY = (deltaY / (startY - height)) * PITCH_ACCEL;\n      }\n    } else if (deltaY < 0) {\n      if (startY > PITCH_MOUSE_THRESHOLD) {\n        // Move from 0 to 1 as we drag upwards\n        deltaScaleY = 1 - centerY / startY;\n      }\n    }\n    // clamp deltaScaleY to [-1, 1] so that rotation is constrained between minPitch and maxPitch.\n    // deltaScaleX does not need to be clamped as bearing does not have constraints.\n    deltaScaleY = clamp(deltaScaleY, -1, 1);\n\n    const {minPitch, maxPitch} = this.getViewportProps();\n\n    const bearing = startBearing + 180 * deltaScaleX;\n    let pitch = startPitch;\n    if (deltaScaleY > 0) {\n      // Gradually increase pitch\n      pitch = startPitch + deltaScaleY * (maxPitch - startPitch);\n    } else if (deltaScaleY < 0) {\n      // Gradually decrease pitch\n      pitch = startPitch - deltaScaleY * (minPitch - startPitch);\n    }\n\n    return {\n      pitch,\n      bearing\n    };\n  }\n}\n\nexport default class MapController extends Controller<MapState> {\n  ControllerState = MapState;\n\n  transition = {\n    transitionDuration: 300,\n    transitionInterpolator: new LinearInterpolator({\n      transitionProps: {\n        compare: ['longitude', 'latitude', 'zoom', 'bearing', 'pitch', 'position'],\n        required: ['longitude', 'latitude', 'zoom']\n      }\n    })\n  };\n\n  dragMode: 'pan' | 'rotate' = 'pan';\n\n  setProps(props: ControllerProps & MapStateProps) {\n    props.position = props.position || [0, 0, 0];\n    const oldProps = this.props;\n\n    super.setProps(props);\n\n    const dimensionChanged = !oldProps || oldProps.height !== props.height;\n    if (dimensionChanged) {\n      // Dimensions changed, normalize the props\n      this.updateViewport(\n        new this.ControllerState({\n          makeViewport: this.makeViewport,\n          ...props,\n          ...this.state\n        })\n      );\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}