{"ast":null,"code":"import _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar DEFAULT_ROW_COUNT = 100;\nvar RowTableBatchAggregator = /*#__PURE__*/function () {\n  function RowTableBatchAggregator(schema, options) {\n    _classCallCheck(this, RowTableBatchAggregator);\n    _defineProperty(this, \"schema\", void 0);\n    _defineProperty(this, \"options\", void 0);\n    _defineProperty(this, \"length\", 0);\n    _defineProperty(this, \"rows\", null);\n    _defineProperty(this, \"cursor\", 0);\n    _defineProperty(this, \"_headers\", []);\n    this.options = options;\n    this.schema = schema;\n    if (!Array.isArray(schema)) {\n      this._headers = [];\n      for (var key in schema) {\n        this._headers[schema[key].index] = schema[key].name;\n      }\n    }\n  }\n  _createClass(RowTableBatchAggregator, [{\n    key: \"rowCount\",\n    value: function rowCount() {\n      return this.length;\n    }\n  }, {\n    key: \"addArrayRow\",\n    value: function addArrayRow(row, cursor) {\n      if (Number.isFinite(cursor)) {\n        this.cursor = cursor;\n      }\n      this.rows = this.rows || new Array(DEFAULT_ROW_COUNT);\n      this.rows[this.length] = row;\n      this.length++;\n    }\n  }, {\n    key: \"addObjectRow\",\n    value: function addObjectRow(row, cursor) {\n      if (Number.isFinite(cursor)) {\n        this.cursor = cursor;\n      }\n      this.rows = this.rows || new Array(DEFAULT_ROW_COUNT);\n      this.rows[this.length] = row;\n      this.length++;\n    }\n  }, {\n    key: \"getBatch\",\n    value: function getBatch() {\n      var rows = this.rows;\n      if (!rows) {\n        return null;\n      }\n      rows = rows.slice(0, this.length);\n      this.rows = null;\n      var batch = {\n        shape: this.options.shape,\n        batchType: 'data',\n        data: rows,\n        length: this.length,\n        schema: this.schema,\n        cursor: this.cursor\n      };\n      return batch;\n    }\n  }]);\n  return RowTableBatchAggregator;\n}();\nexport { RowTableBatchAggregator as default };","map":{"version":3,"names":["DEFAULT_ROW_COUNT","RowTableBatchAggregator","schema","options","_classCallCheck","_defineProperty","Array","isArray","_headers","key","index","name","_createClass","value","rowCount","length","addArrayRow","row","cursor","Number","isFinite","rows","addObjectRow","getBatch","slice","batch","shape","batchType","data","default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@loaders.gl/schema/src/lib/batches/base-table-batch-aggregator.ts"],"sourcesContent":["import type {Schema} from '../schema/schema';\nimport type {TableBatch} from '../../category/table/table-types';\nimport {TableBatchAggregator, TableBatchOptions} from './table-batch-aggregator';\n\nconst DEFAULT_ROW_COUNT = 100;\n\nexport default class RowTableBatchAggregator implements TableBatchAggregator {\n  schema: Schema;\n  options: TableBatchOptions;\n\n  length: number = 0;\n  rows: any[] | null = null;\n  cursor: number = 0;\n  private _headers: string[] = [];\n\n  constructor(schema: Schema, options: TableBatchOptions) {\n    this.options = options;\n    this.schema = schema;\n\n    // schema is an array if there're no headers\n    // object if there are headers\n    if (!Array.isArray(schema)) {\n      this._headers = [];\n      for (const key in schema) {\n        this._headers[schema[key].index] = schema[key].name;\n      }\n    }\n  }\n\n  rowCount(): number {\n    return this.length;\n  }\n\n  addArrayRow(row: any[], cursor?: number): void {\n    if (Number.isFinite(cursor)) {\n      this.cursor = cursor as number;\n    }\n\n    this.rows = this.rows || new Array(DEFAULT_ROW_COUNT);\n    this.rows[this.length] = row;\n    this.length++;\n  }\n\n  addObjectRow(row: {[columnName: string]: any}, cursor?: number): void {\n    if (Number.isFinite(cursor)) {\n      this.cursor = cursor as number;\n    }\n\n    this.rows = this.rows || new Array(DEFAULT_ROW_COUNT);\n    this.rows[this.length] = row;\n    this.length++;\n  }\n\n  getBatch(): TableBatch | null {\n    let rows = this.rows;\n    if (!rows) {\n      return null;\n    }\n\n    rows = rows.slice(0, this.length);\n    this.rows = null;\n\n    const batch: TableBatch = {\n      shape: this.options.shape,\n      batchType: 'data',\n      data: rows,\n      length: this.length,\n      schema: this.schema,\n      cursor: this.cursor\n    };\n\n    return batch;\n  }\n}\n"],"mappings":";;;AAIA,IAAMA,iBAAiB,GAAG,GAAG;AAAA,IAERC,uBAAuB;EAS1C,SAAAA,wBAAYC,MAAc,EAAEC,OAA0B,EAAE;IAAAC,eAAA,OAAAH,uBAAA;IAAAI,eAAA;IAAAA,eAAA;IAAAA,eAAA,iBALvC,CAAC;IAAAA,eAAA,eACG,IAAI;IAAAA,eAAA,iBACR,CAAC;IAAAA,eAAA,mBACW,EAAE;IAG7B,IAAI,CAACF,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACD,MAAM,GAAGA,MAAM;IAIpB,IAAI,CAACI,KAAK,CAACC,OAAO,CAACL,MAAM,CAAC,EAAE;MAC1B,IAAI,CAACM,QAAQ,GAAG,EAAE;MAClB,KAAK,IAAMC,GAAG,IAAIP,MAAM,EAAE;QACxB,IAAI,CAACM,QAAQ,CAACN,MAAM,CAACO,GAAG,CAAC,CAACC,KAAK,CAAC,GAAGR,MAAM,CAACO,GAAG,CAAC,CAACE,IAAI;MACrD;IACF;EACF;EAAAC,YAAA,CAAAX,uBAAA;IAAAQ,GAAA;IAAAI,KAAA,EAEA,SAAAC,SAAA,EAAmB;MACjB,OAAO,IAAI,CAACC,MAAM;IACpB;EAAA;IAAAN,GAAA;IAAAI,KAAA,EAEA,SAAAG,YAAYC,GAAU,EAAEC,MAAe,EAAQ;MAC7C,IAAIC,MAAM,CAACC,QAAQ,CAACF,MAAM,CAAC,EAAE;QAC3B,IAAI,CAACA,MAAM,GAAGA,MAAgB;MAChC;MAEA,IAAI,CAACG,IAAI,GAAG,IAAI,CAACA,IAAI,IAAI,IAAIf,KAAK,CAACN,iBAAiB,CAAC;MACrD,IAAI,CAACqB,IAAI,CAAC,IAAI,CAACN,MAAM,CAAC,GAAGE,GAAG;MAC5B,IAAI,CAACF,MAAM,EAAE;IACf;EAAA;IAAAN,GAAA;IAAAI,KAAA,EAEA,SAAAS,aAAaL,GAAgC,EAAEC,MAAe,EAAQ;MACpE,IAAIC,MAAM,CAACC,QAAQ,CAACF,MAAM,CAAC,EAAE;QAC3B,IAAI,CAACA,MAAM,GAAGA,MAAgB;MAChC;MAEA,IAAI,CAACG,IAAI,GAAG,IAAI,CAACA,IAAI,IAAI,IAAIf,KAAK,CAACN,iBAAiB,CAAC;MACrD,IAAI,CAACqB,IAAI,CAAC,IAAI,CAACN,MAAM,CAAC,GAAGE,GAAG;MAC5B,IAAI,CAACF,MAAM,EAAE;IACf;EAAA;IAAAN,GAAA;IAAAI,KAAA,EAEA,SAAAU,SAAA,EAA8B;MAC5B,IAAIF,IAAI,GAAG,IAAI,CAACA,IAAI;MACpB,IAAI,CAACA,IAAI,EAAE;QACT,OAAO,IAAI;MACb;MAEAA,IAAI,GAAGA,IAAI,CAACG,KAAK,CAAC,CAAC,EAAE,IAAI,CAACT,MAAM,CAAC;MACjC,IAAI,CAACM,IAAI,GAAG,IAAI;MAEhB,IAAMI,KAAiB,GAAG;QACxBC,KAAK,EAAE,IAAI,CAACvB,OAAO,CAACuB,KAAK;QACzBC,SAAS,EAAE,MAAM;QACjBC,IAAI,EAAEP,IAAI;QACVN,MAAM,EAAE,IAAI,CAACA,MAAM;QACnBb,MAAM,EAAE,IAAI,CAACA,MAAM;QACnBgB,MAAM,EAAE,IAAI,CAACA;MACf,CAAC;MAED,OAAOO,KAAK;IACd;EAAA;EAAA,OAAAxB,uBAAA;AAAA;AAAA,SAlEmBA,uBAAuB,IAAA4B,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}