{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _get from \"@babel/runtime/helpers/esm/get\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nimport { default as JSONParser } from './json-parser';\nimport JSONPath from '../jsonpath/jsonpath';\nvar StreamingJSONParser = function (_JSONParser) {\n  _inherits(StreamingJSONParser, _JSONParser);\n  var _super = _createSuper(StreamingJSONParser);\n  function StreamingJSONParser() {\n    var _this;\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, StreamingJSONParser);\n    _this = _super.call(this);\n    var jsonpaths = options.jsonpaths || [];\n    _this.jsonPaths = jsonpaths.map(function (jsonpath) {\n      return new JSONPath(jsonpath);\n    });\n    _this.streamingJsonPath = null;\n    _this.streamingArray = null;\n    _this.topLevelObject = null;\n    _this._extendParser();\n    return _this;\n  }\n  _createClass(StreamingJSONParser, [{\n    key: \"write\",\n    value: function write(chunk) {\n      _get(_getPrototypeOf(StreamingJSONParser.prototype), \"write\", this).call(this, chunk);\n      var array = [];\n      if (this.streamingArray) {\n        array = _toConsumableArray(this.streamingArray);\n        this.streamingArray.length = 0;\n      }\n      return array;\n    }\n  }, {\n    key: \"getPartialResult\",\n    value: function getPartialResult() {\n      return this.topLevelObject;\n    }\n  }, {\n    key: \"getStreamingJsonPath\",\n    value: function getStreamingJsonPath() {\n      return this.streamingJsonPath;\n    }\n  }, {\n    key: \"getStreamingJsonPathAsString\",\n    value: function getStreamingJsonPathAsString() {\n      return this.streamingJsonPath && this.streamingJsonPath.toString();\n    }\n  }, {\n    key: \"getJsonPath\",\n    value: function getJsonPath() {\n      return this.jsonpath;\n    }\n  }, {\n    key: \"_matchJSONPath\",\n    value: function _matchJSONPath() {\n      var currentPath = this.getJsonPath();\n      if (this.jsonPaths.length === 0) {\n        return true;\n      }\n      var _iterator = _createForOfIteratorHelper(this.jsonPaths),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var jsonPath = _step.value;\n          if (jsonPath.equals(currentPath)) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return false;\n    }\n  }, {\n    key: \"_extendParser\",\n    value: function _extendParser() {\n      var _this2 = this;\n      this.parser.onopenarray = function () {\n        if (!_this2.streamingArray) {\n          if (_this2._matchJSONPath()) {\n            _this2.streamingJsonPath = _this2.getJsonPath().clone();\n            _this2.streamingArray = [];\n            _this2._openArray(_this2.streamingArray);\n            return;\n          }\n        }\n        _this2._openArray();\n      };\n      this.parser.onopenobject = function (name) {\n        if (!_this2.topLevelObject) {\n          _this2.topLevelObject = {};\n          _this2._openObject(_this2.topLevelObject);\n        } else {\n          _this2._openObject({});\n        }\n        if (typeof name !== 'undefined') {\n          _this2.parser.onkey(name);\n        }\n      };\n    }\n  }]);\n  return StreamingJSONParser;\n}(JSONParser);\nexport { StreamingJSONParser as default };","map":{"version":3,"names":["default","JSONParser","JSONPath","StreamingJSONParser","_this","options","arguments","length","undefined","_classCallCheck","_super","call","jsonpaths","jsonPaths","map","jsonpath","streamingJsonPath","streamingArray","topLevelObject","_extendParser","chunk","_get","_getPrototypeOf","prototype","array","_toConsumableArray","toString","currentPath","getJsonPath","_iterator","_createForOfIteratorHelper","_step","s","n","done","jsonPath","value","equals","err","e","f","_this2","parser","onopenarray","_matchJSONPath","clone","_openArray","onopenobject","name","_openObject","onkey"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@loaders.gl/json/src/lib/parser/streaming-json-parser.js"],"sourcesContent":["import {default as JSONParser} from './json-parser';\nimport JSONPath from '../jsonpath/jsonpath';\n\n/**\n * The `StreamingJSONParser` looks for the first array in the JSON structure.\n * and emits an array of chunks\n */\nexport default class StreamingJSONParser extends JSONParser {\n  constructor(options = {}) {\n    super();\n    const jsonpaths = options.jsonpaths || [];\n    this.jsonPaths = jsonpaths.map(jsonpath => new JSONPath(jsonpath));\n    this.streamingJsonPath = null;\n    this.streamingArray = null;\n    this.topLevelObject = null;\n    this._extendParser();\n  }\n\n  /**\n   * write REDEFINITION\n   * - super.write() chunk to parser\n   * - get the contents (so far) of \"topmost-level\" array as batch of rows\n   * - clear top-level array\n   * - return the batch of rows\\\n   */\n  write(chunk) {\n    super.write(chunk);\n    let array = [];\n    if (this.streamingArray) {\n      array = [...this.streamingArray];\n      this.streamingArray.length = 0;\n    }\n    return array;\n  }\n\n  /**\n   * Returns a partially formed result object\n   * Useful for returning the \"wrapper\" object when array is not top level\n   * e.g. GeoJSON\n   */\n  getPartialResult() {\n    return this.topLevelObject;\n  }\n\n  getStreamingJsonPath() {\n    return this.streamingJsonPath;\n  }\n\n  getStreamingJsonPathAsString() {\n    return this.streamingJsonPath && this.streamingJsonPath.toString();\n  }\n\n  getJsonPath() {\n    return this.jsonpath;\n  }\n\n  // PRIVATE METHODS\n\n  /**\n   * Checks is this.getJsonPath matches the jsonpaths provided in options\n   */\n  _matchJSONPath() {\n    const currentPath = this.getJsonPath();\n    // console.debug(`Testing JSONPath`, currentPath);\n\n    // Backwards compatibility, match any array\n    // TODO implement using wildcard once that is supported\n    if (this.jsonPaths.length === 0) {\n      return true;\n    }\n\n    for (const jsonPath of this.jsonPaths) {\n      if (jsonPath.equals(currentPath)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  _extendParser() {\n    // Redefine onopenarray to locate and inject value for top-level array\n    this.parser.onopenarray = () => {\n      if (!this.streamingArray) {\n        if (this._matchJSONPath()) {\n          // @ts-ignore\n          this.streamingJsonPath = this.getJsonPath().clone();\n          this.streamingArray = [];\n          this._openArray(this.streamingArray);\n          return;\n        }\n      }\n\n      this._openArray();\n    };\n\n    // Redefine onopenarray to inject value for top-level object\n    this.parser.onopenobject = name => {\n      if (!this.topLevelObject) {\n        this.topLevelObject = {};\n        this._openObject(this.topLevelObject);\n      } else {\n        this._openObject({});\n      }\n      if (typeof name !== 'undefined') {\n        this.parser.onkey(name);\n      }\n    };\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}