{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { _isImageFormatSupported } from '@loaders.gl/images';\nimport GLTFScenegraph from '../api/gltf-scenegraph';\nvar EXT_TEXTURE_WEBP = 'EXT_texture_webp';\nexport var name = EXT_TEXTURE_WEBP;\nexport function preprocess(gltfData, options) {\n  var scenegraph = new GLTFScenegraph(gltfData);\n  if (!_isImageFormatSupported('image/webp')) {\n    if (scenegraph.getRequiredExtensions().includes(EXT_TEXTURE_WEBP)) {\n      throw new Error(\"gltf: Required extension \".concat(EXT_TEXTURE_WEBP, \" not supported by browser\"));\n    }\n    return;\n  }\n  var json = scenegraph.json;\n  var _iterator = _createForOfIteratorHelper(json.textures || []),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var texture = _step.value;\n      var extension = scenegraph.getObjectExtension(texture, EXT_TEXTURE_WEBP);\n      if (extension) {\n        texture.source = extension.source;\n      }\n      scenegraph.removeObjectExtension(texture, EXT_TEXTURE_WEBP);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  scenegraph.removeExtension(EXT_TEXTURE_WEBP);\n}","map":{"version":3,"names":["_isImageFormatSupported","GLTFScenegraph","EXT_TEXTURE_WEBP","name","preprocess","gltfData","options","scenegraph","getRequiredExtensions","includes","Error","concat","json","_iterator","_createForOfIteratorHelper","textures","_step","s","n","done","texture","value","extension","getObjectExtension","source","removeObjectExtension","err","e","f","removeExtension"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@loaders.gl/gltf/src/lib/extensions/EXT_texture_webp.ts"],"sourcesContent":["// GLTF EXTENSION: EXT_TEXTURE_WEBP\n// https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/EXT_TEXTURE_WEBP\n/* eslint-disable camelcase */\n\nimport type {GLTF, GLTF_EXT_texture_webp} from '../types/gltf-types';\nimport type {GLTFLoaderOptions} from '../../gltf-loader';\n\nimport {_isImageFormatSupported} from '@loaders.gl/images';\nimport GLTFScenegraph from '../api/gltf-scenegraph';\n\nconst EXT_TEXTURE_WEBP = 'EXT_texture_webp';\n\n/** Extension name */\nexport const name = EXT_TEXTURE_WEBP;\n\n/**\n * Replaces a texture source reference with the extension texture\n * Done in preprocess() to prevent load of default image\n */\nexport function preprocess(gltfData: {json: GLTF}, options: GLTFLoaderOptions): void {\n  const scenegraph = new GLTFScenegraph(gltfData);\n\n  if (!_isImageFormatSupported('image/webp')) {\n    if (scenegraph.getRequiredExtensions().includes(EXT_TEXTURE_WEBP)) {\n      throw new Error(`gltf: Required extension ${EXT_TEXTURE_WEBP} not supported by browser`);\n    }\n    return;\n  }\n\n  const {json} = scenegraph;\n\n  for (const texture of json.textures || []) {\n    const extension = scenegraph.getObjectExtension<GLTF_EXT_texture_webp>(\n      texture,\n      EXT_TEXTURE_WEBP\n    );\n    if (extension) {\n      // TODO - if multiple texture extensions are present which one wins?\n      texture.source = extension.source;\n    }\n    scenegraph.removeObjectExtension(texture, EXT_TEXTURE_WEBP);\n  }\n\n  // Remove the top-level extension\n  scenegraph.removeExtension(EXT_TEXTURE_WEBP);\n}\n"],"mappings":";AAOA,SAAQA,uBAAuB,QAAO,oBAAoB;AAC1D,OAAOC,cAAc,MAAM,wBAAwB;AAEnD,IAAMC,gBAAgB,GAAG,kBAAkB;AAG3C,OAAO,IAAMC,IAAI,GAAGD,gBAAgB;AAMpC,OAAO,SAASE,UAAUA,CAACC,QAAsB,EAAEC,OAA0B,EAAQ;EACnF,IAAMC,UAAU,GAAG,IAAIN,cAAc,CAACI,QAAQ,CAAC;EAE/C,IAAI,CAACL,uBAAuB,CAAC,YAAY,CAAC,EAAE;IAC1C,IAAIO,UAAU,CAACC,qBAAqB,EAAE,CAACC,QAAQ,CAACP,gBAAgB,CAAC,EAAE;MACjE,MAAM,IAAIQ,KAAK,6BAAAC,MAAA,CAA6BT,gBAAgB,+BAA4B;IAC1F;IACA;EACF;EAEA,IAAOU,IAAA,GAAQL,UAAU,CAAlBK,IAAA;EAAkB,IAAAC,SAAA,GAAAC,0BAAA,CAEHF,IAAI,CAACG,QAAQ,IAAI,EAAE;IAAAC,KAAA;EAAA;IAAzC,KAAAH,SAAA,CAAAI,CAAA,MAAAD,KAAA,GAAAH,SAAA,CAAAK,CAAA,IAAAC,IAAA,GAA2C;MAAA,IAAhCC,OAAO,GAAAJ,KAAA,CAAAK,KAAA;MAChB,IAAMC,SAAS,GAAGf,UAAU,CAACgB,kBAAkB,CAC7CH,OAAO,EACPlB,gBAAgB,CACjB;MACD,IAAIoB,SAAS,EAAE;QAEbF,OAAO,CAACI,MAAM,GAAGF,SAAS,CAACE,MAAM;MACnC;MACAjB,UAAU,CAACkB,qBAAqB,CAACL,OAAO,EAAElB,gBAAgB,CAAC;IAC7D;EAAA,SAAAwB,GAAA;IAAAb,SAAA,CAAAc,CAAA,CAAAD,GAAA;EAAA;IAAAb,SAAA,CAAAe,CAAA;EAAA;EAGArB,UAAU,CAACsB,eAAe,CAAC3B,gBAAgB,CAAC;AAC9C"},"metadata":{},"sourceType":"module","externalDependencies":[]}