{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { isSVG, getBlob } from './svg-utils';\nimport parseToImage from './parse-to-image';\nvar EMPTY_OBJECT = {};\nvar imagebitmapOptionsSupported = true;\nexport default function parseToImageBitmap(_x, _x2, _x3) {\n  return _parseToImageBitmap.apply(this, arguments);\n}\nfunction _parseToImageBitmap() {\n  _parseToImageBitmap = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(arrayBuffer, options, url) {\n    var blob, image, imagebitmapOptions;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!isSVG(url)) {\n            _context.next = 7;\n            break;\n          }\n          _context.next = 3;\n          return parseToImage(arrayBuffer, options, url);\n        case 3:\n          image = _context.sent;\n          blob = image;\n          _context.next = 8;\n          break;\n        case 7:\n          blob = getBlob(arrayBuffer, url);\n        case 8:\n          imagebitmapOptions = options && options.imagebitmap;\n          _context.next = 11;\n          return safeCreateImageBitmap(blob, imagebitmapOptions);\n        case 11:\n          return _context.abrupt(\"return\", _context.sent);\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _parseToImageBitmap.apply(this, arguments);\n}\nfunction safeCreateImageBitmap(_x4) {\n  return _safeCreateImageBitmap.apply(this, arguments);\n}\nfunction _safeCreateImageBitmap() {\n  _safeCreateImageBitmap = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(blob) {\n    var imagebitmapOptions,\n      _args2 = arguments;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          imagebitmapOptions = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : null;\n          if (isEmptyObject(imagebitmapOptions) || !imagebitmapOptionsSupported) {\n            imagebitmapOptions = null;\n          }\n          if (!imagebitmapOptions) {\n            _context2.next = 13;\n            break;\n          }\n          _context2.prev = 3;\n          _context2.next = 6;\n          return createImageBitmap(blob, imagebitmapOptions);\n        case 6:\n          return _context2.abrupt(\"return\", _context2.sent);\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](3);\n          console.warn(_context2.t0);\n          imagebitmapOptionsSupported = false;\n        case 13:\n          _context2.next = 15;\n          return createImageBitmap(blob);\n        case 15:\n          return _context2.abrupt(\"return\", _context2.sent);\n        case 16:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[3, 9]]);\n  }));\n  return _safeCreateImageBitmap.apply(this, arguments);\n}\nfunction isEmptyObject(object) {\n  for (var key in object || EMPTY_OBJECT) {\n    return false;\n  }\n  return true;\n}","map":{"version":3,"names":["isSVG","getBlob","parseToImage","EMPTY_OBJECT","imagebitmapOptionsSupported","parseToImageBitmap","_x","_x2","_x3","_parseToImageBitmap","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","arrayBuffer","options","url","blob","image","imagebitmapOptions","wrap","_callee$","_context","prev","next","sent","imagebitmap","safeCreateImageBitmap","abrupt","stop","_x4","_safeCreateImageBitmap","_callee2","_args2","_callee2$","_context2","length","undefined","isEmptyObject","createImageBitmap","t0","console","warn","object","key"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@loaders.gl/images/src/lib/parsers/parse-to-image-bitmap.ts"],"sourcesContent":["import type {ImageLoaderOptions} from '../../image-loader';\nimport {isSVG, getBlob} from './svg-utils';\nimport parseToImage from './parse-to-image';\n\nconst EMPTY_OBJECT = {};\n\nlet imagebitmapOptionsSupported = true;\n\n/**\n * Asynchronously parses an array buffer into an ImageBitmap - this contains the decoded data\n * ImageBitmaps are supported on worker threads, but not supported on Edge, IE11 and Safari\n * https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmap#Browser_compatibility\n *\n * TODO - createImageBitmap supports source rect (5 param overload), pass through?\n */\nexport default async function parseToImageBitmap(\n  arrayBuffer: ArrayBuffer,\n  options: ImageLoaderOptions,\n  url?: string\n): Promise<ImageBitmap> {\n  let blob;\n\n  // Cannot parse SVG directly to ImageBitmap, parse to Image first\n  if (isSVG(url)) {\n    // Note: this only works on main thread\n    const image = await parseToImage(arrayBuffer, options, url);\n    blob = image;\n  } else {\n    // Create blob from the array buffer\n    blob = getBlob(arrayBuffer, url);\n  }\n\n  const imagebitmapOptions = options && options.imagebitmap;\n\n  return await safeCreateImageBitmap(blob, imagebitmapOptions);\n}\n\n/**\n * Safely creates an imageBitmap with options\n * *\n * Firefox crashes if imagebitmapOptions is supplied\n * Avoid supplying if not provided or supported, remember if not supported\n */\nasync function safeCreateImageBitmap(\n  blob: Blob,\n  imagebitmapOptions: ImageBitmapOptions | null = null\n): Promise<ImageBitmap> {\n  if (isEmptyObject(imagebitmapOptions) || !imagebitmapOptionsSupported) {\n    imagebitmapOptions = null;\n  }\n\n  if (imagebitmapOptions) {\n    try {\n      // @ts-ignore Options\n      return await createImageBitmap(blob, imagebitmapOptions);\n    } catch (error) {\n      console.warn(error); // eslint-disable-line\n      imagebitmapOptionsSupported = false;\n    }\n  }\n\n  return await createImageBitmap(blob);\n}\n\nfunction isEmptyObject(object) {\n  // @ts-ignore\n  for (const key in object || EMPTY_OBJECT) {\n    return false;\n  }\n  return true;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}