{"ast":null,"code":"import { log } from '@luma.gl/gltools';\nexport function checkProps(className, props, propChecks) {\n  var _propChecks$removedPr = propChecks.removedProps,\n    removedProps = _propChecks$removedPr === void 0 ? {} : _propChecks$removedPr,\n    _propChecks$deprecate = propChecks.deprecatedProps,\n    deprecatedProps = _propChecks$deprecate === void 0 ? {} : _propChecks$deprecate,\n    _propChecks$replacedP = propChecks.replacedProps,\n    replacedProps = _propChecks$replacedP === void 0 ? {} : _propChecks$replacedP;\n  for (var propName in removedProps) {\n    if (propName in props) {\n      var replacementProp = removedProps[propName];\n      var replacement = replacementProp ? \"\".concat(className, \".\").concat(removedProps[propName]) : 'N/A';\n      log.removed(\"\".concat(className, \".\").concat(propName), replacement)();\n    }\n  }\n  for (var _propName in deprecatedProps) {\n    if (_propName in props) {\n      var _replacementProp = deprecatedProps[_propName];\n      log.deprecated(\"\".concat(className, \".\").concat(_propName), \"\".concat(className, \".\").concat(_replacementProp))();\n    }\n  }\n  var newProps = null;\n  for (var _propName2 in replacedProps) {\n    if (_propName2 in props) {\n      var _replacementProp2 = replacedProps[_propName2];\n      log.deprecated(\"\".concat(className, \".\").concat(_propName2), \"\".concat(className, \".\").concat(_replacementProp2))();\n      newProps = newProps || Object.assign({}, props);\n      newProps[_replacementProp2] = props[_propName2];\n      delete newProps[_propName2];\n    }\n  }\n  return newProps || props;\n}","map":{"version":3,"names":["log","checkProps","className","props","propChecks","_propChecks$removedPr","removedProps","_propChecks$deprecate","deprecatedProps","_propChecks$replacedP","replacedProps","propName","replacementProp","replacement","concat","removed","deprecated","newProps","Object","assign"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@luma.gl/webgl/src/utils/check-props.js"],"sourcesContent":["/* Use as\nimport {checkProps} from '../util/check-props;'\n\nconst PROP_CHECKS = {\n  // Removed props no longer supported, print error and link to upgrade guide\n  removedProps: {\n  },\n  // Deprecated props\n  deprecatedProps: {\n    offset: 'accessor',\n    stride: 'accessor',\n    type: 'accessor',\n    size: 'accessor',\n    divisor: 'accessor',\n    normalized: 'accessor',\n    integer: 'accessor'\n  },\n  // Deprecated props that can be autosubstituted, print warning and return updated props object\n  replacedProps: {\n    bytes: 'byteLength'\n  }\n}\n\nclass Buffer {\n  setProps(props) {\n    checkProps('Buffer', props, PROP_CHECKS);\n  }\n}\n*/\nimport {log} from '@luma.gl/gltools';\n\nexport function checkProps(className, props, propChecks) {\n  const {removedProps = {}, deprecatedProps = {}, replacedProps = {}} = propChecks;\n\n  // removedProps: Removed props no longer supported\n  // print error and link to upgrade guide\n  for (const propName in removedProps) {\n    if (propName in props) {\n      const replacementProp = removedProps[propName];\n      const replacement = replacementProp ? `${className}.${removedProps[propName]}` : 'N/A';\n      log.removed(`${className}.${propName}`, replacement)();\n    }\n  }\n\n  // deprecatedProps: Deprecated props that can not be autosubstituted\n  // print warning and rely on caller to substitute\n  for (const propName in deprecatedProps) {\n    if (propName in props) {\n      const replacementProp = deprecatedProps[propName];\n      log.deprecated(`${className}.${propName}`, `${className}.${replacementProp}`)();\n    }\n  }\n\n  // replacedProps: Deprecated props that can be autosubstituted\n  // print warning and return updated props object\n  let newProps = null;\n  for (const propName in replacedProps) {\n    if (propName in props) {\n      const replacementProp = replacedProps[propName];\n      log.deprecated(`${className}.${propName}`, `${className}.${replacementProp}`)();\n      newProps = newProps || Object.assign({}, props);\n      newProps[replacementProp] = props[propName];\n      delete newProps[propName];\n    }\n  }\n\n  return newProps || props;\n}\n"],"mappings":"AA6BA,SAAQA,GAAR,QAAkB,kBAAlB;AAEA,OAAO,SAASC,UAATA,CAAoBC,SAApB,EAA+BC,KAA/B,EAAsCC,UAAtC,EAAkD;EACvD,IAAAC,qBAAA,GAAsED,UAAtE,CAAOE,YAAY;IAAZA,YAAY,GAAAD,qBAAA,cAAG,EAAhB,GAAAA,qBAAA;IAAAE,qBAAA,GAAgEH,UAAtE,CAA0BI,eAAe;IAAfA,eAAe,GAAAD,qBAAA,cAAG,EAAtC,GAAAA,qBAAA;IAAAE,qBAAA,GAAgEL,UAAtE,CAAgDM,aAAa;IAAbA,aAAa,GAAAD,qBAAA,cAAG,KAAAA,qBAAA;EAIhE,KAAK,IAAME,QAAX,IAAuBL,YAAvB,EAAqC;IACnC,IAAIK,QAAQ,IAAIR,KAAhB,EAAuB;MACrB,IAAMS,eAAe,GAAGN,YAAY,CAACK,QAAD,CAApC;MACA,IAAME,WAAW,GAAGD,eAAe,MAAAE,MAAA,CAAMZ,SAAN,OAAAY,MAAA,CAAmBR,YAAY,CAACK,QAAD,CAA/B,IAA8C,KAAjF;MACAX,GAAG,CAACe,OAAJ,IAAAD,MAAA,CAAeZ,SAAf,OAAAY,MAAA,CAA4BH,QAA5B,GAAwCE,WAAxC;IACD;EACF;EAID,KAAK,IAAMF,SAAX,IAAuBH,eAAvB,EAAwC;IACtC,IAAIG,SAAQ,IAAIR,KAAhB,EAAuB;MACrB,IAAMS,gBAAe,GAAGJ,eAAe,CAACG,SAAD,CAAvC;MACAX,GAAG,CAACgB,UAAJ,IAAAF,MAAA,CAAkBZ,SAAlB,OAAAY,MAAA,CAA+BH,SAA/B,MAAAG,MAAA,CAA8CZ,SAA9C,OAAAY,MAAA,CAA2DF,gBAA3D;IACD;EACF;EAID,IAAIK,QAAQ,GAAG,IAAf;EACA,KAAK,IAAMN,UAAX,IAAuBD,aAAvB,EAAsC;IACpC,IAAIC,UAAQ,IAAIR,KAAhB,EAAuB;MACrB,IAAMS,iBAAe,GAAGF,aAAa,CAACC,UAAD,CAArC;MACAX,GAAG,CAACgB,UAAJ,IAAAF,MAAA,CAAkBZ,SAAlB,OAAAY,MAAA,CAA+BH,UAA/B,MAAAG,MAAA,CAA8CZ,SAA9C,OAAAY,MAAA,CAA2DF,iBAA3D;MACAK,QAAQ,GAAGA,QAAQ,IAAIC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBhB,KAAlB,CAAvB;MACAc,QAAQ,CAACL,iBAAD,CAAR,GAA4BT,KAAK,CAACQ,UAAD,CAAjC;MACA,OAAOM,QAAQ,CAACN,UAAD,CAAf;IACD;EACF;EAED,OAAOM,QAAQ,IAAId,KAAnB;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}