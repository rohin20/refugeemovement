{"ast":null,"code":"import isOldIE from './is-old-ie';\nimport assert from './assert';\nvar GL_VENDOR = 0x1f00;\nvar GL_RENDERER = 0x1f01;\nvar GL_VERSION = 0x1f02;\nvar GL_SHADING_LANGUAGE_VERSION = 0x8b8c;\nvar WEBGL_FEATURES = {\n  GLSL_FRAG_DATA: ['WEBGL_draw_buffers', true],\n  GLSL_FRAG_DEPTH: ['EXT_frag_depth', true],\n  GLSL_DERIVATIVES: ['OES_standard_derivatives', true],\n  GLSL_TEXTURE_LOD: ['EXT_shader_texture_lod', true]\n};\nvar FEATURES = {};\nObject.keys(WEBGL_FEATURES).forEach(function (key) {\n  FEATURES[key] = key;\n});\nexport { FEATURES };\nfunction isWebGL2(gl) {\n  if (typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext) {\n    return true;\n  }\n  return Boolean(gl && gl._version === 2);\n}\nexport function getContextInfo(gl) {\n  var info = gl.getExtension('WEBGL_debug_renderer_info');\n  var vendor = gl.getParameter(info && info.UNMASKED_VENDOR_WEBGL || GL_VENDOR);\n  var renderer = gl.getParameter(info && info.UNMASKED_RENDERER_WEBGL || GL_RENDERER);\n  var gpuVendor = identifyGPUVendor(vendor, renderer);\n  var gpuInfo = {\n    gpuVendor: gpuVendor,\n    vendor: vendor,\n    renderer: renderer,\n    version: gl.getParameter(GL_VERSION),\n    shadingLanguageVersion: gl.getParameter(GL_SHADING_LANGUAGE_VERSION)\n  };\n  return gpuInfo;\n}\nfunction identifyGPUVendor(vendor, renderer) {\n  if (vendor.match(/NVIDIA/i) || renderer.match(/NVIDIA/i)) {\n    return 'NVIDIA';\n  }\n  if (vendor.match(/INTEL/i) || renderer.match(/INTEL/i)) {\n    return 'INTEL';\n  }\n  if (vendor.match(/AMD/i) || renderer.match(/AMD/i) || vendor.match(/ATI/i) || renderer.match(/ATI/i)) {\n    return 'AMD';\n  }\n  return 'UNKNOWN GPU';\n}\nvar compiledGlslExtensions = {};\nexport function canCompileGLGSExtension(gl, cap) {\n  var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var feature = WEBGL_FEATURES[cap];\n  assert(feature, cap);\n  if (!isOldIE(opts)) {\n    return true;\n  }\n  if (cap in compiledGlslExtensions) {\n    return compiledGlslExtensions[cap];\n  }\n  var extensionName = feature[0];\n  var behavior = opts.behavior || 'enable';\n  var source = \"#extension GL_\".concat(extensionName, \" : \").concat(behavior, \"\\nvoid main(void) {}\");\n  var shader = gl.createShader(35633);\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  var canCompile = gl.getShaderParameter(shader, 35713);\n  gl.deleteShader(shader);\n  compiledGlslExtensions[cap] = canCompile;\n  return canCompile;\n}\nfunction getFeature(gl, cap) {\n  var feature = WEBGL_FEATURES[cap];\n  assert(feature, cap);\n  var extensionName = isWebGL2(gl) ? feature[1] || feature[0] : feature[0];\n  var value = typeof extensionName === 'string' ? Boolean(gl.getExtension(extensionName)) : extensionName;\n  assert(value === false || value === true);\n  return value;\n}\nexport function hasFeatures(gl, features) {\n  features = Array.isArray(features) ? features : [features];\n  return features.every(function (feature) {\n    return getFeature(gl, feature);\n  });\n}","map":{"version":3,"names":["isOldIE","assert","GL_VENDOR","GL_RENDERER","GL_VERSION","GL_SHADING_LANGUAGE_VERSION","WEBGL_FEATURES","GLSL_FRAG_DATA","GLSL_FRAG_DEPTH","GLSL_DERIVATIVES","GLSL_TEXTURE_LOD","FEATURES","Object","keys","forEach","key","isWebGL2","gl","WebGL2RenderingContext","Boolean","_version","getContextInfo","info","getExtension","vendor","getParameter","UNMASKED_VENDOR_WEBGL","renderer","UNMASKED_RENDERER_WEBGL","gpuVendor","identifyGPUVendor","gpuInfo","version","shadingLanguageVersion","match","compiledGlslExtensions","canCompileGLGSExtension","cap","opts","arguments","length","undefined","feature","extensionName","behavior","source","concat","shader","createShader","shaderSource","compileShader","canCompile","getShaderParameter","deleteShader","getFeature","value","hasFeatures","features","Array","isArray","every"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@luma.gl/shadertools/src/utils/webgl-info.js"],"sourcesContent":["// Feature detection for WebGL\n//\n// Provides a function that enables simple checking of which WebGL features are\n// available in an WebGL1 or WebGL2 environment.\n\n/* eslint-disable no-inline-comments, max-len */\nimport isOldIE from './is-old-ie';\nimport assert from './assert';\n\nconst GL_VENDOR = 0x1f00;\nconst GL_RENDERER = 0x1f01;\nconst GL_VERSION = 0x1f02;\nconst GL_SHADING_LANGUAGE_VERSION = 0x8b8c;\n\n// Defines luma.gl \"feature\" names and semantics\nconst WEBGL_FEATURES = {\n  // GLSL extensions\n  GLSL_FRAG_DATA: ['WEBGL_draw_buffers', true], // TODO - name makes no sense in GLSL 3.00\n  GLSL_FRAG_DEPTH: ['EXT_frag_depth', true],\n  GLSL_DERIVATIVES: ['OES_standard_derivatives', true],\n  GLSL_TEXTURE_LOD: ['EXT_shader_texture_lod', true]\n};\n\n// Create a key-mirrored FEATURES array\nconst FEATURES = {};\nObject.keys(WEBGL_FEATURES).forEach(key => {\n  FEATURES[key] = key;\n});\n\nexport {FEATURES};\n\nfunction isWebGL2(gl) {\n  if (typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext) {\n    return true;\n  }\n  return Boolean(gl && gl._version === 2);\n}\n\nexport function getContextInfo(gl) {\n  const info = gl.getExtension('WEBGL_debug_renderer_info');\n  const vendor = gl.getParameter((info && info.UNMASKED_VENDOR_WEBGL) || GL_VENDOR);\n  const renderer = gl.getParameter((info && info.UNMASKED_RENDERER_WEBGL) || GL_RENDERER);\n  const gpuVendor = identifyGPUVendor(vendor, renderer);\n  const gpuInfo = {\n    gpuVendor,\n    vendor,\n    renderer,\n    version: gl.getParameter(GL_VERSION),\n    shadingLanguageVersion: gl.getParameter(GL_SHADING_LANGUAGE_VERSION)\n  };\n  return gpuInfo;\n}\n\nfunction identifyGPUVendor(vendor, renderer) {\n  if (vendor.match(/NVIDIA/i) || renderer.match(/NVIDIA/i)) {\n    return 'NVIDIA';\n  }\n  if (vendor.match(/INTEL/i) || renderer.match(/INTEL/i)) {\n    return 'INTEL';\n  }\n  if (\n    vendor.match(/AMD/i) ||\n    renderer.match(/AMD/i) ||\n    vendor.match(/ATI/i) ||\n    renderer.match(/ATI/i)\n  ) {\n    return 'AMD';\n  }\n  return 'UNKNOWN GPU';\n}\n\nconst compiledGlslExtensions = {};\n\n// Enables feature detection in IE11 due to a bug where gl.getExtension may return true\n// but fail to compile when the extension is enabled in the shader. Specifically,\n// the OES_standard_derivatives and WEBGL_draw_buffers extensions fails to compile in IE11 even though its included\n// in the list of supported extensions.\n// opts allows user agent to be overridden for testing\n/*\n* Inputs :\n*  gl : WebGL context\n*  cap : Key of WEBGL_FEATURES object identifying the extension\n*  opts :\n*   behavior : behavior of extension to be tested, by defualt `enable` is used\n* Returns : true, if shader is compiled successfully, false otherwise\n*/\nexport function canCompileGLGSExtension(gl, cap, opts = {}) {\n  const feature = WEBGL_FEATURES[cap];\n  assert(feature, cap);\n\n  if (!isOldIE(opts)) {\n    return true;\n  }\n\n  if (cap in compiledGlslExtensions) {\n    return compiledGlslExtensions[cap];\n  }\n\n  const extensionName = feature[0];\n  const behavior = opts.behavior || 'enable';\n  const source = `#extension GL_${extensionName} : ${behavior}\\nvoid main(void) {}`;\n\n  const shader = gl.createShader(gl.VERTEX_SHADER);\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  const canCompile = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n  gl.deleteShader(shader);\n  compiledGlslExtensions[cap] = canCompile;\n  return canCompile;\n}\n\n// TODO - cache the value\nfunction getFeature(gl, cap) {\n  const feature = WEBGL_FEATURES[cap];\n  assert(feature, cap);\n\n  // Get extension name from table\n  const extensionName = isWebGL2(gl) ? feature[1] || feature[0] : feature[0];\n\n  // Check if the value is dependent on checking an extension\n  const value =\n    typeof extensionName === 'string' ? Boolean(gl.getExtension(extensionName)) : extensionName;\n\n  assert(value === false || value === true);\n\n  return value;\n}\n\nexport function hasFeatures(gl, features) {\n  features = Array.isArray(features) ? features : [features];\n  return features.every(feature => getFeature(gl, feature));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}