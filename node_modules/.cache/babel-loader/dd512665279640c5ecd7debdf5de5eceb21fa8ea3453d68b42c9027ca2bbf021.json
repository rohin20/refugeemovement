{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _react = require(\"react\");\nvar _d3Array = require(\"d3-array\");\nvar _window = require(\"global/window\");\nvar _console = _interopRequireDefault(require(\"global/console\"));\nvar _constants = require(\"@kepler.gl/constants\");\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar AnimationControllerType = /*#__PURE__*/function (_Component) {\n  (0, _inherits2[\"default\"])(AnimationControllerType, _Component);\n  var _super = _createSuper(AnimationControllerType);\n  function AnimationControllerType() {\n    (0, _classCallCheck2[\"default\"])(this, AnimationControllerType);\n    return _super.apply(this, arguments);\n  }\n  return AnimationControllerType;\n}(_react.Component);\nfunction AnimationControllerFactory() {\n  /**\n   * 4 Animation Window Types\n   * 1. free\n   *  |->  |->\n   * Current time is a fixed range, animate a moving window that calls next animation frames continuously\n   * The increment id based on domain / BASE_SPEED * SPEED\n   *\n   * 2. incremental\n   * |    |->\n   * Same as free, current time is a growing range, only the max value of range increment during animation.\n   * The increment is also based on domain / BASE_SPEED * SPEED\n   *\n   * 3. point\n   * o -> o\n   * Current time is a point, animate a moving point calls next animation frame continuously\n   * The increment is based on domain / BASE_SPEED * SPEED\n   *\n   * 4. interval\n   * o ~> o\n   * Current time is a point. An array of sorted time steps are provided,\n   * animate a moving point jumps to the next step\n   */\n  var AnimationController = /*#__PURE__*/function (_Component2) {\n    (0, _inherits2[\"default\"])(AnimationController, _Component2);\n    var _super2 = _createSuper(AnimationController);\n    function AnimationController() {\n      var _this;\n      (0, _classCallCheck2[\"default\"])(this, AnimationController);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _super2.call.apply(_super2, [this].concat(args));\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"state\", {\n        isAnimating: false\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_timer\", null);\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_startTime\", 0);\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_animate\", function (delay) {\n        _this._startTime = new Date().getTime();\n        var loop = function loop() {\n          var current = new Date().getTime();\n          var delta = current - _this._startTime;\n          if (delta >= delay) {\n            _this._nextFrame();\n            _this._startTime = new Date().getTime();\n          } else {\n            _this._timer = (0, _window.requestAnimationFrame)(loop);\n          }\n        };\n        _this._timer = (0, _window.requestAnimationFrame)(loop);\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_resetAnimationByDomain\", function () {\n        var _this$props = _this.props,\n          domain = _this$props.domain,\n          value = _this$props.value,\n          animationWindow = _this$props.animationWindow;\n        if (!domain) {\n          return;\n        }\n        if (Array.isArray(value)) {\n          if (animationWindow === _constants.ANIMATION_WINDOW.incremental) {\n            _this.props.updateAnimation([value[0], value[0] + 1]);\n          } else {\n            _this.props.updateAnimation([domain[0], domain[0] + value[1] - value[0]]);\n          }\n        } else {\n          _this.props.updateAnimation(domain[0]);\n        }\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_resetAnimtionByTimeStep\", function () {\n        var _this$props$steps = _this.props.steps,\n          steps = _this$props$steps === void 0 ? null : _this$props$steps;\n        if (!steps) return; // go to the first steps\n\n        _this.props.updateAnimation([steps[0], 0]);\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_resetAnimation\", function () {\n        if (_this.props.animationWindow === _constants.ANIMATION_WINDOW.interval) {\n          _this._resetAnimtionByTimeStep();\n        } else {\n          _this._resetAnimationByDomain();\n        }\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_startAnimation\", function () {\n        var _this$props$speed = _this.props.speed,\n          speed = _this$props$speed === void 0 ? 1 : _this$props$speed;\n        _this._clearTimer();\n        if (speed > 0) {\n          if (_this.props.animationWindow === _constants.ANIMATION_WINDOW.interval) {\n            // animate by interval\n            // 30*600\n            var steps = _this.props.steps;\n            if (!Array.isArray(steps) || !steps.length) {\n              _console[\"default\"].warn('animation steps should be an array');\n              return;\n            } // when speed = 1, animation should loop through 600 frames at 60 FPS\n            // calculate delay based on # steps\n\n            var delay = _constants.BASE_SPEED * (1000 / _constants.FPS) / steps.length / (speed || 1);\n            _this._animate(delay);\n          } else {\n            _this._timer = (0, _window.requestAnimationFrame)(_this._nextFrame);\n          }\n        }\n        _this.setState({\n          isAnimating: true\n        });\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_clearTimer\", function () {\n        if (_this._timer) {\n          (0, _window.cancelAnimationFrame)(_this._timer);\n          _this._timer = null;\n        }\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_pauseAnimation\", function () {\n        _this._clearTimer();\n        _this.setState({\n          isAnimating: false\n        });\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_nextFrame\", function () {\n        _this._timer = null;\n        var nextValue = _this.props.animationWindow === _constants.ANIMATION_WINDOW.interval ? _this._nextFrameByTimeStep() : _this._nextFrameByDomain();\n        _this.props.updateAnimation(nextValue);\n      });\n      return _this;\n    }\n    (0, _createClass2[\"default\"])(AnimationController, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this._startOrPauseAnimation();\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate() {\n        this._startOrPauseAnimation();\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        if (this._timer) {\n          (0, _window.cancelAnimationFrame)(this._timer);\n        }\n      }\n    }, {\n      key: \"_startOrPauseAnimation\",\n      value: function _startOrPauseAnimation() {\n        var _this$props2 = this.props,\n          isAnimating = _this$props2.isAnimating,\n          _this$props2$speed = _this$props2.speed,\n          speed = _this$props2$speed === void 0 ? 1 : _this$props2$speed;\n        if (!this._timer && isAnimating && speed > 0) {\n          this._startAnimation();\n        } else if (this._timer && !isAnimating) {\n          this._pauseAnimation();\n        }\n      }\n    }, {\n      key: \"_nextFrameByDomain\",\n      value: function _nextFrameByDomain() {\n        var _this$props3 = this.props,\n          domain = _this$props3.domain,\n          value = _this$props3.value,\n          _this$props3$speed = _this$props3.speed,\n          speed = _this$props3$speed === void 0 ? 1 : _this$props3$speed,\n          _this$props3$baseSpee = _this$props3.baseSpeed,\n          baseSpeed = _this$props3$baseSpee === void 0 ? 600 : _this$props3$baseSpee,\n          animationWindow = _this$props3.animationWindow;\n        if (!domain) {\n          return;\n        }\n        var delta = (domain[1] - domain[0]) / baseSpeed * speed; // loop when reaches the end\n        // current time is a range\n\n        if (Array.isArray(value)) {\n          var value0;\n          var value1;\n          var readEnd = value[1] + delta > domain[1];\n          if (animationWindow === _constants.ANIMATION_WINDOW.incremental) {\n            value0 = value[0];\n            value1 = readEnd ? value[0] + 1 : value[1] + delta;\n          } else {\n            value0 = readEnd ? domain[0] : value[0] + delta;\n            value1 = value0 + value[1] - value[0];\n          }\n          return [value0, value1];\n        } // current time is a point\n\n        return Number(value) + delta > domain[1] ? domain[0] : Number(value) + delta;\n      }\n    }, {\n      key: \"_nextFrameByTimeStep\",\n      value: function _nextFrameByTimeStep() {\n        var _this$props4 = this.props,\n          _this$props4$steps = _this$props4.steps,\n          steps = _this$props4$steps === void 0 ? null : _this$props4$steps,\n          value = _this$props4.value;\n        if (!steps) return;\n        var val = Array.isArray(value) ? value[0] : Number(value);\n        var index = (0, _d3Array.bisectLeft)(steps, val);\n        var nextIdx = index >= steps.length - 1 ? 0 : index + 1;\n        return [steps[nextIdx], nextIdx];\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var isAnimating = this.state.isAnimating;\n        var children = this.props.children;\n        return typeof children === 'function' ? children(isAnimating, this._startAnimation, this._pauseAnimation, this._resetAnimation) : null;\n      }\n    }]);\n    return AnimationController;\n  }(_react.Component);\n  (0, _defineProperty2[\"default\"])(AnimationController, \"defaultProps\", {\n    baseSpeed: _constants.BASE_SPEED,\n    speed: 1,\n    steps: null,\n    animationWindow: _constants.ANIMATION_WINDOW.free\n  });\n  return AnimationController;\n}\nvar _default = AnimationControllerFactory;\nexports[\"default\"] = _default;","map":{"version":3,"names":["value","exports","_createClass2","_interopRequireDefault","require","_assertThisInitialized2","_inherits2","_constants","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","prototype","valueOf","call","e","AnimationControllerType","_Component","_super","_classCallCheck2","_react","Component","AnimationControllerFactory","AnimationController","_Component2","_super2","_len","length","args","Array","_key","_this","concat","isAnimating","_defineProperty2","delay","_startTime","Date","getTime","current","delta","_nextFrame","_timer","_window","requestAnimationFrame","loop","_this$props","props","domain","isArray","animationWindow","ANIMATION_WINDOW","incremental","updateAnimation","_this$props$steps","steps","_resetAnimtionByTimeStep","_resetAnimationByDomain","speed","_this$props$speed","_clearTimer","_console","warn","_animate","cancelAnimationFrame","setState","nextValue","interval","_nextFrameByTimeStep","_nextFrameByDomain","key","componentDidMount","_startOrPauseAnimation","componentDidUpdate","componentWillUnmount","_this$props2","_this$props2$speed","_pauseAnimation","_this$props3","_this$props3$speed","_this$props3$baseSpee","baseSpeed","value0","value1","readEnd","Number","_this$props4$steps","_this$props4","val","index","_d3Array","bisectLeft","nextIdx"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/components/src/common/animation-control/animation-controller.ts"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Component} from 'react';\nimport {bisectLeft} from 'd3-array';\nimport {requestAnimationFrame, cancelAnimationFrame} from 'global/window';\nimport Console from 'global/console';\nimport {BASE_SPEED, FPS, ANIMATION_WINDOW} from '@kepler.gl/constants';\n\ninterface AnimationControllerProps<T extends number | number[]> {\n  isAnimating?: boolean;\n  speed?: number;\n  updateAnimation: (x: T) => void;\n  animationWindow?: string;\n  steps?: number[] | null;\n  domain: number[] | null;\n  value: T;\n  baseSpeed?: number;\n}\n\nclass AnimationControllerType<T extends number | number[]> extends Component<\n  AnimationControllerProps<T>\n> {}\n\nfunction AnimationControllerFactory(): typeof AnimationControllerType {\n  /**\n   * 4 Animation Window Types\n   * 1. free\n   *  |->  |->\n   * Current time is a fixed range, animate a moving window that calls next animation frames continuously\n   * The increment id based on domain / BASE_SPEED * SPEED\n   *\n   * 2. incremental\n   * |    |->\n   * Same as free, current time is a growing range, only the max value of range increment during animation.\n   * The increment is also based on domain / BASE_SPEED * SPEED\n   *\n   * 3. point\n   * o -> o\n   * Current time is a point, animate a moving point calls next animation frame continuously\n   * The increment is based on domain / BASE_SPEED * SPEED\n   *\n   * 4. interval\n   * o ~> o\n   * Current time is a point. An array of sorted time steps are provided,\n   * animate a moving point jumps to the next step\n   */\n  class AnimationController<T extends number | number[]> extends Component<\n    AnimationControllerProps<T>\n  > {\n    static defaultProps = {\n      baseSpeed: BASE_SPEED,\n      speed: 1,\n      steps: null,\n      animationWindow: ANIMATION_WINDOW.free\n    };\n\n    state = {\n      isAnimating: false\n    };\n\n    componentDidMount() {\n      this._startOrPauseAnimation();\n    }\n\n    componentDidUpdate() {\n      this._startOrPauseAnimation();\n    }\n\n    componentWillUnmount() {\n      if (this._timer) {\n        cancelAnimationFrame(this._timer);\n      }\n    }\n\n    _timer = null;\n    _startTime: number = 0;\n\n    _startOrPauseAnimation() {\n      const {isAnimating, speed = 1} = this.props;\n      if (!this._timer && isAnimating && speed > 0) {\n        this._startAnimation();\n      } else if (this._timer && !isAnimating) {\n        this._pauseAnimation();\n      }\n    }\n\n    _animate = delay => {\n      this._startTime = new Date().getTime();\n\n      const loop = () => {\n        const current = new Date().getTime();\n        const delta = current - this._startTime;\n\n        if (delta >= delay) {\n          this._nextFrame();\n          this._startTime = new Date().getTime();\n        } else {\n          this._timer = requestAnimationFrame(loop);\n        }\n      };\n\n      this._timer = requestAnimationFrame(loop);\n    };\n\n    _resetAnimationByDomain = () => {\n      const {domain, value, animationWindow} = this.props;\n      if (!domain) {\n        return;\n      }\n      if (Array.isArray(value)) {\n        if (animationWindow === ANIMATION_WINDOW.incremental) {\n          this.props.updateAnimation([value[0], value[0] + 1] as T);\n        } else {\n          this.props.updateAnimation([domain[0], domain[0] + value[1] - value[0]] as T);\n        }\n      } else {\n        this.props.updateAnimation(domain[0] as T);\n      }\n    };\n\n    _resetAnimtionByTimeStep = () => {\n      const {steps = null} = this.props;\n      if (!steps) return;\n      // go to the first steps\n      this.props.updateAnimation([steps[0], 0] as T);\n    };\n\n    _resetAnimation = () => {\n      if (this.props.animationWindow === ANIMATION_WINDOW.interval) {\n        this._resetAnimtionByTimeStep();\n      } else {\n        this._resetAnimationByDomain();\n      }\n    };\n\n    _startAnimation = () => {\n      const {speed = 1} = this.props;\n      this._clearTimer();\n      if (speed > 0) {\n        if (this.props.animationWindow === ANIMATION_WINDOW.interval) {\n          // animate by interval\n          // 30*600\n          const {steps} = this.props;\n          if (!Array.isArray(steps) || !steps.length) {\n            Console.warn('animation steps should be an array');\n            return;\n          }\n          // when speed = 1, animation should loop through 600 frames at 60 FPS\n          // calculate delay based on # steps\n          const delay = (BASE_SPEED * (1000 / FPS)) / steps.length / (speed || 1);\n          this._animate(delay);\n        } else {\n          this._timer = requestAnimationFrame(this._nextFrame);\n        }\n      }\n      this.setState({isAnimating: true});\n    };\n\n    _clearTimer = () => {\n      if (this._timer) {\n        cancelAnimationFrame(this._timer);\n        this._timer = null;\n      }\n    };\n\n    _pauseAnimation = () => {\n      this._clearTimer();\n      this.setState({isAnimating: false});\n    };\n\n    _nextFrame = () => {\n      this._timer = null;\n      const nextValue =\n        this.props.animationWindow === ANIMATION_WINDOW.interval\n          ? this._nextFrameByTimeStep()\n          : this._nextFrameByDomain();\n\n      this.props.updateAnimation(nextValue as T);\n    };\n\n    _nextFrameByDomain() {\n      const {domain, value, speed = 1, baseSpeed = 600, animationWindow} = this.props;\n      if (!domain) {\n        return;\n      }\n      const delta = ((domain[1] - domain[0]) / baseSpeed) * speed;\n\n      // loop when reaches the end\n      // current time is a range\n      if (Array.isArray(value)) {\n        let value0: number;\n        let value1: number;\n        const readEnd = value[1] + delta > domain[1];\n        if (animationWindow === ANIMATION_WINDOW.incremental) {\n          value0 = value[0];\n          value1 = readEnd ? value[0] + 1 : value[1] + delta;\n        } else {\n          value0 = readEnd ? domain[0] : value[0] + delta;\n          value1 = value0 + value[1] - value[0];\n        }\n        return [value0, value1];\n      }\n\n      // current time is a point\n      return Number(value) + delta > domain[1] ? domain[0] : Number(value) + delta;\n    }\n\n    _nextFrameByTimeStep() {\n      const {steps = null, value} = this.props;\n      if (!steps) return;\n      const val = Array.isArray(value) ? value[0] : Number(value);\n      const index = bisectLeft(steps, val);\n      const nextIdx = index >= steps.length - 1 ? 0 : index + 1;\n\n      return [steps[nextIdx], nextIdx];\n    }\n\n    render() {\n      const {isAnimating} = this.state;\n      const {children} = this.props;\n\n      return typeof children === 'function'\n        ? children(isAnimating, this._startAnimation, this._pauseAnimation, this._resetAnimation)\n        : null;\n    }\n  }\n\n  return AnimationController;\n}\n\nexport default AnimationControllerFactory;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}