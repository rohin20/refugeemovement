{"ast":null,"code":"import _slicedToArray from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { clamp } from '@math.gl/core';\nimport Controller from './controller';\nimport { OrbitState } from './orbit-controller';\nimport LinearInterpolator from '../transitions/linear-interpolator';\nvar OrthographicState = /*#__PURE__*/function (_OrbitState) {\n  _inherits(OrthographicState, _OrbitState);\n  var _super = _createSuper(OrthographicState);\n  function OrthographicState(props) {\n    var _this;\n    _classCallCheck(this, OrthographicState);\n    _this = _super.call(this, props);\n    _defineProperty(_assertThisInitialized(_this), \"zoomAxis\", void 0);\n    _this.zoomAxis = props.zoomAxis || 'all';\n    return _this;\n  }\n  _createClass(OrthographicState, [{\n    key: \"_calculateNewZoom\",\n    value: function _calculateNewZoom(_ref) {\n      var scale = _ref.scale,\n        startZoom = _ref.startZoom;\n      var _this$getViewportProp = this.getViewportProps(),\n        maxZoom = _this$getViewportProp.maxZoom,\n        minZoom = _this$getViewportProp.minZoom;\n      if (startZoom === undefined) {\n        startZoom = this.getViewportProps().zoom;\n      }\n      var deltaZoom = Math.log2(scale);\n      if (Array.isArray(startZoom)) {\n        var _startZoom = startZoom,\n          _startZoom2 = _slicedToArray(_startZoom, 2),\n          newZoomX = _startZoom2[0],\n          newZoomY = _startZoom2[1];\n        switch (this.zoomAxis) {\n          case 'X':\n            newZoomX = clamp(newZoomX + deltaZoom, minZoom, maxZoom);\n            break;\n          case 'Y':\n            newZoomY = clamp(newZoomY + deltaZoom, minZoom, maxZoom);\n            break;\n          default:\n            var z = Math.min(newZoomX + deltaZoom, newZoomY + deltaZoom);\n            if (z < minZoom) {\n              deltaZoom += minZoom - z;\n            }\n            z = Math.max(newZoomX + deltaZoom, newZoomY + deltaZoom);\n            if (z > maxZoom) {\n              deltaZoom += maxZoom - z;\n            }\n            newZoomX += deltaZoom;\n            newZoomY += deltaZoom;\n        }\n        return [newZoomX, newZoomY];\n      }\n      return clamp(startZoom + deltaZoom, minZoom, maxZoom);\n    }\n  }]);\n  return OrthographicState;\n}(OrbitState);\nvar OrthographicController = /*#__PURE__*/function (_Controller) {\n  _inherits(OrthographicController, _Controller);\n  var _super2 = _createSuper(OrthographicController);\n  function OrthographicController() {\n    var _this2;\n    _classCallCheck(this, OrthographicController);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this2 = _super2.call.apply(_super2, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this2), \"ControllerState\", OrthographicState);\n    _defineProperty(_assertThisInitialized(_this2), \"transition\", {\n      transitionDuration: 300,\n      transitionInterpolator: new LinearInterpolator(['target', 'zoom'])\n    });\n    _defineProperty(_assertThisInitialized(_this2), \"dragMode\", 'pan');\n    return _this2;\n  }\n  _createClass(OrthographicController, [{\n    key: \"_onPanRotate\",\n    value: function _onPanRotate() {\n      return false;\n    }\n  }]);\n  return OrthographicController;\n}(Controller);\nexport { OrthographicController as default };","map":{"version":3,"names":["clamp","Controller","OrbitState","LinearInterpolator","OrthographicState","_OrbitState","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","zoomAxis","_createClass","key","value","_calculateNewZoom","_ref","scale","startZoom","_this$getViewportProp","getViewportProps","maxZoom","minZoom","undefined","zoom","deltaZoom","Math","log2","Array","isArray","_startZoom","_startZoom2","_slicedToArray","newZoomX","newZoomY","z","min","max","OrthographicController","_Controller","_super2","_this2","_len","arguments","length","args","_key","apply","concat","transitionDuration","transitionInterpolator","_onPanRotate","default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/core/src/controllers/orthographic-controller.ts"],"sourcesContent":["import {clamp} from '@math.gl/core';\nimport Controller from './controller';\nimport {OrbitState} from './orbit-controller';\nimport LinearInterpolator from '../transitions/linear-interpolator';\n\nclass OrthographicState extends OrbitState {\n  zoomAxis: 'X' | 'Y' | 'all';\n\n  constructor(props) {\n    super(props);\n\n    this.zoomAxis = props.zoomAxis || 'all';\n  }\n\n  _calculateNewZoom({scale, startZoom}) {\n    const {maxZoom, minZoom} = this.getViewportProps();\n    if (startZoom === undefined) {\n      startZoom = this.getViewportProps().zoom;\n    }\n    let deltaZoom = Math.log2(scale);\n    if (Array.isArray(startZoom)) {\n      let [newZoomX, newZoomY] = startZoom;\n      switch (this.zoomAxis) {\n        case 'X':\n          // Scale x only\n          newZoomX = clamp(newZoomX + deltaZoom, minZoom, maxZoom);\n          break;\n        case 'Y':\n          // Scale y only\n          newZoomY = clamp(newZoomY + deltaZoom, minZoom, maxZoom);\n          break;\n        default:\n          // Lock aspect ratio\n          let z = Math.min(newZoomX + deltaZoom, newZoomY + deltaZoom);\n          if (z < minZoom) {\n            deltaZoom += minZoom - z;\n          }\n          z = Math.max(newZoomX + deltaZoom, newZoomY + deltaZoom);\n          if (z > maxZoom) {\n            deltaZoom += maxZoom - z;\n          }\n          newZoomX += deltaZoom;\n          newZoomY += deltaZoom;\n      }\n      return [newZoomX, newZoomY];\n    }\n    // Ignore `zoomAxis`\n    // `LinearTransitionInterpolator` does not support interpolation between a number and an array\n    // So if zoom is a number (legacy use case), new zoom still has to be a number\n    return clamp(startZoom + deltaZoom, minZoom, maxZoom);\n  }\n}\n\nexport default class OrthographicController extends Controller<OrbitState> {\n  ControllerState = OrthographicState;\n  transition = {\n    transitionDuration: 300,\n    transitionInterpolator: new LinearInterpolator(['target', 'zoom'])\n  };\n  dragMode: 'pan' | 'rotate' = 'pan';\n\n  _onPanRotate() {\n    // No rotation in orthographic view\n    return false;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}