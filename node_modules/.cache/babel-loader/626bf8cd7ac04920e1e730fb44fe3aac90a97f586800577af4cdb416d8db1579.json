{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getGeoJSON = getGeoJSON;\nexports[\"default\"] = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _supercluster = _interopRequireDefault(require(\"supercluster\"));\nvar _lodash = _interopRequireDefault(require(\"lodash.memoize\"));\nfunction getGeoJSON(data, getPosition, filterData) {\n  var raw = typeof filterData === 'function' ? data.filter(filterData) : data;\n  return raw.map(function (d) {\n    return {\n      type: 'Point',\n      properties: {\n        data: d,\n        points: [d],\n        point_count: 1,\n        point_count_abbreviated: '1'\n      },\n      geometry: {\n        coordinates: getPosition(d)\n      }\n    };\n  }).filter(function (d) {\n    return d.geometry.coordinates.every(Number.isFinite);\n  });\n}\nvar clusterResolver = function clusterResolver(_ref) {\n  var clusterRadius = _ref.clusterRadius;\n  return \"\".concat(clusterRadius);\n};\nvar getClusterer = function getClusterer(_ref2) {\n  var clusterRadius = _ref2.clusterRadius,\n    geoJSON = _ref2.geoJSON;\n  return new _supercluster[\"default\"]({\n    maxZoom: 20,\n    radius: clusterRadius,\n    reduce: function reduce(accumulated, props) {\n      accumulated.points = [].concat((0, _toConsumableArray2[\"default\"])(accumulated.points), (0, _toConsumableArray2[\"default\"])(props.points));\n    },\n    map: function map(props) {\n      return {\n        points: [props.data]\n      };\n    }\n  }).load(geoJSON);\n};\nvar ClusterBuilder = /*#__PURE__*/function () {\n  function ClusterBuilder() {\n    (0, _classCallCheck2[\"default\"])(this, ClusterBuilder);\n    this.clusterer = (0, _lodash[\"default\"])(getClusterer, clusterResolver);\n  }\n  (0, _createClass2[\"default\"])(ClusterBuilder, [{\n    key: \"clustersAtZoom\",\n    value: function clustersAtZoom(_ref3) {\n      var bbox = _ref3.bbox,\n        clusterRadius = _ref3.clusterRadius,\n        geoJSON = _ref3.geoJSON,\n        zoom = _ref3.zoom;\n      var clusterer = this.clusterer({\n        clusterRadius: clusterRadius,\n        geoJSON: geoJSON\n      }); // map clusters to formatted bins to be passed to deck.gl bin-sorter\n\n      var clusters = clusterer.getClusters(bbox, zoom).map(function (c, i) {\n        return {\n          points: c.properties.points,\n          position: c.geometry.coordinates,\n          index: i\n        };\n      });\n      return clusters;\n    }\n  }, {\n    key: \"clearClustererCache\",\n    value: function clearClustererCache() {\n      var _this$clusterer$cache, _this$clusterer$cache2;\n      (_this$clusterer$cache = (_this$clusterer$cache2 = this.clusterer.cache).clear) === null || _this$clusterer$cache === void 0 ? void 0 : _this$clusterer$cache.call(_this$clusterer$cache2);\n    }\n  }]);\n  return ClusterBuilder;\n}();\nexports[\"default\"] = ClusterBuilder;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","getGeoJSON","_classCallCheck2","_createClass2","_toConsumableArray2","_supercluster","_lodash","data","getPosition","filterData","raw","filter","map","d","type","properties","points","point_count","point_count_abbreviated","geometry","coordinates","every","Number","isFinite","clusterRadius","_ref","concat","_ref2","geoJSON","maxZoom","radius","reduce","accumulated","props","load","ClusterBuilder","clusterer","getClusterer","clusterResolver","_ref3","bbox","zoom","c","position","index","i","clusters","_this$clusterer$cache2"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/deckgl-layers/src/layer-utils/cluster-utils.ts"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport Supercluster from 'supercluster';\nimport memoize from 'lodash.memoize';\nimport {MemoizedFunction} from 'lodash';\nimport {BBox, Position} from 'geojson';\n\nexport function getGeoJSON(data, getPosition, filterData) {\n  const raw = typeof filterData === 'function' ? data.filter(filterData) : data;\n\n  return raw\n    .map(d => ({\n      type: 'Point',\n      properties: {\n        data: d,\n        points: [d],\n        point_count: 1,\n        point_count_abbreviated: '1'\n      },\n      geometry: {\n        coordinates: getPosition(d)\n      }\n    }))\n    .filter(d => d.geometry.coordinates.every(Number.isFinite));\n}\n\nconst clusterResolver = ({clusterRadius}: {clusterRadius: number}) => `${clusterRadius}`;\n\nconst getClusterer = ({clusterRadius, geoJSON}: {clusterRadius: number; geoJSON}) =>\n  new Supercluster({\n    maxZoom: 20,\n    radius: clusterRadius,\n    reduce: (accumulated, props) => {\n      accumulated.points = [...accumulated.points, ...props.points];\n    },\n    map: props => ({points: [props.data]})\n  }).load(geoJSON);\n\nexport default class ClusterBuilder {\n  clusterer: (({clusterRadius, geoJSON}: {clusterRadius: number; geoJSON}) => Supercluster) &\n    MemoizedFunction;\n\n  constructor() {\n    this.clusterer = memoize(getClusterer, clusterResolver);\n  }\n\n  clustersAtZoom({\n    bbox,\n    clusterRadius,\n    geoJSON,\n    zoom\n  }: {\n    bbox: BBox;\n    clusterRadius: number;\n    geoJSON;\n    zoom: number;\n  }): {\n    points: any;\n    position: Position;\n    index: number;\n  }[] {\n    const clusterer = this.clusterer({clusterRadius, geoJSON});\n\n    // map clusters to formatted bins to be passed to deck.gl bin-sorter\n    const clusters = clusterer.getClusters(bbox, zoom).map((c, i) => ({\n      points: c.properties.points,\n      position: c.geometry.coordinates,\n      index: i\n    }));\n\n    return clusters;\n  }\n\n  clearClustererCache() {\n    this.clusterer.cache.clear?.();\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAoBA;;AACA;;AArBA;;AAEA,IAAAA,sBAAA,GAAAC,OAAA;AAEAC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EACAC,KAAA;AACA;AACAD,OAAA,CAAAE,UAAA,GAAAA,UAAA;AACAF,OAAA;AAEA,IAAAG,gBAAA,GAAAP,sBAAA,CAAAC,OAAA;AAEA,IAAAO,aAAA,GAAAR,sBAAA,CAAAC,OAAA;AAEA,IAAAQ,mBAAA,GAAAT,sBAAA,CAAAC,OAAA;AAEA,IAAAS,aAAA,GAAAV,sBAAA,CAAAC,OAAA;AAEA,IAAAU,OAAA,GAAAX,sBAAA,CAAAC,OAAA;AAAA,SAAAK,WAAAM,IAAA,EAAAC,WAAA,EAAAC,UAAA;EAOO,IAAAC,GAAS,UAATD,UAA0B,eAAa,GAAAF,IAAY,CAAAI,MAAA,CAAAF,UAAA,IAAAF,IAAA;EACxD,OAASG,GAAG,CAAAE,GAAA,WAAOC,CAAA,EAAP;IAEZ,OAAO;MACCC,IAAA,EAAK;MACTC,UAAM;QACNR,IAAA,EAAAM,CAAA;QACEG,MAAM,EADI,CAAAH,CAAA;QAEVI,WAFU;QAGVC,uBAHU;MAIV;MAJUC,QAFH;QAQTC,WAAU,EAAAZ,WAAA,CAAAK,CAAA;MACR;IADQ;EARD,GAALF,MAAA,WAAAE,CAAA;IADD,OAAAA,CAaG,CAAAM,QAAA,CAAAC,WAAC,CAAAC,KAAA,CAAAC,MAAA,CAAAC,QAAA;EAAA;AAAA;;EAGb,IAAMC,aAAe,GAAGC,IAAA,CAAAD,aAAlB;EAAkB,OAAE,GAAAE,MAAA,CAAFF,aAAE;AAAF;;EAExB,IAAMA,aAAe,GAAAG,KAAA,CAAfH,aAAe;IAAEI,OAAA,GAAAD,KAAF,CAAAC,OAAE;EAAF,OAAiB,IAAjBvB,aAAiB,UAAjB;IAAAwB,OACnB,EAAI;IACFC,MAAA,EAAON,aADQ;IAEfO,MAAM,EAAE,SAAAA,MAFOP,CAAAQ,WAAA,EAAAC,KAAA;MAGfD,WAAQ,CAAAhB,MAAA,KAAC,CAAAU,MAAA,GAAD,EAActB,mBAAU,aAAA4B,WAAA,CAAAhB,MAAA,OAAAZ,mBAAA,aAAA6B,KAAA,CAAAjB,MAAA;IAC9B;IACDJ,GALc,WAAAA,IAAAqB,KAAA;MAMf,OAAK;QAAKjB,MAAK,GAAAiB,KAAA,CAAA1B,IAAA;MAAC;IAAD;EAAL,GAAA2B,IAAA,CAAAN,OAAA;AANK;;WASEO,c;IAInB,IAAAjC,gBAAA,UAAc,SAAAiC,cAAA;IAAA,KAAAC,SAAA,OAAA9B,OAAA,aAAA+B,YAAA,EAAAC,eAAA;EACZ;;;;cAGF,GAAAC,KAAA,CAAAC,IAAA;QACEhB,aAAA,GAAAe,KAaE,CAAAf,aAAA;QAZFI,OAAA,GAAAW,KAYE,CAAAX,OAZF;QACAa,IAAA,GAWEF,KAAA,CAAAE,IAXF;MAWE,IAVFL,SAUE,OAVF,CAUEA,SAAA;QACFZ,aAAe,EAAGA,aAAA;QAAgBI,OAAA,EAAAA;MAAe;;;QAGjD,OAAM;UAAiDZ,MAAW,EAAA0B,CAAA,CAAA3B,UAAA,CAAAC,MAAA;UAChE2B,QAAQ,EAAED,CAAA,CAAAvB,QAAF,CAAaC,WAD2C;UAEhEwB,KAAA,EAAAC;QACA;MAHgE;MAAX,OAAvDC,QAAA;IAMA;EACD;;;+BAED,EAAAC,sBAAsB;;IACpB;EACD"},"metadata":{},"sourceType":"script","externalDependencies":[]}