{"ast":null,"code":"import _toConsumableArray from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { isWebGL2 } from '@luma.gl/gltools';\nimport { log } from '@luma.gl/webgl';\nimport { pbr } from '@luma.gl/shadertools';\nimport ModelNode from '../scenegraph/model-node';\nimport GLTFMaterialParser from './gltf-material-parser';\nvar vs = \"\\n#if (__VERSION__ < 300)\\n  #define _attr attribute\\n#else\\n  #define _attr in\\n#endif\\n\\n  _attr vec4 POSITION;\\n\\n  #ifdef HAS_NORMALS\\n    _attr vec4 NORMAL;\\n  #endif\\n\\n  #ifdef HAS_TANGENTS\\n    _attr vec4 TANGENT;\\n  #endif\\n\\n  #ifdef HAS_UV\\n    _attr vec2 TEXCOORD_0;\\n  #endif\\n\\n  void main(void) {\\n    vec4 _NORMAL = vec4(0.);\\n    vec4 _TANGENT = vec4(0.);\\n    vec2 _TEXCOORD_0 = vec2(0.);\\n\\n    #ifdef HAS_NORMALS\\n      _NORMAL = NORMAL;\\n    #endif\\n\\n    #ifdef HAS_TANGENTS\\n      _TANGENT = TANGENT;\\n    #endif\\n\\n    #ifdef HAS_UV\\n      _TEXCOORD_0 = TEXCOORD_0;\\n    #endif\\n\\n    pbr_setPositionNormalTangentUV(POSITION, _NORMAL, _TANGENT, _TEXCOORD_0);\\n    gl_Position = u_MVPMatrix * POSITION;\\n  }\\n\";\nvar fs = \"\\n#if (__VERSION__ < 300)\\n  #define fragmentColor gl_FragColor\\n#else\\n  out vec4 fragmentColor;\\n#endif\\n\\n  void main(void) {\\n    fragmentColor = pbr_filterColor(vec4(0));\\n  }\\n\";\nfunction addVersionToShader(gl, source) {\n  if (isWebGL2(gl)) {\n    return \"#version 300 es\\n\".concat(source);\n  }\n  return source;\n}\nexport default function createGLTFModel(gl, options) {\n  var id = options.id,\n    drawMode = options.drawMode,\n    vertexCount = options.vertexCount,\n    attributes = options.attributes,\n    modelOptions = options.modelOptions;\n  var materialParser = new GLTFMaterialParser(gl, options);\n  log.info(4, 'createGLTFModel defines: ', materialParser.defines)();\n  var managedResources = [];\n  managedResources.push.apply(managedResources, _toConsumableArray(materialParser.generatedTextures));\n  managedResources.push.apply(managedResources, _toConsumableArray(Object.values(attributes).map(function (attribute) {\n    return attribute.buffer;\n  })));\n  var model = new ModelNode(gl, Object.assign({\n    id: id,\n    drawMode: drawMode,\n    vertexCount: vertexCount,\n    modules: [pbr],\n    defines: materialParser.defines,\n    parameters: materialParser.parameters,\n    vs: addVersionToShader(gl, vs),\n    fs: addVersionToShader(gl, fs),\n    managedResources: managedResources\n  }, modelOptions));\n  model.setProps({\n    attributes: attributes\n  });\n  model.setUniforms(materialParser.uniforms);\n  return model;\n}","map":{"version":3,"names":["isWebGL2","log","pbr","ModelNode","GLTFMaterialParser","vs","fs","addVersionToShader","gl","source","concat","createGLTFModel","options","id","drawMode","vertexCount","attributes","modelOptions","materialParser","info","defines","managedResources","push","apply","_toConsumableArray","generatedTextures","Object","values","map","attribute","buffer","model","assign","modules","parameters","setProps","setUniforms","uniforms"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@luma.gl/experimental/src/gltf/create-gltf-model.js"],"sourcesContent":["import {isWebGL2} from '@luma.gl/gltools';\nimport {log} from '@luma.gl/webgl';\nimport {pbr} from '@luma.gl/shadertools';\nimport ModelNode from '../scenegraph/model-node';\nimport GLTFMaterialParser from './gltf-material-parser';\n\nconst vs = `\n#if (__VERSION__ < 300)\n  #define _attr attribute\n#else\n  #define _attr in\n#endif\n\n  _attr vec4 POSITION;\n\n  #ifdef HAS_NORMALS\n    _attr vec4 NORMAL;\n  #endif\n\n  #ifdef HAS_TANGENTS\n    _attr vec4 TANGENT;\n  #endif\n\n  #ifdef HAS_UV\n    _attr vec2 TEXCOORD_0;\n  #endif\n\n  void main(void) {\n    vec4 _NORMAL = vec4(0.);\n    vec4 _TANGENT = vec4(0.);\n    vec2 _TEXCOORD_0 = vec2(0.);\n\n    #ifdef HAS_NORMALS\n      _NORMAL = NORMAL;\n    #endif\n\n    #ifdef HAS_TANGENTS\n      _TANGENT = TANGENT;\n    #endif\n\n    #ifdef HAS_UV\n      _TEXCOORD_0 = TEXCOORD_0;\n    #endif\n\n    pbr_setPositionNormalTangentUV(POSITION, _NORMAL, _TANGENT, _TEXCOORD_0);\n    gl_Position = u_MVPMatrix * POSITION;\n  }\n`;\n\nconst fs = `\n#if (__VERSION__ < 300)\n  #define fragmentColor gl_FragColor\n#else\n  out vec4 fragmentColor;\n#endif\n\n  void main(void) {\n    fragmentColor = pbr_filterColor(vec4(0));\n  }\n`;\n\nfunction addVersionToShader(gl, source) {\n  if (isWebGL2(gl)) {\n    return `#version 300 es\\n${source}`;\n  }\n\n  return source;\n}\n\nexport default function createGLTFModel(gl, options) {\n  const {id, drawMode, vertexCount, attributes, modelOptions} = options;\n  const materialParser = new GLTFMaterialParser(gl, options);\n\n  log.info(4, 'createGLTFModel defines: ', materialParser.defines)();\n\n  // Calculate managedResources\n  // TODO: Implement resource management logic that will\n  // not deallocate resources/textures/buffers that are shared\n  const managedResources = [];\n  managedResources.push(...materialParser.generatedTextures);\n  managedResources.push(...Object.values(attributes).map(attribute => attribute.buffer));\n\n  const model = new ModelNode(\n    gl,\n    Object.assign(\n      {\n        id,\n        drawMode,\n        vertexCount,\n        modules: [pbr],\n        defines: materialParser.defines,\n        parameters: materialParser.parameters,\n        vs: addVersionToShader(gl, vs),\n        fs: addVersionToShader(gl, fs),\n        managedResources\n      },\n      modelOptions\n    )\n  );\n\n  model.setProps({attributes});\n  model.setUniforms(materialParser.uniforms);\n\n  return model;\n}\n"],"mappings":";AAAA,SAAQA,QAAR,QAAuB,kBAAvB;AACA,SAAQC,GAAR,QAAkB,gBAAlB;AACA,SAAQC,GAAR,QAAkB,sBAAlB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,kBAAP,MAA+B,wBAA/B;AAEA,IAAMC,EAAE,iuBAAR;AA2CA,IAAMC,EAAE,2LAAR;AAYA,SAASC,kBAATA,CAA4BC,EAA5B,EAAgCC,MAAhC,EAAwC;EACtC,IAAIT,QAAQ,CAACQ,EAAD,CAAZ,EAAkB;IAChB,2BAAAE,MAAA,CAA2BD,MAA3B;EACD;EAED,OAAOA,MAAP;AACD;AAED,eAAe,SAASE,eAATA,CAAyBH,EAAzB,EAA6BI,OAA7B,EAAsC;EACnD,IAAOC,EAAD,GAAwDD,OAA9D,CAAOC,EAAD;IAAKC,QAAL,GAAwDF,OAA9D,CAAWE,QAAL;IAAeC,WAAf,GAAwDH,OAA9D,CAAqBG,WAAf;IAA4BC,UAA5B,GAAwDJ,OAA9D,CAAkCI,UAA5B;IAAwCC,YAAA,GAAgBL,OAA9D,CAA8CK,YAAA;EAC9C,IAAMC,cAAc,GAAG,IAAId,kBAAJ,CAAuBI,EAAvB,EAA2BI,OAA3B,CAAvB;EAEAX,GAAG,CAACkB,IAAJ,CAAS,CAAT,EAAY,2BAAZ,EAAyCD,cAAc,CAACE,OAAxD;EAKA,IAAMC,gBAAgB,GAAG,EAAzB;EACAA,gBAAgB,CAACC,IAAjB,CAAAC,KAAA,CAAAF,gBAAgB,EAAAG,kBAAA,CAASN,cAAc,CAACO,iBAAxC;EACAJ,gBAAgB,CAACC,IAAjB,CAAAC,KAAA,CAAAF,gBAAgB,EAAAG,kBAAA,CAASE,MAAM,CAACC,MAAP,CAAcX,UAAd,EAA0BY,GAA1B,CAA8B,UAAAC,SAAS;IAAA,OAAIA,SAAS,CAACC,MAArD;EAAA,EAAzB;EAEA,IAAMC,KAAK,GAAG,IAAI5B,SAAJ,CACZK,EADY,EAEZkB,MAAM,CAACM,MAAP,CACE;IACEnB,EADF,EACEA,EADF;IAEEC,QAFF,EAEEA,QAFF;IAGEC,WAHF,EAGEA,WAHF;IAIEkB,OAAO,EAAE,CAAC/B,GAAD,CAJX;IAKEkB,OAAO,EAAEF,cAAc,CAACE,OAL1B;IAMEc,UAAU,EAAEhB,cAAc,CAACgB,UAN7B;IAOE7B,EAAE,EAAEE,kBAAkB,CAACC,EAAD,EAAKH,EAAL,CAPxB;IAQEC,EAAE,EAAEC,kBAAkB,CAACC,EAAD,EAAKF,EAAL,CARxB;IASEe,gBAAA,EAAAA;EATF,CADF,EAYEJ,YAZF,CAFY,CAAd;EAkBAc,KAAK,CAACI,QAAN,CAAe;IAACnB,UAAA,EAAAA;EAAD,CAAf;EACAe,KAAK,CAACK,WAAN,CAAkBlB,cAAc,CAACmB,QAAjC;EAEA,OAAON,KAAP;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}