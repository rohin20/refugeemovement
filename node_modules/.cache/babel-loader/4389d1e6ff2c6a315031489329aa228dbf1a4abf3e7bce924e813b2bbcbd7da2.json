{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\nvar _templateObject;\n\n/*\n    ScrollSync works by getting a callback about the dom elements scroll amount\n    and then using that to pass into how much to scroll all child components,\n    it works great!\n\n    Except... Because scrolling is managed by a separate thread, and JavaScript\n    is only periodically notified of the updated position, there's some latency\n    issues with this.\n\n    We can hack around this by using a niche property of canvas that removes the\n    delay in scroll event firing! Easiest way to reproduce: enable \"Trace React updates\"\n    in React DevTools (it works by overlaying a viewport-wide canvas over the document).\n  */\nvar _default = _styledComponents[\"default\"].canvas(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  height: 100%;\\n  left: 0;\\n  pointer-events: none;\\n  position: absolute;\\n  top: 0;\\n  width: 100%;\\n\"])));\nexports[\"default\"] = _default;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/components/src/common/data-table/canvas.tsx"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport styled from 'styled-components';\n\n/*\n    ScrollSync works by getting a callback about the dom elements scroll amount\n    and then using that to pass into how much to scroll all child components,\n    it works great!\n\n    Except... Because scrolling is managed by a separate thread, and JavaScript\n    is only periodically notified of the updated position, there's some latency\n    issues with this.\n\n    We can hack around this by using a niche property of canvas that removes the\n    delay in scroll event firing! Easiest way to reproduce: enable \"Trace React updates\"\n    in React DevTools (it works by overlaying a viewport-wide canvas over the document).\n  */\nexport default styled.canvas`\n  height: 100%;\n  left: 0;\n  pointer-events: none;\n  position: absolute;\n  top: 0;\n  width: 100%;\n`;\n"],"mappings":";;;;;;;;;;;AAoBA;;;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,IAAAA,sBAAA,GAAAC,OAAA;AAEAC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EACAC,KAAA;AACA;AACAD,OAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}