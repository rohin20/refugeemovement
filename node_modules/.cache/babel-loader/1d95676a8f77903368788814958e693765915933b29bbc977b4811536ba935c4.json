{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { COORDINATE_SYSTEM, createIterable } from '@deck.gl/core';\nvar RADIAN_PER_DEGREE = Math.PI / 180;\nvar modelMatrix = new Float32Array(16);\nvar valueArray = new Float32Array(12);\nfunction calculateTransformMatrix(targetMatrix, orientation, scale) {\n  var pitch = orientation[0] * RADIAN_PER_DEGREE;\n  var yaw = orientation[1] * RADIAN_PER_DEGREE;\n  var roll = orientation[2] * RADIAN_PER_DEGREE;\n  var sr = Math.sin(roll);\n  var sp = Math.sin(pitch);\n  var sw = Math.sin(yaw);\n  var cr = Math.cos(roll);\n  var cp = Math.cos(pitch);\n  var cw = Math.cos(yaw);\n  var scx = scale[0];\n  var scy = scale[1];\n  var scz = scale[2];\n  targetMatrix[0] = scx * cw * cp;\n  targetMatrix[1] = scx * sw * cp;\n  targetMatrix[2] = scx * -sp;\n  targetMatrix[3] = scy * (-sw * cr + cw * sp * sr);\n  targetMatrix[4] = scy * (cw * cr + sw * sp * sr);\n  targetMatrix[5] = scy * cp * sr;\n  targetMatrix[6] = scz * (sw * sr + cw * sp * cr);\n  targetMatrix[7] = scz * (-cw * sr + sw * sp * cr);\n  targetMatrix[8] = scz * cp * cr;\n}\nfunction getExtendedMat3FromMat4(mat4) {\n  mat4[0] = mat4[0];\n  mat4[1] = mat4[1];\n  mat4[2] = mat4[2];\n  mat4[3] = mat4[4];\n  mat4[4] = mat4[5];\n  mat4[5] = mat4[6];\n  mat4[6] = mat4[8];\n  mat4[7] = mat4[9];\n  mat4[8] = mat4[10];\n  mat4[9] = mat4[12];\n  mat4[10] = mat4[13];\n  mat4[11] = mat4[14];\n  return mat4.subarray(0, 12);\n}\nexport var MATRIX_ATTRIBUTES = {\n  size: 12,\n  accessor: ['getOrientation', 'getScale', 'getTranslation', 'getTransformMatrix'],\n  shaderAttributes: {\n    instanceModelMatrix__LOCATION_0: {\n      size: 3,\n      elementOffset: 0\n    },\n    instanceModelMatrix__LOCATION_1: {\n      size: 3,\n      elementOffset: 3\n    },\n    instanceModelMatrix__LOCATION_2: {\n      size: 3,\n      elementOffset: 6\n    },\n    instanceTranslation: {\n      size: 3,\n      elementOffset: 9\n    }\n  },\n  update: function update(attribute, _ref) {\n    var startRow = _ref.startRow,\n      endRow = _ref.endRow;\n    var _this$props = this.props,\n      data = _this$props.data,\n      getOrientation = _this$props.getOrientation,\n      getScale = _this$props.getScale,\n      getTranslation = _this$props.getTranslation,\n      getTransformMatrix = _this$props.getTransformMatrix;\n    var arrayMatrix = Array.isArray(getTransformMatrix);\n    var constantMatrix = arrayMatrix && getTransformMatrix.length === 16;\n    var constantScale = Array.isArray(getScale);\n    var constantOrientation = Array.isArray(getOrientation);\n    var constantTranslation = Array.isArray(getTranslation);\n    var hasMatrix = constantMatrix || !arrayMatrix && Boolean(getTransformMatrix(data[0]));\n    if (hasMatrix) {\n      attribute.constant = constantMatrix;\n    } else {\n      attribute.constant = constantOrientation && constantScale && constantTranslation;\n    }\n    var instanceModelMatrixData = attribute.value;\n    if (attribute.constant) {\n      var matrix;\n      if (hasMatrix) {\n        modelMatrix.set(getTransformMatrix);\n        matrix = getExtendedMat3FromMat4(modelMatrix);\n      } else {\n        matrix = valueArray;\n        var orientation = getOrientation;\n        var scale = getScale;\n        calculateTransformMatrix(matrix, orientation, scale);\n        matrix.set(getTranslation, 9);\n      }\n      attribute.value = new Float32Array(matrix);\n    } else {\n      var i = startRow * attribute.size;\n      var _createIterable = createIterable(data, startRow, endRow),\n        iterable = _createIterable.iterable,\n        objectInfo = _createIterable.objectInfo;\n      var _iterator = _createForOfIteratorHelper(iterable),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var object = _step.value;\n          objectInfo.index++;\n          var _matrix = void 0;\n          if (hasMatrix) {\n            modelMatrix.set(constantMatrix ? getTransformMatrix : getTransformMatrix(object, objectInfo));\n            _matrix = getExtendedMat3FromMat4(modelMatrix);\n          } else {\n            _matrix = valueArray;\n            var _orientation = constantOrientation ? getOrientation : getOrientation(object, objectInfo);\n            var _scale = constantScale ? getScale : getScale(object, objectInfo);\n            calculateTransformMatrix(_matrix, _orientation, _scale);\n            _matrix.set(constantTranslation ? getTranslation : getTranslation(object, objectInfo), 9);\n          }\n          instanceModelMatrixData[i++] = _matrix[0];\n          instanceModelMatrixData[i++] = _matrix[1];\n          instanceModelMatrixData[i++] = _matrix[2];\n          instanceModelMatrixData[i++] = _matrix[3];\n          instanceModelMatrixData[i++] = _matrix[4];\n          instanceModelMatrixData[i++] = _matrix[5];\n          instanceModelMatrixData[i++] = _matrix[6];\n          instanceModelMatrixData[i++] = _matrix[7];\n          instanceModelMatrixData[i++] = _matrix[8];\n          instanceModelMatrixData[i++] = _matrix[9];\n          instanceModelMatrixData[i++] = _matrix[10];\n          instanceModelMatrixData[i++] = _matrix[11];\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }\n};\nexport function shouldComposeModelMatrix(viewport, coordinateSystem) {\n  return coordinateSystem === COORDINATE_SYSTEM.CARTESIAN || coordinateSystem === COORDINATE_SYSTEM.METER_OFFSETS || coordinateSystem === COORDINATE_SYSTEM.DEFAULT && !viewport.isGeospatial;\n}","map":{"version":3,"names":["COORDINATE_SYSTEM","createIterable","RADIAN_PER_DEGREE","Math","PI","modelMatrix","Float32Array","valueArray","calculateTransformMatrix","targetMatrix","orientation","scale","pitch","yaw","roll","sr","sin","sp","sw","cr","cos","cp","cw","scx","scy","scz","getExtendedMat3FromMat4","mat4","subarray","MATRIX_ATTRIBUTES","size","accessor","shaderAttributes","instanceModelMatrix__LOCATION_0","elementOffset","instanceModelMatrix__LOCATION_1","instanceModelMatrix__LOCATION_2","instanceTranslation","update","attribute","_ref","startRow","endRow","_this$props","props","data","getOrientation","getScale","getTranslation","getTransformMatrix","arrayMatrix","Array","isArray","constantMatrix","length","constantScale","constantOrientation","constantTranslation","hasMatrix","Boolean","constant","instanceModelMatrixData","value","matrix","set","i","_createIterable","iterable","objectInfo","_iterator","_createForOfIteratorHelper","_step","s","n","done","object","index","err","e","f","shouldComposeModelMatrix","viewport","coordinateSystem","CARTESIAN","METER_OFFSETS","DEFAULT","isGeospatial"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/layers/node_modules/@deck.gl/mesh-layers/src/utils/matrix.ts"],"sourcesContent":["import {COORDINATE_SYSTEM, createIterable} from '@deck.gl/core';\n\n/* eslint-disable max-statements, complexity, camelcase */\nconst RADIAN_PER_DEGREE = Math.PI / 180;\nconst modelMatrix = new Float32Array(16);\nconst valueArray = new Float32Array(12);\n\nfunction calculateTransformMatrix(targetMatrix, orientation, scale) {\n  const pitch = orientation[0] * RADIAN_PER_DEGREE;\n  const yaw = orientation[1] * RADIAN_PER_DEGREE;\n  const roll = orientation[2] * RADIAN_PER_DEGREE;\n\n  const sr = Math.sin(roll);\n  const sp = Math.sin(pitch);\n  const sw = Math.sin(yaw);\n\n  const cr = Math.cos(roll);\n  const cp = Math.cos(pitch);\n  const cw = Math.cos(yaw);\n\n  const scx = scale[0];\n  const scy = scale[1];\n  const scz = scale[2];\n\n  targetMatrix[0] = scx * cw * cp; // 0,0\n  targetMatrix[1] = scx * sw * cp; // 1,0\n  targetMatrix[2] = scx * -sp; // 2,0\n  targetMatrix[3] = scy * (-sw * cr + cw * sp * sr); // 0,1\n  targetMatrix[4] = scy * (cw * cr + sw * sp * sr); // 1,1\n  targetMatrix[5] = scy * cp * sr; // 2,1\n  targetMatrix[6] = scz * (sw * sr + cw * sp * cr); // 0,2\n  targetMatrix[7] = scz * (-cw * sr + sw * sp * cr); // 1,2\n  targetMatrix[8] = scz * cp * cr; // 2,2\n}\n\nfunction getExtendedMat3FromMat4(mat4) {\n  mat4[0] = mat4[0];\n  mat4[1] = mat4[1];\n  mat4[2] = mat4[2];\n  mat4[3] = mat4[4];\n  mat4[4] = mat4[5];\n  mat4[5] = mat4[6];\n  mat4[6] = mat4[8];\n  mat4[7] = mat4[9];\n  mat4[8] = mat4[10];\n  mat4[9] = mat4[12];\n  mat4[10] = mat4[13];\n  mat4[11] = mat4[14];\n\n  return mat4.subarray(0, 12);\n}\n\nexport const MATRIX_ATTRIBUTES = {\n  size: 12,\n  accessor: ['getOrientation', 'getScale', 'getTranslation', 'getTransformMatrix'],\n  shaderAttributes: {\n    instanceModelMatrix__LOCATION_0: {\n      size: 3,\n      elementOffset: 0\n    },\n    instanceModelMatrix__LOCATION_1: {\n      size: 3,\n      elementOffset: 3\n    },\n    instanceModelMatrix__LOCATION_2: {\n      size: 3,\n      elementOffset: 6\n    },\n    instanceTranslation: {\n      size: 3,\n      elementOffset: 9\n    }\n  } as const,\n\n  update(attribute, {startRow, endRow}) {\n    // @ts-expect-error: \"this\" will be bound to a layer when this function is called\n    const {data, getOrientation, getScale, getTranslation, getTransformMatrix} = this.props;\n\n    const arrayMatrix = Array.isArray(getTransformMatrix);\n    const constantMatrix = arrayMatrix && getTransformMatrix.length === 16;\n    const constantScale = Array.isArray(getScale);\n    const constantOrientation = Array.isArray(getOrientation);\n    const constantTranslation = Array.isArray(getTranslation);\n\n    const hasMatrix = constantMatrix || (!arrayMatrix && Boolean(getTransformMatrix(data[0])));\n\n    if (hasMatrix) {\n      attribute.constant = constantMatrix;\n    } else {\n      attribute.constant = constantOrientation && constantScale && constantTranslation;\n    }\n\n    const instanceModelMatrixData = attribute.value;\n\n    if (attribute.constant) {\n      let matrix;\n\n      if (hasMatrix) {\n        modelMatrix.set(getTransformMatrix);\n        matrix = getExtendedMat3FromMat4(modelMatrix);\n      } else {\n        matrix = valueArray;\n\n        const orientation = getOrientation;\n        const scale = getScale;\n\n        calculateTransformMatrix(matrix, orientation, scale);\n        matrix.set(getTranslation, 9);\n      }\n\n      attribute.value = new Float32Array(matrix);\n    } else {\n      let i = startRow * attribute.size;\n      const {iterable, objectInfo} = createIterable(data, startRow, endRow);\n      for (const object of iterable) {\n        objectInfo.index++;\n        let matrix;\n\n        if (hasMatrix) {\n          modelMatrix.set(\n            constantMatrix ? getTransformMatrix : getTransformMatrix(object, objectInfo)\n          );\n          matrix = getExtendedMat3FromMat4(modelMatrix);\n        } else {\n          matrix = valueArray;\n\n          const orientation = constantOrientation\n            ? getOrientation\n            : getOrientation(object, objectInfo);\n          const scale = constantScale ? getScale : getScale(object, objectInfo);\n\n          calculateTransformMatrix(matrix, orientation, scale);\n          matrix.set(constantTranslation ? getTranslation : getTranslation(object, objectInfo), 9);\n        }\n\n        instanceModelMatrixData[i++] = matrix[0];\n        instanceModelMatrixData[i++] = matrix[1];\n        instanceModelMatrixData[i++] = matrix[2];\n        instanceModelMatrixData[i++] = matrix[3];\n        instanceModelMatrixData[i++] = matrix[4];\n        instanceModelMatrixData[i++] = matrix[5];\n        instanceModelMatrixData[i++] = matrix[6];\n        instanceModelMatrixData[i++] = matrix[7];\n        instanceModelMatrixData[i++] = matrix[8];\n        instanceModelMatrixData[i++] = matrix[9];\n        instanceModelMatrixData[i++] = matrix[10];\n        instanceModelMatrixData[i++] = matrix[11];\n      }\n    }\n  }\n};\n\n// only apply composeModelMatrix when in cartesian or meter_offsets coordinate system\n// with `composeModelMatrix` enabled, the rotation part of the layer's modelMatrix will be composed to instance's transformations\n// since rotating latitude and longitude can not provide meaningful results, hence `composeModelMatrix` is disabled\n// when in LNGLAT and LNGLAT_OFFSET coordinates.\nexport function shouldComposeModelMatrix(viewport, coordinateSystem) {\n  return (\n    coordinateSystem === COORDINATE_SYSTEM.CARTESIAN ||\n    coordinateSystem === COORDINATE_SYSTEM.METER_OFFSETS ||\n    (coordinateSystem === COORDINATE_SYSTEM.DEFAULT && !viewport.isGeospatial)\n  );\n}\n"],"mappings":";AAAA,SAAQA,iBAAR,EAA2BC,cAA3B,QAAgD,eAAhD;AAGA,IAAMC,iBAAiB,GAAGC,IAAI,CAACC,EAAL,GAAU,GAApC;AACA,IAAMC,WAAW,GAAG,IAAIC,YAAJ,CAAiB,EAAjB,CAApB;AACA,IAAMC,UAAU,GAAG,IAAID,YAAJ,CAAiB,EAAjB,CAAnB;AAEA,SAASE,wBAATA,CAAkCC,YAAlC,EAAgDC,WAAhD,EAA6DC,KAA7D,EAAoE;EAClE,IAAMC,KAAK,GAAGF,WAAW,CAAC,CAAD,CAAX,GAAiBR,iBAA/B;EACA,IAAMW,GAAG,GAAGH,WAAW,CAAC,CAAD,CAAX,GAAiBR,iBAA7B;EACA,IAAMY,IAAI,GAAGJ,WAAW,CAAC,CAAD,CAAX,GAAiBR,iBAA9B;EAEA,IAAMa,EAAE,GAAGZ,IAAI,CAACa,GAAL,CAASF,IAAT,CAAX;EACA,IAAMG,EAAE,GAAGd,IAAI,CAACa,GAAL,CAASJ,KAAT,CAAX;EACA,IAAMM,EAAE,GAAGf,IAAI,CAACa,GAAL,CAASH,GAAT,CAAX;EAEA,IAAMM,EAAE,GAAGhB,IAAI,CAACiB,GAAL,CAASN,IAAT,CAAX;EACA,IAAMO,EAAE,GAAGlB,IAAI,CAACiB,GAAL,CAASR,KAAT,CAAX;EACA,IAAMU,EAAE,GAAGnB,IAAI,CAACiB,GAAL,CAASP,GAAT,CAAX;EAEA,IAAMU,GAAG,GAAGZ,KAAK,CAAC,CAAD,CAAjB;EACA,IAAMa,GAAG,GAAGb,KAAK,CAAC,CAAD,CAAjB;EACA,IAAMc,GAAG,GAAGd,KAAK,CAAC,CAAD,CAAjB;EAEAF,YAAY,CAAC,CAAD,CAAZ,GAAkBc,GAAG,GAAGD,EAAN,GAAWD,EAA7B;EACAZ,YAAY,CAAC,CAAD,CAAZ,GAAkBc,GAAG,GAAGL,EAAN,GAAWG,EAA7B;EACAZ,YAAY,CAAC,CAAD,CAAZ,GAAkBc,GAAG,GAAG,CAACN,EAAzB;EACAR,YAAY,CAAC,CAAD,CAAZ,GAAkBe,GAAG,IAAI,CAACN,EAAD,GAAMC,EAAN,GAAWG,EAAE,GAAGL,EAAL,GAAUF,EAAzB,CAArB;EACAN,YAAY,CAAC,CAAD,CAAZ,GAAkBe,GAAG,IAAIF,EAAE,GAAGH,EAAL,GAAUD,EAAE,GAAGD,EAAL,GAAUF,EAAxB,CAArB;EACAN,YAAY,CAAC,CAAD,CAAZ,GAAkBe,GAAG,GAAGH,EAAN,GAAWN,EAA7B;EACAN,YAAY,CAAC,CAAD,CAAZ,GAAkBgB,GAAG,IAAIP,EAAE,GAAGH,EAAL,GAAUO,EAAE,GAAGL,EAAL,GAAUE,EAAxB,CAArB;EACAV,YAAY,CAAC,CAAD,CAAZ,GAAkBgB,GAAG,IAAI,CAACH,EAAD,GAAMP,EAAN,GAAWG,EAAE,GAAGD,EAAL,GAAUE,EAAzB,CAArB;EACAV,YAAY,CAAC,CAAD,CAAZ,GAAkBgB,GAAG,GAAGJ,EAAN,GAAWF,EAA7B;AACD;AAED,SAASO,uBAATA,CAAiCC,IAAjC,EAAuC;EACrCA,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAd;EACAA,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAd;EACAA,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAd;EACAA,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAd;EACAA,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAd;EACAA,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAd;EACAA,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAd;EACAA,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAd;EACAA,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,EAAD,CAAd;EACAA,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,EAAD,CAAd;EACAA,IAAI,CAAC,EAAD,CAAJ,GAAWA,IAAI,CAAC,EAAD,CAAf;EACAA,IAAI,CAAC,EAAD,CAAJ,GAAWA,IAAI,CAAC,EAAD,CAAf;EAEA,OAAOA,IAAI,CAACC,QAAL,CAAc,CAAd,EAAiB,EAAjB,CAAP;AACD;AAED,OAAO,IAAMC,iBAAiB,GAAG;EAC/BC,IAAI,EAAE,EADyB;EAE/BC,QAAQ,EAAE,CAAC,gBAAD,EAAmB,UAAnB,EAA+B,gBAA/B,EAAiD,oBAAjD,CAFqB;EAG/BC,gBAAgB,EAAE;IAChBC,+BAA+B,EAAE;MAC/BH,IAAI,EAAE,CADyB;MAE/BI,aAAa,EAAE;IAFgB,CADjB;IAKhBC,+BAA+B,EAAE;MAC/BL,IAAI,EAAE,CADyB;MAE/BI,aAAa,EAAE;IAFgB,CALjB;IAShBE,+BAA+B,EAAE;MAC/BN,IAAI,EAAE,CADyB;MAE/BI,aAAa,EAAE;IAFgB,CATjB;IAahBG,mBAAmB,EAAE;MACnBP,IAAI,EAAE,CADa;MAEnBI,aAAa,EAAE;IAFI;EAbL,CAHa;EAsB/BI,MAAM,WAAAA,OAACC,SAAD,EAAAC,IAAA,EAAgC;IAAA,IAAnBC,QAAD,GAAAD,IAAA,CAACC,QAAD;MAAWC,MAAA,GAAAF,IAAA,CAAAE,MAAA;IAE3B,IAAAC,WAAA,GAA6E,KAAKC,KAAlF;MAAOC,IAAD,GAAAF,WAAA,CAACE,IAAD;MAAOC,cAAP,GAAAH,WAAA,CAAOG,cAAP;MAAuBC,QAAvB,GAAAJ,WAAA,CAAuBI,QAAvB;MAAiCC,cAAjC,GAAAL,WAAA,CAAiCK,cAAjC;MAAiDC,kBAAA,GAAAN,WAAA,CAAAM,kBAAA;IAEvD,IAAMC,WAAW,GAAGC,KAAK,CAACC,OAAN,CAAcH,kBAAd,CAApB;IACA,IAAMI,cAAc,GAAGH,WAAW,IAAID,kBAAkB,CAACK,MAAnB,KAA8B,EAApE;IACA,IAAMC,aAAa,GAAGJ,KAAK,CAACC,OAAN,CAAcL,QAAd,CAAtB;IACA,IAAMS,mBAAmB,GAAGL,KAAK,CAACC,OAAN,CAAcN,cAAd,CAA5B;IACA,IAAMW,mBAAmB,GAAGN,KAAK,CAACC,OAAN,CAAcJ,cAAd,CAA5B;IAEA,IAAMU,SAAS,GAAGL,cAAc,IAAK,CAACH,WAAD,IAAgBS,OAAO,CAACV,kBAAkB,CAACJ,IAAI,CAAC,CAAD,CAAL,CAAnB,CAA5D;IAEA,IAAIa,SAAJ,EAAe;MACbnB,SAAS,CAACqB,QAAV,GAAqBP,cAArB;IACD,CAFD,MAEO;MACLd,SAAS,CAACqB,QAAV,GAAqBJ,mBAAmB,IAAID,aAAvB,IAAwCE,mBAA7D;IACD;IAED,IAAMI,uBAAuB,GAAGtB,SAAS,CAACuB,KAA1C;IAEA,IAAIvB,SAAS,CAACqB,QAAd,EAAwB;MACtB,IAAIG,MAAJ;MAEA,IAAIL,SAAJ,EAAe;QACbrD,WAAW,CAAC2D,GAAZ,CAAgBf,kBAAhB;QACAc,MAAM,GAAGrC,uBAAuB,CAACrB,WAAD,CAAhC;MACD,CAHD,MAGO;QACL0D,MAAM,GAAGxD,UAAT;QAEA,IAAMG,WAAW,GAAGoC,cAApB;QACA,IAAMnC,KAAK,GAAGoC,QAAd;QAEAvC,wBAAwB,CAACuD,MAAD,EAASrD,WAAT,EAAsBC,KAAtB,CAAxB;QACAoD,MAAM,CAACC,GAAP,CAAWhB,cAAX,EAA2B,CAA3B;MACD;MAEDT,SAAS,CAACuB,KAAV,GAAkB,IAAIxD,YAAJ,CAAiByD,MAAjB,CAAlB;IACD,CAjBD,MAiBO;MACL,IAAIE,CAAC,GAAGxB,QAAQ,GAAGF,SAAS,CAACT,IAA7B;MACA,IAAAoC,eAAA,GAA+BjE,cAAc,CAAC4C,IAAD,EAAOJ,QAAP,EAAiBC,MAAjB,CAA7C;QAAOyB,QAAD,GAAAD,eAAA,CAACC,QAAD;QAAWC,UAAA,GAAAF,eAAA,CAAAE,UAAA;MAAjB,IAAAC,SAAA,GAAAC,0BAAA,CACqBH,QAArB;QAAAI,KAAA;MAAA;QAAA,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAA+B;UAAA,IAApBC,MAAX,GAAAJ,KAAA,CAAAT,KAAA;UACEM,UAAU,CAACQ,KAAX;UACA,IAAIb,OAAJ;UAEA,IAAIL,SAAJ,EAAe;YACbrD,WAAW,CAAC2D,GAAZ,CACEX,cAAc,GAAGJ,kBAAH,GAAwBA,kBAAkB,CAAC0B,MAAD,EAASP,UAAT,CAD1D;YAGAL,OAAM,GAAGrC,uBAAuB,CAACrB,WAAD,CAAhC;UACD,CALD,MAKO;YACL0D,OAAM,GAAGxD,UAAT;YAEA,IAAMG,YAAW,GAAG8C,mBAAmB,GACnCV,cADmC,GAEnCA,cAAc,CAAC6B,MAAD,EAASP,UAAT,CAFlB;YAGA,IAAMzD,MAAK,GAAG4C,aAAa,GAAGR,QAAH,GAAcA,QAAQ,CAAC4B,MAAD,EAASP,UAAT,CAAjD;YAEA5D,wBAAwB,CAACuD,OAAD,EAASrD,YAAT,EAAsBC,MAAtB,CAAxB;YACAoD,OAAM,CAACC,GAAP,CAAWP,mBAAmB,GAAGT,cAAH,GAAoBA,cAAc,CAAC2B,MAAD,EAASP,UAAT,CAAhE,EAAsF,CAAtF;UACD;UAEDP,uBAAuB,CAACI,CAAC,EAAF,CAAvB,GAA+BF,OAAM,CAAC,CAAD,CAArC;UACAF,uBAAuB,CAACI,CAAC,EAAF,CAAvB,GAA+BF,OAAM,CAAC,CAAD,CAArC;UACAF,uBAAuB,CAACI,CAAC,EAAF,CAAvB,GAA+BF,OAAM,CAAC,CAAD,CAArC;UACAF,uBAAuB,CAACI,CAAC,EAAF,CAAvB,GAA+BF,OAAM,CAAC,CAAD,CAArC;UACAF,uBAAuB,CAACI,CAAC,EAAF,CAAvB,GAA+BF,OAAM,CAAC,CAAD,CAArC;UACAF,uBAAuB,CAACI,CAAC,EAAF,CAAvB,GAA+BF,OAAM,CAAC,CAAD,CAArC;UACAF,uBAAuB,CAACI,CAAC,EAAF,CAAvB,GAA+BF,OAAM,CAAC,CAAD,CAArC;UACAF,uBAAuB,CAACI,CAAC,EAAF,CAAvB,GAA+BF,OAAM,CAAC,CAAD,CAArC;UACAF,uBAAuB,CAACI,CAAC,EAAF,CAAvB,GAA+BF,OAAM,CAAC,CAAD,CAArC;UACAF,uBAAuB,CAACI,CAAC,EAAF,CAAvB,GAA+BF,OAAM,CAAC,CAAD,CAArC;UACAF,uBAAuB,CAACI,CAAC,EAAF,CAAvB,GAA+BF,OAAM,CAAC,EAAD,CAArC;UACAF,uBAAuB,CAACI,CAAC,EAAF,CAAvB,GAA+BF,OAAM,CAAC,EAAD,CAArC;QACD;MAAA,SAAAc,GAAA;QAAAR,SAAA,CAAAS,CAAA,CAAAD,GAAA;MAAA;QAAAR,SAAA,CAAAU,CAAA;MAAA;IACF;EACF;AAjG8B,CAA1B;AAwGP,OAAO,SAASC,wBAATA,CAAkCC,QAAlC,EAA4CC,gBAA5C,EAA8D;EACnE,OACEA,gBAAgB,KAAKlF,iBAAiB,CAACmF,SAAvC,IACAD,gBAAgB,KAAKlF,iBAAiB,CAACoF,aADvC,IAECF,gBAAgB,KAAKlF,iBAAiB,CAACqF,OAAvC,IAAkD,CAACJ,QAAQ,CAACK,YAH/D;AAKD"},"metadata":{},"sourceType":"module","externalDependencies":[]}