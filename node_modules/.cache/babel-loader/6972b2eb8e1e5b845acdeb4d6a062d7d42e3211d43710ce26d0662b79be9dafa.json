{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { GLTFLoader } from '@loaders.gl/gltf';\nimport { sliceArrayBuffer } from '@loaders.gl/loader-utils';\nexport var GLTF_FORMAT = {\n  URI: 0,\n  EMBEDDED: 1\n};\nexport function parse3DTileGLTFViewSync(tile, arrayBuffer, byteOffset, options) {\n  tile.rotateYtoZ = true;\n  var gltfByteLength = tile.byteOffset + tile.byteLength - byteOffset;\n  if (gltfByteLength === 0) {\n    throw new Error('glTF byte length must be greater than 0.');\n  }\n  tile.gltfUpAxis = options['3d-tiles'] && options['3d-tiles'].assetGltfUpAxis ? options['3d-tiles'].assetGltfUpAxis : 'Y';\n  tile.gltfArrayBuffer = sliceArrayBuffer(arrayBuffer, byteOffset, gltfByteLength);\n  tile.gltfByteOffset = 0;\n  tile.gltfByteLength = gltfByteLength;\n  if (byteOffset % 4 === 0) {} else {\n    console.warn(\"\".concat(tile.type, \": embedded glb is not aligned to a 4-byte boundary.\"));\n  }\n  return tile.byteOffset + tile.byteLength;\n}\nexport function extractGLTF(_x, _x2, _x3, _x4) {\n  return _extractGLTF.apply(this, arguments);\n}\nfunction _extractGLTF() {\n  _extractGLTF = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(tile, gltfFormat, options, context) {\n    var tile3DOptions, parse, fetch;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          tile3DOptions = options['3d-tiles'] || {};\n          extractGLTFBufferOrURL(tile, gltfFormat, options);\n          if (!tile3DOptions.loadGLTF) {\n            _context.next = 16;\n            break;\n          }\n          parse = context.parse, fetch = context.fetch;\n          if (!tile.gltfUrl) {\n            _context.next = 9;\n            break;\n          }\n          _context.next = 7;\n          return fetch(tile.gltfUrl, options);\n        case 7:\n          tile.gltfArrayBuffer = _context.sent;\n          tile.gltfByteOffset = 0;\n        case 9:\n          if (!tile.gltfArrayBuffer) {\n            _context.next = 16;\n            break;\n          }\n          _context.next = 12;\n          return parse(tile.gltfArrayBuffer, GLTFLoader, options, context);\n        case 12:\n          tile.gltf = _context.sent;\n          delete tile.gltfArrayBuffer;\n          delete tile.gltfByteOffset;\n          delete tile.gltfByteLength;\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _extractGLTF.apply(this, arguments);\n}\nfunction extractGLTFBufferOrURL(tile, gltfFormat, options) {\n  switch (gltfFormat) {\n    case GLTF_FORMAT.URI:\n      var gltfUrlBytes = new Uint8Array(tile.gltfArrayBuffer, tile.gltfByteOffset);\n      var textDecoder = new TextDecoder();\n      var gltfUrl = textDecoder.decode(gltfUrlBytes);\n      tile.gltfUrl = gltfUrl.replace(/[\\s\\0]+$/, '');\n      delete tile.gltfArrayBuffer;\n      delete tile.gltfByteOffset;\n      delete tile.gltfByteLength;\n      break;\n    case GLTF_FORMAT.EMBEDDED:\n      break;\n    default:\n      throw new Error('b3dm: Illegal glTF format field');\n  }\n}","map":{"version":3,"names":["GLTFLoader","sliceArrayBuffer","GLTF_FORMAT","URI","EMBEDDED","parse3DTileGLTFViewSync","tile","arrayBuffer","byteOffset","options","rotateYtoZ","gltfByteLength","byteLength","Error","gltfUpAxis","assetGltfUpAxis","gltfArrayBuffer","gltfByteOffset","console","warn","concat","type","extractGLTF","_x","_x2","_x3","_x4","_extractGLTF","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","gltfFormat","context","tile3DOptions","parse","fetch","wrap","_callee$","_context","prev","next","extractGLTFBufferOrURL","loadGLTF","gltfUrl","sent","gltf","stop","gltfUrlBytes","Uint8Array","textDecoder","TextDecoder","decode","replace"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/geo-layers/node_modules/@loaders.gl/3d-tiles/src/lib/parsers/helpers/parse-3d-tile-gltf-view.ts"],"sourcesContent":["// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\n// TODO - should we automatically parse the embedded glTF or leave it to the app?\n// - I.e. some apps might work directly on a GLB, in that case no need for us to decode...\n// - And if we decode, do we still keep the GLB in case it is needed?\n// - Do we add an option to control this?\n// - Also, should we have hard dependency on gltf module or use injection or auto-discovery for gltf parser?\n\nimport {GLTFLoader} from '@loaders.gl/gltf';\nimport {sliceArrayBuffer} from '@loaders.gl/loader-utils';\n\nexport const GLTF_FORMAT = {\n  URI: 0,\n  EMBEDDED: 1\n};\n\nexport function parse3DTileGLTFViewSync(tile, arrayBuffer, byteOffset, options) {\n  // Set flags\n  // glTF models need to be rotated from Y to Z up\n  // https://github.com/AnalyticalGraphicsInc/3d-tiles/tree/master/specification#y-up-to-z-up\n  tile.rotateYtoZ = true;\n\n  // Assume glTF consumes rest of tile\n  const gltfByteLength = tile.byteOffset + tile.byteLength - byteOffset;\n  if (gltfByteLength === 0) {\n    throw new Error('glTF byte length must be greater than 0.');\n  }\n\n  // Save gltf up axis\n  tile.gltfUpAxis =\n    options['3d-tiles'] && options['3d-tiles'].assetGltfUpAxis\n      ? options['3d-tiles'].assetGltfUpAxis\n      : 'Y';\n\n  // TODO - We can avoid copy if already 4-byte aligned...\n  // However the rest of the code may not be able to accept byteOffsets, so copy anyway\n  tile.gltfArrayBuffer = sliceArrayBuffer(arrayBuffer, byteOffset, gltfByteLength);\n  tile.gltfByteOffset = 0;\n  tile.gltfByteLength = gltfByteLength;\n\n  if (byteOffset % 4 === 0) {\n    // tile.gltfArrayBuffer = arrayBuffer;\n    // tile.gltfByteOffset = byteOffset;\n    // tile.gltfByteLength = gltfByteLength;\n  } else {\n    // Create a copy of the glb so that it is 4-byte aligned\n    // eslint-disable-next-line\n    console.warn(`${tile.type}: embedded glb is not aligned to a 4-byte boundary.`);\n  }\n\n  // Entire tile is consumed\n  return tile.byteOffset + tile.byteLength;\n}\n\nexport async function extractGLTF(tile, gltfFormat, options, context) {\n  const tile3DOptions = options['3d-tiles'] || {};\n\n  extractGLTFBufferOrURL(tile, gltfFormat, options);\n\n  if (tile3DOptions.loadGLTF) {\n    const {parse, fetch} = context;\n    if (tile.gltfUrl) {\n      tile.gltfArrayBuffer = await fetch(tile.gltfUrl, options);\n      tile.gltfByteOffset = 0;\n    }\n    if (tile.gltfArrayBuffer) {\n      // TODO - Should handle byteOffset... However, not used now...\n      tile.gltf = await parse(tile.gltfArrayBuffer, GLTFLoader, options, context);\n      delete tile.gltfArrayBuffer;\n      delete tile.gltfByteOffset;\n      delete tile.gltfByteLength;\n    }\n  }\n}\n\nfunction extractGLTFBufferOrURL(tile, gltfFormat, options) {\n  switch (gltfFormat) {\n    case GLTF_FORMAT.URI:\n      // We need to remove padding from the end of the model URL in case this tile was part of a composite tile.\n      // This removes all white space and null characters from the end of the string.\n      const gltfUrlBytes = new Uint8Array(tile.gltfArrayBuffer, tile.gltfByteOffset);\n      const textDecoder = new TextDecoder();\n      const gltfUrl = textDecoder.decode(gltfUrlBytes);\n      tile.gltfUrl = gltfUrl.replace(/[\\s\\0]+$/, '');\n      delete tile.gltfArrayBuffer;\n      delete tile.gltfByteOffset;\n      delete tile.gltfByteLength;\n      break;\n    case GLTF_FORMAT.EMBEDDED:\n      break;\n    default:\n      throw new Error('b3dm: Illegal glTF format field');\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}