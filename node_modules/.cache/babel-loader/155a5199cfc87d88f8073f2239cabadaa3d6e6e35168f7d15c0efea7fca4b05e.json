{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _class, _temp;\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class = /*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n  function Masonry() {\n    var _getPrototypeOf2;\n    var _this;\n    _classCallCheck(this, Masonry);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n    return _this;\n  }\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n      this._populatePositionCache(0, stopIndex);\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n      this._invokeOnScrollCallback();\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n      this._invokeOnScrollCallback();\n      this._invokeOnCellsRenderedCallback();\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props = this.props,\n        autoHeight = _this$props.autoHeight,\n        cellCount = _this$props.cellCount,\n        cellMeasurerCache = _this$props.cellMeasurerCache,\n        cellRenderer = _this$props.cellRenderer,\n        className = _this$props.className,\n        height = _this$props.height,\n        id = _this$props.id,\n        keyMapper = _this$props.keyMapper,\n        overscanByPixels = _this$props.overscanByPixels,\n        role = _this$props.role,\n        style = _this$props.style,\n        tabIndex = _this$props.tabIndex,\n        width = _this$props.width,\n        rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n        isScrolling = _this$state.isScrolling,\n        scrollTop = _this$state.scrollTop;\n      var children = [];\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n        cellCount = _this$props2.cellCount,\n        cellMeasurerCache = _this$props2.cellMeasurerCache,\n        width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n        height = _this$props3.height,\n        onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n        cellMeasurerCache = _this$props4.cellMeasurerCache,\n        cellPositioner = _this$props4.cellPositioner;\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n          left = _cellPositioner.left,\n          top = _cellPositioner.top;\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n      return null;\n    }\n  }]);\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\nfunction identity(value) {\n  return value;\n}\nfunction noop() {}\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","map":{"version":3,"names":["_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","_inherits","_defineProperty","_class","_temp","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","clsx","React","polyfill","PositionCache","requestAnimationTimeout","cancelAnimationTimeout","emptyObject","DEFAULT_SCROLLING_RESET_TIME_INTERVAL","Masonry","_React$PureComponent","_getPrototypeOf2","_this","_len","args","Array","_key","call","concat","isScrolling","scrollTop","setState","ref","_scrollingContainer","event","height","props","eventScrollTop","currentTarget","Math","min","max","_getEstimatedTotalHeight","_debounceResetIsScrolling","state","value","clearCellPositions","_positionCache","forceUpdate","invalidateCellSizeAfterRender","_ref","index","rowIndex","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","recomputeCellPositions","stopIndex","count","_populatePositionCache","componentDidMount","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","componentDidUpdate","prevProps","prevState","componentWillUnmount","_debounceResetIsScrollingId","render","_this2","_this$props","autoHeight","cellCount","cellMeasurerCache","cellRenderer","className","id","keyMapper","overscanByPixels","role","style","tabIndex","width","rowDirection","_this$state","children","estimateTotalHeight","shortestColumnSize","measuredCellCount","startIndex","range","left","top","_style","parent","getHeight","getWidth","batchSize","ceil","defaultHeight","defaultWidth","_index","_startIndex","_stopIndex","createElement","_setScrollingContainerRef","onScroll","_onScroll","boxSizing","direction","overflowX","overflowY","position","WebkitOverflowScrolling","willChange","maxWidth","maxHeight","overflow","pointerEvents","scrollingResetTimeInterval","_debounceResetIsScrollingCallback","_this$props2","estimatedColumnCount","floor","_this$props3","_onScrollMemoized","clientHeight","scrollHeight","_startIndexMemoized","_stopIndexMemoized","onCellsRendered","_this$props4","cellPositioner","_index2","_cellPositioner","setPosition","getDerivedStateFromProps","nextProps","undefined","PureComponent","process","env","NODE_ENV","PropTypes","bool","isRequired","number","CellMeasurerCache","instanceOf","any","Positioner","CellRenderer","string","KeyMapper","OnCellsRenderedCallback","OnScrollCallback","propName","componentName","prototype","hasOwnProperty","Error","identity","noop","bpfrpt_proptype_CellMeasurerCache","func","bpfrpt_proptype_Positioner","bpfrpt_proptype_AnimationTimeoutId"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/react-virtualized/dist/es/Masonry/Masonry.js"],"sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}