{"ast":null,"code":"import _objectSpread from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { lerp } from '@math.gl/core';\nvar availableTransformations = {\n  Point: Point,\n  MultiPoint: MultiPoint,\n  LineString: LineString,\n  MultiLineString: MultiLineString,\n  Polygon: Polygon,\n  MultiPolygon: MultiPolygon\n};\nfunction Point(_ref, _ref2, viewport) {\n  var _ref3 = _slicedToArray(_ref, 2),\n    pointX = _ref3[0],\n    pointY = _ref3[1];\n  var _ref4 = _slicedToArray(_ref2, 2),\n    nw = _ref4[0],\n    se = _ref4[1];\n  var x = lerp(nw[0], se[0], pointX);\n  var y = lerp(nw[1], se[1], pointY);\n  return viewport.unprojectFlat([x, y]);\n}\nfunction getPoints(geometry, bbox, viewport) {\n  return geometry.map(function (g) {\n    return Point(g, bbox, viewport);\n  });\n}\nfunction MultiPoint(multiPoint, bbox, viewport) {\n  return getPoints(multiPoint, bbox, viewport);\n}\nfunction LineString(line, bbox, viewport) {\n  return getPoints(line, bbox, viewport);\n}\nfunction MultiLineString(multiLineString, bbox, viewport) {\n  return multiLineString.map(function (lineString) {\n    return LineString(lineString, bbox, viewport);\n  });\n}\nfunction Polygon(polygon, bbox, viewport) {\n  return polygon.map(function (polygonRing) {\n    return getPoints(polygonRing, bbox, viewport);\n  });\n}\nfunction MultiPolygon(multiPolygon, bbox, viewport) {\n  return multiPolygon.map(function (polygon) {\n    return Polygon(polygon, bbox, viewport);\n  });\n}\nexport function transform(geometry, bbox, viewport) {\n  var nw = viewport.projectFlat([bbox.west, bbox.north]);\n  var se = viewport.projectFlat([bbox.east, bbox.south]);\n  var projectedBbox = [nw, se];\n  return _objectSpread(_objectSpread({}, geometry), {}, {\n    coordinates: availableTransformations[geometry.type](geometry.coordinates, projectedBbox, viewport)\n  });\n}","map":{"version":3,"names":["lerp","availableTransformations","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","_ref","_ref2","viewport","_ref3","_slicedToArray","pointX","pointY","_ref4","nw","se","x","y","unprojectFlat","getPoints","geometry","bbox","map","g","multiPoint","line","multiLineString","lineString","polygon","polygonRing","multiPolygon","transform","projectFlat","west","north","east","south","projectedBbox","_objectSpread","coordinates","type"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/geo-layers/src/mvt-layer/coordinate-transform.ts"],"sourcesContent":["import {Viewport} from '@deck.gl/core';\nimport {lerp} from '@math.gl/core';\nimport {GeoBoundingBox} from '../tile-layer/types';\n\nconst availableTransformations = {\n  Point,\n  MultiPoint,\n  LineString,\n  MultiLineString,\n  Polygon,\n  MultiPolygon\n};\n\nfunction Point([pointX, pointY]: [number, number], [nw, se]: number[][], viewport: Viewport) {\n  const x = lerp(nw[0], se[0], pointX);\n  const y = lerp(nw[1], se[1], pointY);\n\n  return viewport.unprojectFlat([x, y]);\n}\n\nfunction getPoints(geometry, bbox: number[][], viewport: Viewport) {\n  return geometry.map(g => Point(g, bbox, viewport));\n}\n\nfunction MultiPoint(multiPoint, bbox: number[][], viewport: Viewport) {\n  return getPoints(multiPoint, bbox, viewport);\n}\n\nfunction LineString(line, bbox: number[][], viewport: Viewport) {\n  return getPoints(line, bbox, viewport);\n}\n\nfunction MultiLineString(multiLineString, bbox: number[][], viewport: Viewport) {\n  return multiLineString.map(lineString => LineString(lineString, bbox, viewport));\n}\n\nfunction Polygon(polygon, bbox: number[][], viewport: Viewport) {\n  return polygon.map(polygonRing => getPoints(polygonRing, bbox, viewport));\n}\n\nfunction MultiPolygon(multiPolygon, bbox: number[][], viewport: Viewport) {\n  return multiPolygon.map(polygon => Polygon(polygon, bbox, viewport));\n}\n\nexport function transform(geometry, bbox: GeoBoundingBox, viewport: Viewport) {\n  const nw = viewport.projectFlat([bbox.west, bbox.north]);\n  const se = viewport.projectFlat([bbox.east, bbox.south]);\n  const projectedBbox = [nw, se];\n\n  return {\n    ...geometry,\n    coordinates: availableTransformations[geometry.type](\n      geometry.coordinates,\n      projectedBbox,\n      viewport\n    )\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}