{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { assert, validateLoaderVersion } from '@loaders.gl/loader-utils';\nimport { isLoaderObject } from '../loader-utils/normalize-loader';\nimport { normalizeOptions } from '../loader-utils/option-utils';\nimport { getArrayBufferOrStringFromData } from '../loader-utils/get-data';\nimport { getLoaders, getLoaderContext } from '../loader-utils/context-utils';\nimport parseWithWorker, { canParseWithWorker } from '../loader-utils/parse-with-worker';\nimport { getResourceUrlAndType } from '../utils/resource-utils';\nimport { selectLoader } from './select-loader';\nexport function parse(_x, _x2, _x3, _x4) {\n  return _parse.apply(this, arguments);\n}\nfunction _parse() {\n  _parse = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(data, loaders, options, context) {\n    var _getResourceUrlAndTyp, url, candidateLoaders, loader;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            assert(!context || typeof context !== 'string', 'parse no longer accepts final url');\n            if (loaders && !Array.isArray(loaders) && !isLoaderObject(loaders)) {\n              context = options;\n              options = loaders;\n              loaders = null;\n            }\n            _context.next = 4;\n            return data;\n          case 4:\n            data = _context.sent;\n            options = options || {};\n            _getResourceUrlAndTyp = getResourceUrlAndType(data), url = _getResourceUrlAndTyp.url;\n            candidateLoaders = getLoaders(loaders, context);\n            _context.next = 10;\n            return selectLoader(data, candidateLoaders, options);\n          case 10:\n            loader = _context.sent;\n            if (loader) {\n              _context.next = 13;\n              break;\n            }\n            return _context.abrupt(\"return\", null);\n          case 13:\n            options = normalizeOptions(options, loader, candidateLoaders, url);\n            context = getLoaderContext({\n              url: url,\n              parse: parse,\n              loaders: candidateLoaders\n            }, options, context);\n            _context.next = 17;\n            return parseWithLoader(loader, data, options, context);\n          case 17:\n            return _context.abrupt(\"return\", _context.sent);\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _parse.apply(this, arguments);\n}\nfunction parseWithLoader(_x5, _x6, _x7, _x8) {\n  return _parseWithLoader.apply(this, arguments);\n}\nfunction _parseWithLoader() {\n  _parseWithLoader = _asyncToGenerator(_regeneratorRuntime.mark(function _callee2(loader, data, options, context) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            validateLoaderVersion(loader);\n            _context2.next = 3;\n            return getArrayBufferOrStringFromData(data, loader);\n          case 3:\n            data = _context2.sent;\n            if (!(loader.parseTextSync && typeof data === 'string')) {\n              _context2.next = 7;\n              break;\n            }\n            options.dataType = 'text';\n            return _context2.abrupt(\"return\", loader.parseTextSync(data, options, context, loader));\n          case 7:\n            if (!canParseWithWorker(loader, data, options, context)) {\n              _context2.next = 11;\n              break;\n            }\n            _context2.next = 10;\n            return parseWithWorker(loader, data, options, context);\n          case 10:\n            return _context2.abrupt(\"return\", _context2.sent);\n          case 11:\n            if (!(loader.parseText && typeof data === 'string')) {\n              _context2.next = 15;\n              break;\n            }\n            _context2.next = 14;\n            return loader.parseText(data, options, context, loader);\n          case 14:\n            return _context2.abrupt(\"return\", _context2.sent);\n          case 15:\n            if (!loader.parse) {\n              _context2.next = 19;\n              break;\n            }\n            _context2.next = 18;\n            return loader.parse(data, options, context, loader);\n          case 18:\n            return _context2.abrupt(\"return\", _context2.sent);\n          case 19:\n            assert(!loader.parseSync);\n            return _context2.abrupt(\"return\", assert(false));\n          case 21:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _parseWithLoader.apply(this, arguments);\n}","map":{"version":3,"names":["assert","validateLoaderVersion","isLoaderObject","normalizeOptions","getArrayBufferOrStringFromData","getLoaders","getLoaderContext","parseWithWorker","canParseWithWorker","getResourceUrlAndType","selectLoader","parse","_x","_x2","_x3","_x4","_parse","apply","arguments","_callee","data","loaders","options","context","_getResourceUrlAndTyp","url","candidateLoaders","loader","_regeneratorRuntime","wrap","_callee$","_context","prev","next","Array","isArray","sent","abrupt","parseWithLoader","stop","_callee2","_callee2$","_context2","parseTextSync","dataType","parseText","parseSync"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/kepler.gl/node_modules/@loaders.gl/core/src/lib/api/parse.js"],"sourcesContent":["import {assert, validateLoaderVersion} from '@loaders.gl/loader-utils';\nimport {isLoaderObject} from '../loader-utils/normalize-loader';\nimport {normalizeOptions} from '../loader-utils/option-utils';\nimport {getArrayBufferOrStringFromData} from '../loader-utils/get-data';\nimport {getLoaders, getLoaderContext} from '../loader-utils/context-utils';\nimport parseWithWorker, {canParseWithWorker} from '../loader-utils/parse-with-worker';\nimport {getResourceUrlAndType} from '../utils/resource-utils';\nimport {selectLoader} from './select-loader';\n\nexport async function parse(data, loaders, options, context) {\n  assert(!context || typeof context !== 'string', 'parse no longer accepts final url');\n\n  // Signature: parse(data, options, context | url)\n  // Uses registered loaders\n  if (loaders && !Array.isArray(loaders) && !isLoaderObject(loaders)) {\n    context = options;\n    options = loaders;\n    loaders = null;\n  }\n\n  data = await data; // Resolve any promise\n  options = options || {};\n\n  // Extract a url for auto detection\n  const {url} = getResourceUrlAndType(data);\n\n  // Chooses a loader (and normalizes it)\n  // Also use any loaders in the context, new loaders take priority\n  const candidateLoaders = getLoaders(loaders, context);\n  const loader = await selectLoader(data, candidateLoaders, options);\n  // Note: if nothrow option was set, it is possible that no loader was found, if so just return null\n  if (!loader) {\n    return null;\n  }\n\n  // Normalize options\n  options = normalizeOptions(options, loader, candidateLoaders, url);\n\n  // Get a context (if already present, will be unchanged)\n  context = getLoaderContext({url, parse, loaders: candidateLoaders}, options, context);\n\n  return await parseWithLoader(loader, data, options, context);\n}\n\n// TODO: support progress and abort\n// TODO - should accept loader.parseAsyncIterator and concatenate.\nasync function parseWithLoader(loader, data, options, context) {\n  validateLoaderVersion(loader);\n\n  data = await getArrayBufferOrStringFromData(data, loader);\n\n  // First check for synchronous text parser, wrap results in promises\n  if (loader.parseTextSync && typeof data === 'string') {\n    options.dataType = 'text';\n    return loader.parseTextSync(data, options, context, loader);\n  }\n\n  // If we have a workerUrl and the loader can parse the given options efficiently in a worker\n  if (canParseWithWorker(loader, data, options, context)) {\n    return await parseWithWorker(loader, data, options, context);\n  }\n\n  // Check for asynchronous parser\n  if (loader.parseText && typeof data === 'string') {\n    return await loader.parseText(data, options, context, loader);\n  }\n\n  if (loader.parse) {\n    return await loader.parse(data, options, context, loader);\n  }\n\n  // This should not happen, all sync loaders should also offer `parse` function\n  assert(!loader.parseSync);\n\n  // TBD - If asynchronous parser not available, return null\n  return assert(false);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}