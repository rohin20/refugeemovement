{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { isResponse } from '../../javascript-utils/is-type';\nimport { getResourceContentLength, getResourceUrlAndType } from './resource-utils';\nexport function makeResponse(_x) {\n  return _makeResponse.apply(this, arguments);\n}\nfunction _makeResponse() {\n  _makeResponse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(resource) {\n    var headers, contentLength, _getResourceUrlAndTyp, url, type, initialDataUrl, response;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!isResponse(resource)) {\n            _context.next = 2;\n            break;\n          }\n          return _context.abrupt(\"return\", resource);\n        case 2:\n          headers = {};\n          contentLength = getResourceContentLength(resource);\n          if (contentLength >= 0) {\n            headers['content-length'] = String(contentLength);\n          }\n          _getResourceUrlAndTyp = getResourceUrlAndType(resource), url = _getResourceUrlAndTyp.url, type = _getResourceUrlAndTyp.type;\n          if (type) {\n            headers['content-type'] = type;\n          }\n          _context.next = 9;\n          return getInitialDataUrl(resource);\n        case 9:\n          initialDataUrl = _context.sent;\n          if (initialDataUrl) {\n            headers['x-first-bytes'] = initialDataUrl;\n          }\n          if (typeof resource === 'string') {\n            resource = new TextEncoder().encode(resource);\n          }\n          response = new Response(resource, {\n            headers: headers\n          });\n          Object.defineProperty(response, 'url', {\n            value: url\n          });\n          return _context.abrupt(\"return\", response);\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _makeResponse.apply(this, arguments);\n}\nexport function checkResponse(_x2) {\n  return _checkResponse.apply(this, arguments);\n}\nfunction _checkResponse() {\n  _checkResponse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(response) {\n    var message;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          if (response.ok) {\n            _context2.next = 5;\n            break;\n          }\n          _context2.next = 3;\n          return getResponseError(response);\n        case 3:\n          message = _context2.sent;\n          throw new Error(message);\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _checkResponse.apply(this, arguments);\n}\nexport function checkResponseSync(response) {\n  if (!response.ok) {\n    var message = \"\".concat(response.status, \" \").concat(response.statusText);\n    message = message.length > 60 ? \"\".concat(message.slice(0, 60), \"...\") : message;\n    throw new Error(message);\n  }\n}\nfunction getResponseError(_x3) {\n  return _getResponseError.apply(this, arguments);\n}\nfunction _getResponseError() {\n  _getResponseError = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(response) {\n    var message, contentType, text;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          message = \"Failed to fetch resource \".concat(response.url, \" (\").concat(response.status, \"): \");\n          _context3.prev = 1;\n          contentType = response.headers.get('Content-Type');\n          text = response.statusText;\n          if (!contentType.includes('application/json')) {\n            _context3.next = 11;\n            break;\n          }\n          _context3.t0 = text;\n          _context3.t1 = \" \";\n          _context3.next = 9;\n          return response.text();\n        case 9:\n          _context3.t2 = _context3.sent;\n          text = _context3.t0 += _context3.t1.concat.call(_context3.t1, _context3.t2);\n        case 11:\n          message += text;\n          message = message.length > 60 ? \"\".concat(message.slice(0, 60), \"...\") : message;\n          _context3.next = 17;\n          break;\n        case 15:\n          _context3.prev = 15;\n          _context3.t3 = _context3[\"catch\"](1);\n        case 17:\n          return _context3.abrupt(\"return\", message);\n        case 18:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3, null, [[1, 15]]);\n  }));\n  return _getResponseError.apply(this, arguments);\n}\nfunction getInitialDataUrl(_x4) {\n  return _getInitialDataUrl.apply(this, arguments);\n}\nfunction _getInitialDataUrl() {\n  _getInitialDataUrl = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(resource) {\n    var INITIAL_DATA_LENGTH, blobSlice, slice, base64;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          INITIAL_DATA_LENGTH = 5;\n          if (!(typeof resource === 'string')) {\n            _context4.next = 3;\n            break;\n          }\n          return _context4.abrupt(\"return\", \"data:,\".concat(resource.slice(0, INITIAL_DATA_LENGTH)));\n        case 3:\n          if (!(resource instanceof Blob)) {\n            _context4.next = 8;\n            break;\n          }\n          blobSlice = resource.slice(0, 5);\n          _context4.next = 7;\n          return new Promise(function (resolve) {\n            var reader = new FileReader();\n            reader.onload = function (event) {\n              var _event$target;\n              return resolve(event === null || event === void 0 ? void 0 : (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.result);\n            };\n            reader.readAsDataURL(blobSlice);\n          });\n        case 7:\n          return _context4.abrupt(\"return\", _context4.sent);\n        case 8:\n          if (!(resource instanceof ArrayBuffer)) {\n            _context4.next = 12;\n            break;\n          }\n          slice = resource.slice(0, INITIAL_DATA_LENGTH);\n          base64 = arrayBufferToBase64(slice);\n          return _context4.abrupt(\"return\", \"data:base64,\".concat(base64));\n        case 12:\n          return _context4.abrupt(\"return\", null);\n        case 13:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }));\n  return _getInitialDataUrl.apply(this, arguments);\n}\nfunction arrayBufferToBase64(buffer) {\n  var binary = '';\n  var bytes = new Uint8Array(buffer);\n  for (var i = 0; i < bytes.byteLength; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return btoa(binary);\n}","map":{"version":3,"names":["isResponse","getResourceContentLength","getResourceUrlAndType","makeResponse","_x","_makeResponse","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","resource","headers","contentLength","_getResourceUrlAndTyp","url","type","initialDataUrl","response","wrap","_callee$","_context","prev","next","abrupt","String","getInitialDataUrl","sent","TextEncoder","encode","Response","Object","defineProperty","value","stop","checkResponse","_x2","_checkResponse","_callee2","message","_callee2$","_context2","ok","getResponseError","Error","checkResponseSync","concat","status","statusText","length","slice","_x3","_getResponseError","_callee3","contentType","text","_callee3$","_context3","get","includes","t0","t1","t2","call","t3","_x4","_getInitialDataUrl","_callee4","INITIAL_DATA_LENGTH","blobSlice","base64","_callee4$","_context4","Blob","Promise","resolve","reader","FileReader","onload","event","_event$target","target","result","readAsDataURL","ArrayBuffer","arrayBufferToBase64","buffer","binary","bytes","Uint8Array","i","byteLength","fromCharCode","btoa"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/processors/node_modules/@loaders.gl/core/src/lib/utils/response-utils.ts"],"sourcesContent":["import {isResponse} from '../../javascript-utils/is-type';\nimport {getResourceContentLength, getResourceUrlAndType} from './resource-utils';\n\n/**\n * Returns a Response object\n * Adds content-length header when possible\n *\n * @param resource\n */\nexport async function makeResponse(resource: any): Promise<Response> {\n  if (isResponse(resource)) {\n    return resource;\n  }\n\n  // Add content-length header if possible\n  const headers: {[header: string]: string} = {};\n\n  const contentLength = getResourceContentLength(resource);\n  if (contentLength >= 0) {\n    headers['content-length'] = String(contentLength);\n  }\n\n  // `new Response(File)` does not preserve content-type and URL\n  // so we add them here\n  const {url, type} = getResourceUrlAndType(resource);\n  if (type) {\n    headers['content-type'] = type;\n  }\n\n  // Add a custom header with initial bytes if available\n  const initialDataUrl = await getInitialDataUrl(resource);\n  if (initialDataUrl) {\n    headers['x-first-bytes'] = initialDataUrl;\n  }\n\n  // TODO - is this the best way of handling strings?\n  // Maybe package as data URL instead?\n  if (typeof resource === 'string') {\n    // Convert to ArrayBuffer to avoid Response treating it as a URL\n    resource = new TextEncoder().encode(resource);\n  }\n\n  // Attempt to create a Response from the resource, adding headers and setting url\n  const response = new Response(resource, {headers});\n  // We can't control `Response.url` via constructor, use a property override to record URL.\n  Object.defineProperty(response, 'url', {value: url});\n  return response;\n}\n\n/**\n * Checks response status (async) and throws a helpful error message if status is not OK.\n * @param response\n */\nexport async function checkResponse(response: Response): Promise<void> {\n  if (!response.ok) {\n    const message = await getResponseError(response);\n    throw new Error(message);\n  }\n}\n\n/**\n * Checks response status (sync) and throws a helpful error message if status is not OK.\n * @param response\n */\nexport function checkResponseSync(response: Response): void {\n  if (!response.ok) {\n    let message = `${response.status} ${response.statusText}`;\n    message = message.length > 60 ? `${message.slice(0, 60)}...` : message;\n    throw new Error(message);\n  }\n}\n\n// HELPERS\n\nasync function getResponseError(response): Promise<string> {\n  let message = `Failed to fetch resource ${response.url} (${response.status}): `;\n  try {\n    const contentType = response.headers.get('Content-Type');\n    let text = response.statusText;\n    if (contentType.includes('application/json')) {\n      text += ` ${await response.text()}`;\n    }\n    message += text;\n    message = message.length > 60 ? `${message.slice(0, 60)}...` : message;\n  } catch (error) {\n    // eslint forbids return in a finally statement, so we just catch here\n  }\n  return message;\n}\n\nasync function getInitialDataUrl(resource): Promise<string | null> {\n  const INITIAL_DATA_LENGTH = 5;\n  if (typeof resource === 'string') {\n    return `data:,${resource.slice(0, INITIAL_DATA_LENGTH)}`;\n  }\n  if (resource instanceof Blob) {\n    const blobSlice = resource.slice(0, 5);\n    return await new Promise((resolve) => {\n      const reader = new FileReader();\n      reader.onload = (event) => resolve(event?.target?.result as string);\n      reader.readAsDataURL(blobSlice);\n    });\n  }\n  if (resource instanceof ArrayBuffer) {\n    const slice = resource.slice(0, INITIAL_DATA_LENGTH);\n    const base64 = arrayBufferToBase64(slice);\n    return `data:base64,${base64}`;\n  }\n  return null;\n}\n\n// https://stackoverflow.com/questions/9267899/arraybuffer-to-base64-encoded-string\nfunction arrayBufferToBase64(buffer) {\n  let binary = '';\n  const bytes = new Uint8Array(buffer);\n  for (let i = 0; i < bytes.byteLength; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return btoa(binary);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}