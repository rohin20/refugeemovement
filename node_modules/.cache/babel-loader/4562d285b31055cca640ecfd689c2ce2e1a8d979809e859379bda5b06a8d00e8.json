{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { fs } from '@loaders.gl/loader-utils';\nexport function readArrayBuffer(_x, _x2, _x3) {\n  return _readArrayBuffer.apply(this, arguments);\n}\nfunction _readArrayBuffer() {\n  _readArrayBuffer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(file, start, length) {\n    var slice;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!(typeof file === 'number')) {\n            _context.next = 4;\n            break;\n          }\n          _context.next = 3;\n          return fs._readToArrayBuffer(file, start, length);\n        case 3:\n          return _context.abrupt(\"return\", _context.sent);\n        case 4:\n          if (!(file instanceof Blob)) {\n            file = new Blob([file]);\n          }\n          slice = file.slice(start, start + length);\n          _context.next = 8;\n          return readBlob(slice);\n        case 8:\n          return _context.abrupt(\"return\", _context.sent);\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _readArrayBuffer.apply(this, arguments);\n}\nexport function readBlob(_x4) {\n  return _readBlob.apply(this, arguments);\n}\nfunction _readBlob() {\n  _readBlob = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(blob) {\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return new Promise(function (resolve, reject) {\n            var fileReader = new FileReader();\n            fileReader.onload = function (event) {\n              var _event$target;\n              return resolve(event === null || event === void 0 ? void 0 : (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.result);\n            };\n            fileReader.onerror = function (error) {\n              return reject(error);\n            };\n            fileReader.readAsArrayBuffer(blob);\n          });\n        case 2:\n          return _context2.abrupt(\"return\", _context2.sent);\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _readBlob.apply(this, arguments);\n}","map":{"version":3,"names":["fs","readArrayBuffer","_x","_x2","_x3","_readArrayBuffer","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","file","start","length","slice","wrap","_callee$","_context","prev","next","_readToArrayBuffer","abrupt","sent","Blob","readBlob","stop","_x4","_readBlob","_callee2","blob","_callee2$","_context2","Promise","resolve","reject","fileReader","FileReader","onload","event","_event$target","target","result","onerror","error","readAsArrayBuffer"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/geo-layers/node_modules/@loaders.gl/core/src/lib/fetch/read-array-buffer.ts"],"sourcesContent":["//\nimport {fs} from '@loaders.gl/loader-utils';\n\n/**\n * Reads a chunk from a random access file\n * @param file\n * @param start\n * @param length\n * @returns\n */\nexport async function readArrayBuffer(\n  file: Blob | ArrayBuffer | string | number,\n  start: number,\n  length: number\n): Promise<ArrayBuffer> {\n  if (typeof file === 'number') {\n    return await fs._readToArrayBuffer(file, start, length);\n  }\n  // TODO - we can do better for ArrayBuffer and string\n  if (!(file instanceof Blob)) {\n    file = new Blob([file]);\n  }\n  const slice = file.slice(start, start + length);\n  return await readBlob(slice);\n}\n\n/**\n * Read a slice of a Blob or File, without loading the entire file into memory\n * The trick when reading File objects is to read successive \"slices\" of the File\n * Per spec https://w3c.github.io/FileAPI/, slicing a File only updates the start and end fields\n * Actually reading from file happens in `readAsArrayBuffer`\n * @param blob to read\n */\nexport async function readBlob(blob: Blob): Promise<ArrayBuffer> {\n  return await new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.onload = (event: ProgressEvent<FileReader>) =>\n      resolve(event?.target?.result as ArrayBuffer);\n    // TODO - reject with a proper Error\n    fileReader.onerror = (error: ProgressEvent<FileReader>) => reject(error);\n    fileReader.readAsArrayBuffer(blob);\n  });\n}\n"],"mappings":";;AACA,SAAQA,EAAE,QAAO,0BAA0B;AAS3C,gBAAsBC,eAAeA,CAAAC,EAAA,EAAAC,GAAA,EAAAC,GAAA;EAAA,OAAAC,gBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAcrC,SAAAF,iBAAA;EAAAA,gBAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAdO,SAAAC,QACLC,IAA0C,EAC1CC,KAAa,EACbC,MAAc;IAAA,IAAAC,KAAA;IAAA,OAAAN,mBAAA,GAAAO,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAA,MAEV,OAAOR,IAAI,KAAK,QAAQ;YAAAM,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAAF,QAAA,CAAAE,IAAA;UAAA,OACbpB,EAAE,CAACqB,kBAAkB,CAACT,IAAI,EAAEC,KAAK,EAAEC,MAAM,CAAC;QAAA;UAAA,OAAAI,QAAA,CAAAI,MAAA,WAAAJ,QAAA,CAAAK,IAAA;QAAA;UAGzD,IAAI,EAAEX,IAAI,YAAYY,IAAI,CAAC,EAAE;YAC3BZ,IAAI,GAAG,IAAIY,IAAI,CAAC,CAACZ,IAAI,CAAC,CAAC;UACzB;UACMG,KAAK,GAAGH,IAAI,CAACG,KAAK,CAACF,KAAK,EAAEA,KAAK,GAAGC,MAAM,CAAC;UAAAI,QAAA,CAAAE,IAAA;UAAA,OAClCK,QAAQ,CAACV,KAAK,CAAC;QAAA;UAAA,OAAAG,QAAA,CAAAI,MAAA,WAAAJ,QAAA,CAAAK,IAAA;QAAA;QAAA;UAAA,OAAAL,QAAA,CAAAQ,IAAA;MAAA;IAAA,GAAAf,OAAA;EAAA,CAC9B;EAAA,OAAAN,gBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AASA,gBAAsBkB,QAAQA,CAAAE,GAAA;EAAA,OAAAC,SAAA,CAAAtB,KAAA,OAAAC,SAAA;AAAA;AAS9B,SAAAqB,UAAA;EAAAA,SAAA,GAAApB,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CATO,SAAAmB,SAAwBC,IAAU;IAAA,OAAArB,mBAAA,GAAAO,IAAA,UAAAe,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAb,IAAA,GAAAa,SAAA,CAAAZ,IAAA;QAAA;UAAAY,SAAA,CAAAZ,IAAA;UAAA,OAC1B,IAAIa,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;YAC5C,IAAMC,UAAU,GAAG,IAAIC,UAAU,EAAE;YACnCD,UAAU,CAACE,MAAM,GAAI,UAAAC,KAAgC;cAAA,IAAAC,aAAA;cAAA,OACnDN,OAAO,CAACK,KAAK,aAALA,KAAK,wBAAAC,aAAA,GAALD,KAAK,CAAEE,MAAM,cAAAD,aAAA,uBAAbA,aAAA,CAAeE,MAAM,CAAgB;YAAA;YAE/CN,UAAU,CAACO,OAAO,GAAI,UAAAC,KAAgC;cAAA,OAAKT,MAAM,CAACS,KAAK,CAAC;YAAA;YACxER,UAAU,CAACS,iBAAiB,CAACf,IAAI,CAAC;UACpC,CAAC,CAAC;QAAA;UAAA,OAAAE,SAAA,CAAAV,MAAA,WAAAU,SAAA,CAAAT,IAAA;QAAA;QAAA;UAAA,OAAAS,SAAA,CAAAN,IAAA;MAAA;IAAA,GAAAG,QAAA;EAAA,CACJ;EAAA,OAAAD,SAAA,CAAAtB,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}