{"ast":null,"code":"/* eslint-disable */\n/*\n * hat\n * written by James Halliday, licensed under MIT/X11\n * https://github.com/substack/node-hat\n */\nvar hat = module.exports = function (bits, base) {\n  if (!base) base = 16;\n  if (bits === undefined) bits = 128;\n  if (bits <= 0) return '0';\n  var digits = Math.log(Math.pow(2, bits)) / Math.log(base);\n  for (var i = 2; digits === Infinity; i *= 2) {\n    digits = Math.log(Math.pow(2, bits / i)) / Math.log(base) * i;\n  }\n  var rem = digits - Math.floor(digits);\n  var res = '';\n  for (var i = 0; i < Math.floor(digits); i++) {\n    var x = Math.floor(Math.random() * base).toString(base);\n    res = x + res;\n  }\n  if (rem) {\n    var b = Math.pow(base, rem);\n    var x = Math.floor(Math.random() * b).toString(base);\n    res = x + res;\n  }\n  var parsed = parseInt(res, base);\n  if (parsed !== Infinity && parsed >= Math.pow(2, bits)) {\n    return hat(bits, base);\n  } else return res;\n};","map":{"version":3,"names":["hat","module","exports","bits","base","undefined","digits","Math","log","pow","i","Infinity","rem","floor","res","x","random","toString","b","parsed","parseInt"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/mapbox/vendor/hat.js"],"sourcesContent":["/* eslint-disable */\n/*\n * hat\n * written by James Halliday, licensed under MIT/X11\n * https://github.com/substack/node-hat\n */\nvar hat = module.exports = function (bits, base) {\n    if (!base) base = 16;\n    if (bits === undefined) bits = 128;\n    if (bits <= 0) return '0';\n    \n    var digits = Math.log(Math.pow(2, bits)) / Math.log(base);\n    for (var i = 2; digits === Infinity; i *= 2) {\n        digits = Math.log(Math.pow(2, bits / i)) / Math.log(base) * i;\n    }\n    \n    var rem = digits - Math.floor(digits);\n    \n    var res = '';\n    \n    for (var i = 0; i < Math.floor(digits); i++) {\n        var x = Math.floor(Math.random() * base).toString(base);\n        res = x + res;\n    }\n    \n    if (rem) {\n        var b = Math.pow(base, rem);\n        var x = Math.floor(Math.random() * b).toString(base);\n        res = x + res;\n    }\n    \n    var parsed = parseInt(res, base);\n    if (parsed !== Infinity && parsed >= Math.pow(2, bits)) {\n        return hat(bits, base)\n    }\n    else return res;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,GAAG,GAAGC,MAAM,CAACC,OAAO,GAAG,UAAUC,IAAI,EAAEC,IAAI,EAAE;EAC7C,IAAI,CAACA,IAAI,EAAEA,IAAI,GAAG,EAAE;EACpB,IAAID,IAAI,KAAKE,SAAS,EAAEF,IAAI,GAAG,GAAG;EAClC,IAAIA,IAAI,IAAI,CAAC,EAAE,OAAO,GAAG;EAEzB,IAAIG,MAAM,GAAGC,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,GAAG,CAAC,CAAC,EAAEN,IAAI,CAAC,CAAC,GAAGI,IAAI,CAACC,GAAG,CAACJ,IAAI,CAAC;EACzD,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEJ,MAAM,KAAKK,QAAQ,EAAED,CAAC,IAAI,CAAC,EAAE;IACzCJ,MAAM,GAAGC,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,GAAG,CAAC,CAAC,EAAEN,IAAI,GAAGO,CAAC,CAAC,CAAC,GAAGH,IAAI,CAACC,GAAG,CAACJ,IAAI,CAAC,GAAGM,CAAC;EACjE;EAEA,IAAIE,GAAG,GAAGN,MAAM,GAAGC,IAAI,CAACM,KAAK,CAACP,MAAM,CAAC;EAErC,IAAIQ,GAAG,GAAG,EAAE;EAEZ,KAAK,IAAIJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,IAAI,CAACM,KAAK,CAACP,MAAM,CAAC,EAAEI,CAAC,EAAE,EAAE;IACzC,IAAIK,CAAC,GAAGR,IAAI,CAACM,KAAK,CAACN,IAAI,CAACS,MAAM,EAAE,GAAGZ,IAAI,CAAC,CAACa,QAAQ,CAACb,IAAI,CAAC;IACvDU,GAAG,GAAGC,CAAC,GAAGD,GAAG;EACjB;EAEA,IAAIF,GAAG,EAAE;IACL,IAAIM,CAAC,GAAGX,IAAI,CAACE,GAAG,CAACL,IAAI,EAAEQ,GAAG,CAAC;IAC3B,IAAIG,CAAC,GAAGR,IAAI,CAACM,KAAK,CAACN,IAAI,CAACS,MAAM,EAAE,GAAGE,CAAC,CAAC,CAACD,QAAQ,CAACb,IAAI,CAAC;IACpDU,GAAG,GAAGC,CAAC,GAAGD,GAAG;EACjB;EAEA,IAAIK,MAAM,GAAGC,QAAQ,CAACN,GAAG,EAAEV,IAAI,CAAC;EAChC,IAAIe,MAAM,KAAKR,QAAQ,IAAIQ,MAAM,IAAIZ,IAAI,CAACE,GAAG,CAAC,CAAC,EAAEN,IAAI,CAAC,EAAE;IACpD,OAAOH,GAAG,CAACG,IAAI,EAAEC,IAAI,CAAC;EAC1B,CAAC,MACI,OAAOU,GAAG;AACnB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}