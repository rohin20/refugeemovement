{"ast":null,"code":"/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n    align = _ref$align === void 0 ? 'auto' : _ref$align,\n    cellOffset = _ref.cellOffset,\n    cellSize = _ref.cellSize,\n    containerSize = _ref.containerSize,\n    currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n  switch (align) {\n    case 'start':\n      return maxOffset;\n    case 'end':\n      return minOffset;\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","map":{"version":3,"names":["getUpdatedOffsetForIndex","_ref","_ref$align","align","cellOffset","cellSize","containerSize","currentOffset","maxOffset","minOffset","Math","max","min"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js"],"sourcesContent":["/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,wBAAwBA,CAACC,IAAI,EAAE;EACrD,IAAIC,UAAU,GAAGD,IAAI,CAACE,KAAK;IACvBA,KAAK,GAAGD,UAAU,KAAK,KAAK,CAAC,GAAG,MAAM,GAAGA,UAAU;IACnDE,UAAU,GAAGH,IAAI,CAACG,UAAU;IAC5BC,QAAQ,GAAGJ,IAAI,CAACI,QAAQ;IACxBC,aAAa,GAAGL,IAAI,CAACK,aAAa;IAClCC,aAAa,GAAGN,IAAI,CAACM,aAAa;EACtC,IAAIC,SAAS,GAAGJ,UAAU;EAC1B,IAAIK,SAAS,GAAGD,SAAS,GAAGF,aAAa,GAAGD,QAAQ;EAEpD,QAAQF,KAAK;IACX,KAAK,OAAO;MACV,OAAOK,SAAS;IAElB,KAAK,KAAK;MACR,OAAOC,SAAS;IAElB,KAAK,QAAQ;MACX,OAAOD,SAAS,GAAG,CAACF,aAAa,GAAGD,QAAQ,IAAI,CAAC;IAEnD;MACE,OAAOK,IAAI,CAACC,GAAG,CAACF,SAAS,EAAEC,IAAI,CAACE,GAAG,CAACJ,SAAS,EAAED,aAAa,CAAC,CAAC;EAAC;AAErE"},"metadata":{},"sourceType":"module","externalDependencies":[]}