{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport ShaderModule from './shader-module';\nimport { assert } from '../utils';\nexport function resolveModules(modules) {\n  return getShaderDependencies(instantiateModules(modules));\n}\nfunction getShaderDependencies(modules) {\n  var moduleMap = {};\n  var moduleDepth = {};\n  getDependencyGraph({\n    modules: modules,\n    level: 0,\n    moduleMap: moduleMap,\n    moduleDepth: moduleDepth\n  });\n  return Object.keys(moduleDepth).sort(function (a, b) {\n    return moduleDepth[b] - moduleDepth[a];\n  }).map(function (name) {\n    return moduleMap[name];\n  });\n}\nfunction getDependencyGraph(_ref) {\n  var modules = _ref.modules,\n    level = _ref.level,\n    moduleMap = _ref.moduleMap,\n    moduleDepth = _ref.moduleDepth;\n  if (level >= 5) {\n    throw new Error('Possible loop in shader dependency graph');\n  }\n  var _iterator = _createForOfIteratorHelper(modules),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var module = _step.value;\n      moduleMap[module.name] = module;\n      if (moduleDepth[module.name] === undefined || moduleDepth[module.name] < level) {\n        moduleDepth[module.name] = level;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  var _iterator2 = _createForOfIteratorHelper(modules),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var _module = _step2.value;\n      if (_module.dependencies) {\n        getDependencyGraph({\n          modules: _module.dependencies,\n          level: level + 1,\n          moduleMap: moduleMap,\n          moduleDepth: moduleDepth\n        });\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n}\nfunction instantiateModules(modules, seen) {\n  return modules.map(function (module) {\n    if (module instanceof ShaderModule) {\n      return module;\n    }\n    assert(typeof module !== 'string', \"Shader module use by name is deprecated. Import shader module '\".concat(module, \"' and use it directly.\"));\n    assert(module.name, 'shader module has no name');\n    module = new ShaderModule(module);\n    module.dependencies = instantiateModules(module.dependencies);\n    return module;\n  });\n}\nexport var TEST_EXPORTS = {\n  getShaderDependencies: getShaderDependencies,\n  getDependencyGraph: getDependencyGraph\n};","map":{"version":3,"names":["ShaderModule","assert","resolveModules","modules","getShaderDependencies","instantiateModules","moduleMap","moduleDepth","getDependencyGraph","level","Object","keys","sort","a","b","map","name","_ref","Error","_iterator","_createForOfIteratorHelper","_step","s","n","done","module","value","undefined","err","e","f","_iterator2","_step2","dependencies","seen","concat","TEST_EXPORTS"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@luma.gl/shadertools/src/lib/resolve-modules.js"],"sourcesContent":["import ShaderModule from './shader-module';\nimport {assert} from '../utils';\n\n// Instantiate shader modules and any dependencies resolve dependencies\nexport function resolveModules(modules) {\n  return getShaderDependencies(instantiateModules(modules));\n}\n\n/**\n * Takes a list of shader module names and returns a new list of\n * shader module names that includes all dependencies, sorted so\n * that modules that are dependencies of other modules come first.\n *\n * If the shader glsl code from the returned modules is concatenated\n * in the reverse order, it is guaranteed that all functions be resolved and\n * that all function and variable definitions come before use.\n *\n * @param {String[]} modules - Array of modules (inline modules or module names)\n * @return {String[]} - Array of modules\n */\nfunction getShaderDependencies(modules) {\n  const moduleMap = {};\n  const moduleDepth = {};\n  getDependencyGraph({modules, level: 0, moduleMap, moduleDepth});\n\n  // Return a reverse sort so that dependencies come before the modules that use them\n  return Object.keys(moduleDepth)\n    .sort((a, b) => moduleDepth[b] - moduleDepth[a])\n    .map(name => moduleMap[name]);\n}\n\n/**\n * Recursively checks module dpendencies to calculate dependency\n * level of each module.\n *\n * @param {object} options\n * @param {object[]} options.modules - Array of modules\n * @param {number} options.level - Current level\n * @param {object} options.moduleMap -\n * @param {object} options.moduleDepth - Current level\n * @return {object} - Map of module name to its level\n */\n// Adds another level of dependencies to the result map\nfunction getDependencyGraph({modules, level, moduleMap, moduleDepth}) {\n  if (level >= 5) {\n    throw new Error('Possible loop in shader dependency graph');\n  }\n\n  // Update level on all current modules\n  for (const module of modules) {\n    moduleMap[module.name] = module;\n    if (moduleDepth[module.name] === undefined || moduleDepth[module.name] < level) {\n      moduleDepth[module.name] = level;\n    }\n  }\n\n  // Recurse\n  for (const module of modules) {\n    if (module.dependencies) {\n      getDependencyGraph({modules: module.dependencies, level: level + 1, moduleMap, moduleDepth});\n    }\n  }\n}\n\nfunction instantiateModules(modules, seen) {\n  return modules.map(module => {\n    if (module instanceof ShaderModule) {\n      return module;\n    }\n\n    assert(\n      typeof module !== 'string',\n      `Shader module use by name is deprecated. Import shader module '${module}' and use it directly.`\n    );\n    assert(module.name, 'shader module has no name');\n\n    module = new ShaderModule(module);\n    module.dependencies = instantiateModules(module.dependencies);\n\n    return module;\n  });\n}\n\nexport const TEST_EXPORTS = {\n  getShaderDependencies,\n  getDependencyGraph\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}