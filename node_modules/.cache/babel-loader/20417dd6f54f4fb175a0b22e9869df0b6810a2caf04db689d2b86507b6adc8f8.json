{"ast":null,"code":"import _classCallCheck from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport GeoCellLayer from '../geo-cell-layer/GeoCellLayer';\nimport { getS2Polygon } from './s2-utils';\nvar defaultProps = {\n  getS2Token: {\n    type: 'accessor',\n    value: function value(d) {\n      return d.token;\n    }\n  }\n};\nvar S2Layer = /*#__PURE__*/function (_GeoCellLayer) {\n  _inherits(S2Layer, _GeoCellLayer);\n  var _super = _createSuper(S2Layer);\n  function S2Layer() {\n    _classCallCheck(this, S2Layer);\n    return _super.apply(this, arguments);\n  }\n  _createClass(S2Layer, [{\n    key: \"indexToBounds\",\n    value: function indexToBounds() {\n      var _this$props = this.props,\n        data = _this$props.data,\n        getS2Token = _this$props.getS2Token;\n      return {\n        data: data,\n        _normalize: false,\n        positionFormat: 'XY',\n        getPolygon: function getPolygon(x, objectInfo) {\n          return getS2Polygon(getS2Token(x, objectInfo));\n        }\n      };\n    }\n  }]);\n  return S2Layer;\n}(GeoCellLayer);\nexport { S2Layer as default };\n_defineProperty(S2Layer, \"layerName\", 'S2Layer');\n_defineProperty(S2Layer, \"defaultProps\", defaultProps);","map":{"version":3,"names":["GeoCellLayer","getS2Polygon","defaultProps","getS2Token","type","value","d","token","S2Layer","_GeoCellLayer","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","indexToBounds","_this$props","props","data","_normalize","positionFormat","getPolygon","x","objectInfo","default"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@deck.gl/geo-layers/src/s2-layer/s2-layer.ts"],"sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {AccessorFunction, DefaultProps} from '@deck.gl/core';\nimport GeoCellLayer, {GeoCellLayerProps} from '../geo-cell-layer/GeoCellLayer';\nimport {getS2Polygon} from './s2-utils';\n\nconst defaultProps: DefaultProps<S2LayerProps> = {\n  getS2Token: {type: 'accessor', value: d => d.token}\n};\n\n/** All properties supported by S2Layer. */\nexport type S2LayerProps<DataT = any> = _S2LayerProps<DataT> & GeoCellLayerProps<DataT>;\n\n/** Properties added by S2Layer. */\ntype _S2LayerProps<DataT> = {\n  /**\n   * Called for each data object to retrieve the quadkey string identifier.\n   *\n   * By default, it reads `token` property of data object.\n   */\n  getS2Token?: AccessorFunction<DataT, string>;\n};\n\n/** Render filled and/or stroked polygons based on the [S2](http://s2geometry.io/) geospatial indexing system. */\nexport default class S2Layer<DataT = any, ExtraProps = {}> extends GeoCellLayer<\n  DataT,\n  Required<_S2LayerProps<DataT>> & ExtraProps\n> {\n  static layerName = 'S2Layer';\n  static defaultProps = defaultProps;\n\n  indexToBounds(): Partial<GeoCellLayer['props']> | null {\n    const {data, getS2Token} = this.props;\n\n    return {\n      data,\n      _normalize: false,\n      positionFormat: 'XY',\n      getPolygon: (x: DataT, objectInfo) => getS2Polygon(getS2Token(x, objectInfo))\n    };\n  }\n}\n"],"mappings":";;;;;AAqBA,OAAOA,YAAP,MAA8C,gCAA9C;AACA,SAAQC,YAAR,QAA2B,YAA3B;AAEA,IAAMC,YAAwC,GAAG;EAC/CC,UAAU,EAAE;IAACC,IAAI,EAAE,UAAP;IAAmBC,KAAK,EAAE,SAAAA,MAAAC,CAAC;MAAA,OAAIA,CAAC,CAACC,KAAA;IAAA;EAAjC;AADmC,CAAjD;AAAA,IAkBqBC,OAAN,0BAAAC,aAAA;EAAAC,SAAA,CAAAF,OAAA,EAAAC,aAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,OAAA;EAAA,SAAAA,QAAA;IAAAK,eAAA,OAAAL,OAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,OAAA;IAAAS,GAAA;IAAAZ,KAAA,EAOb,SAAAa,cAAA,EAAuD;MACrD,IAAAC,WAAA,GAA2B,KAAKC,KAAhC;QAAOC,IAAD,GAAAF,WAAA,CAACE,IAAD;QAAOlB,UAAA,GAAAgB,WAAA,CAAAhB,UAAA;MAEb,OAAO;QACLkB,IADK,EACLA,IADK;QAELC,UAAU,EAAE,KAFP;QAGLC,cAAc,EAAE,IAHX;QAILC,UAAU,EAAE,SAAAA,WAACC,CAAD,EAAWC,UAAX;UAAA,OAA0BzB,YAAY,CAACE,UAAU,CAACsB,CAAD,EAAIC,UAAJ,CAAX;QAAA;MAJ7C,CAAP;IAMD;EAAA;EAAA,OAAAlB,OAAA;AAAA,EAhBgER,YAApD;AAAA,SAAMQ,OAAN,IAAAmB,OAAA;gBAAMnB,O,eAIA,S;gBAJAA,O,kBAKGN,Y"},"metadata":{},"sourceType":"module","externalDependencies":[]}