{"ast":null,"code":"// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateBounds = validateBounds;\nexports.getCenterAndZoomFromBounds = getCenterAndZoomFromBounds;\nvar _geoViewport = _interopRequireDefault(require(\"@mapbox/geo-viewport\"));\nvar _console = _interopRequireDefault(require(\"global/console\"));\nvar MAPBOX_TILE_SIZE = 512;\nfunction isLat(num) {\n  return Number.isFinite(num) && num <= 90 && num >= -90;\n}\nfunction isLng(num) {\n  return Number.isFinite(num) && num <= 180 && num >= -180;\n}\n/**\n * bounds should be [minLng, minLat, maxLng, maxLat]\n * @param {*} bounds\n */\n\nfunction validateBounds(bounds) {\n  // array: [ -180, -85.05112877980659, 180, 85.0511287798066 ]\n  // validate bounds\n  if (Array.isArray(bounds) && bounds.length === 4 && [bounds[0], bounds[2]].every(isLng) && [bounds[1], bounds[3]].every(isLat)) {\n    return bounds;\n  }\n  return null;\n}\nfunction getCenterAndZoomFromBounds(bounds, _ref) {\n  var width = _ref.width,\n    height = _ref.height;\n  var validBounds = validateBounds(bounds);\n  if (!validBounds) {\n    _console[\"default\"].warn('invalid map bounds provided');\n    return null;\n  } // viewport(bounds, dimensions, minzoom, maxzoom, tileSize, allowFloat)\n\n  var _geoViewport$viewport = _geoViewport[\"default\"].viewport(bounds, [width, height], undefined, undefined, MAPBOX_TILE_SIZE),\n    zoom = _geoViewport$viewport.zoom; // center being calculated by geo-vieweport.viewport has a complex logic that\n  // projects and then unprojects the coordinates to determine the center\n  // Calculating a simple average instead as that is the expected behavior in most of cases\n\n  var center = [(bounds[0] + bounds[2]) / 2, (bounds[1] + bounds[3]) / 2];\n  return {\n    zoom: zoom,\n    center: center\n  };\n}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","validateBounds","getCenterAndZoomFromBounds","_geoViewport","_console","MAPBOX_TILE_SIZE","Number","isFinite","num","Array","isArray","bounds","length","every","isLng","isLat","width","_ref","height","validBounds","warn","zoom","_geoViewport$viewport","center"],"sources":["/Users/rohinphukan/Desktop/RefugeeWebsite/node_modules/@kepler.gl/utils/src/projection-utils.ts"],"sourcesContent":["// Copyright (c) 2022 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport geoViewport from '@mapbox/geo-viewport';\nimport Console from 'global/console';\n\nconst MAPBOX_TILE_SIZE = 512;\n\nfunction isLat(num) {\n  return Number.isFinite(num) && num <= 90 && num >= -90;\n}\nfunction isLng(num) {\n  return Number.isFinite(num) && num <= 180 && num >= -180;\n}\n\n/**\n * bounds should be [minLng, minLat, maxLng, maxLat]\n * @param {*} bounds\n */\nexport function validateBounds(bounds) {\n  // array: [ -180, -85.05112877980659, 180, 85.0511287798066 ]\n  // validate bounds\n  if (\n    Array.isArray(bounds) &&\n    bounds.length === 4 &&\n    [bounds[0], bounds[2]].every(isLng) &&\n    [bounds[1], bounds[3]].every(isLat)\n  ) {\n    return bounds;\n  }\n  return null;\n}\n\nexport function getCenterAndZoomFromBounds(bounds, {width, height}) {\n  const validBounds = validateBounds(bounds);\n  if (!validBounds) {\n    Console.warn('invalid map bounds provided');\n    return null;\n  }\n\n  // viewport(bounds, dimensions, minzoom, maxzoom, tileSize, allowFloat)\n  const {zoom} = geoViewport.viewport(\n    bounds,\n    [width, height],\n    undefined,\n    undefined,\n    MAPBOX_TILE_SIZE\n  );\n  // center being calculated by geo-vieweport.viewport has a complex logic that\n  // projects and then unprojects the coordinates to determine the center\n  // Calculating a simple average instead as that is the expected behavior in most of cases\n  const center = [(bounds[0] + bounds[2]) / 2, (bounds[1] + bounds[3]) / 2];\n\n  return {zoom, center};\n}\n"],"mappings":";;;;;;;;;;AAoBA;;AACA;;AArBA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAAA,sBAAA,GAAAC,OAAA;AAEAC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EACAC,KAAA;AACA;AACAD,OAAA,CAAAE,cAAA,GAAAA,cAAA;AACAF,OAAA,CAAAG,0BAAA,GAAAA,0BAAA;AAEA,IAAAC,YAAA,GAAAR,sBAAA,CAAAC,OAAA;AAEA,IAAAQ,QAAA,GAAAT,sBAAA,CAAAC,OAAA;AAAA,IAAAS,gBAAA;;EAOA,OAASC,MAAM,CAAAC,QAAK,CAAAC,GAAA,KAAAA,GAAA,UAAAA,GAAA;AAClB;;EAEF,OAASF,MAAM,CAAAC,QAAK,CAAAC,GAAA,KAAAA,GAAA,WAAAA,GAAA;AAClB;AACD;AAED;AACA;AACA;;;EAEO;EACL;EACA,IAAAC,KAAA,CAAAC,OAAA,CAAAC,MAAA,KAAAA,MAAA,CAAAC,MAAA,WAAAD,MAAA,KAAAA,MAAA,KAAAE,KAAA,CAAAC,KAAA,MAAAH,MAAA,KAAAA,MAAA,KAAAE,KAAA,CAAAE,KAAA;IACA,OACOJ,MAAC;EAKN;;AAEF;;EAGK,IAAAK,KAAS,GAAAC,IAAA,CAAAD,KAAA;IAAoCE,MAAgB,GAAAD,IAAhB,CAAAC,MAAgB;EAAA,IAATC,WAAS,GAATlB,cAAS,CAAAU,MAAA;;IAElEP,QAAK,UAAa,EAAAgB,IAAA;;EAEhB;;;IAJgEC,IAAA,GAAAC,qBAQnD,CAAAD,IAAA;EARmD;EAgBlE;;;EAEA,OAAM;IAENA,IAAA,EAAOA,IAAA;IAACE,MAAA,EAAAA;EAAM;AAAP"},"metadata":{},"sourceType":"script","externalDependencies":[]}